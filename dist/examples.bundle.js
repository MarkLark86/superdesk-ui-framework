(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("react-dom"), require("jquery"));
	else if(typeof define === 'function' && define.amd)
		define(["react", "react-dom", "jquery"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("react"), require("react-dom"), require("jquery")) : factory(root["react"], root["react-dom"], root["jquery"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_15__, __WEBPACK_EXTERNAL_MODULE_20__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 174);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg) && arg.length) {
				var inner = classNames.apply(null, arg);
				if (inner) {
					classes.push(inner);
				}
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
		window.classNames = classNames;
	}
}());


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// this intermediary file is required in order to be able to generate TypeScript definitions
// all exports in this file must also be exported from ../app/index.js
Object.defineProperty(exports, "__esModule", { value: true });
var HelloWorld_1 = __webpack_require__(65);
Object.defineProperty(exports, "HelloWorld", { enumerable: true, get: function () { return HelloWorld_1.HelloWorld; } });
var Button_1 = __webpack_require__(66);
Object.defineProperty(exports, "Button", { enumerable: true, get: function () { return Button_1.Button; } });
var Input_1 = __webpack_require__(67);
Object.defineProperty(exports, "Input", { enumerable: true, get: function () { return Input_1.Input; } });
var Select_1 = __webpack_require__(68);
Object.defineProperty(exports, "Select", { enumerable: true, get: function () { return Select_1.Select; } });
Object.defineProperty(exports, "Option", { enumerable: true, get: function () { return Select_1.Option; } });
var Label_1 = __webpack_require__(69);
Object.defineProperty(exports, "Label", { enumerable: true, get: function () { return Label_1.Label; } });
var Badge_1 = __webpack_require__(70);
Object.defineProperty(exports, "Badge", { enumerable: true, get: function () { return Badge_1.Badge; } });
var Alert_1 = __webpack_require__(71);
Object.defineProperty(exports, "Alert", { enumerable: true, get: function () { return Alert_1.Alert; } });
var Avatar_1 = __webpack_require__(29);
Object.defineProperty(exports, "AvatarWrapper", { enumerable: true, get: function () { return Avatar_1.AvatarWrapper; } });
var Avatar_2 = __webpack_require__(29);
Object.defineProperty(exports, "AvatarContentText", { enumerable: true, get: function () { return Avatar_2.AvatarContentText; } });
var Avatar_3 = __webpack_require__(29);
Object.defineProperty(exports, "AvatarContentImage", { enumerable: true, get: function () { return Avatar_3.AvatarContentImage; } });
var IconButton_1 = __webpack_require__(72);
Object.defineProperty(exports, "IconButton", { enumerable: true, get: function () { return IconButton_1.IconButton; } });
var IconLabel_1 = __webpack_require__(73);
Object.defineProperty(exports, "IconLabel", { enumerable: true, get: function () { return IconLabel_1.IconLabel; } });
var Tooltip_1 = __webpack_require__(74);
Object.defineProperty(exports, "Tooltip", { enumerable: true, get: function () { return Tooltip_1.Tooltip; } });
var DatePicker_1 = __webpack_require__(41);
Object.defineProperty(exports, "DatePicker", { enumerable: true, get: function () { return DatePicker_1.DatePicker; } });
var DatePicker_2 = __webpack_require__(41);
Object.defineProperty(exports, "DatePickerISO", { enumerable: true, get: function () { return DatePicker_2.DatePickerISO; } });
var TimePicker_1 = __webpack_require__(54);
Object.defineProperty(exports, "TimePicker", { enumerable: true, get: function () { return TimePicker_1.TimePicker; } });
var FormLabel_1 = __webpack_require__(106);
Object.defineProperty(exports, "FormLabel", { enumerable: true, get: function () { return FormLabel_1.FormLabel; } });
var Switch_1 = __webpack_require__(107);
Object.defineProperty(exports, "Switch", { enumerable: true, get: function () { return Switch_1.Switch; } });
var ButtonGroup_1 = __webpack_require__(108);
Object.defineProperty(exports, "ButtonGroup", { enumerable: true, get: function () { return ButtonGroup_1.ButtonGroup; } });
var Loader_1 = __webpack_require__(109);
Object.defineProperty(exports, "Loader", { enumerable: true, get: function () { return Loader_1.Loader; } });
var Radio_1 = __webpack_require__(110);
Object.defineProperty(exports, "Radio", { enumerable: true, get: function () { return Radio_1.Radio; } });
var Checkbox_1 = __webpack_require__(111);
Object.defineProperty(exports, "Checkbox", { enumerable: true, get: function () { return Checkbox_1.Checkbox; } });
var RadioButton_1 = __webpack_require__(112);
Object.defineProperty(exports, "RadioButton", { enumerable: true, get: function () { return RadioButton_1.RadioButton; } });
var CheckboxButton_1 = __webpack_require__(113);
Object.defineProperty(exports, "CheckboxButton", { enumerable: true, get: function () { return CheckboxButton_1.CheckboxButton; } });
var CheckGroup_1 = __webpack_require__(114);
Object.defineProperty(exports, "CheckGroup", { enumerable: true, get: function () { return CheckGroup_1.CheckGroup; } });
var CheckButtonGroup_1 = __webpack_require__(115);
Object.defineProperty(exports, "CheckButtonGroup", { enumerable: true, get: function () { return CheckButtonGroup_1.CheckButtonGroup; } });
var NavButton_1 = __webpack_require__(116);
Object.defineProperty(exports, "NavButton", { enumerable: true, get: function () { return NavButton_1.NavButton; } });
var TabList_1 = __webpack_require__(117);
Object.defineProperty(exports, "Tab", { enumerable: true, get: function () { return TabList_1.Tab; } });
Object.defineProperty(exports, "TabList", { enumerable: true, get: function () { return TabList_1.TabList; } });
var LeftMenu_1 = __webpack_require__(118);
Object.defineProperty(exports, "LeftMenu", { enumerable: true, get: function () { return LeftMenu_1.LeftMenu; } });
var SubNav_1 = __webpack_require__(119);
Object.defineProperty(exports, "SubNav", { enumerable: true, get: function () { return SubNav_1.SubNav; } });
var SlidingToolbar_1 = __webpack_require__(120);
Object.defineProperty(exports, "SlidingToolbar", { enumerable: true, get: function () { return SlidingToolbar_1.SlidingToolbar; } });
var StrechBar_1 = __webpack_require__(121);
Object.defineProperty(exports, "StrechBar", { enumerable: true, get: function () { return StrechBar_1.StrechBar; } });
var PropsList_1 = __webpack_require__(122);
Object.defineProperty(exports, "PropsList", { enumerable: true, get: function () { return PropsList_1.PropsList; } });
Object.defineProperty(exports, "Prop", { enumerable: true, get: function () { return PropsList_1.Prop; } });
var Icon_1 = __webpack_require__(16);
Object.defineProperty(exports, "Icon", { enumerable: true, get: function () { return Icon_1.Icon; } });
var Divider_1 = __webpack_require__(123);
Object.defineProperty(exports, "Divider", { enumerable: true, get: function () { return Divider_1.Divider; } });
var HeadingText_1 = __webpack_require__(124);
Object.defineProperty(exports, "HeadingText", { enumerable: true, get: function () { return HeadingText_1.HeadingText; } });
var DropdownFirst_1 = __webpack_require__(22);
Object.defineProperty(exports, "DropdownFirst", { enumerable: true, get: function () { return DropdownFirst_1.DropdownFirst; } });
var DropdownFirst_2 = __webpack_require__(22);
Object.defineProperty(exports, "DropdownItem", { enumerable: true, get: function () { return DropdownFirst_2.DropdownItem; } });
var DropdownFirst_3 = __webpack_require__(22);
Object.defineProperty(exports, "DropdownLabel", { enumerable: true, get: function () { return DropdownFirst_3.DropdownLabel; } });
var DropdownFirst_4 = __webpack_require__(22);
Object.defineProperty(exports, "DropdownDivider", { enumerable: true, get: function () { return DropdownFirst_4.DropdownDivider; } });
var Dropdown_1 = __webpack_require__(125);
Object.defineProperty(exports, "Dropdown", { enumerable: true, get: function () { return Dropdown_1.Dropdown; } });
var Tag_1 = __webpack_require__(155);
Object.defineProperty(exports, "Tag", { enumerable: true, get: function () { return Tag_1.Tag; } });
var TabCustom_1 = __webpack_require__(156);
Object.defineProperty(exports, "TabLabel", { enumerable: true, get: function () { return TabCustom_1.TabLabel; } });
Object.defineProperty(exports, "TabPanel", { enumerable: true, get: function () { return TabCustom_1.TabPanel; } });
Object.defineProperty(exports, "TabContent", { enumerable: true, get: function () { return TabCustom_1.TabContent; } });
Object.defineProperty(exports, "Tabs", { enumerable: true, get: function () { return TabCustom_1.Tabs; } });


/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return top; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return bottom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return right; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return left; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return auto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return basePlacements; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return start; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return end; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return clippingParents; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return viewport; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return popper; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return reference; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return variationPlacements; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return placements; });
/* unused harmony export beforeRead */
/* unused harmony export read */
/* unused harmony export afterRead */
/* unused harmony export beforeMain */
/* unused harmony export main */
/* unused harmony export afterMain */
/* unused harmony export beforeWrite */
/* unused harmony export write */
/* unused harmony export afterWrite */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return modifierPhases; });
var top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [top, bottom, right, left];
var start = 'start';
var end = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []); // modifiers that need to read the DOM

var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers

var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ReactMarkupCodePreview = exports.ReactMarkupCode = exports.ReactMarkupPreview = exports.ReactMarkup = exports.ReactDefault = exports.ReactNav = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _prismjs = __webpack_require__(185);

var _prismjs2 = _interopRequireDefault(_prismjs);

var _prismNormalizeWhitespace = __webpack_require__(186);

var _prismNormalizeWhitespace2 = _interopRequireDefault(_prismNormalizeWhitespace);

var _prismLineNumbers = __webpack_require__(187);

var _prismLineNumbers2 = _interopRequireDefault(_prismLineNumbers);

var _prismMarkdown = __webpack_require__(188);

var _prismMarkdown2 = _interopRequireDefault(_prismMarkdown);

var _prismJsx = __webpack_require__(189);

var _prismJsx2 = _interopRequireDefault(_prismJsx);

var _reactRouterDom = __webpack_require__(55);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ReactNav = function (_React$PureComponent) {
    _inherits(ReactNav, _React$PureComponent);

    function ReactNav() {
        _classCallCheck(this, ReactNav);

        return _possibleConstructorReturn(this, (ReactNav.__proto__ || Object.getPrototypeOf(ReactNav)).apply(this, arguments));
    }

    _createClass(ReactNav, [{
        key: 'render',
        value: function render() {
            var pages = this.props.pages;

            var navigations = Object.keys(pages).map(function (group) {
                return _react2.default.createElement(
                    'li',
                    { key: group },
                    _react2.default.createElement(
                        'span',
                        { className: 'docs-page__nav-title' },
                        pages[group].name
                    ),
                    _react2.default.createElement(
                        'ul',
                        { className: 'docs-page__nav--sub-level' },
                        Object.keys(pages[group].items).map(function (page) {
                            return _react2.default.createElement(
                                'li',
                                { key: page, className: 'docs-page__nav-item' },
                                _react2.default.createElement(
                                    _reactRouterDom.Link,
                                    { to: { pathname: '/react/' + page } },
                                    pages[group].items[page].name
                                )
                            );
                        })
                    )
                );
            });

            return _react2.default.createElement(
                'aside',
                { className: 'docs-page__sidebar' },
                _react2.default.createElement(
                    'ul',
                    { className: 'docs-page__nav' },
                    navigations
                )
            );
        }
    }]);

    return ReactNav;
}(_react2.default.PureComponent);

var ReactDefault = function (_React$PureComponent2) {
    _inherits(ReactDefault, _React$PureComponent2);

    function ReactDefault() {
        _classCallCheck(this, ReactDefault);

        return _possibleConstructorReturn(this, (ReactDefault.__proto__ || Object.getPrototypeOf(ReactDefault)).apply(this, arguments));
    }

    _createClass(ReactDefault, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'section',
                { className: 'docs-page__container' },
                _react2.default.createElement(
                    'div',
                    { className: 'docs-page__hero' },
                    _react2.default.createElement(
                        'figure',
                        { className: 'docs-page__hero-image' },
                        _react2.default.createElement('img', { src: '/illustration--react.svg', alt: 'React' })
                    ),
                    _react2.default.createElement(
                        'h2',
                        { className: 'docs-page__hero-h2 docs-page__color--primary' },
                        'Home of Superdesk React components'
                    ),
                    _react2.default.createElement(
                        'p',
                        { className: 'docs-page__hero-text' },
                        'As the headline suggests \u2013 React components for Superdesk. Work in progress!'
                    ),
                    _react2.default.createElement(
                        'p',
                        { className: 'docs-page__hero-text sd-text__normal' },
                        'Feel free to contribute!'
                    )
                )
            );
        }
    }]);

    return ReactDefault;
}(_react2.default.PureComponent);

var ReactMarkup = function (_React$PureComponent3) {
    _inherits(ReactMarkup, _React$PureComponent3);

    function ReactMarkup(props) {
        _classCallCheck(this, ReactMarkup);

        var _this3 = _possibleConstructorReturn(this, (ReactMarkup.__proto__ || Object.getPrototypeOf(ReactMarkup)).call(this, props));

        _this3.state = {
            active: 'preview'
        };
        return _this3;
    }

    _createClass(ReactMarkup, [{
        key: 'changeTab',
        value: function changeTab(tab) {
            this.setState({ active: tab });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            var childrenWithProps = _react2.default.Children.map(this.props.children, function (child) {
                return _react2.default.cloneElement(child, { active: _this4.state.active });
            });

            return _react2.default.createElement(
                'div',
                { className: 'docs-page__code-window' },
                _react2.default.createElement(
                    'div',
                    { className: 'docs-page__window-bar' },
                    _react2.default.createElement(
                        'a',
                        { className: 'cursor-pointer ' + (this.state.active === 'preview' ? 'active' : ''), onClick: function onClick() {
                                return _this4.changeTab('preview');
                            } },
                        'Example'
                    ),
                    _react2.default.createElement(
                        'a',
                        { className: 'cursor-pointer ' + (this.state.active === 'markup' ? 'active' : ''), onClick: function onClick() {
                                return _this4.changeTab('markup');
                            } },
                        'Markup'
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'docs-page__window-content' },
                    childrenWithProps
                )
            );
        }
    }]);

    return ReactMarkup;
}(_react2.default.PureComponent);

var ReactMarkupPreview = function (_React$PureComponent4) {
    _inherits(ReactMarkupPreview, _React$PureComponent4);

    function ReactMarkupPreview() {
        _classCallCheck(this, ReactMarkupPreview);

        return _possibleConstructorReturn(this, (ReactMarkupPreview.__proto__ || Object.getPrototypeOf(ReactMarkupPreview)).apply(this, arguments));
    }

    _createClass(ReactMarkupPreview, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'docs-page__code-example',
                    style: this.props.active === 'preview' ? { display: 'block' } : { display: 'none' } },
                this.props.children
            );
        }
    }]);

    return ReactMarkupPreview;
}(_react2.default.PureComponent);

var ReactMarkupCode = function (_React$PureComponent5) {
    _inherits(ReactMarkupCode, _React$PureComponent5);

    function ReactMarkupCode() {
        _classCallCheck(this, ReactMarkupCode);

        return _possibleConstructorReturn(this, (ReactMarkupCode.__proto__ || Object.getPrototypeOf(ReactMarkupCode)).apply(this, arguments));
    }

    _createClass(ReactMarkupCode, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            _prismjs2.default.highlightAll();
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'docs-page__code-markup', style: this.props.active === 'markup' ? { display: 'block' } : { display: 'none' } },
                _react2.default.createElement(
                    'pre',
                    { className: 'line-numbers' },
                    _react2.default.createElement(
                        'code',
                        { className: 'language-jsx' },
                        this.props.children
                    )
                )
            );
        }
    }]);

    return ReactMarkupCode;
}(_react2.default.PureComponent);

var ReactMarkupCodePreview = function (_React$PureComponent6) {
    _inherits(ReactMarkupCodePreview, _React$PureComponent6);

    function ReactMarkupCodePreview() {
        _classCallCheck(this, ReactMarkupCodePreview);

        return _possibleConstructorReturn(this, (ReactMarkupCodePreview.__proto__ || Object.getPrototypeOf(ReactMarkupCodePreview)).apply(this, arguments));
    }

    _createClass(ReactMarkupCodePreview, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            _prismjs2.default.highlightAll();
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'pre',
                null,
                _react2.default.createElement(
                    'code',
                    { className: 'language-jsx' },
                    this.props.children
                )
            );
        }
    }]);

    return ReactMarkupCodePreview;
}(_react2.default.PureComponent);

exports.ReactNav = ReactNav;
exports.ReactDefault = ReactDefault;
exports.ReactMarkup = ReactMarkup;
exports.ReactMarkupPreview = ReactMarkupPreview;
exports.ReactMarkupCode = ReactMarkupCode;
exports.ReactMarkupCodePreview = ReactMarkupCodePreview;

/***/ }),
/* 5 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = toDate;
/**
 * @name toDate
 * @category Common Helpers
 * @summary Convert the given argument to an instance of Date.
 *
 * @description
 * Convert the given argument to an instance of Date.
 *
 * If the argument is an instance of Date, the function returns its clone.
 *
 * If the argument is a number, it is treated as a timestamp.
 *
 * If the argument is none of the above, the function returns Invalid Date.
 *
 * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
 *
 * @param {Date|Number} argument - the value to convert
 * @returns {Date} the parsed date in the local time zone
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Clone the date:
 * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert the timestamp to date:
 * const result = toDate(1392098430000)
 * //=> Tue Feb 11 2014 11:30:30
 */
function toDate(argument) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var argStr = Object.prototype.toString.call(argument); // Clone the date

  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {
    // Prevent the date to lose the milliseconds when passed to new Date() in IE10
    return new Date(argument.getTime());
  } else if (typeof argument === 'number' || argStr === '[object Number]') {
    return new Date(argument);
  } else {
    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {
      // eslint-disable-next-line no-console
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"); // eslint-disable-next-line no-console

      console.warn(new Error().stack);
    }

    return new Date(NaN);
  }
}

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return isElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return isHTMLElement; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getWindow_js__ = __webpack_require__(8);

/*:: declare function isElement(node: mixed): boolean %checks(node instanceof
  Element); */

function isElement(node) {
  var OwnElement = Object(__WEBPACK_IMPORTED_MODULE_0__getWindow_js__["a" /* default */])(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}
/*:: declare function isHTMLElement(node: mixed): boolean %checks(node instanceof
  HTMLElement); */


function isHTMLElement(node) {
  var OwnElement = Object(__WEBPACK_IMPORTED_MODULE_0__getWindow_js__["a" /* default */])(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}



/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getWindow;
/*:: import type { Window } from '../types'; */

/*:: declare function getWindow(node: Node | Window): Window; */
function getWindow(node) {
  if (node.toString() !== '[object Window]') {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView : window;
  }

  return node;
}

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getDocumentElement;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__instanceOf_js__ = __webpack_require__(7);

function getDocumentElement(element) {
  // $FlowFixMe: assume body is always available
  return (Object(__WEBPACK_IMPORTED_MODULE_0__instanceOf_js__["a" /* isElement */])(element) ? element.ownerDocument : element.document).documentElement;
}

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(__webpack_require__(0));

var globalPrefix = "id";
var lastId = 0;
function nextId(localPrefix) {
  lastId++;
  return "".concat(localPrefix || globalPrefix).concat(lastId);
}
var resetId = function resetId() {
  lastId = 0;
};
var setPrefix = function setPrefix(newPrefix) {
  globalPrefix = newPrefix;
};

var getIds = function getIds(count, prefix) {
  var ids = [];

  for (var i = 0; i < count; i++) {
    ids.push(nextId(prefix));
  }

  return ids;
};

function usePrevious(value) {
  var ref = React.useRef();
  React.useEffect(function () {
    ref.current = value;
  });
  return ref.current;
}

function useId() {
  var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
  var prefix = arguments.length > 1 ? arguments[1] : undefined;
  var idsListRef = React.useRef([]);
  var prevCount = usePrevious(count);
  var prevPrefix = usePrevious(prefix);

  if (count !== prevCount || prevPrefix !== prefix) {
    idsListRef.current = getIds(count, prefix);
  }

  return idsListRef.current;
}

exports.default = nextId;
exports.resetId = resetId;
exports.setPrefix = setPrefix;
exports.useId = useId;


/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getNodeName;
function getNodeName(element) {
  return element ? (element.nodeName || '').toLowerCase() : null;
}

/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getBasePlacement;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__enums_js__ = __webpack_require__(3);

function getBasePlacement(placement) {
  return placement.split('-')[0];
}

/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = toInteger;
function toInteger(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN;
  }

  var number = Number(dirtyNumber);

  if (isNaN(number)) {
    return number;
  }

  return number < 0 ? Math.ceil(number) : Math.floor(number);
}

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var ReactIs = __webpack_require__(27);

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(59)(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(62)();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_15__;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Icon = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var Icon = /** @class */ (function (_super) {
    __extends(Icon, _super);
    function Icon() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Icon.prototype.render = function () {
        var _a;
        var classes = classnames_1.default(this.props.className, (_a = {},
            _a["icon-" + this.props.name] = (this.props.name && !this.props.size) || (this.props.name && this.props.size === 'small'),
            _a["big-icon--" + this.props.name] = this.props.name && this.props.size === 'big',
            _a["" + this.props.type] = this.props.type,
            _a));
        return (React.createElement("i", { className: classes, "aria-label": this.props.name, "aria-hidden": this.props.ariaHidden }));
    };
    return Icon;
}(React.PureComponent));
exports.Icon = Icon;


/***/ }),
/* 17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getComputedStyle;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getWindow_js__ = __webpack_require__(8);

function getComputedStyle(element) {
  return Object(__WEBPACK_IMPORTED_MODULE_0__getWindow_js__["a" /* default */])(element).getComputedStyle(element);
}

/***/ }),
/* 18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getOffsetParent;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getWindow_js__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getNodeName_js__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getComputedStyle_js__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__instanceOf_js__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__isTableElement_js__ = __webpack_require__(132);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__getParentNode_js__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__getDocumentElement_js__ = __webpack_require__(9);








function getTrueOffsetParent(element) {
  if (!Object(__WEBPACK_IMPORTED_MODULE_3__instanceOf_js__["b" /* isHTMLElement */])(element) || // https://github.com/popperjs/popper-core/issues/837
  Object(__WEBPACK_IMPORTED_MODULE_2__getComputedStyle_js__["a" /* default */])(element).position === 'fixed') {
    return null;
  }

  var offsetParent = element.offsetParent;

  if (offsetParent) {
    var html = Object(__WEBPACK_IMPORTED_MODULE_6__getDocumentElement_js__["a" /* default */])(offsetParent);

    if (Object(__WEBPACK_IMPORTED_MODULE_1__getNodeName_js__["a" /* default */])(offsetParent) === 'body' && Object(__WEBPACK_IMPORTED_MODULE_2__getComputedStyle_js__["a" /* default */])(offsetParent).position === 'static' && Object(__WEBPACK_IMPORTED_MODULE_2__getComputedStyle_js__["a" /* default */])(html).position !== 'static') {
      return html;
    }
  }

  return offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block


function getContainingBlock(element) {
  var currentNode = Object(__WEBPACK_IMPORTED_MODULE_5__getParentNode_js__["a" /* default */])(element);

  while (Object(__WEBPACK_IMPORTED_MODULE_3__instanceOf_js__["b" /* isHTMLElement */])(currentNode) && ['html', 'body'].indexOf(Object(__WEBPACK_IMPORTED_MODULE_1__getNodeName_js__["a" /* default */])(currentNode)) < 0) {
    var css = Object(__WEBPACK_IMPORTED_MODULE_2__getComputedStyle_js__["a" /* default */])(currentNode); // This is non-exhaustive but covers the most common CSS properties that
    // create a containing block.

    if (css.transform !== 'none' || css.perspective !== 'none' || css.willChange && css.willChange !== 'auto') {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }

  return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.


function getOffsetParent(element) {
  var window = Object(__WEBPACK_IMPORTED_MODULE_0__getWindow_js__["a" /* default */])(element);
  var offsetParent = getTrueOffsetParent(element);

  while (offsetParent && Object(__WEBPACK_IMPORTED_MODULE_4__isTableElement_js__["a" /* default */])(offsetParent) && Object(__WEBPACK_IMPORTED_MODULE_2__getComputedStyle_js__["a" /* default */])(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent);
  }

  if (offsetParent && Object(__WEBPACK_IMPORTED_MODULE_1__getNodeName_js__["a" /* default */])(offsetParent) === 'body' && Object(__WEBPACK_IMPORTED_MODULE_2__getComputedStyle_js__["a" /* default */])(offsetParent).position === 'static') {
    return window;
  }

  return offsetParent || getContainingBlock(element) || window;
}

/***/ }),
/* 19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = detectOverflow;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__dom_utils_getBoundingClientRect_js__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dom_utils_getClippingRect_js__ = __webpack_require__(139);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dom_utils_getDocumentElement_js__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__computeOffsets_js__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__rectToClientRect_js__ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__enums_js__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__dom_utils_instanceOf_js__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__mergePaddingObject_js__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__expandToHashMap_js__ = __webpack_require__(51);








 // eslint-disable-next-line import/no-unused-modules

function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$placement = _options.placement,
      placement = _options$placement === void 0 ? state.placement : _options$placement,
      _options$boundary = _options.boundary,
      boundary = _options$boundary === void 0 ? __WEBPACK_IMPORTED_MODULE_5__enums_js__["d" /* clippingParents */] : _options$boundary,
      _options$rootBoundary = _options.rootBoundary,
      rootBoundary = _options$rootBoundary === void 0 ? __WEBPACK_IMPORTED_MODULE_5__enums_js__["o" /* viewport */] : _options$rootBoundary,
      _options$elementConte = _options.elementContext,
      elementContext = _options$elementConte === void 0 ? __WEBPACK_IMPORTED_MODULE_5__enums_js__["i" /* popper */] : _options$elementConte,
      _options$altBoundary = _options.altBoundary,
      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
      _options$padding = _options.padding,
      padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = Object(__WEBPACK_IMPORTED_MODULE_7__mergePaddingObject_js__["a" /* default */])(typeof padding !== 'number' ? padding : Object(__WEBPACK_IMPORTED_MODULE_8__expandToHashMap_js__["a" /* default */])(padding, __WEBPACK_IMPORTED_MODULE_5__enums_js__["b" /* basePlacements */]));
  var altContext = elementContext === __WEBPACK_IMPORTED_MODULE_5__enums_js__["i" /* popper */] ? __WEBPACK_IMPORTED_MODULE_5__enums_js__["j" /* reference */] : __WEBPACK_IMPORTED_MODULE_5__enums_js__["i" /* popper */];
  var referenceElement = state.elements.reference;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = Object(__WEBPACK_IMPORTED_MODULE_1__dom_utils_getClippingRect_js__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_6__dom_utils_instanceOf_js__["a" /* isElement */])(element) ? element : element.contextElement || Object(__WEBPACK_IMPORTED_MODULE_2__dom_utils_getDocumentElement_js__["a" /* default */])(state.elements.popper), boundary, rootBoundary);
  var referenceClientRect = Object(__WEBPACK_IMPORTED_MODULE_0__dom_utils_getBoundingClientRect_js__["a" /* default */])(referenceElement);
  var popperOffsets = Object(__WEBPACK_IMPORTED_MODULE_3__computeOffsets_js__["a" /* default */])({
    reference: referenceClientRect,
    element: popperRect,
    strategy: 'absolute',
    placement: placement
  });
  var popperClientRect = Object(__WEBPACK_IMPORTED_MODULE_4__rectToClientRect_js__["a" /* default */])(Object.assign(Object.assign({}, popperRect), popperOffsets));
  var elementClientRect = elementContext === __WEBPACK_IMPORTED_MODULE_5__enums_js__["i" /* popper */] ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
  // 0 or negative = within the clipping rect

  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

  if (elementContext === __WEBPACK_IMPORTED_MODULE_5__enums_js__["i" /* popper */] && offsetData) {
    var offset = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function (key) {
      var multiply = [__WEBPACK_IMPORTED_MODULE_5__enums_js__["k" /* right */], __WEBPACK_IMPORTED_MODULE_5__enums_js__["c" /* bottom */]].indexOf(key) >= 0 ? 1 : -1;
      var axis = [__WEBPACK_IMPORTED_MODULE_5__enums_js__["m" /* top */], __WEBPACK_IMPORTED_MODULE_5__enums_js__["c" /* bottom */]].indexOf(key) >= 0 ? 'y' : 'x';
      overflowOffsets[key] += offset[axis] * multiply;
    });
  }

  return overflowOffsets;
}

/***/ }),
/* 20 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_20__;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var DomHandler =
/*#__PURE__*/
function () {
  function DomHandler() {
    _classCallCheck(this, DomHandler);
  }

  _createClass(DomHandler, null, [{
    key: "innerWidth",
    value: function innerWidth(el) {
      var width = el.offsetWidth;
      var style = getComputedStyle(el);
      width += parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);
      return width;
    }
  }, {
    key: "width",
    value: function width(el) {
      var width = el.offsetWidth;
      var style = getComputedStyle(el);
      width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);
      return width;
    }
  }, {
    key: "getWindowScrollTop",
    value: function getWindowScrollTop() {
      var doc = document.documentElement;
      return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);
    }
  }, {
    key: "getWindowScrollLeft",
    value: function getWindowScrollLeft() {
      var doc = document.documentElement;
      return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);
    }
  }, {
    key: "getOuterWidth",
    value: function getOuterWidth(el, margin) {
      if (el) {
        var width = el.offsetWidth;

        if (margin) {
          var style = getComputedStyle(el);
          width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);
        }

        return width;
      } else {
        return 0;
      }
    }
  }, {
    key: "getOuterHeight",
    value: function getOuterHeight(el, margin) {
      if (el) {
        var height = el.offsetHeight;

        if (margin) {
          var style = getComputedStyle(el);
          height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);
        }

        return height;
      } else {
        return 0;
      }
    }
  }, {
    key: "getClientHeight",
    value: function getClientHeight(el, margin) {
      if (el) {
        var height = el.clientHeight;

        if (margin) {
          var style = getComputedStyle(el);
          height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);
        }

        return height;
      } else {
        return 0;
      }
    }
  }, {
    key: "getViewport",
    value: function getViewport() {
      var win = window,
          d = document,
          e = d.documentElement,
          g = d.getElementsByTagName('body')[0],
          w = win.innerWidth || e.clientWidth || g.clientWidth,
          h = win.innerHeight || e.clientHeight || g.clientHeight;
      return {
        width: w,
        height: h
      };
    }
  }, {
    key: "getOffset",
    value: function getOffset(el) {
      var rect = el.getBoundingClientRect();
      return {
        top: rect.top + document.body.scrollTop,
        left: rect.left + document.body.scrollLeft
      };
    }
  }, {
    key: "generateZIndex",
    value: function generateZIndex() {
      this.zindex = this.zindex || 999;
      return ++this.zindex;
    }
  }, {
    key: "getCurrentZIndex",
    value: function getCurrentZIndex() {
      return this.zindex;
    }
  }, {
    key: "index",
    value: function index(element) {
      var children = element.parentNode.childNodes;
      var num = 0;

      for (var i = 0; i < children.length; i++) {
        if (children[i] === element) return num;
        if (children[i].nodeType === 1) num++;
      }

      return -1;
    }
  }, {
    key: "addMultipleClasses",
    value: function addMultipleClasses(element, className) {
      if (element.classList) {
        var styles = className.split(' ');

        for (var i = 0; i < styles.length; i++) {
          element.classList.add(styles[i]);
        }
      } else {
        var _styles = className.split(' ');

        for (var _i = 0; _i < _styles.length; _i++) {
          element.className += ' ' + _styles[_i];
        }
      }
    }
  }, {
    key: "addClass",
    value: function addClass(element, className) {
      if (element.classList) element.classList.add(className);else element.className += ' ' + className;
    }
  }, {
    key: "removeClass",
    value: function removeClass(element, className) {
      if (element.classList) element.classList.remove(className);else element.className = element.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
    }
  }, {
    key: "hasClass",
    value: function hasClass(element, className) {
      if (element.classList) return element.classList.contains(className);else return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);
    }
  }, {
    key: "find",
    value: function find(element, selector) {
      return Array.from(element.querySelectorAll(selector));
    }
  }, {
    key: "findSingle",
    value: function findSingle(element, selector) {
      if (element) {
        return element.querySelector(selector);
      }

      return null;
    }
  }, {
    key: "getHeight",
    value: function getHeight(el) {
      var height = el.offsetHeight;
      var style = getComputedStyle(el);
      height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom) + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);
      return height;
    }
  }, {
    key: "getWidth",
    value: function getWidth(el) {
      var width = el.offsetWidth;
      var style = getComputedStyle(el);
      width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);
      return width;
    }
  }, {
    key: "absolutePosition",
    value: function absolutePosition(element, target) {
      var elementDimensions = element.offsetParent ? {
        width: element.offsetWidth,
        height: element.offsetHeight
      } : this.getHiddenElementDimensions(element);
      var elementOuterHeight = elementDimensions.height;
      var elementOuterWidth = elementDimensions.width;
      var targetOuterHeight = target.offsetHeight;
      var targetOuterWidth = target.offsetWidth;
      var targetOffset = target.getBoundingClientRect();
      var windowScrollTop = this.getWindowScrollTop();
      var windowScrollLeft = this.getWindowScrollLeft();
      var viewport = this.getViewport();
      var top, left;

      if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {
        top = targetOffset.top + windowScrollTop - elementOuterHeight;

        if (top < 0) {
          top = windowScrollTop;
        }
      } else {
        top = targetOuterHeight + targetOffset.top + windowScrollTop;
      }

      if (targetOffset.left + targetOuterWidth + elementOuterWidth > viewport.width) left = Math.max(0, targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth);else left = targetOffset.left + windowScrollLeft;
      element.style.top = top + 'px';
      element.style.left = left + 'px';
    }
  }, {
    key: "relativePosition",
    value: function relativePosition(element, target) {
      var elementDimensions = element.offsetParent ? {
        width: element.offsetWidth,
        height: element.offsetHeight
      } : this.getHiddenElementDimensions(element);
      var targetHeight = target.offsetHeight;
      var targetOffset = target.getBoundingClientRect();
      var viewport = this.getViewport();
      var top, left;

      if (targetOffset.top + targetHeight + elementDimensions.height > viewport.height) {
        top = -1 * elementDimensions.height;

        if (targetOffset.top + top < 0) {
          top = -1 * targetOffset.top;
        }
      } else {
        top = targetHeight;
      }

      if (elementDimensions.width > viewport.width) {
        // element wider then viewport and cannot fit on screen (align at left side of viewport)
        left = targetOffset.left * -1;
      } else if (targetOffset.left + elementDimensions.width > viewport.width) {
        // element wider then viewport but can be fit on screen (align at right side of viewport)
        left = (targetOffset.left + elementDimensions.width - viewport.width) * -1;
      } else {
        // element fits on screen (align with target)
        left = 0;
      }

      element.style.top = top + 'px';
      element.style.left = left + 'px';
    }
  }, {
    key: "getHiddenElementOuterHeight",
    value: function getHiddenElementOuterHeight(element) {
      element.style.visibility = 'hidden';
      element.style.display = 'block';
      var elementHeight = element.offsetHeight;
      element.style.display = 'none';
      element.style.visibility = 'visible';
      return elementHeight;
    }
  }, {
    key: "getHiddenElementOuterWidth",
    value: function getHiddenElementOuterWidth(element) {
      element.style.visibility = 'hidden';
      element.style.display = 'block';
      var elementWidth = element.offsetWidth;
      element.style.display = 'none';
      element.style.visibility = 'visible';
      return elementWidth;
    }
  }, {
    key: "getHiddenElementDimensions",
    value: function getHiddenElementDimensions(element) {
      var dimensions = {};
      element.style.visibility = 'hidden';
      element.style.display = 'block';
      dimensions.width = element.offsetWidth;
      dimensions.height = element.offsetHeight;
      element.style.display = 'none';
      element.style.visibility = 'visible';
      return dimensions;
    }
  }, {
    key: "fadeIn",
    value: function fadeIn(element, duration) {
      element.style.opacity = 0;
      var last = +new Date();
      var opacity = 0;

      var tick = function tick() {
        opacity = +element.style.opacity + (new Date().getTime() - last) / duration;
        element.style.opacity = opacity;
        last = +new Date();

        if (+opacity < 1) {
          window.requestAnimationFrame && requestAnimationFrame(tick) || setTimeout(tick, 16);
        }
      };

      tick();
    }
  }, {
    key: "fadeOut",
    value: function fadeOut(element, ms) {
      var opacity = 1,
          interval = 50,
          duration = ms,
          gap = interval / duration;
      var fading = setInterval(function () {
        opacity -= gap;

        if (opacity <= 0) {
          opacity = 0;
          clearInterval(fading);
        }

        element.style.opacity = opacity;
      }, interval);
    }
  }, {
    key: "getUserAgent",
    value: function getUserAgent() {
      return navigator.userAgent;
    }
  }, {
    key: "isIOS",
    value: function isIOS() {
      return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window['MSStream'];
    }
  }, {
    key: "isAndroid",
    value: function isAndroid() {
      return /(android)/i.test(navigator.userAgent);
    }
  }, {
    key: "appendChild",
    value: function appendChild(element, target) {
      if (this.isElement(target)) target.appendChild(element);else if (target.el && target.el.nativeElement) target.el.nativeElement.appendChild(element);else throw new Error('Cannot append ' + target + ' to ' + element);
    }
  }, {
    key: "scrollInView",
    value: function scrollInView(container, item) {
      var borderTopValue = getComputedStyle(container).getPropertyValue('borderTopWidth');
      var borderTop = borderTopValue ? parseFloat(borderTopValue) : 0;
      var paddingTopValue = getComputedStyle(container).getPropertyValue('paddingTop');
      var paddingTop = paddingTopValue ? parseFloat(paddingTopValue) : 0;
      var containerRect = container.getBoundingClientRect();
      var itemRect = item.getBoundingClientRect();
      var offset = itemRect.top + document.body.scrollTop - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;
      var scroll = container.scrollTop;
      var elementHeight = container.clientHeight;
      var itemHeight = this.getOuterHeight(item);

      if (offset < 0) {
        container.scrollTop = scroll + offset;
      } else if (offset + itemHeight > elementHeight) {
        container.scrollTop = scroll + offset - elementHeight + itemHeight;
      }
    }
  }, {
    key: "clearSelection",
    value: function clearSelection() {
      if (window.getSelection) {
        if (window.getSelection().empty) {
          window.getSelection().empty();
        } else if (window.getSelection().removeAllRanges && window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects().length > 0) {
          window.getSelection().removeAllRanges();
        }
      } else if (document['selection'] && document['selection'].empty) {
        try {
          document['selection'].empty();
        } catch (error) {//ignore IE bug
        }
      }
    }
  }, {
    key: "calculateScrollbarWidth",
    value: function calculateScrollbarWidth(el) {
      if (el) {
        var style = getComputedStyle(el);
        return el.offsetWidth - el.clientWidth - parseFloat(style.borderLeftWidth) - parseFloat(style.borderRightWidth);
      } else {
        if (this.calculatedScrollbarWidth != null) return this.calculatedScrollbarWidth;
        var scrollDiv = document.createElement("div");
        scrollDiv.className = "p-scrollbar-measure";
        document.body.appendChild(scrollDiv);
        var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
        document.body.removeChild(scrollDiv);
        this.calculatedScrollbarWidth = scrollbarWidth;
        return scrollbarWidth;
      }
    }
  }, {
    key: "getBrowser",
    value: function getBrowser() {
      if (!this.browser) {
        var matched = this.resolveUserAgent();
        this.browser = {};

        if (matched.browser) {
          this.browser[matched.browser] = true;
          this.browser['version'] = matched.version;
        }

        if (this.browser['chrome']) {
          this.browser['webkit'] = true;
        } else if (this.browser['webkit']) {
          this.browser['safari'] = true;
        }
      }

      return this.browser;
    }
  }, {
    key: "resolveUserAgent",
    value: function resolveUserAgent() {
      var ua = navigator.userAgent.toLowerCase();
      var match = /(chrome)[ ]([\w.]+)/.exec(ua) || /(webkit)[ ]([\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ ]([\w.]+)/.exec(ua) || /(msie) ([\w.]+)/.exec(ua) || ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua) || [];
      return {
        browser: match[1] || "",
        version: match[2] || "0"
      };
    }
  }, {
    key: "isVisible",
    value: function isVisible(element) {
      return element.offsetParent != null;
    }
  }]);

  return DomHandler;
}();

exports.default = DomHandler;

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DropdownFooter = exports.DropdownBody = exports.DropdownHeader = exports.DropdownLabel = exports.DropdownDivider = exports.DropdownItem = exports.DropdownFirst = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
exports.DropdownFirst = function (_a) {
    var _b, _c;
    var name = _a.name, align = _a.align, side = _a.side, level = _a.level, icon = _a.icon, headerFooter = _a.headerFooter, navDropdown = _a.navDropdown, children = _a.children;
    var _d = React.useState(false), open = _d[0], setOpen = _d[1];
    var _e = React.useState(false), height = _e[0], setHeight = _e[1];
    var ref = React.useRef(null);
    var inDebounce = 0;
    function calculate() {
        var number = getDimensions(ref.current);
        var second = screen.height;
        var heightEl = heightElement(ref.current);
        if ((second - number.bottom) < (heightEl + 100) && (number.top > heightEl)) {
            setHeight(true);
        }
        else {
            setHeight(false);
        }
    }
    var debounce = function (delay) {
        return function () {
            var context = children;
            clearTimeout(inDebounce);
            inDebounce = setTimeout(function () { return calculate.apply(context); }, delay);
        };
    };
    React.useLayoutEffect(function () {
        var element = document.getElementsByClassName('dropdown')[0];
        var parentElement = getScrollParent(element);
        parentElement.parentNode.addEventListener("scroll", debounce(50));
        calculate();
        return function () {
            parentElement.removeEventListener("scroll", debounce(50));
            clearTimeout(inDebounce);
        };
    }, [open]);
    var classes = classnames_1.default('dropdown', (_b = {},
        _b['open'] = open,
        _b['dropdown--align-right'] = align === 'right',
        _b["dropdown--drop" + side] = side,
        _b['dropdown--dropup'] = height,
        _b));
    function isOpen() {
        if (!open) {
            setOpen(true);
            document.addEventListener('click', closeMenu);
        }
        else {
            setOpen(false);
        }
    }
    function closeMenu() {
        document.removeEventListener('click', closeMenu);
        setOpen(false);
    }
    function getDimensions(el) {
        var rect = el.getBoundingClientRect();
        return {
            top: rect.top,
            bottom: rect.bottom,
        };
    }
    function heightElement(el) {
        return el.clientHeight;
    }
    // scrollable
    function getScrollParent(node) {
        if (node.scrollHeight > node.clientHeight) {
            return node;
        }
        else {
            if (node.parentElement !== null) {
                var newElement = node.parentElement;
                return getScrollParent(newElement);
            }
        }
    }
    if (headerFooter) {
        return (React.createElement("div", { className: classes },
            React.createElement("button", { className: navDropdown ? 'dropdown__toggle navbtn dropdown-toggle' : 'dropdown__toggle nav-btn dropdown-toggle', onClick: isOpen }, icon ?
                (React.createElement("i", { className: "icon-" + icon })) :
                (React.createElement(React.Fragment, null,
                    name,
                    React.createElement("span", { className: "dropdown__caret" })))),
            React.createElement("div", { className: 'dropdown__menu dropdown__menu--has-head-foot', ref: ref }, children)));
    }
    else {
        if (level) {
            var classesMenu = classnames_1.default('dropdown__menu', (_c = {},
                _c['dropdown__menu--submenu-left'] = align === 'left',
                _c));
            return (React.createElement("li", null,
                React.createElement("div", { className: classes },
                    React.createElement("button", { className: 'dropdown__toggle dropdown-toggle' },
                        icon && level ? React.createElement("i", { className: icon ? ('icon-' + icon) : '' }) : null,
                        name),
                    React.createElement("ul", { className: classesMenu, ref: ref }, children))));
        }
        else {
            return (React.createElement("div", { className: classes },
                React.createElement("button", { className: navDropdown ? 'dropdown__toggle navbtn dropdown-toggle' : 'dropdown__toggle nav-btn dropdown-toggle', onClick: isOpen }, icon ?
                    (React.createElement("i", { className: "icon-" + icon })) :
                    (React.createElement(React.Fragment, null,
                        name,
                        React.createElement("span", { className: "dropdown__caret" })))),
                React.createElement("ul", { className: 'dropdown__menu', ref: ref }, children)));
        }
    }
};
exports.DropdownItem = function (_a) {
    var text = _a.text, icon = _a.icon, noLink = _a.noLink, onSelect = _a.onSelect;
    if (noLink) {
        return React.createElement("li", { className: 'dropdown__menu-item--no-link' }, text);
    }
    else {
        return (React.createElement("li", null,
            React.createElement("button", { onSelect: onSelect },
                React.createElement("i", { className: icon ? ('icon-' + icon) : '' }),
                text)));
    }
};
exports.DropdownDivider = function (_a) {
    return (React.createElement("li", { className: "dropdown__menu-divider" }));
};
exports.DropdownLabel = function (_a) {
    var text = _a.text;
    return (React.createElement("li", null,
        React.createElement("div", { className: "dropdown__menu-label" }, text)));
};
exports.DropdownHeader = function (_a) {
    var title = _a.title, children = _a.children;
    return (React.createElement("ul", { className: 'dropdown__menu-header' },
        React.createElement(exports.DropdownLabel, { text: title }),
        children));
};
exports.DropdownBody = function (_a) {
    var title = _a.title, children = _a.children;
    return (React.createElement("ul", { className: 'dropdown__menu-body' },
        React.createElement(exports.DropdownLabel, { text: title }),
        children));
};
exports.DropdownFooter = function (_a) {
    var title = _a.title, children = _a.children;
    return (React.createElement("ul", { className: 'dropdown__menu-footer dropdown__menu-footer--has-list' },
        React.createElement(exports.DropdownLabel, { text: title }),
        children));
};
exports.DropdownFirst.Item = exports.DropdownItem;
exports.DropdownFirst.Divider = exports.DropdownDivider;
exports.DropdownFirst.Label = exports.DropdownLabel;
exports.DropdownFirst.Header = exports.DropdownHeader;
exports.DropdownFirst.Body = exports.DropdownBody;
exports.DropdownFirst.Footer = exports.DropdownFooter;


/***/ }),
/* 23 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getBoundingClientRect;
function getBoundingClientRect(element) {
  var rect = element.getBoundingClientRect();
  return {
    width: rect.width,
    height: rect.height,
    top: rect.top,
    right: rect.right,
    bottom: rect.bottom,
    left: rect.left,
    x: rect.left,
    y: rect.top
  };
}

/***/ }),
/* 24 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getParentNode;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getNodeName_js__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getDocumentElement_js__ = __webpack_require__(9);


function getParentNode(element) {
  if (Object(__WEBPACK_IMPORTED_MODULE_0__getNodeName_js__["a" /* default */])(element) === 'html') {
    return element;
  }

  return (// $FlowFixMe: this is a quicker (but less type safe) way to save quite some bytes from the bundle
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || // DOM Element detected
    // $FlowFixMe: need a better way to handle this...
    element.host || // ShadowRoot detected
    // $FlowFixMe: HTMLElement is a Node
    Object(__WEBPACK_IMPORTED_MODULE_1__getDocumentElement_js__["a" /* default */])(element) // fallback

  );
}

/***/ }),
/* 25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getVariation;
function getVariation(placement) {
  return placement.split('-')[1];
}

/***/ }),
/* 26 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

if (process.env.NODE_ENV === 'production') {
  module.exports = __webpack_require__(57);
} else {
  module.exports = __webpack_require__(58);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AvatarWrapper = exports.AvatarContentImage = exports.AvatarContentText = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var AvatarContentText = /** @class */ (function (_super) {
    __extends(AvatarContentText, _super);
    function AvatarContentText() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AvatarContentText.prototype.render = function () {
        return (React.createElement("span", { className: "sd-avatar-content sd-avatar-content--text", title: this.props.tooltipText },
            React.createElement("span", null, this.props.text.slice(0, 3))));
    };
    return AvatarContentText;
}(React.PureComponent));
exports.AvatarContentText = AvatarContentText;
var AvatarContentImage = /** @class */ (function (_super) {
    __extends(AvatarContentImage, _super);
    function AvatarContentImage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AvatarContentImage.prototype.render = function () {
        if (this.props.imageUrl == null) {
            return React.createElement("span", { className: "sd-avatar-content sd-avatar-content--empty", title: this.props.tooltipText });
        }
        else {
            return (React.createElement("span", { className: "sd-avatar-content", title: this.props.tooltipText },
                React.createElement("img", { src: this.props.imageUrl })));
        }
    };
    return AvatarContentImage;
}(React.PureComponent));
exports.AvatarContentImage = AvatarContentImage;
var AvatarWrapper = /** @class */ (function (_super) {
    __extends(AvatarWrapper, _super);
    function AvatarWrapper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AvatarWrapper.prototype.render = function () {
        var _a;
        return (React.createElement("span", { className: classnames_1.default('sd-avatar', {
                'sd-avatar--small': this.props.size === 'small',
                'sd-avatar--medium': this.props.size === 'medium' || this.props.size == null,
                'sd-avatar--large': this.props.size === 'large',
            }), "data-test-id": this.props['data-test-id'] },
            this.props.children,
            this.props.statusIndicator != null
                ? (React.createElement("span", { className: this.props.statusIndicator.status === 'online'
                        ? 'sd-avatar--indicator-status--online'
                        : 'sd-avatar--indicator-status--offline', title: this.props.statusIndicator.tooltipText }))
                : null,
            ((_a = this.props.administratorIndicator) === null || _a === void 0 ? void 0 : _a.enabled) === true
                ? (React.createElement("i", { className: "icon-settings sd-avatar--indicator-admin", title: this.props.administratorIndicator.tooltipText }))
                : null));
    };
    return AvatarWrapper;
}(React.PureComponent));
exports.AvatarWrapper = AvatarWrapper;


/***/ }),
/* 30 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = startOfUTCISOWeek;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ = __webpack_require__(6);
 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function startOfUTCISOWeek(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var weekStartsOn = 1;
  var date = Object(__WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */])(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

/***/ }),
/* 31 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = startOfUTCWeek;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ = __webpack_require__(6);

 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function startOfUTCWeek(dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(__WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__["a" /* default */])(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(__WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__["a" /* default */])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }

  var date = Object(__WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */])(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _DomHandler = _interopRequireDefault(__webpack_require__(21));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Tooltip =
/*#__PURE__*/
function () {
  function Tooltip(props) {
    _classCallCheck(this, Tooltip);

    this.target = props.target;
    this.targetContainer = props.targetContainer;
    this.content = props.content;
    this.options = props.options || {};
    this.options.event = this.options.event || 'hover';
    this.options.position = this.options.position || 'right';
    this.bindEvents();
  }

  _createClass(Tooltip, [{
    key: "bindEvents",
    value: function bindEvents() {
      if (this.options.event === 'hover') {
        this.mouseEnterListener = this.onMouseEnter.bind(this);
        this.mouseLeaveListener = this.onMouseLeave.bind(this);
        this.clickListener = this.onClick.bind(this);
        this.target.addEventListener('mouseenter', this.mouseEnterListener);
        this.target.addEventListener('mouseleave', this.mouseLeaveListener);
        this.target.addEventListener('click', this.clickListener);
      } else if (this.options.event === 'focus') {
        this.focusListener = this.onFocus.bind(this);
        this.blurListener = this.onBlur.bind(this);
        this.target.addEventListener('focus', this.focusListener);
        this.target.addEventListener('blur', this.blurListener);
      }
    }
  }, {
    key: "unbindEvents",
    value: function unbindEvents() {
      if (this.options.event === 'hover') {
        this.target.removeEventListener('mouseenter', this.mouseEnterListener);
        this.target.removeEventListener('mouseleave', this.mouseLeaveListener);
        this.target.removeEventListener('click', this.clickListener);
      } else if (this.options.event === 'focus') {
        this.target.removeEventListener('focus', this.focusListener);
        this.target.removeEventListener('blur', this.blurListener);
      }

      this.unbindDocumentResizeListener();
    }
  }, {
    key: "onMouseEnter",
    value: function onMouseEnter() {
      if (!this.container && !this.showTimeout) {
        this.activate();
      }
    }
  }, {
    key: "onMouseLeave",
    value: function onMouseLeave() {
      this.deactivate();
    }
  }, {
    key: "onFocus",
    value: function onFocus() {
      this.activate();
    }
  }, {
    key: "onBlur",
    value: function onBlur() {
      this.deactivate();
    }
  }, {
    key: "onClick",
    value: function onClick() {
      this.deactivate();
    }
  }, {
    key: "activate",
    value: function activate() {
      var _this = this;

      this.clearHideTimeout();
      if (this.options.showDelay) this.showTimeout = setTimeout(function () {
        _this.show();
      }, this.options.showDelay);else this.show();
    }
  }, {
    key: "deactivate",
    value: function deactivate() {
      var _this2 = this;

      this.clearShowTimeout();
      if (this.options.hideDelay) this.hideTimeout = setTimeout(function () {
        _this2.hide();
      }, this.options.hideDelay);else this.hide();
    }
  }, {
    key: "clearShowTimeout",
    value: function clearShowTimeout() {
      if (this.showTimeout) {
        clearTimeout(this.showTimeout);
        this.showTimeout = null;
      }
    }
  }, {
    key: "clearHideTimeout",
    value: function clearHideTimeout() {
      if (this.hideTimeout) {
        clearTimeout(this.hideTimeout);
        this.hideTimeout = null;
      }
    }
  }, {
    key: "clearTimeouts",
    value: function clearTimeouts() {
      this.clearShowTimeout();
      this.clearHideTimeout();
    }
  }, {
    key: "updateContent",
    value: function updateContent(content) {
      this.content = content;
    }
  }, {
    key: "show",
    value: function show() {
      if (!this.content) {
        return;
      }

      this.create();
      this.align();

      _DomHandler.default.fadeIn(this.container, 250);

      this.container.style.zIndex = ++_DomHandler.default.zindex;
      this.bindDocumentResizeListener();
    }
  }, {
    key: "hide",
    value: function hide() {
      this.remove();
    }
  }, {
    key: "create",
    value: function create() {
      this.container = document.createElement('div');
      var tooltipArrow = document.createElement('div');
      tooltipArrow.className = 'p-tooltip-arrow';
      this.container.appendChild(tooltipArrow);
      this.tooltipText = document.createElement('div');
      this.tooltipText.className = 'p-tooltip-text'; //todo: JSX support

      this.tooltipText.innerHTML = this.content;
      this.container.appendChild(this.tooltipText);
      document.body.appendChild(this.container);
      this.container.style.display = 'inline-block';
    }
  }, {
    key: "remove",
    value: function remove() {
      if (this.container && this.container.parentElement) {
        document.body.removeChild(this.container);
      }

      this.unbindDocumentResizeListener();
      this.clearTimeouts();
      this.container = null;
    }
  }, {
    key: "align",
    value: function align() {
      switch (this.options.position) {
        case 'top':
          this.alignTop();

          if (this.isOutOfBounds()) {
            this.alignBottom();
          }

          break;

        case 'bottom':
          this.alignBottom();

          if (this.isOutOfBounds()) {
            this.alignTop();
          }

          break;

        case 'left':
          this.alignLeft();

          if (this.isOutOfBounds()) {
            this.alignRight();

            if (this.isOutOfBounds()) {
              this.alignTop();

              if (this.isOutOfBounds()) {
                this.alignBottom();
              }
            }
          }

          break;

        case 'right':
          this.alignRight();

          if (this.isOutOfBounds()) {
            this.alignLeft();

            if (this.isOutOfBounds()) {
              this.alignTop();

              if (this.isOutOfBounds()) {
                this.alignBottom();
              }
            }
          }

          break;

        default:
          throw new Error('Invalid position:' + this.options.position);
      }
    }
  }, {
    key: "getHostOffset",
    value: function getHostOffset() {
      var target = this.targetContainer || this.target;
      var offset = target.getBoundingClientRect();

      var targetLeft = offset.left + _DomHandler.default.getWindowScrollLeft();

      var targetTop = offset.top + _DomHandler.default.getWindowScrollTop();

      return {
        left: targetLeft,
        top: targetTop
      };
    }
  }, {
    key: "alignRight",
    value: function alignRight() {
      this.preAlign('right');
      var target = this.targetContainer || this.target;
      var hostOffset = this.getHostOffset();

      var left = hostOffset.left + _DomHandler.default.getOuterWidth(target);

      var top = hostOffset.top + (_DomHandler.default.getOuterHeight(target) - _DomHandler.default.getOuterHeight(this.container)) / 2;
      this.container.style.left = left + 'px';
      this.container.style.top = top + 'px';
    }
  }, {
    key: "alignLeft",
    value: function alignLeft() {
      this.preAlign('left');
      var target = this.targetContainer || this.target;
      var hostOffset = this.getHostOffset();

      var left = hostOffset.left - _DomHandler.default.getOuterWidth(this.container);

      var top = hostOffset.top + (_DomHandler.default.getOuterHeight(target) - _DomHandler.default.getOuterHeight(this.container)) / 2;
      this.container.style.left = left + 'px';
      this.container.style.top = top + 'px';
    }
  }, {
    key: "alignTop",
    value: function alignTop() {
      this.preAlign('top');
      var target = this.targetContainer || this.target;
      var hostOffset = this.getHostOffset();
      var left = hostOffset.left + (_DomHandler.default.getOuterWidth(target) - _DomHandler.default.getOuterWidth(this.container)) / 2;

      var top = hostOffset.top - _DomHandler.default.getOuterHeight(this.container);

      this.container.style.left = left + 'px';
      this.container.style.top = top + 'px';
    }
  }, {
    key: "alignBottom",
    value: function alignBottom() {
      this.preAlign('bottom');
      var target = this.targetContainer || this.target;
      var hostOffset = this.getHostOffset();
      var left = hostOffset.left + (_DomHandler.default.getOuterWidth(target) - _DomHandler.default.getOuterWidth(this.container)) / 2;

      var top = hostOffset.top + _DomHandler.default.getOuterHeight(target);

      this.container.style.left = left + 'px';
      this.container.style.top = top + 'px';
    }
  }, {
    key: "preAlign",
    value: function preAlign(position) {
      this.container.style.left = -999 + 'px';
      this.container.style.top = -999 + 'px';
      var defaultClassName = 'p-tooltip p-component p-tooltip-' + position;
      this.container.className = this.options.className ? defaultClassName + ' ' + this.options.className : defaultClassName;
    }
  }, {
    key: "isOutOfBounds",
    value: function isOutOfBounds() {
      var offset = this.container.getBoundingClientRect();
      var targetTop = offset.top;
      var targetLeft = offset.left;

      var width = _DomHandler.default.getOuterWidth(this.container);

      var height = _DomHandler.default.getOuterHeight(this.container);

      var viewport = _DomHandler.default.getViewport();

      return targetLeft + width > viewport.width || targetLeft < 0 || targetTop < 0 || targetTop + height > viewport.height;
    }
  }, {
    key: "bindDocumentResizeListener",
    value: function bindDocumentResizeListener() {
      this.resizeListener = this.onWindowResize.bind(this);
      window.addEventListener('resize', this.resizeListener);
    }
  }, {
    key: "unbindDocumentResizeListener",
    value: function unbindDocumentResizeListener() {
      if (this.resizeListener) {
        window.removeEventListener('resize', this.resizeListener);
        this.resizeListener = null;
      }
    }
  }, {
    key: "onWindowResize",
    value: function onWindowResize() {
      this.hide();
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.unbindEvents();
      this.remove();
      this.target = null;
      this.targetContainer = null;
    }
  }]);

  return Tooltip;
}();

exports.default = Tooltip;

/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getWindowScroll;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getWindow_js__ = __webpack_require__(8);

function getWindowScroll(node) {
  var win = Object(__WEBPACK_IMPORTED_MODULE_0__getWindow_js__["a" /* default */])(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft: scrollLeft,
    scrollTop: scrollTop
  };
}

/***/ }),
/* 34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getWindowScrollBarX;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getBoundingClientRect_js__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getDocumentElement_js__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getWindowScroll_js__ = __webpack_require__(33);



function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  // Popper 1 is broken in this case and never had a bug report so let's assume
  // it's not an issue. I don't think anyone ever specifies width on <html>
  // anyway.
  // Browsers where the left scrollbar doesn't cause an issue report `0` for
  // this (e.g. Edge 2019, IE11, Safari)
  return Object(__WEBPACK_IMPORTED_MODULE_0__getBoundingClientRect_js__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_1__getDocumentElement_js__["a" /* default */])(element)).left + Object(__WEBPACK_IMPORTED_MODULE_2__getWindowScroll_js__["a" /* default */])(element).scrollLeft;
}

/***/ }),
/* 35 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isScrollParent;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getComputedStyle_js__ = __webpack_require__(17);

function isScrollParent(element) {
  // Firefox wants us to check `-x` and `-y` variations as well
  var _getComputedStyle = Object(__WEBPACK_IMPORTED_MODULE_0__getComputedStyle_js__["a" /* default */])(element),
      overflow = _getComputedStyle.overflow,
      overflowX = _getComputedStyle.overflowX,
      overflowY = _getComputedStyle.overflowY;

  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

/***/ }),
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getLayoutRect;
// Returns the layout rect of an element relative to its offsetParent. Layout
// means it doesn't take into account transforms.
function getLayoutRect(element) {
  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width: element.offsetWidth,
    height: element.offsetHeight
  };
}

/***/ }),
/* 37 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getMainAxisFromPlacement;
function getMainAxisFromPlacement(placement) {
  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
}

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.15';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack);
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array == null ? 0 : array.length,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision && nativeIsFinite(number)) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */
    function safeGet(object, key) {
      if (key === 'constructor' && typeof object[key] === 'function') {
        return;
      }

      if (key == '__proto__') {
        return;
      }

      return object[key];
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      // The sourceURL gets injected into the source that's eval-ed, so be careful
      // with lookup (in case of e.g. prototype pollution), and strip newlines if any.
      // A newline wouldn't be a valid sourceURL anyway, and it'd enable code injection.
      var sourceURL = '//# sourceURL=' +
        (hasOwnProperty.call(options, 'sourceURL')
          ? (options.sourceURL + '').replace(/[\r\n]/g, ' ')
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      // Like with sourceURL, we take care to not check the option's prototype,
      // as this configuration is a code injection vector.
      var variable = hasOwnProperty.call(options, 'variable') && options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = lodashFunc.name + '';
        if (!hasOwnProperty.call(realNames, key)) {
          realNames[key] = [];
        }
        realNames[key].push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return _;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else if (freeModule) {
    // Export for Node.js.
    (freeModule.exports = _)._ = _;
    // Export for CommonJS support.
    freeExports._ = _;
  }
  else {
    // Export to the global object.
    root._ = _;
  }
}.call(this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(26), __webpack_require__(40)(module)))

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Layout_1 = __webpack_require__(199);
Object.defineProperty(exports, "Layout", { enumerable: true, get: function () { return Layout_1.Layout; } });
var HeaderPanel_1 = __webpack_require__(200);
Object.defineProperty(exports, "HeaderPanel", { enumerable: true, get: function () { return HeaderPanel_1.HeaderPanel; } });
var MainPanel_1 = __webpack_require__(201);
Object.defineProperty(exports, "MainPanel", { enumerable: true, get: function () { return MainPanel_1.MainPanel; } });
var OverlayPanel_1 = __webpack_require__(202);
Object.defineProperty(exports, "OverlayPanel", { enumerable: true, get: function () { return OverlayPanel_1.OverlayPanel; } });
var RightPanel_1 = __webpack_require__(203);
Object.defineProperty(exports, "RightPanel", { enumerable: true, get: function () { return RightPanel_1.RightPanel; } });
var LeftPanel_1 = __webpack_require__(204);
Object.defineProperty(exports, "LeftPanel", { enumerable: true, get: function () { return LeftPanel_1.LeftPanel; } });
var SubNav_1 = __webpack_require__(205);
Object.defineProperty(exports, "SubNav", { enumerable: true, get: function () { return SubNav_1.SubNav; } });
var GraphicButtonsGroup_1 = __webpack_require__(206);
Object.defineProperty(exports, "GraphicButtonsGroup", { enumerable: true, get: function () { return GraphicButtonsGroup_1.GraphicButtonsGroup; } });
var GraphicButton_1 = __webpack_require__(207);
Object.defineProperty(exports, "GraphicButton", { enumerable: true, get: function () { return GraphicButton_1.GraphicButton; } });
var Panel_1 = __webpack_require__(208);
Object.defineProperty(exports, "Panel", { enumerable: true, get: function () { return Panel_1.Panel; } });
var PanelContent_1 = __webpack_require__(209);
Object.defineProperty(exports, "PanelContent", { enumerable: true, get: function () { return PanelContent_1.PanelContent; } });
var PanelContentBlock_1 = __webpack_require__(210);
Object.defineProperty(exports, "PanelContentBlock", { enumerable: true, get: function () { return PanelContentBlock_1.PanelContentBlock; } });
var PanelHeader_1 = __webpack_require__(211);
Object.defineProperty(exports, "PanelHeader", { enumerable: true, get: function () { return PanelHeader_1.PanelHeader; } });
var PanelFooter_1 = __webpack_require__(212);
Object.defineProperty(exports, "PanelFooter", { enumerable: true, get: function () { return PanelFooter_1.PanelFooter; } });
var SearchBar_1 = __webpack_require__(213);
Object.defineProperty(exports, "SearchBar", { enumerable: true, get: function () { return SearchBar_1.SearchBar; } });
var SidebarMenu_1 = __webpack_require__(214);
Object.defineProperty(exports, "SidebarMenu", { enumerable: true, get: function () { return SidebarMenu_1.SidebarMenu; } });
var LayoutContainer_1 = __webpack_require__(215);
Object.defineProperty(exports, "LayoutContainer", { enumerable: true, get: function () { return LayoutContainer_1.LayoutContainer; } });


/***/ }),
/* 40 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatePickerISO = exports.DatePicker = void 0;
var React = __importStar(__webpack_require__(0));
var addDays_1 = __importDefault(__webpack_require__(75));
var format_1 = __importDefault(__webpack_require__(76));
var calendar_1 = __webpack_require__(100);
var lodash_1 = __webpack_require__(38);
var currentLocale = {
    firstDayOfWeek: 1,
    dayNames: [
        new Intl.DateTimeFormat(undefined, { weekday: 'long' }).format(new Date('2000-01-01')),
        new Intl.DateTimeFormat(undefined, { weekday: 'long' }).format(new Date('2000-01-02')),
        new Intl.DateTimeFormat(undefined, { weekday: 'long' }).format(new Date('2000-01-03')),
        new Intl.DateTimeFormat(undefined, { weekday: 'long' }).format(new Date('2000-01-04')),
        new Intl.DateTimeFormat(undefined, { weekday: 'long' }).format(new Date('2000-01-05')),
        new Intl.DateTimeFormat(undefined, { weekday: 'long' }).format(new Date('2000-01-06')),
        new Intl.DateTimeFormat(undefined, { weekday: 'long' }).format(new Date('2000-01-07')),
    ],
    dayNamesShort: [
        new Intl.DateTimeFormat(undefined, { weekday: 'short' }).format(new Date('2000-01-01')),
        new Intl.DateTimeFormat(undefined, { weekday: 'short' }).format(new Date('2000-01-02')),
        new Intl.DateTimeFormat(undefined, { weekday: 'short' }).format(new Date('2000-01-03')),
        new Intl.DateTimeFormat(undefined, { weekday: 'short' }).format(new Date('2000-01-04')),
        new Intl.DateTimeFormat(undefined, { weekday: 'short' }).format(new Date('2000-01-05')),
        new Intl.DateTimeFormat(undefined, { weekday: 'short' }).format(new Date('2000-01-06')),
        new Intl.DateTimeFormat(undefined, { weekday: 'short' }).format(new Date('2000-01-07')),
    ],
    dayNamesMin: [
        new Intl.DateTimeFormat(undefined, { weekday: 'short' }).format(new Date('2000-01-01')),
        new Intl.DateTimeFormat(undefined, { weekday: 'short' }).format(new Date('2000-01-02')),
        new Intl.DateTimeFormat(undefined, { weekday: 'short' }).format(new Date('2000-01-03')),
        new Intl.DateTimeFormat(undefined, { weekday: 'short' }).format(new Date('2000-01-04')),
        new Intl.DateTimeFormat(undefined, { weekday: 'short' }).format(new Date('2000-01-05')),
        new Intl.DateTimeFormat(undefined, { weekday: 'short' }).format(new Date('2000-01-06')),
        new Intl.DateTimeFormat(undefined, { weekday: 'short' }).format(new Date('2000-01-07')),
    ],
    monthNames: [
        new Intl.DateTimeFormat(undefined, { month: 'long' }).format(new Date('2000-01-01')),
        new Intl.DateTimeFormat(undefined, { month: 'long' }).format(new Date('2000-02-01')),
        new Intl.DateTimeFormat(undefined, { month: 'long' }).format(new Date('2000-03-01')),
        new Intl.DateTimeFormat(undefined, { month: 'long' }).format(new Date('2000-04-01')),
        new Intl.DateTimeFormat(undefined, { month: 'long' }).format(new Date('2000-05-01')),
        new Intl.DateTimeFormat(undefined, { month: 'long' }).format(new Date('2000-06-01')),
        new Intl.DateTimeFormat(undefined, { month: 'long' }).format(new Date('2000-07-01')),
        new Intl.DateTimeFormat(undefined, { month: 'long' }).format(new Date('2000-08-01')),
        new Intl.DateTimeFormat(undefined, { month: 'long' }).format(new Date('2000-09-01')),
        new Intl.DateTimeFormat(undefined, { month: 'long' }).format(new Date('2000-10-01')),
        new Intl.DateTimeFormat(undefined, { month: 'long' }).format(new Date('2000-11-01')),
        new Intl.DateTimeFormat(undefined, { month: 'long' }).format(new Date('2000-12-01')),
    ],
    monthNamesShort: [
        new Intl.DateTimeFormat(undefined, { month: 'short' }).format(new Date('2000-01-01')),
        new Intl.DateTimeFormat(undefined, { month: 'short' }).format(new Date('2000-02-01')),
        new Intl.DateTimeFormat(undefined, { month: 'short' }).format(new Date('2000-03-01')),
        new Intl.DateTimeFormat(undefined, { month: 'short' }).format(new Date('2000-04-01')),
        new Intl.DateTimeFormat(undefined, { month: 'short' }).format(new Date('2000-05-01')),
        new Intl.DateTimeFormat(undefined, { month: 'short' }).format(new Date('2000-06-01')),
        new Intl.DateTimeFormat(undefined, { month: 'short' }).format(new Date('2000-07-01')),
        new Intl.DateTimeFormat(undefined, { month: 'short' }).format(new Date('2000-08-01')),
        new Intl.DateTimeFormat(undefined, { month: 'short' }).format(new Date('2000-09-01')),
        new Intl.DateTimeFormat(undefined, { month: 'short' }).format(new Date('2000-10-01')),
        new Intl.DateTimeFormat(undefined, { month: 'short' }).format(new Date('2000-11-01')),
        new Intl.DateTimeFormat(undefined, { month: 'short' }).format(new Date('2000-12-01')),
    ],
    today: 'today',
    clear: 'clear',
};
var internalPrimereactClassnames = {
    overlayVisible: 'p-input-overlay-visible',
};
// tries to parse primereact/calendar value format to IDatePicker['value']
function parseFromPrimeReactCalendarFormat(value) {
    if (Array.isArray(value)) {
        return 'failed-to-parse'; // arrays aren't supported
    }
    else if (value instanceof Date) {
        return value;
    }
    else if (value === '') {
        return null;
    }
    else {
        // at this point value is a free input string that can't be parsed to a Date inside primereact/calendar
        return 'failed-to-parse';
    }
}
function parseToPrimeReactCalendarFormat(value) {
    return value === null ? undefined : value;
}
var DatePicker = /** @class */ (function (_super) {
    __extends(DatePicker, _super);
    function DatePicker(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            value: parseToPrimeReactCalendarFormat(_this.props.value),
            valid: true,
        };
        _this.hidePopupOnScroll = lodash_1.throttle(function () {
            if (_this.instance != null
                && _this.instance.panel != null
                && _this.instance.hideOverlay != null
                && _this.instance.panel.classList.contains(internalPrimereactClassnames.overlayVisible)) {
                _this.instance.hideOverlay();
            }
        }, 300);
        return _this;
    }
    DatePicker.prototype.componentDidMount = function () {
        document.addEventListener('scroll', this.hidePopupOnScroll, true);
    };
    DatePicker.prototype.componentWillUnmount = function () {
        document.removeEventListener('scroll', this.hidePopupOnScroll);
    };
    DatePicker.prototype.componentDidUpdate = function (prevProps) {
        // sync internal state with props
        // the check is more complex than a === b, because value equality is checked rather than reference equality
        // which prevents infinite loops that may happen otherwise
        if (this.props.value === null || prevProps.value === null) {
            // at least one of the values is null so strict comparison can be used
            if (this.props.value !== prevProps.value) {
                this.setState({ value: parseToPrimeReactCalendarFormat(this.props.value), valid: true });
            }
        }
        else if (this.props.value.getTime() !== prevProps.value.getTime()) { // comparing by value
            this.setState({ value: parseToPrimeReactCalendarFormat(this.props.value), valid: true });
        }
    };
    DatePicker.prototype.render = function () {
        var _this = this;
        return (
        // a patch for primereact/calendar is used for fixing https://github.com/primefaces/primereact/issues/1086
        React.createElement(calendar_1.Calendar, { ref: function (ref) {
                _this.instance = ref;
            }, value: this.state.value === null ? undefined : this.state.value, onChange: function (event) {
                var result = parseFromPrimeReactCalendarFormat(event.value);
                if (result !== 'failed-to-parse') {
                    _this.setState({ value: event.value, valid: true });
                    _this.props.onChange(result);
                }
                else {
                    // updating internal state so a user can continue typing and enter a valid value
                    _this.setState({ value: event.value, valid: false });
                }
            }, locale: currentLocale, dateFormat: this.props.dateFormat.replace('YYYY', 'yy').replace('MM', 'mm').replace('DD', 'dd'), showIcon: true, icon: "icon-calendar", headerTemplate: function () { return _this.props.shortcuts == null ? null : (React.createElement("div", { style: { display: 'flex', justifyContent: 'space-between', marginBottom: 10 } }, _this.props.shortcuts.map(function (_a, i) {
                var label = _a.label, days = _a.days;
                return (React.createElement("button", { key: i, className: "btn btn--hollow btn--small", onClick: function () {
                        _this.props.onChange(addDays_1.default(new Date(), days));
                        if (_this.instance != null && typeof _this.instance.hideOverlay === 'function') {
                            _this.instance.hideOverlay();
                        }
                    } }, label));
            }))); }, appendTo: document.body, disabled: this.props.disabled, onBlur: function () {
                if (_this.state.valid === false) {
                    // restoring internal state to current props value
                    _this.setState({ valid: true, value: parseToPrimeReactCalendarFormat(_this.props.value) });
                }
            } }));
    };
    return DatePicker;
}(React.PureComponent));
exports.DatePicker = DatePicker;
var DatePickerISO = /** @class */ (function (_super) {
    __extends(DatePickerISO, _super);
    function DatePickerISO() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DatePickerISO.prototype.render = function () {
        var _this = this;
        return (React.createElement(DatePicker, { value: new Date(this.props.value), onChange: function (value) {
                if (value === null) {
                    _this.props.onChange('');
                }
                else {
                    _this.props.onChange(format_1.default(value, 'yyyy-MM-dd'));
                }
            }, disabled: this.props.disabled, shortcuts: this.props.shortcuts, dateFormat: this.props.dateFormat }));
    };
    return DatePickerISO;
}(React.PureComponent));
exports.DatePickerISO = DatePickerISO;


/***/ }),
/* 42 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = addLeadingZeros;
function addLeadingZeros(number, targetLength) {
  var sign = number < 0 ? '-' : '';
  var output = Math.abs(number).toString();

  while (output.length < targetLength) {
    output = '0' + output;
  }

  return sign + output;
}

/***/ }),
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getUTCISOWeekYear;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfUTCISOWeek_index_js__ = __webpack_require__(30);

 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCISOWeekYear(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var date = Object(__WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */])(dirtyDate);
  var year = date.getUTCFullYear();
  var fourthOfJanuaryOfNextYear = new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = Object(__WEBPACK_IMPORTED_MODULE_1__startOfUTCISOWeek_index_js__["a" /* default */])(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = Object(__WEBPACK_IMPORTED_MODULE_1__startOfUTCISOWeek_index_js__["a" /* default */])(fourthOfJanuaryOfThisYear);

  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getUTCWeekYear;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__startOfUTCWeek_index_js__ = __webpack_require__(31);


 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCWeekYear(dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var date = Object(__WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */])(dirtyDate, dirtyOptions);
  var year = date.getUTCFullYear();
  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(__WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__["a" /* default */])(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(__WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__["a" /* default */])(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }

  var firstWeekOfNextYear = new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = Object(__WEBPACK_IMPORTED_MODULE_2__startOfUTCWeek_index_js__["a" /* default */])(firstWeekOfNextYear, dirtyOptions);
  var firstWeekOfThisYear = new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = Object(__WEBPACK_IMPORTED_MODULE_2__startOfUTCWeek_index_js__["a" /* default */])(firstWeekOfThisYear, dirtyOptions);

  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

/***/ }),
/* 45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = listScrollParents;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getScrollParent_js__ = __webpack_require__(131);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getParentNode_js__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getNodeName_js__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__getWindow_js__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__isScrollParent_js__ = __webpack_require__(35);





/*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the 
reference element's position.
*/

function listScrollParents(element, list) {
  if (list === void 0) {
    list = [];
  }

  var scrollParent = Object(__WEBPACK_IMPORTED_MODULE_0__getScrollParent_js__["a" /* default */])(element);
  var isBody = Object(__WEBPACK_IMPORTED_MODULE_2__getNodeName_js__["a" /* default */])(scrollParent) === 'body';
  var win = Object(__WEBPACK_IMPORTED_MODULE_3__getWindow_js__["a" /* default */])(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], Object(__WEBPACK_IMPORTED_MODULE_4__isScrollParent_js__["a" /* default */])(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : // $FlowFixMe: isBody tells us target will be an HTMLElement here
  updatedList.concat(listScrollParents(Object(__WEBPACK_IMPORTED_MODULE_1__getParentNode_js__["a" /* default */])(target)));
}

/***/ }),
/* 46 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = contains;
function contains(parent, child) {
  // $FlowFixMe: hasOwnProperty doesn't seem to work in tests
  var isShadow = Boolean(child.getRootNode && child.getRootNode().host); // First, attempt with faster native method

  if (parent.contains(child)) {
    return true;
  } // then fallback to custom implementation with Shadow DOM support
  else if (isShadow) {
      var next = child;

      do {
        if (next && parent.isSameNode(next)) {
          return true;
        } // $FlowFixMe: need a better way to handle this...


        next = next.parentNode || next.host;
      } while (next);
    } // Give up, the result is false


  return false;
}

/***/ }),
/* 47 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = rectToClientRect;
function rectToClientRect(rect) {
  return Object.assign(Object.assign({}, rect), {}, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

/***/ }),
/* 48 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = computeOffsets;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getBasePlacement_js__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getVariation_js__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getMainAxisFromPlacement_js__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__enums_js__ = __webpack_require__(3);




function computeOffsets(_ref) {
  var reference = _ref.reference,
      element = _ref.element,
      placement = _ref.placement;
  var basePlacement = placement ? Object(__WEBPACK_IMPORTED_MODULE_0__getBasePlacement_js__["a" /* default */])(placement) : null;
  var variation = placement ? Object(__WEBPACK_IMPORTED_MODULE_1__getVariation_js__["a" /* default */])(placement) : null;
  var commonX = reference.x + reference.width / 2 - element.width / 2;
  var commonY = reference.y + reference.height / 2 - element.height / 2;
  var offsets;

  switch (basePlacement) {
    case __WEBPACK_IMPORTED_MODULE_3__enums_js__["m" /* top */]:
      offsets = {
        x: commonX,
        y: reference.y - element.height
      };
      break;

    case __WEBPACK_IMPORTED_MODULE_3__enums_js__["c" /* bottom */]:
      offsets = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;

    case __WEBPACK_IMPORTED_MODULE_3__enums_js__["k" /* right */]:
      offsets = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;

    case __WEBPACK_IMPORTED_MODULE_3__enums_js__["f" /* left */]:
      offsets = {
        x: reference.x - element.width,
        y: commonY
      };
      break;

    default:
      offsets = {
        x: reference.x,
        y: reference.y
      };
  }

  var mainAxis = basePlacement ? Object(__WEBPACK_IMPORTED_MODULE_2__getMainAxisFromPlacement_js__["a" /* default */])(basePlacement) : null;

  if (mainAxis != null) {
    var len = mainAxis === 'y' ? 'height' : 'width';

    switch (variation) {
      case __WEBPACK_IMPORTED_MODULE_3__enums_js__["l" /* start */]:
        offsets[mainAxis] = Math.floor(offsets[mainAxis]) - Math.floor(reference[len] / 2 - element[len] / 2);
        break;

      case __WEBPACK_IMPORTED_MODULE_3__enums_js__["e" /* end */]:
        offsets[mainAxis] = Math.floor(offsets[mainAxis]) + Math.ceil(reference[len] / 2 - element[len] / 2);
        break;

      default:
    }
  }

  return offsets;
}

/***/ }),
/* 49 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = mergePaddingObject;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getFreshSideObject_js__ = __webpack_require__(50);

function mergePaddingObject(paddingObject) {
  return Object.assign(Object.assign({}, Object(__WEBPACK_IMPORTED_MODULE_0__getFreshSideObject_js__["a" /* default */])()), paddingObject);
}

/***/ }),
/* 50 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getFreshSideObject;
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

/***/ }),
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = expandToHashMap;
function expandToHashMap(value, keys) {
  return keys.reduce(function (hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}

/***/ }),
/* 52 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = within;
function within(min, value, max) {
  return Math.max(min, Math.min(value, max));
}

/***/ }),
/* 53 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {var isProduction = process.env.NODE_ENV === 'production';
function warning(condition, message) {
  if (!isProduction) {
    if (condition) {
      return;
    }

    var text = "Warning: " + message;

    if (typeof console !== 'undefined') {
      console.warn(text);
    }

    try {
      throw Error(text);
    } catch (x) {}
  }
}

/* harmony default export */ __webpack_exports__["a"] = (warning);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(5)))

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TimePicker = void 0;
var React = __importStar(__webpack_require__(0));
var TimePicker = /** @class */ (function (_super) {
    __extends(TimePicker, _super);
    function TimePicker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TimePicker.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", { className: "sd-line-input sd-line-input--no-margin sd-line-input--no-label", style: { display: 'inline-block' } },
            React.createElement("input", { type: "time", className: "sd-line-input__input", value: this.props.value, required: this.props.required, disabled: this.props.disabled, onChange: function (event) {
                    _this.props.onChange(event.target.value);
                } })));
    };
    return TimePicker;
}(React.PureComponent));
exports.TimePicker = TimePicker;


/***/ }),
/* 55 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BrowserRouter", function() { return BrowserRouter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HashRouter", function() { return HashRouter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Link", function() { return Link; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavLink", function() { return NavLink; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router__ = __webpack_require__(158);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "MemoryRouter", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Prompt", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["b"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Redirect", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["c"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Route", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["d"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Router", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["e"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "StaticRouter", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["f"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Switch", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["g"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "generatePath", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["i"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "matchPath", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["j"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "useHistory", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["k"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "useLocation", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["l"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "useParams", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["m"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "useRouteMatch", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["n"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "withRouter", function() { return __WEBPACK_IMPORTED_MODULE_0_react_router__["o"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_esm_inheritsLoose__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_history__ = __webpack_require__(159);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_tiny_warning__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__babel_runtime_helpers_esm_extends__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__ = __webpack_require__(160);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_tiny_invariant__ = __webpack_require__(64);











/**
 * The public API for a <Router> that uses HTML5 history.
 */

var BrowserRouter =
/*#__PURE__*/
function (_React$Component) {
  Object(__WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(BrowserRouter, _React$Component);

  function BrowserRouter() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = Object(__WEBPACK_IMPORTED_MODULE_3_history__["a" /* createBrowserHistory */])(_this.props);
    return _this;
  }

  var _proto = BrowserRouter.prototype;

  _proto.render = function render() {
    return __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_0_react_router__["e" /* Router */], {
      history: this.history,
      children: this.props.children
    });
  };

  return BrowserRouter;
}(__WEBPACK_IMPORTED_MODULE_2_react___default.a.Component);

if (process.env.NODE_ENV !== "production") {
  BrowserRouter.propTypes = {
    basename: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.string,
    children: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.node,
    forceRefresh: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.bool,
    getUserConfirmation: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func,
    keyLength: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.number
  };

  BrowserRouter.prototype.componentDidMount = function () {
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_5_tiny_warning__["a" /* default */])(!this.props.history, "<BrowserRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { BrowserRouter as Router }`.") : void 0;
  };
}

/**
 * The public API for a <Router> that uses window.location.hash.
 */

var HashRouter =
/*#__PURE__*/
function (_React$Component) {
  Object(__WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(HashRouter, _React$Component);

  function HashRouter() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = Object(__WEBPACK_IMPORTED_MODULE_3_history__["b" /* createHashHistory */])(_this.props);
    return _this;
  }

  var _proto = HashRouter.prototype;

  _proto.render = function render() {
    return __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_0_react_router__["e" /* Router */], {
      history: this.history,
      children: this.props.children
    });
  };

  return HashRouter;
}(__WEBPACK_IMPORTED_MODULE_2_react___default.a.Component);

if (process.env.NODE_ENV !== "production") {
  HashRouter.propTypes = {
    basename: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.string,
    children: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.node,
    getUserConfirmation: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func,
    hashType: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.oneOf(["hashbang", "noslash", "slash"])
  };

  HashRouter.prototype.componentDidMount = function () {
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_5_tiny_warning__["a" /* default */])(!this.props.history, "<HashRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { HashRouter as Router }`.") : void 0;
  };
}

var resolveToLocation = function resolveToLocation(to, currentLocation) {
  return typeof to === "function" ? to(currentLocation) : to;
};
var normalizeToLocation = function normalizeToLocation(to, currentLocation) {
  return typeof to === "string" ? Object(__WEBPACK_IMPORTED_MODULE_3_history__["c" /* createLocation */])(to, null, null, currentLocation) : to;
};

var forwardRefShim = function forwardRefShim(C) {
  return C;
};

var forwardRef = __WEBPACK_IMPORTED_MODULE_2_react___default.a.forwardRef;

if (typeof forwardRef === "undefined") {
  forwardRef = forwardRefShim;
}

function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}

var LinkAnchor = forwardRef(function (_ref, forwardedRef) {
  var innerRef = _ref.innerRef,
      navigate = _ref.navigate,
      _onClick = _ref.onClick,
      rest = Object(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__["a" /* default */])(_ref, ["innerRef", "navigate", "onClick"]);

  var target = rest.target;

  var props = Object(__WEBPACK_IMPORTED_MODULE_6__babel_runtime_helpers_esm_extends__["a" /* default */])({}, rest, {
    onClick: function onClick(event) {
      try {
        if (_onClick) _onClick(event);
      } catch (ex) {
        event.preventDefault();
        throw ex;
      }

      if (!event.defaultPrevented && // onClick prevented default
      event.button === 0 && ( // ignore everything but left clicks
      !target || target === "_self") && // let browser handle "target=_blank" etc.
      !isModifiedEvent(event) // ignore clicks with modifier keys
      ) {
          event.preventDefault();
          navigate();
        }
    }
  }); // React 15 compat


  if (forwardRefShim !== forwardRef) {
    props.ref = forwardedRef || innerRef;
  } else {
    props.ref = innerRef;
  }
  /* eslint-disable-next-line jsx-a11y/anchor-has-content */


  return __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement("a", props);
});

if (process.env.NODE_ENV !== "production") {
  LinkAnchor.displayName = "LinkAnchor";
}
/**
 * The public API for rendering a history-aware <a>.
 */


var Link = forwardRef(function (_ref2, forwardedRef) {
  var _ref2$component = _ref2.component,
      component = _ref2$component === void 0 ? LinkAnchor : _ref2$component,
      replace = _ref2.replace,
      to = _ref2.to,
      innerRef = _ref2.innerRef,
      rest = Object(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__["a" /* default */])(_ref2, ["component", "replace", "to", "innerRef"]);

  return __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_0_react_router__["h" /* __RouterContext */].Consumer, null, function (context) {
    !context ? process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_8_tiny_invariant__["a" /* default */])(false, "You should not use <Link> outside a <Router>") : Object(__WEBPACK_IMPORTED_MODULE_8_tiny_invariant__["a" /* default */])(false) : void 0;
    var history = context.history;
    var location = normalizeToLocation(resolveToLocation(to, context.location), context.location);
    var href = location ? history.createHref(location) : "";

    var props = Object(__WEBPACK_IMPORTED_MODULE_6__babel_runtime_helpers_esm_extends__["a" /* default */])({}, rest, {
      href: href,
      navigate: function navigate() {
        var location = resolveToLocation(to, context.location);
        var method = replace ? history.replace : history.push;
        method(location);
      }
    }); // React 15 compat


    if (forwardRefShim !== forwardRef) {
      props.ref = forwardedRef || innerRef;
    } else {
      props.innerRef = innerRef;
    }

    return __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement(component, props);
  });
});

if (process.env.NODE_ENV !== "production") {
  var toType = __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.object, __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func]);
  var refType = __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.shape({
    current: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.any
  })]);
  Link.displayName = "Link";
  Link.propTypes = {
    innerRef: refType,
    onClick: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func,
    replace: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.bool,
    target: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.string,
    to: toType.isRequired
  };
}

var forwardRefShim$1 = function forwardRefShim(C) {
  return C;
};

var forwardRef$1 = __WEBPACK_IMPORTED_MODULE_2_react___default.a.forwardRef;

if (typeof forwardRef$1 === "undefined") {
  forwardRef$1 = forwardRefShim$1;
}

function joinClassnames() {
  for (var _len = arguments.length, classnames = new Array(_len), _key = 0; _key < _len; _key++) {
    classnames[_key] = arguments[_key];
  }

  return classnames.filter(function (i) {
    return i;
  }).join(" ");
}
/**
 * A <Link> wrapper that knows if it's "active" or not.
 */


var NavLink = forwardRef$1(function (_ref, forwardedRef) {
  var _ref$ariaCurrent = _ref["aria-current"],
      ariaCurrent = _ref$ariaCurrent === void 0 ? "page" : _ref$ariaCurrent,
      _ref$activeClassName = _ref.activeClassName,
      activeClassName = _ref$activeClassName === void 0 ? "active" : _ref$activeClassName,
      activeStyle = _ref.activeStyle,
      classNameProp = _ref.className,
      exact = _ref.exact,
      isActiveProp = _ref.isActive,
      locationProp = _ref.location,
      sensitive = _ref.sensitive,
      strict = _ref.strict,
      styleProp = _ref.style,
      to = _ref.to,
      innerRef = _ref.innerRef,
      rest = Object(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__["a" /* default */])(_ref, ["aria-current", "activeClassName", "activeStyle", "className", "exact", "isActive", "location", "sensitive", "strict", "style", "to", "innerRef"]);

  return __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_0_react_router__["h" /* __RouterContext */].Consumer, null, function (context) {
    !context ? process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_8_tiny_invariant__["a" /* default */])(false, "You should not use <NavLink> outside a <Router>") : Object(__WEBPACK_IMPORTED_MODULE_8_tiny_invariant__["a" /* default */])(false) : void 0;
    var currentLocation = locationProp || context.location;
    var toLocation = normalizeToLocation(resolveToLocation(to, currentLocation), currentLocation);
    var path = toLocation.pathname; // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202

    var escapedPath = path && path.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
    var match = escapedPath ? Object(__WEBPACK_IMPORTED_MODULE_0_react_router__["j" /* matchPath */])(currentLocation.pathname, {
      path: escapedPath,
      exact: exact,
      sensitive: sensitive,
      strict: strict
    }) : null;
    var isActive = !!(isActiveProp ? isActiveProp(match, currentLocation) : match);
    var className = isActive ? joinClassnames(classNameProp, activeClassName) : classNameProp;
    var style = isActive ? Object(__WEBPACK_IMPORTED_MODULE_6__babel_runtime_helpers_esm_extends__["a" /* default */])({}, styleProp, {}, activeStyle) : styleProp;

    var props = Object(__WEBPACK_IMPORTED_MODULE_6__babel_runtime_helpers_esm_extends__["a" /* default */])({
      "aria-current": isActive && ariaCurrent || null,
      className: className,
      style: style,
      to: toLocation
    }, rest); // React 15 compat


    if (forwardRefShim$1 !== forwardRef$1) {
      props.ref = forwardedRef || innerRef;
    } else {
      props.innerRef = innerRef;
    }

    return __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement(Link, props);
  });
});

if (process.env.NODE_ENV !== "production") {
  NavLink.displayName = "NavLink";
  var ariaCurrentType = __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.oneOf(["page", "step", "location", "date", "time", "true"]);
  NavLink.propTypes = Object(__WEBPACK_IMPORTED_MODULE_6__babel_runtime_helpers_esm_extends__["a" /* default */])({}, Link.propTypes, {
    "aria-current": ariaCurrentType,
    activeClassName: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.string,
    activeStyle: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.object,
    className: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.string,
    exact: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.bool,
    isActive: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func,
    location: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.object,
    sensitive: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.bool,
    strict: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.bool,
    style: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.object
  });
}


//# sourceMappingURL=react-router-dom.js.map

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(5)))

/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _inheritsLoose;
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?
Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;
function z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;
exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};
exports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};
exports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
exports.isValidElementType = isValidElementType;
exports.typeOf = typeOf;
  })();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactIs = __webpack_require__(27);
var assign = __webpack_require__(60);

var ReactPropTypesSecret = __webpack_require__(28);
var checkPropTypes = __webpack_require__(61);

var has = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning = function() {};

if (process.env.NODE_ENV !== 'production') {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (process.env.NODE_ENV !== 'production') {
        if (arguments.length > 1) {
          printWarning(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

if (process.env.NODE_ENV !== 'production') {
  var ReactPropTypesSecret = __webpack_require__(28);
  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (process.env.NODE_ENV !== 'production') {
    loggedTypeFailures = {};
  }
}

module.exports = checkPropTypes;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = __webpack_require__(28);

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 63 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _extends;
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/***/ }),
/* 64 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {var isProduction = process.env.NODE_ENV === 'production';
var prefix = 'Invariant failed';
function invariant(condition, message) {
    if (condition) {
        return;
    }
    if (isProduction) {
        throw new Error(prefix);
    }
    throw new Error(prefix + ": " + (message || ''));
}

/* harmony default export */ __webpack_exports__["a"] = (invariant);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(5)))

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HelloWorld = void 0;
var React = __importStar(__webpack_require__(0));
var HelloWorld = /** @class */ (function (_super) {
    __extends(HelloWorld, _super);
    function HelloWorld() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HelloWorld.prototype.render = function () {
        return (React.createElement("div", null,
            React.createElement("span", null, this.props.message)));
    };
    return HelloWorld;
}(React.Component));
exports.HelloWorld = HelloWorld;


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Button = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var Icon_1 = __webpack_require__(16);
var Button = /** @class */ (function (_super) {
    __extends(Button, _super);
    function Button() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Button.prototype.render = function () {
        var _a;
        var classes = classnames_1.default('btn', (_a = {
                'btn--expanded': this.props.expand
            },
            _a["btn--" + this.props.size] = this.props.size !== 'normal' && this.props.size !== undefined,
            _a["btn--" + this.props.type] = this.props.type !== 'default' && this.props.type !== undefined,
            _a["btn--" + this.props.style] = this.props.style !== 'filled' && this.props.style !== undefined,
            _a['btn--disabled'] = this.props.disabled,
            _a['btn--icon-only'] = this.props.iconOnly,
            _a['btn--ui-dark'] = this.props.theme === 'dark',
            _a['btn--icon-only-circle'] = this.props.shape === 'round' && this.props.iconOnly,
            _a));
        return (React.createElement("button", { id: this.props.id, className: classes, onClick: this.props.disabled ? function () { return false; } : this.props.onClick, "aria-label": this.props.iconOnly ? this.props.text : '', "data-test-id": this.props['data-test-id'] },
            this.props.icon ? React.createElement(Icon_1.Icon, { name: this.props.icon }) : null,
            this.props.iconOnly ? null : this.props.text));
    };
    return Button;
}(React.PureComponent));
exports.Button = Button;


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Input = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var react_id_generator_1 = __importDefault(__webpack_require__(10));
var Input = /** @class */ (function (_super) {
    __extends(Input, _super);
    function Input(props) {
        var _a, _b;
        var _this = _super.call(this, props) || this;
        _this.htmlId = react_id_generator_1.default();
        _this.state = {
            value: (_a = _this.props.value) !== null && _a !== void 0 ? _a : '',
            invalid: (_b = _this.props.invalid) !== null && _b !== void 0 ? _b : false,
        };
        _this.handleChange = _this.handleChange.bind(_this);
        return _this;
    }
    Input.prototype.handleChange = function (event) {
        this.setState({ value: event.target.value });
        this.props.onChange(event.target.value);
        if (this.props.maxLength && !this.props.invalid) {
            this.setState({ invalid: event.target.value.length > this.props.maxLength });
        }
    };
    Input.prototype.render = function () {
        var classes = classnames_1.default('sd-input', {
            'sd-input--inline-label': this.props.inlineLabel,
            'sd-input--required': this.props.required,
            'sd-input--disabled': this.props.disabled,
            'sd-input--invalid': this.props.invalid || this.state.invalid,
        });
        return (React.createElement("div", { className: classes },
            this.props.label ? React.createElement("label", { className: 'sd-input__label', htmlFor: this.htmlId }, this.props.label) : null,
            React.createElement("input", { className: 'sd-input__input', type: 'text', id: this.htmlId, value: this.state.value, "aria-label": this.props.label, "aria-describedby": this.htmlId, onChange: this.handleChange, disabled: this.props.disabled }),
            this.props.maxLength ?
                React.createElement("div", { className: 'sd-input__char-count' },
                    this.state.value.length,
                    " / ",
                    this.props.maxLength)
                : null,
            React.createElement("div", { className: 'sd-input__message-box' },
                this.props.info && !this.props.invalid && !this.state.invalid ?
                    React.createElement("div", { className: 'sd-input__hint' }, this.props.info) : null,
                this.props.invalid || this.state.invalid ?
                    React.createElement("div", { className: 'sd-input__message' }, this.props.error)
                    : null)));
    };
    return Input;
}(React.Component));
exports.Input = Input;


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Option = exports.Select = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var react_id_generator_1 = __importDefault(__webpack_require__(10));
var Select = /** @class */ (function (_super) {
    __extends(Select, _super);
    function Select(props) {
        var _a, _b;
        var _this = _super.call(this, props) || this;
        _this.htmlId = react_id_generator_1.default();
        _this.state = {
            value: (_a = _this.props.value) !== null && _a !== void 0 ? _a : '',
            invalid: (_b = _this.props.invalid) !== null && _b !== void 0 ? _b : false,
        };
        _this.handleChange = _this.handleChange.bind(_this);
        return _this;
    }
    Select.prototype.handleChange = function (event) {
        this.setState({ value: event.target.value });
        this.props.onChange(event.target.value);
    };
    Select.prototype.render = function () {
        var classes = classnames_1.default('sd-input sd-input--is-select', {
            'sd-input--inline-label': this.props.inlineLabel,
            'sd-input--required': this.props.required,
            'sd-input--disabled': this.props.disabled,
            'sd-input--invalid': this.props.invalid || this.state.invalid,
        });
        return (React.createElement("div", { className: classes },
            this.props.label ?
                React.createElement("label", { className: 'sd-input__label', htmlFor: this.htmlId }, this.props.label) : null,
            React.createElement("select", { className: 'sd-input__select', id: this.htmlId, value: this.state.value, "aria-label": this.props.label, "aria-describedby": this.htmlId, onChange: this.handleChange, disabled: this.props.disabled }, this.props.children),
            React.createElement("div", { className: 'sd-input__message-box' },
                this.props.info && !this.props.invalid && !this.state.invalid ?
                    React.createElement("div", { className: 'sd-input__hint' }, this.props.info) : null,
                this.props.invalid || this.state.invalid ?
                    React.createElement("div", { className: 'sd-input__message' }, this.props.error)
                    : null)));
    };
    return Select;
}(React.Component));
exports.Select = Select;
var Option = /** @class */ (function (_super) {
    __extends(Option, _super);
    function Option() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Option.prototype.render = function () {
        return (React.createElement("option", { value: this.props.value }, this.props.children));
    };
    return Option;
}(React.PureComponent));
exports.Option = Option;


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Label = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var Label = /** @class */ (function (_super) {
    __extends(Label, _super);
    function Label() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Label.prototype.render = function () {
        var _a;
        var classes = classnames_1.default('label', (_a = {},
            _a["label--" + this.props.size] = this.props.size !== 'normal' && this.props.size !== undefined,
            _a['label--no-transform'] = this.props.noTransform,
            _a["label--" + this.props.type] = this.props.type !== undefined && !this.props.color,
            _a["" + this.props.color] = this.props.color !== undefined && !this.props.type && !this.props.style,
            _a['label--hollow'] = this.props.style === 'hollow',
            _a["hollow-" + this.props.color] = this.props.color && this.props.style === 'hollow',
            _a));
        if (this.props.link || this.props.onClick) {
            return (React.createElement("a", { href: this.props.link, className: classes, onClick: this.props.onClick }, this.props.text));
        }
        else {
            return (React.createElement("span", { className: classes }, this.props.text));
        }
    };
    return Label;
}(React.PureComponent));
exports.Label = Label;


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Badge = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var Badge = /** @class */ (function (_super) {
    __extends(Badge, _super);
    function Badge() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Badge.prototype.render = function () {
        var _a;
        var classes = classnames_1.default('badge', (_a = {},
            _a["badge--" + this.props.type] = this.props.type && !this.props.color,
            _a["" + this.props.color] = this.props.color && !this.props.type,
            _a['badge--square'] = this.props.shape === 'square',
            _a));
        if (this.props.children) {
            return (React.createElement("div", { className: 'element-with-badge', "data-test-id": this.props['data-test-id'] },
                this.props.children,
                React.createElement("span", { className: classes, "data-test-id": "badge-content" }, this.props.text)));
        }
        else {
            return React.createElement("span", { className: classes, "data-test-id": this.props['data-test-id'] }, this.props.text);
        }
    };
    return Badge;
}(React.PureComponent));
exports.Badge = Badge;


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Alert = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var Alert = /** @class */ (function (_super) {
    __extends(Alert, _super);
    function Alert(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            open: true,
        };
        _this.onToggle = _this.onToggle.bind(_this);
        return _this;
    }
    Alert.prototype.onToggle = function () {
        this.setState(function (state) { return ({
            open: !state.open,
        }); });
    };
    Alert.prototype.render = function () {
        var _a, _b;
        var classesAlert = classnames_1.default('sd-alert', (_a = {
                'sd-alert--hollow': this.props.style === 'hollow',
                'sd-alert--small': this.props.size === 'small'
            },
            _a["sd-alert--" + this.props.type] = this.props.type,
            _a['sd-alert--hidden'] = !this.state.open,
            _a));
        var classesInfoBtn = classnames_1.default('sd-alert__info-btn sd-shadow--z2', (_b = {},
            _b["sd-alert__info-btn--" + this.props.type] = this.props.type,
            _b['sd-alert__info-btn--hidden'] = this.state.open,
            _b));
        return (React.createElement("div", { className: 'sd-alert__container' },
            React.createElement("div", { className: classesAlert },
                this.props.restoreIcon ?
                    React.createElement("button", { className: 'sd-alert__close', onClick: this.onToggle, "aria-label": "Close" }) : null,
                this.props.children),
            this.props.restoreIcon ?
                React.createElement("span", { className: classesInfoBtn, onClick: this.onToggle },
                    React.createElement("i", { className: this.props.restoreIcon === 'help' ? 'icon-help-large' : 'icon-info-large' })) : null));
    };
    return Alert;
}(React.PureComponent));
exports.Alert = Alert;


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IconButton = void 0;
var React = __importStar(__webpack_require__(0));
var Icon_1 = __webpack_require__(16);
var IconButton = /** @class */ (function (_super) {
    __extends(IconButton, _super);
    function IconButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IconButton.prototype.render = function () {
        return (React.createElement("a", { id: this.props.id, onClick: this.props.onClick, className: "icn-btn", "aria-label": this.props.ariaValue },
            React.createElement(Icon_1.Icon, { name: this.props.icon, ariaHidden: true })));
    };
    return IconButton;
}(React.PureComponent));
exports.IconButton = IconButton;


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IconLabel = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var Icon_1 = __webpack_require__(16);
var IconLabel = /** @class */ (function (_super) {
    __extends(IconLabel, _super);
    function IconLabel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IconLabel.prototype.render = function () {
        var _a;
        var classes = classnames_1.default('label-icon', (_a = {},
            _a["label-icon--" + this.props.type] = this.props.type !== undefined,
            _a));
        return (React.createElement("span", { className: classes },
            React.createElement(Icon_1.Icon, { name: this.props.icon }),
            " ",
            this.props.text));
    };
    return IconLabel;
}(React.PureComponent));
exports.IconLabel = IconLabel;


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tooltip = void 0;
var React = __importStar(__webpack_require__(0));
var react_id_generator_1 = __importDefault(__webpack_require__(10));
var Tooltip = /** @class */ (function (_super) {
    __extends(Tooltip, _super);
    function Tooltip() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.htmlId = react_id_generator_1.default();
        return _this;
    }
    Tooltip.prototype.componentDidMount = function () {
        var tooltip = document.getElementById('t' + this.htmlId);
        tooltip === null || tooltip === void 0 ? void 0 : tooltip.setAttribute('data-sd-tooltip', this.props.text);
        if (this.props.flow) {
            tooltip === null || tooltip === void 0 ? void 0 : tooltip.setAttribute('data-flow', this.props.flow);
        }
    };
    Tooltip.prototype.render = function () {
        if (React.isValidElement(this.props.children)) {
            return (React.cloneElement(this.props.children, { id: 't' + this.htmlId }));
        }
        else {
            return (React.createElement(React.Fragment, null));
        }
    };
    return Tooltip;
}(React.PureComponent));
exports.Tooltip = Tooltip;


/***/ }),
/* 75 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["default"] = addDays;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ = __webpack_require__(6);


/**
 * @name addDays
 * @category Day Helpers
 * @summary Add the specified number of days to the given date.
 *
 * @description
 * Add the specified number of days to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of days to be added
 * @returns {Date} the new date with the days added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 10 days to 1 September 2014:
 * var result = addDays(new Date(2014, 8, 1), 10)
 * //=> Thu Sep 11 2014 00:00:00
 */

function addDays(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var date = Object(__WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */])(dirtyDate);
  var amount = Object(__WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__["a" /* default */])(dirtyAmount);
  date.setDate(date.getDate() + amount);
  return date;
}

/***/ }),
/* 76 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["default"] = format;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isValid_index_js__ = __webpack_require__(77);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__locale_en_US_index_js__ = __webpack_require__(78);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__subMilliseconds_index_js__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__toDate_index_js__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_format_formatters_index_js__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__lib_format_longFormatters_index_js__ = __webpack_require__(97);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__lib_getTimezoneOffsetInMilliseconds_index_js__ = __webpack_require__(98);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__lib_protectedTokens_index_js__ = __webpack_require__(99);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__lib_toInteger_index_js__ = __webpack_require__(13);








 // This RegExp consists of three parts separated by `|`:
// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
//   (one of the certain letters followed by `o`)
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps

var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also
// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`

var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
/**
 * @name format
 * @category Common Helpers
 * @summary Format the date.
 *
 * @description
 * Return the formatted date string in the given format. The result may vary by locale.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://git.io/fxCyr
 *
 * The characters wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 * (see the last example)
 *
 * Format of the string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 7 below the table).
 *
 * Accepted patterns:
 * | Unit                            | Pattern | Result examples                   | Notes |
 * |---------------------------------|---------|-----------------------------------|-------|
 * | Era                             | G..GGG  | AD, BC                            |       |
 * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 | GGGGG   | A, B                              |       |
 * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |
 * |                                 | yy      | 44, 01, 00, 17                    | 5     |
 * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |
 * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |
 * |                                 | yyyyy   | ...                               | 3,5   |
 * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |
 * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |
 * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |
 * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |
 * |                                 | YYYYY   | ...                               | 3,5   |
 * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |
 * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |
 * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |
 * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |
 * |                                 | RRRRR   | ...                               | 3,5,7 |
 * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |
 * |                                 | uu      | -43, 01, 1900, 2017               | 5     |
 * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |
 * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |
 * |                                 | uuuuu   | ...                               | 3,5   |
 * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |
 * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | QQ      | 01, 02, 03, 04                    |       |
 * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |
 * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | qq      | 01, 02, 03, 04                    |       |
 * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |
 * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |
 * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | MM      | 01, 02, ..., 12                   |       |
 * |                                 | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 | MMMM    | January, February, ..., December  | 2     |
 * |                                 | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |
 * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | LL      | 01, 02, ..., 12                   |       |
 * |                                 | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 | LLLL    | January, February, ..., December  | 2     |
 * |                                 | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | w       | 1, 2, ..., 53                     |       |
 * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |
 * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | II      | 01, 02, ..., 53                   | 7     |
 * | Day of month                    | d       | 1, 2, ..., 31                     |       |
 * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |
 * |                                 | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |
 * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |
 * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |
 * |                                 | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 | DDDD    | ...                               | 3     |
 * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |
 * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |
 * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |
 * |                                 | ii      | 01, 02, ..., 07                   | 7     |
 * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |
 * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |
 * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |
 * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |
 * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | ee      | 02, 03, ..., 01                   |       |
 * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |
 * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | cc      | 02, 03, ..., 01                   |       |
 * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |
 * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | AM, PM                          | a..aaa  | AM, PM                            |       |
 * |                                 | aaaa    | a.m., p.m.                        | 2     |
 * |                                 | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |
 * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |
 * |                                 | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |
 * |                                 | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |
 * |                                 | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |
 * |                                 | KK      | 1, 2, ..., 11, 0                  |       |
 * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |
 * |                                 | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          | m       | 0, 1, ..., 59                     |       |
 * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | mm      | 00, 01, ..., 59                   |       |
 * | Second                          | s       | 0, 1, ..., 59                     |       |
 * |                                 | so      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | ss      | 00, 01, ..., 59                   |       |
 * | Fraction of second              | S       | 0, 1, ..., 9                      |       |
 * |                                 | SS      | 00, 01, ..., 99                   |       |
 * |                                 | SSS     | 000, 0001, ..., 999               |       |
 * |                                 | SSSS    | ...                               | 3     |
 * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |
 * |                                 | XX      | -0800, +0530, Z                   |       |
 * |                                 | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |
 * |                                 | xx      | -0800, +0530, +0000               |       |
 * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |
 * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |
 * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |
 * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |
 * | Seconds timestamp               | t       | 512969520                         | 7     |
 * |                                 | tt      | ...                               | 3,7   |
 * | Milliseconds timestamp          | T       | 512969520900                      | 7     |
 * |                                 | TT      | ...                               | 3,7   |
 * | Long localized date             | P       | 05/29/1453                        | 7     |
 * |                                 | PP      | May 29, 1453                      | 7     |
 * |                                 | PPP     | May 29th, 1453                    | 7     |
 * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |
 * | Long localized time             | p       | 12:00 AM                          | 7     |
 * |                                 | pp      | 12:00:00 AM                       | 7     |
 * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |
 * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |
 * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |
 * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |
 * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |
 * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)
 *    the output will be the same as default pattern for this unit, usually
 *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units
 *    are marked with "2" in the last column of the table.
 *
 *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`
 *
 * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).
 *    The output will be padded with zeros to match the length of the pattern.
 *
 *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`
 *
 * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 5. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` always returns the last two digits of a year,
 *    while `uu` pads single digit years to 2 characters and returns other years unchanged:
 *
 *    | Year | `yy` | `uu` |
 *    |------|------|------|
 *    | 1    |   01 |   01 |
 *    | 14   |   14 |   14 |
 *    | 376  |   76 |  376 |
 *    | 1453 |   53 | 1453 |
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}
 *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).
 *
 * 6. Specific non-location timezones are currently unavailable in `date-fns`,
 *    so right now these tokens fall back to GMT timezones.
 *
 * 7. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `t`: seconds timestamp
 *    - `T`: milliseconds timestamp
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
 *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr
 *
 * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
 *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The second argument is now required for the sake of explicitness.
 *
 *   ```javascript
 *   // Before v2.0.0
 *   format(new Date(2016, 0, 1))
 *
 *   // v2.0.0 onward
 *   format(new Date(2016, 0, 1), "yyyy-MM-dd'T'HH:mm:ss.SSSxxx")
 *   ```
 *
 * - New format string API for `format` function
 *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).
 *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.
 *
 * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.
 *
 * @param {Date|Number} date - the original date
 * @param {String} format - the string of tokens
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is
 * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
 *   see: https://git.io/fxCyr
 * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
 *   see: https://git.io/fxCyr
 * @returns {String} the formatted date string
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `options.locale` must contain `localize` property
 * @throws {RangeError} `options.locale` must contain `formatLong` property
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr
 * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr
 * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr
 * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr
 * @throws {RangeError} format string contains an unescaped latin alphabet character
 *
 * @example
 * // Represent 11 February 2014 in middle-endian format:
 * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')
 * //=> '02/11/2014'
 *
 * @example
 * // Represent 2 July 2014 in Esperanto:
 * import { eoLocale } from 'date-fns/locale/eo'
 * var result = format(new Date(2014, 6, 2), "do 'de' MMMM yyyy", {
 *   locale: eoLocale
 * })
 * //=> '2-a de julio 2014'
 *
 * @example
 * // Escape string by single quote characters:
 * var result = format(new Date(2014, 6, 2, 15), "h 'o''clock'")
 * //=> "3 o'clock"
 */

function format(dirtyDate, dirtyFormatStr, dirtyOptions) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var formatStr = String(dirtyFormatStr);
  var options = dirtyOptions || {};
  var locale = options.locale || __WEBPACK_IMPORTED_MODULE_1__locale_en_US_index_js__["a" /* default */];
  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(__WEBPACK_IMPORTED_MODULE_8__lib_toInteger_index_js__["a" /* default */])(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(__WEBPACK_IMPORTED_MODULE_8__lib_toInteger_index_js__["a" /* default */])(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }

  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(__WEBPACK_IMPORTED_MODULE_8__lib_toInteger_index_js__["a" /* default */])(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(__WEBPACK_IMPORTED_MODULE_8__lib_toInteger_index_js__["a" /* default */])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }

  if (!locale.localize) {
    throw new RangeError('locale must contain localize property');
  }

  if (!locale.formatLong) {
    throw new RangeError('locale must contain formatLong property');
  }

  var originalDate = Object(__WEBPACK_IMPORTED_MODULE_3__toDate_index_js__["a" /* default */])(dirtyDate);

  if (!Object(__WEBPACK_IMPORTED_MODULE_0__isValid_index_js__["a" /* default */])(originalDate)) {
    throw new RangeError('Invalid time value');
  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
  // This ensures that when UTC functions will be implemented, locales will be compatible with them.
  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376


  var timezoneOffset = Object(__WEBPACK_IMPORTED_MODULE_6__lib_getTimezoneOffsetInMilliseconds_index_js__["a" /* default */])(originalDate);
  var utcDate = Object(__WEBPACK_IMPORTED_MODULE_2__subMilliseconds_index_js__["a" /* default */])(originalDate, timezoneOffset);
  var formatterOptions = {
    firstWeekContainsDate: firstWeekContainsDate,
    weekStartsOn: weekStartsOn,
    locale: locale,
    _originalDate: originalDate
  };
  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {
    var firstCharacter = substring[0];

    if (firstCharacter === 'p' || firstCharacter === 'P') {
      var longFormatter = __WEBPACK_IMPORTED_MODULE_5__lib_format_longFormatters_index_js__["a" /* default */][firstCharacter];
      return longFormatter(substring, locale.formatLong, formatterOptions);
    }

    return substring;
  }).join('').match(formattingTokensRegExp).map(function (substring) {
    // Replace two single quote characters with one single quote character
    if (substring === "''") {
      return "'";
    }

    var firstCharacter = substring[0];

    if (firstCharacter === "'") {
      return cleanEscapedString(substring);
    }

    var formatter = __WEBPACK_IMPORTED_MODULE_4__lib_format_formatters_index_js__["a" /* default */][firstCharacter];

    if (formatter) {
      if (!options.useAdditionalWeekYearTokens && Object(__WEBPACK_IMPORTED_MODULE_7__lib_protectedTokens_index_js__["b" /* isProtectedWeekYearToken */])(substring)) {
        Object(__WEBPACK_IMPORTED_MODULE_7__lib_protectedTokens_index_js__["c" /* throwProtectedError */])(substring);
      }

      if (!options.useAdditionalDayOfYearTokens && Object(__WEBPACK_IMPORTED_MODULE_7__lib_protectedTokens_index_js__["a" /* isProtectedDayOfYearToken */])(substring)) {
        Object(__WEBPACK_IMPORTED_MODULE_7__lib_protectedTokens_index_js__["c" /* throwProtectedError */])(substring);
      }

      return formatter(utcDate, substring, locale.localize, formatterOptions);
    }

    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
    }

    return substring;
  }).join('');
  return result;
}

function cleanEscapedString(input) {
  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
}

/***/ }),
/* 77 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isValid;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ = __webpack_require__(6);

/**
 * @name isValid
 * @category Common Helpers
 * @summary Is the given date valid?
 *
 * @description
 * Returns false if argument is Invalid Date and true otherwise.
 * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * Invalid Date is a Date, whose time value is NaN.
 *
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - Now `isValid` doesn't throw an exception
 *   if the first argument is not an instance of Date.
 *   Instead, argument is converted beforehand using `toDate`.
 *
 *   Examples:
 *
 *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |
 *   |---------------------------|---------------|---------------|
 *   | `new Date()`              | `true`        | `true`        |
 *   | `new Date('2016-01-01')`  | `true`        | `true`        |
 *   | `new Date('')`            | `false`       | `false`       |
 *   | `new Date(1488370835081)` | `true`        | `true`        |
 *   | `new Date(NaN)`           | `false`       | `false`       |
 *   | `'2016-01-01'`            | `TypeError`   | `false`       |
 *   | `''`                      | `TypeError`   | `false`       |
 *   | `1488370835081`           | `TypeError`   | `true`        |
 *   | `NaN`                     | `TypeError`   | `false`       |
 *
 *   We introduce this change to make *date-fns* consistent with ECMAScript behavior
 *   that try to coerce arguments to the expected type
 *   (which is also the case with other *date-fns* functions).
 *
 * @param {*} date - the date to check
 * @returns {Boolean} the date is valid
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // For the valid date:
 * var result = isValid(new Date(2014, 1, 31))
 * //=> true
 *
 * @example
 * // For the value, convertable into a date:
 * var result = isValid(1393804800000)
 * //=> true
 *
 * @example
 * // For the invalid date:
 * var result = isValid(new Date(''))
 * //=> false
 */

function isValid(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var date = Object(__WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */])(dirtyDate);
  return !isNaN(date);
}

/***/ }),
/* 78 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_formatDistance_index_js__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_formatLong_index_js__ = __webpack_require__(80);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_formatRelative_index_js__ = __webpack_require__(82);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_localize_index_js__ = __webpack_require__(83);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_match_index_js__ = __webpack_require__(85);





/**
 * @type {Locale}
 * @category Locales
 * @summary English locale (United States).
 * @language English
 * @iso-639-2 eng
 * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
 * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
 */

var locale = {
  code: 'en-US',
  formatDistance: __WEBPACK_IMPORTED_MODULE_0__lib_formatDistance_index_js__["a" /* default */],
  formatLong: __WEBPACK_IMPORTED_MODULE_1__lib_formatLong_index_js__["a" /* default */],
  formatRelative: __WEBPACK_IMPORTED_MODULE_2__lib_formatRelative_index_js__["a" /* default */],
  localize: __WEBPACK_IMPORTED_MODULE_3__lib_localize_index_js__["a" /* default */],
  match: __WEBPACK_IMPORTED_MODULE_4__lib_match_index_js__["a" /* default */],
  options: {
    weekStartsOn: 0
    /* Sunday */
    ,
    firstWeekContainsDate: 1
  }
};
/* harmony default export */ __webpack_exports__["a"] = (locale);

/***/ }),
/* 79 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = formatDistance;
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: 'less than a second',
    other: 'less than {{count}} seconds'
  },
  xSeconds: {
    one: '1 second',
    other: '{{count}} seconds'
  },
  halfAMinute: 'half a minute',
  lessThanXMinutes: {
    one: 'less than a minute',
    other: 'less than {{count}} minutes'
  },
  xMinutes: {
    one: '1 minute',
    other: '{{count}} minutes'
  },
  aboutXHours: {
    one: 'about 1 hour',
    other: 'about {{count}} hours'
  },
  xHours: {
    one: '1 hour',
    other: '{{count}} hours'
  },
  xDays: {
    one: '1 day',
    other: '{{count}} days'
  },
  aboutXMonths: {
    one: 'about 1 month',
    other: 'about {{count}} months'
  },
  xMonths: {
    one: '1 month',
    other: '{{count}} months'
  },
  aboutXYears: {
    one: 'about 1 year',
    other: 'about {{count}} years'
  },
  xYears: {
    one: '1 year',
    other: '{{count}} years'
  },
  overXYears: {
    one: 'over 1 year',
    other: 'over {{count}} years'
  },
  almostXYears: {
    one: 'almost 1 year',
    other: 'almost {{count}} years'
  }
};
function formatDistance(token, count, options) {
  options = options || {};
  var result;

  if (typeof formatDistanceLocale[token] === 'string') {
    result = formatDistanceLocale[token];
  } else if (count === 1) {
    result = formatDistanceLocale[token].one;
  } else {
    result = formatDistanceLocale[token].other.replace('{{count}}', count);
  }

  if (options.addSuffix) {
    if (options.comparison > 0) {
      return 'in ' + result;
    } else {
      return result + ' ago';
    }
  }

  return result;
}

/***/ }),
/* 80 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_buildFormatLongFn_index_js__ = __webpack_require__(81);

var dateFormats = {
  full: 'EEEE, MMMM do, y',
  long: 'MMMM do, y',
  medium: 'MMM d, y',
  short: 'MM/dd/yyyy'
};
var timeFormats = {
  full: 'h:mm:ss a zzzz',
  long: 'h:mm:ss a z',
  medium: 'h:mm:ss a',
  short: 'h:mm a'
};
var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: '{{date}}, {{time}}',
  short: '{{date}}, {{time}}'
};
var formatLong = {
  date: Object(__WEBPACK_IMPORTED_MODULE_0__lib_buildFormatLongFn_index_js__["a" /* default */])({
    formats: dateFormats,
    defaultWidth: 'full'
  }),
  time: Object(__WEBPACK_IMPORTED_MODULE_0__lib_buildFormatLongFn_index_js__["a" /* default */])({
    formats: timeFormats,
    defaultWidth: 'full'
  }),
  dateTime: Object(__WEBPACK_IMPORTED_MODULE_0__lib_buildFormatLongFn_index_js__["a" /* default */])({
    formats: dateTimeFormats,
    defaultWidth: 'full'
  })
};
/* harmony default export */ __webpack_exports__["a"] = (formatLong);

/***/ }),
/* 81 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = buildFormatLongFn;
function buildFormatLongFn(args) {
  return function (dirtyOptions) {
    var options = dirtyOptions || {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}

/***/ }),
/* 82 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = formatRelative;
var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: 'P'
};
function formatRelative(token, _date, _baseDate, _options) {
  return formatRelativeLocale[token];
}

/***/ }),
/* 83 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_buildLocalizeFn_index_js__ = __webpack_require__(84);

var eraValues = {
  narrow: ['B', 'A'],
  abbreviated: ['BC', 'AD'],
  wide: ['Before Christ', 'Anno Domini']
};
var quarterValues = {
  narrow: ['1', '2', '3', '4'],
  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],
  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.
  // If you are making a new locale based on this one, check if the same is true for the language you're working on.
  // Generally, formatted dates should look like they are in the middle of a sentence,
  // e.g. in Spanish language the weekdays and months should be in the lowercase.

};
var monthValues = {
  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
};
var dayValues = {
  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
};
var dayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  }
};

function ordinalNumber(dirtyNumber, _dirtyOptions) {
  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
  // if they are different for different grammatical genders,
  // use `options.unit`:
  //
  //   var options = dirtyOptions || {}
  //   var unit = String(options.unit)
  //
  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
  // 'day', 'hour', 'minute', 'second'

  var rem100 = number % 100;

  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + 'st';

      case 2:
        return number + 'nd';

      case 3:
        return number + 'rd';
    }
  }

  return number + 'th';
}

var localize = {
  ordinalNumber: ordinalNumber,
  era: Object(__WEBPACK_IMPORTED_MODULE_0__lib_buildLocalizeFn_index_js__["a" /* default */])({
    values: eraValues,
    defaultWidth: 'wide'
  }),
  quarter: Object(__WEBPACK_IMPORTED_MODULE_0__lib_buildLocalizeFn_index_js__["a" /* default */])({
    values: quarterValues,
    defaultWidth: 'wide',
    argumentCallback: function (quarter) {
      return Number(quarter) - 1;
    }
  }),
  month: Object(__WEBPACK_IMPORTED_MODULE_0__lib_buildLocalizeFn_index_js__["a" /* default */])({
    values: monthValues,
    defaultWidth: 'wide'
  }),
  day: Object(__WEBPACK_IMPORTED_MODULE_0__lib_buildLocalizeFn_index_js__["a" /* default */])({
    values: dayValues,
    defaultWidth: 'wide'
  }),
  dayPeriod: Object(__WEBPACK_IMPORTED_MODULE_0__lib_buildLocalizeFn_index_js__["a" /* default */])({
    values: dayPeriodValues,
    defaultWidth: 'wide',
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: 'wide'
  })
};
/* harmony default export */ __webpack_exports__["a"] = (localize);

/***/ }),
/* 84 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = buildLocalizeFn;
function buildLocalizeFn(args) {
  return function (dirtyIndex, dirtyOptions) {
    var options = dirtyOptions || {};
    var context = options.context ? String(options.context) : 'standalone';
    var valuesArray;

    if (context === 'formatting' && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;

      var _width = options.width ? String(options.width) : args.defaultWidth;

      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }

    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    return valuesArray[index];
  };
}

/***/ }),
/* 85 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_buildMatchPatternFn_index_js__ = __webpack_require__(86);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_buildMatchFn_index_js__ = __webpack_require__(87);


var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match = {
  ordinalNumber: Object(__WEBPACK_IMPORTED_MODULE_0__lib_buildMatchPatternFn_index_js__["a" /* default */])({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function (value) {
      return parseInt(value, 10);
    }
  }),
  era: Object(__WEBPACK_IMPORTED_MODULE_1__lib_buildMatchFn_index_js__["a" /* default */])({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseEraPatterns,
    defaultParseWidth: 'any'
  }),
  quarter: Object(__WEBPACK_IMPORTED_MODULE_1__lib_buildMatchFn_index_js__["a" /* default */])({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: 'any',
    valueCallback: function (index) {
      return index + 1;
    }
  }),
  month: Object(__WEBPACK_IMPORTED_MODULE_1__lib_buildMatchFn_index_js__["a" /* default */])({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: 'any'
  }),
  day: Object(__WEBPACK_IMPORTED_MODULE_1__lib_buildMatchFn_index_js__["a" /* default */])({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseDayPatterns,
    defaultParseWidth: 'any'
  }),
  dayPeriod: Object(__WEBPACK_IMPORTED_MODULE_1__lib_buildMatchFn_index_js__["a" /* default */])({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: 'any',
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: 'any'
  })
};
/* harmony default export */ __webpack_exports__["a"] = (match);

/***/ }),
/* 86 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = buildMatchPatternFn;
function buildMatchPatternFn(args) {
  return function (dirtyString, dirtyOptions) {
    var string = String(dirtyString);
    var options = dirtyOptions || {};
    var matchResult = string.match(args.matchPattern);

    if (!matchResult) {
      return null;
    }

    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);

    if (!parseResult) {
      return null;
    }

    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    return {
      value: value,
      rest: string.slice(matchedString.length)
    };
  };
}

/***/ }),
/* 87 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = buildMatchFn;
function buildMatchFn(args) {
  return function (dirtyString, dirtyOptions) {
    var string = String(dirtyString);
    var options = dirtyOptions || {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);

    if (!matchResult) {
      return null;
    }

    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var value;

    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {
      value = findIndex(parsePatterns, function (pattern) {
        return pattern.test(string);
      });
    } else {
      value = findKey(parsePatterns, function (pattern) {
        return pattern.test(string);
      });
    }

    value = args.valueCallback ? args.valueCallback(value) : value;
    value = options.valueCallback ? options.valueCallback(value) : value;
    return {
      value: value,
      rest: string.slice(matchedString.length)
    };
  };
}

function findKey(object, predicate) {
  for (var key in object) {
    if (object.hasOwnProperty(key) && predicate(object[key])) {
      return key;
    }
  }
}

function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
}

/***/ }),
/* 88 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = subMilliseconds;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addMilliseconds_index_js__ = __webpack_require__(89);


/**
 * @name subMilliseconds
 * @category Millisecond Helpers
 * @summary Subtract the specified number of milliseconds from the given date.
 *
 * @description
 * Subtract the specified number of milliseconds from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be subtracted
 * @returns {Date} the new date with the milliseconds subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:
 * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:29.250
 */

function subMilliseconds(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var amount = Object(__WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__["a" /* default */])(dirtyAmount);
  return Object(__WEBPACK_IMPORTED_MODULE_1__addMilliseconds_index_js__["a" /* default */])(dirtyDate, -amount);
}

/***/ }),
/* 89 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = addMilliseconds;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ = __webpack_require__(6);


/**
 * @name addMilliseconds
 * @category Millisecond Helpers
 * @summary Add the specified number of milliseconds to the given date.
 *
 * @description
 * Add the specified number of milliseconds to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be added
 * @returns {Date} the new date with the milliseconds added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 750 milliseconds to 10 July 2014 12:45:30.000:
 * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:30.750
 */

function addMilliseconds(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var timestamp = Object(__WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */])(dirtyDate).getTime();
  var amount = Object(__WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__["a" /* default */])(dirtyAmount);
  return new Date(timestamp + amount);
}

/***/ }),
/* 90 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lightFormatters_index_js__ = __webpack_require__(91);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_getUTCDayOfYear_index_js__ = __webpack_require__(92);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_getUTCISOWeek_index_js__ = __webpack_require__(93);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_getUTCISOWeekYear_index_js__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_getUTCWeek_index_js__ = __webpack_require__(95);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__lib_getUTCWeekYear_index_js__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__ = __webpack_require__(42);







var dayPeriodEnum = {
  am: 'am',
  pm: 'pm',
  midnight: 'midnight',
  noon: 'noon',
  morning: 'morning',
  afternoon: 'afternoon',
  evening: 'evening',
  night: 'night'
  /*
   * |     | Unit                           |     | Unit                           |
   * |-----|--------------------------------|-----|--------------------------------|
   * |  a  | AM, PM                         |  A* | Milliseconds in day            |
   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
   * |  d  | Day of month                   |  D  | Day of year                    |
   * |  e  | Local day of week              |  E  | Day of week                    |
   * |  f  |                                |  F* | Day of week in month           |
   * |  g* | Modified Julian day            |  G  | Era                            |
   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
   * |  i! | ISO day of week                |  I! | ISO week of year               |
   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
   * |  l* | (deprecated)                   |  L  | Stand-alone month              |
   * |  m  | Minute                         |  M  | Month                          |
   * |  n  |                                |  N  |                                |
   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
   * |  p! | Long localized time            |  P! | Long localized date            |
   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
   * |  s  | Second                         |  S  | Fraction of second             |
   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
   * |  u  | Extended year                  |  U* | Cyclic year                    |
   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
   * |  w  | Local week of year             |  W* | Week of month                  |
   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
   *
   * Letters marked by * are not implemented but reserved by Unicode standard.
   *
   * Letters marked by ! are non-standard, but implemented by date-fns:
   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
   *   i.e. 7 for Sunday, 1 for Monday, etc.
   * - `I` is ISO week of year, as opposed to `w` which is local week of year.
   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
   *   `R` is supposed to be used in conjunction with `I` and `i`
   *   for universal ISO week-numbering date, whereas
   *   `Y` is supposed to be used in conjunction with `w` and `e`
   *   for week-numbering date specific to the locale.
   * - `P` is long localized date format
   * - `p` is long localized time format
   */

};
var formatters = {
  // Era
  G: function (date, token, localize) {
    var era = date.getUTCFullYear() > 0 ? 1 : 0;

    switch (token) {
      // AD, BC
      case 'G':
      case 'GG':
      case 'GGG':
        return localize.era(era, {
          width: 'abbreviated'
        });
      // A, B

      case 'GGGGG':
        return localize.era(era, {
          width: 'narrow'
        });
      // Anno Domini, Before Christ

      case 'GGGG':
      default:
        return localize.era(era, {
          width: 'wide'
        });
    }
  },
  // Year
  y: function (date, token, localize) {
    // Ordinal number
    if (token === 'yo') {
      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

      var year = signedYear > 0 ? signedYear : 1 - signedYear;
      return localize.ordinalNumber(year, {
        unit: 'year'
      });
    }

    return __WEBPACK_IMPORTED_MODULE_0__lightFormatters_index_js__["a" /* default */].y(date, token);
  },
  // Local week-numbering year
  Y: function (date, token, localize, options) {
    var signedWeekYear = Object(__WEBPACK_IMPORTED_MODULE_5__lib_getUTCWeekYear_index_js__["a" /* default */])(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)

    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year

    if (token === 'YY') {
      var twoDigitYear = weekYear % 100;
      return Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(twoDigitYear, 2);
    } // Ordinal number


    if (token === 'Yo') {
      return localize.ordinalNumber(weekYear, {
        unit: 'year'
      });
    } // Padding


    return Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(weekYear, token.length);
  },
  // ISO week-numbering year
  R: function (date, token) {
    var isoWeekYear = Object(__WEBPACK_IMPORTED_MODULE_3__lib_getUTCISOWeekYear_index_js__["a" /* default */])(date); // Padding

    return Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(isoWeekYear, token.length);
  },
  // Extended year. This is a single number designating the year of this calendar system.
  // The main difference between `y` and `u` localizers are B.C. years:
  // | Year | `y` | `u` |
  // |------|-----|-----|
  // | AC 1 |   1 |   1 |
  // | BC 1 |   1 |   0 |
  // | BC 2 |   2 |  -1 |
  // Also `yy` always returns the last two digits of a year,
  // while `uu` pads single digit years to 2 characters and returns other years unchanged.
  u: function (date, token) {
    var year = date.getUTCFullYear();
    return Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(year, token.length);
  },
  // Quarter
  Q: function (date, token, localize) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);

    switch (token) {
      // 1, 2, 3, 4
      case 'Q':
        return String(quarter);
      // 01, 02, 03, 04

      case 'QQ':
        return Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(quarter, 2);
      // 1st, 2nd, 3rd, 4th

      case 'Qo':
        return localize.ordinalNumber(quarter, {
          unit: 'quarter'
        });
      // Q1, Q2, Q3, Q4

      case 'QQQ':
        return localize.quarter(quarter, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)

      case 'QQQQQ':
        return localize.quarter(quarter, {
          width: 'narrow',
          context: 'formatting'
        });
      // 1st quarter, 2nd quarter, ...

      case 'QQQQ':
      default:
        return localize.quarter(quarter, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone quarter
  q: function (date, token, localize) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);

    switch (token) {
      // 1, 2, 3, 4
      case 'q':
        return String(quarter);
      // 01, 02, 03, 04

      case 'qq':
        return Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(quarter, 2);
      // 1st, 2nd, 3rd, 4th

      case 'qo':
        return localize.ordinalNumber(quarter, {
          unit: 'quarter'
        });
      // Q1, Q2, Q3, Q4

      case 'qqq':
        return localize.quarter(quarter, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)

      case 'qqqqq':
        return localize.quarter(quarter, {
          width: 'narrow',
          context: 'standalone'
        });
      // 1st quarter, 2nd quarter, ...

      case 'qqqq':
      default:
        return localize.quarter(quarter, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // Month
  M: function (date, token, localize) {
    var month = date.getUTCMonth();

    switch (token) {
      case 'M':
      case 'MM':
        return __WEBPACK_IMPORTED_MODULE_0__lightFormatters_index_js__["a" /* default */].M(date, token);
      // 1st, 2nd, ..., 12th

      case 'Mo':
        return localize.ordinalNumber(month + 1, {
          unit: 'month'
        });
      // Jan, Feb, ..., Dec

      case 'MMM':
        return localize.month(month, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // J, F, ..., D

      case 'MMMMM':
        return localize.month(month, {
          width: 'narrow',
          context: 'formatting'
        });
      // January, February, ..., December

      case 'MMMM':
      default:
        return localize.month(month, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone month
  L: function (date, token, localize) {
    var month = date.getUTCMonth();

    switch (token) {
      // 1, 2, ..., 12
      case 'L':
        return String(month + 1);
      // 01, 02, ..., 12

      case 'LL':
        return Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(month + 1, 2);
      // 1st, 2nd, ..., 12th

      case 'Lo':
        return localize.ordinalNumber(month + 1, {
          unit: 'month'
        });
      // Jan, Feb, ..., Dec

      case 'LLL':
        return localize.month(month, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // J, F, ..., D

      case 'LLLLL':
        return localize.month(month, {
          width: 'narrow',
          context: 'standalone'
        });
      // January, February, ..., December

      case 'LLLL':
      default:
        return localize.month(month, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // Local week of year
  w: function (date, token, localize, options) {
    var week = Object(__WEBPACK_IMPORTED_MODULE_4__lib_getUTCWeek_index_js__["a" /* default */])(date, options);

    if (token === 'wo') {
      return localize.ordinalNumber(week, {
        unit: 'week'
      });
    }

    return Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(week, token.length);
  },
  // ISO week of year
  I: function (date, token, localize) {
    var isoWeek = Object(__WEBPACK_IMPORTED_MODULE_2__lib_getUTCISOWeek_index_js__["a" /* default */])(date);

    if (token === 'Io') {
      return localize.ordinalNumber(isoWeek, {
        unit: 'week'
      });
    }

    return Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(isoWeek, token.length);
  },
  // Day of the month
  d: function (date, token, localize) {
    if (token === 'do') {
      return localize.ordinalNumber(date.getUTCDate(), {
        unit: 'date'
      });
    }

    return __WEBPACK_IMPORTED_MODULE_0__lightFormatters_index_js__["a" /* default */].d(date, token);
  },
  // Day of year
  D: function (date, token, localize) {
    var dayOfYear = Object(__WEBPACK_IMPORTED_MODULE_1__lib_getUTCDayOfYear_index_js__["a" /* default */])(date);

    if (token === 'Do') {
      return localize.ordinalNumber(dayOfYear, {
        unit: 'dayOfYear'
      });
    }

    return Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(dayOfYear, token.length);
  },
  // Day of week
  E: function (date, token, localize) {
    var dayOfWeek = date.getUTCDay();

    switch (token) {
      // Tue
      case 'E':
      case 'EE':
      case 'EEE':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T

      case 'EEEEE':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu

      case 'EEEEEE':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday

      case 'EEEE':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Local day of week
  e: function (date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;

    switch (token) {
      // Numerical value (Nth day of week with current locale or weekStartsOn)
      case 'e':
        return String(localDayOfWeek);
      // Padded numerical value

      case 'ee':
        return Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(localDayOfWeek, 2);
      // 1st, 2nd, ..., 7th

      case 'eo':
        return localize.ordinalNumber(localDayOfWeek, {
          unit: 'day'
        });

      case 'eee':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T

      case 'eeeee':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu

      case 'eeeeee':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday

      case 'eeee':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone local day of week
  c: function (date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;

    switch (token) {
      // Numerical value (same as in `e`)
      case 'c':
        return String(localDayOfWeek);
      // Padded numerical value

      case 'cc':
        return Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(localDayOfWeek, token.length);
      // 1st, 2nd, ..., 7th

      case 'co':
        return localize.ordinalNumber(localDayOfWeek, {
          unit: 'day'
        });

      case 'ccc':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // T

      case 'ccccc':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'standalone'
        });
      // Tu

      case 'cccccc':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'standalone'
        });
      // Tuesday

      case 'cccc':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // ISO day of week
  i: function (date, token, localize) {
    var dayOfWeek = date.getUTCDay();
    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;

    switch (token) {
      // 2
      case 'i':
        return String(isoDayOfWeek);
      // 02

      case 'ii':
        return Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(isoDayOfWeek, token.length);
      // 2nd

      case 'io':
        return localize.ordinalNumber(isoDayOfWeek, {
          unit: 'day'
        });
      // Tue

      case 'iii':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T

      case 'iiiii':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu

      case 'iiiiii':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday

      case 'iiii':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // AM or PM
  a: function (date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';

    switch (token) {
      case 'a':
      case 'aa':
      case 'aaa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });

      case 'aaaaa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });

      case 'aaaa':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // AM, PM, midnight, noon
  b: function (date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;

    if (hours === 12) {
      dayPeriodEnumValue = dayPeriodEnum.noon;
    } else if (hours === 0) {
      dayPeriodEnumValue = dayPeriodEnum.midnight;
    } else {
      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';
    }

    switch (token) {
      case 'b':
      case 'bb':
      case 'bbb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });

      case 'bbbbb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });

      case 'bbbb':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // in the morning, in the afternoon, in the evening, at night
  B: function (date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;

    if (hours >= 17) {
      dayPeriodEnumValue = dayPeriodEnum.evening;
    } else if (hours >= 12) {
      dayPeriodEnumValue = dayPeriodEnum.afternoon;
    } else if (hours >= 4) {
      dayPeriodEnumValue = dayPeriodEnum.morning;
    } else {
      dayPeriodEnumValue = dayPeriodEnum.night;
    }

    switch (token) {
      case 'B':
      case 'BB':
      case 'BBB':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });

      case 'BBBBB':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });

      case 'BBBB':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Hour [1-12]
  h: function (date, token, localize) {
    if (token === 'ho') {
      var hours = date.getUTCHours() % 12;
      if (hours === 0) hours = 12;
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }

    return __WEBPACK_IMPORTED_MODULE_0__lightFormatters_index_js__["a" /* default */].h(date, token);
  },
  // Hour [0-23]
  H: function (date, token, localize) {
    if (token === 'Ho') {
      return localize.ordinalNumber(date.getUTCHours(), {
        unit: 'hour'
      });
    }

    return __WEBPACK_IMPORTED_MODULE_0__lightFormatters_index_js__["a" /* default */].H(date, token);
  },
  // Hour [0-11]
  K: function (date, token, localize) {
    var hours = date.getUTCHours() % 12;

    if (token === 'Ko') {
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }

    return Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(hours, token.length);
  },
  // Hour [1-24]
  k: function (date, token, localize) {
    var hours = date.getUTCHours();
    if (hours === 0) hours = 24;

    if (token === 'ko') {
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }

    return Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(hours, token.length);
  },
  // Minute
  m: function (date, token, localize) {
    if (token === 'mo') {
      return localize.ordinalNumber(date.getUTCMinutes(), {
        unit: 'minute'
      });
    }

    return __WEBPACK_IMPORTED_MODULE_0__lightFormatters_index_js__["a" /* default */].m(date, token);
  },
  // Second
  s: function (date, token, localize) {
    if (token === 'so') {
      return localize.ordinalNumber(date.getUTCSeconds(), {
        unit: 'second'
      });
    }

    return __WEBPACK_IMPORTED_MODULE_0__lightFormatters_index_js__["a" /* default */].s(date, token);
  },
  // Fraction of second
  S: function (date, token) {
    return __WEBPACK_IMPORTED_MODULE_0__lightFormatters_index_js__["a" /* default */].S(date, token);
  },
  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
  X: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    if (timezoneOffset === 0) {
      return 'Z';
    }

    switch (token) {
      // Hours and optional minutes
      case 'X':
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XX`

      case 'XXXX':
      case 'XX':
        // Hours and minutes without `:` delimiter
        return formatTimezone(timezoneOffset);
      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XXX`

      case 'XXXXX':
      case 'XXX': // Hours and minutes with `:` delimiter

      default:
        return formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
  x: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    switch (token) {
      // Hours and optional minutes
      case 'x':
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xx`

      case 'xxxx':
      case 'xx':
        // Hours and minutes without `:` delimiter
        return formatTimezone(timezoneOffset);
      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xxx`

      case 'xxxxx':
      case 'xxx': // Hours and minutes with `:` delimiter

      default:
        return formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (GMT)
  O: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    switch (token) {
      // Short
      case 'O':
      case 'OO':
      case 'OOO':
        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
      // Long

      case 'OOOO':
      default:
        return 'GMT' + formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (specific non-location)
  z: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    switch (token) {
      // Short
      case 'z':
      case 'zz':
      case 'zzz':
        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
      // Long

      case 'zzzz':
      default:
        return 'GMT' + formatTimezone(timezoneOffset, ':');
    }
  },
  // Seconds timestamp
  t: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = Math.floor(originalDate.getTime() / 1000);
    return Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(timestamp, token.length);
  },
  // Milliseconds timestamp
  T: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = originalDate.getTime();
    return Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(timestamp, token.length);
  }
};

function formatTimezoneShort(offset, dirtyDelimiter) {
  var sign = offset > 0 ? '-' : '+';
  var absOffset = Math.abs(offset);
  var hours = Math.floor(absOffset / 60);
  var minutes = absOffset % 60;

  if (minutes === 0) {
    return sign + String(hours);
  }

  var delimiter = dirtyDelimiter || '';
  return sign + String(hours) + delimiter + Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(minutes, 2);
}

function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
  if (offset % 60 === 0) {
    var sign = offset > 0 ? '-' : '+';
    return sign + Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(Math.abs(offset) / 60, 2);
  }

  return formatTimezone(offset, dirtyDelimiter);
}

function formatTimezone(offset, dirtyDelimiter) {
  var delimiter = dirtyDelimiter || '';
  var sign = offset > 0 ? '-' : '+';
  var absOffset = Math.abs(offset);
  var hours = Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(Math.floor(absOffset / 60), 2);
  var minutes = Object(__WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__["a" /* default */])(absOffset % 60, 2);
  return sign + hours + delimiter + minutes;
}

/* harmony default export */ __webpack_exports__["a"] = (formatters);

/***/ }),
/* 91 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__addLeadingZeros_index_js__ = __webpack_require__(42);

/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* |                                |
 * |  d  | Day of month                   |  D  |                                |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  m  | Minute                         |  M  | Month                          |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  y  | Year (abs)                     |  Y  |                                |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 */

var formatters = {
  // Year
  y: function (date, token) {
    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens
    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
    // |----------|-------|----|-------|-------|-------|
    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

    var year = signedYear > 0 ? signedYear : 1 - signedYear;
    return Object(__WEBPACK_IMPORTED_MODULE_0__addLeadingZeros_index_js__["a" /* default */])(token === 'yy' ? year % 100 : year, token.length);
  },
  // Month
  M: function (date, token) {
    var month = date.getUTCMonth();
    return token === 'M' ? String(month + 1) : Object(__WEBPACK_IMPORTED_MODULE_0__addLeadingZeros_index_js__["a" /* default */])(month + 1, 2);
  },
  // Day of the month
  d: function (date, token) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__addLeadingZeros_index_js__["a" /* default */])(date.getUTCDate(), token.length);
  },
  // AM or PM
  a: function (date, token) {
    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';

    switch (token) {
      case 'a':
      case 'aa':
      case 'aaa':
        return dayPeriodEnumValue.toUpperCase();

      case 'aaaaa':
        return dayPeriodEnumValue[0];

      case 'aaaa':
      default:
        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';
    }
  },
  // Hour [1-12]
  h: function (date, token) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__addLeadingZeros_index_js__["a" /* default */])(date.getUTCHours() % 12 || 12, token.length);
  },
  // Hour [0-23]
  H: function (date, token) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__addLeadingZeros_index_js__["a" /* default */])(date.getUTCHours(), token.length);
  },
  // Minute
  m: function (date, token) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__addLeadingZeros_index_js__["a" /* default */])(date.getUTCMinutes(), token.length);
  },
  // Second
  s: function (date, token) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__addLeadingZeros_index_js__["a" /* default */])(date.getUTCSeconds(), token.length);
  },
  // Fraction of second
  S: function (date, token) {
    var numberOfDigits = token.length;
    var milliseconds = date.getUTCMilliseconds();
    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
    return Object(__WEBPACK_IMPORTED_MODULE_0__addLeadingZeros_index_js__["a" /* default */])(fractionalSeconds, token.length);
  }
};
/* harmony default export */ __webpack_exports__["a"] = (formatters);

/***/ }),
/* 92 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getUTCDayOfYear;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ = __webpack_require__(6);

var MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCDayOfYear(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var date = Object(__WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */])(dirtyDate);
  var timestamp = date.getTime();
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
  var startOfYearTimestamp = date.getTime();
  var difference = timestamp - startOfYearTimestamp;
  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
}

/***/ }),
/* 93 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getUTCISOWeek;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfUTCISOWeek_index_js__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__startOfUTCISOWeekYear_index_js__ = __webpack_require__(94);



var MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCISOWeek(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var date = Object(__WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */])(dirtyDate);
  var diff = Object(__WEBPACK_IMPORTED_MODULE_1__startOfUTCISOWeek_index_js__["a" /* default */])(date).getTime() - Object(__WEBPACK_IMPORTED_MODULE_2__startOfUTCISOWeekYear_index_js__["a" /* default */])(date).getTime(); // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)

  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}

/***/ }),
/* 94 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = startOfUTCISOWeekYear;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getUTCISOWeekYear_index_js__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfUTCISOWeek_index_js__ = __webpack_require__(30);

 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function startOfUTCISOWeekYear(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var year = Object(__WEBPACK_IMPORTED_MODULE_0__getUTCISOWeekYear_index_js__["a" /* default */])(dirtyDate);
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setUTCFullYear(year, 0, 4);
  fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date = Object(__WEBPACK_IMPORTED_MODULE_1__startOfUTCISOWeek_index_js__["a" /* default */])(fourthOfJanuary);
  return date;
}

/***/ }),
/* 95 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getUTCWeek;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfUTCWeek_index_js__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__startOfUTCWeekYear_index_js__ = __webpack_require__(96);



var MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCWeek(dirtyDate, options) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var date = Object(__WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */])(dirtyDate);
  var diff = Object(__WEBPACK_IMPORTED_MODULE_1__startOfUTCWeek_index_js__["a" /* default */])(date, options).getTime() - Object(__WEBPACK_IMPORTED_MODULE_2__startOfUTCWeekYear_index_js__["a" /* default */])(date, options).getTime(); // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)

  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}

/***/ }),
/* 96 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = startOfUTCWeekYear;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getUTCWeekYear_index_js__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__startOfUTCWeek_index_js__ = __webpack_require__(31);


 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function startOfUTCWeekYear(dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(__WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__["a" /* default */])(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(__WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__["a" /* default */])(options.firstWeekContainsDate);
  var year = Object(__WEBPACK_IMPORTED_MODULE_1__getUTCWeekYear_index_js__["a" /* default */])(dirtyDate, dirtyOptions);
  var firstWeek = new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date = Object(__WEBPACK_IMPORTED_MODULE_2__startOfUTCWeek_index_js__["a" /* default */])(firstWeek, dirtyOptions);
  return date;
}

/***/ }),
/* 97 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function dateLongFormatter(pattern, formatLong) {
  switch (pattern) {
    case 'P':
      return formatLong.date({
        width: 'short'
      });

    case 'PP':
      return formatLong.date({
        width: 'medium'
      });

    case 'PPP':
      return formatLong.date({
        width: 'long'
      });

    case 'PPPP':
    default:
      return formatLong.date({
        width: 'full'
      });
  }
}

function timeLongFormatter(pattern, formatLong) {
  switch (pattern) {
    case 'p':
      return formatLong.time({
        width: 'short'
      });

    case 'pp':
      return formatLong.time({
        width: 'medium'
      });

    case 'ppp':
      return formatLong.time({
        width: 'long'
      });

    case 'pppp':
    default:
      return formatLong.time({
        width: 'full'
      });
  }
}

function dateTimeLongFormatter(pattern, formatLong) {
  var matchResult = pattern.match(/(P+)(p+)?/);
  var datePattern = matchResult[1];
  var timePattern = matchResult[2];

  if (!timePattern) {
    return dateLongFormatter(pattern, formatLong);
  }

  var dateTimeFormat;

  switch (datePattern) {
    case 'P':
      dateTimeFormat = formatLong.dateTime({
        width: 'short'
      });
      break;

    case 'PP':
      dateTimeFormat = formatLong.dateTime({
        width: 'medium'
      });
      break;

    case 'PPP':
      dateTimeFormat = formatLong.dateTime({
        width: 'long'
      });
      break;

    case 'PPPP':
    default:
      dateTimeFormat = formatLong.dateTime({
        width: 'full'
      });
      break;
  }

  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));
}

var longFormatters = {
  p: timeLongFormatter,
  P: dateTimeLongFormatter
};
/* harmony default export */ __webpack_exports__["a"] = (longFormatters);

/***/ }),
/* 98 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getTimezoneOffsetInMilliseconds;
var MILLISECONDS_IN_MINUTE = 60000;
/**
 * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
 * They usually appear for dates that denote time before the timezones were introduced
 * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
 * and GMT+01:00:00 after that date)
 *
 * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
 * which would lead to incorrect calculations.
 *
 * This function returns the timezone offset in milliseconds that takes seconds in account.
 */

function getTimezoneOffsetInMilliseconds(dirtyDate) {
  var date = new Date(dirtyDate.getTime());
  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());
  date.setSeconds(0, 0);
  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;
  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;
}

/***/ }),
/* 99 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isProtectedDayOfYearToken;
/* harmony export (immutable) */ __webpack_exports__["b"] = isProtectedWeekYearToken;
/* harmony export (immutable) */ __webpack_exports__["c"] = throwProtectedError;
var protectedDayOfYearTokens = ['D', 'DD'];
var protectedWeekYearTokens = ['YY', 'YYYY'];
function isProtectedDayOfYearToken(token) {
  return protectedDayOfYearTokens.indexOf(token) !== -1;
}
function isProtectedWeekYearToken(token) {
  return protectedWeekYearTokens.indexOf(token) !== -1;
}
function throwProtectedError(token) {
  if (token === 'YYYY') {
    throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');
  } else if (token === 'YY') {
    throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');
  } else if (token === 'D') {
    throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');
  } else if (token === 'DD') {
    throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');
  }
}

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(101);

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Calendar = void 0;

var _react = _interopRequireWildcard(__webpack_require__(0));

var _reactDom = _interopRequireDefault(__webpack_require__(15));

var _propTypes = _interopRequireDefault(__webpack_require__(14));

var _InputText = __webpack_require__(102);

var _Button = __webpack_require__(104);

var _CalendarPanel = __webpack_require__(105);

var _DomHandler = _interopRequireDefault(__webpack_require__(21));

var _classnames = _interopRequireDefault(__webpack_require__(1));

var _Tooltip = _interopRequireDefault(__webpack_require__(32));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Calendar =
/*#__PURE__*/
function (_Component) {
  _inherits(Calendar, _Component);

  function Calendar(props) {
    var _this;

    _classCallCheck(this, Calendar);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calendar).call(this, props));

    if (!_this.props.onViewDateChange) {
      var propValue = _this.props.value;

      if (Array.isArray(propValue)) {
        propValue = propValue[0];
      }

      _this.state = {
        viewDate: _this.props.viewDate || propValue || new Date()
      };
    }

    _this.onInputChange = _this.onInputChange.bind(_assertThisInitialized(_this));
    _this.onInputFocus = _this.onInputFocus.bind(_assertThisInitialized(_this));
    _this.onInputBlur = _this.onInputBlur.bind(_assertThisInitialized(_this));
    _this.onInputKeyDown = _this.onInputKeyDown.bind(_assertThisInitialized(_this));
    _this.onButtonClick = _this.onButtonClick.bind(_assertThisInitialized(_this));
    _this.navBackward = _this.navBackward.bind(_assertThisInitialized(_this));
    _this.navForward = _this.navForward.bind(_assertThisInitialized(_this));
    _this.onMonthDropdownChange = _this.onMonthDropdownChange.bind(_assertThisInitialized(_this));
    _this.onYearDropdownChange = _this.onYearDropdownChange.bind(_assertThisInitialized(_this));
    _this.onTodayButtonClick = _this.onTodayButtonClick.bind(_assertThisInitialized(_this));
    _this.onClearButtonClick = _this.onClearButtonClick.bind(_assertThisInitialized(_this));
    _this.incrementHour = _this.incrementHour.bind(_assertThisInitialized(_this));
    _this.decrementHour = _this.decrementHour.bind(_assertThisInitialized(_this));
    _this.incrementMinute = _this.incrementMinute.bind(_assertThisInitialized(_this));
    _this.decrementMinute = _this.decrementMinute.bind(_assertThisInitialized(_this));
    _this.incrementSecond = _this.incrementSecond.bind(_assertThisInitialized(_this));
    _this.decrementSecond = _this.decrementSecond.bind(_assertThisInitialized(_this));
    _this.toggleAmPm = _this.toggleAmPm.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(Calendar, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.tooltip) {
        this.renderTooltip();
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (prevProps.tooltip !== this.props.tooltip) {
        if (this.tooltip) this.tooltip.updateContent(this.props.tooltip);else this.renderTooltip();
      }

      if (!this.props.onViewDateChange && !this.viewStateChanged) {
        var propValue = this.props.value;

        if (Array.isArray(propValue)) {
          propValue = propValue[0];
        }

        var prevPropValue = prevProps.value;

        if (Array.isArray(prevPropValue)) {
          prevPropValue = prevPropValue[0];
        }

        if (!prevPropValue && propValue || propValue && propValue instanceof Date && propValue.getTime() !== prevPropValue.getTime()) {
          this.setState({
            viewDate: this.props.viewDate || propValue || new Date()
          });
        }
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.hideTimeout) {
        clearTimeout(this.hideTimeout);
      }

      if (this.mask) {
        this.disableModality();
        this.mask = null;
      }

      if (this.tooltip) {
        this.tooltip.destroy();
        this.tooltip = null;
      }

      this.unbindDocumentClickListener();
      this.unbindDocumentResizeListener();
    }
  }, {
    key: "renderTooltip",
    value: function renderTooltip() {
      this.tooltip = new _Tooltip.default({
        target: this.inputElement,
        content: this.props.tooltip,
        options: this.props.tooltipOptions
      });
    }
  }, {
    key: "onInputFocus",
    value: function onInputFocus(event) {
      if (this.props.showOnFocus && !this.panel.offsetParent) {
        this.showOverlay();
      }

      if (this.props.onFocus) {
        this.props.onFocus(event);
      }

      _DomHandler.default.addClass(this.container, 'p-inputwrapper-focus');
    }
  }, {
    key: "onInputBlur",
    value: function onInputBlur(event) {
      if (this.props.onBlur) {
        this.props.onBlur(event);
      }

      _DomHandler.default.removeClass(this.container, 'p-inputwrapper-focus');
    }
  }, {
    key: "onInputKeyDown",
    value: function onInputKeyDown(event) {
      this.isKeydown = true;

      if (event.keyCode === 9) {
        this.hideOverlay();
      }
    }
  }, {
    key: "onInputChange",
    value: function onInputChange(event) {
      // IE 11 Workaround for input placeholder
      if (!this.isKeydown) {
        return;
      }

      this.isKeydown = false;
      var rawValue = event.target.value;

      try {
        var value = this.parseValueFromString(rawValue);
        this.updateModel(event, value);
        this.updateViewDate(event, value.length ? value[0] : value);
      } catch (err) {
        this.updateModel(event, rawValue);
      }

      if (this.props.onInput) {
        this.props.onInput(event);
      }
    }
  }, {
    key: "onButtonClick",
    value: function onButtonClick(event) {
      if (!this.panel.offsetParent) {
        this.showOverlay();
      }
    }
  }, {
    key: "navBackward",
    value: function navBackward(event) {
      if (this.props.disabled) {
        event.preventDefault();
        return;
      }

      var newViewDate = new Date(this.getViewDate().getTime());

      if (this.props.view === 'date') {
        if (newViewDate.getMonth() === 0) {
          newViewDate.setMonth(11);
          newViewDate.setFullYear(newViewDate.getFullYear() - 1);
        } else {
          newViewDate.setMonth(newViewDate.getMonth() - 1);
        }
      } else if (this.props.view === 'month') {
        var currentYear = newViewDate.getFullYear();
        var newYear = currentYear - 1;

        if (this.props.yearNavigator) {
          var minYear = parseInt(this.props.yearRange.split(':')[0], 10);

          if (newYear < minYear) {
            newYear = minYear;
          }
        }

        newViewDate.setFullYear(newYear);
      }

      this.updateViewDate(event, newViewDate);
      event.preventDefault();
    }
  }, {
    key: "navForward",
    value: function navForward(event) {
      if (this.props.disabled) {
        event.preventDefault();
        return;
      }

      var newViewDate = new Date(this.getViewDate().getTime());

      if (this.props.view === 'date') {
        if (newViewDate.getMonth() === 11) {
          newViewDate.setMonth(0);
          newViewDate.setFullYear(newViewDate.getFullYear() + 1);
        } else {
          newViewDate.setMonth(newViewDate.getMonth() + 1);
        }
      } else if (this.props.view === 'month') {
        var currentYear = newViewDate.getFullYear();
        var newYear = currentYear + 1;

        if (this.props.yearNavigator) {
          var maxYear = parseInt(this.props.yearRange.split(':')[1], 10);

          if (newYear > maxYear) {
            newYear = maxYear;
          }
        }

        newViewDate.setFullYear(newYear);
      }

      this.updateViewDate(event, newViewDate);
      event.preventDefault();
    }
  }, {
    key: "onMonthDropdownChange",
    value: function onMonthDropdownChange(event) {
      var currentViewDate = this.props.onViewDateChange ? this.props.viewDate : this.state.viewDate;
      var newViewDate = new Date(currentViewDate.getTime());
      newViewDate.setMonth(parseInt(event.target.value, 10));
      this.updateViewDate(event, newViewDate);
    }
  }, {
    key: "onYearDropdownChange",
    value: function onYearDropdownChange(event) {
      var currentViewDate = this.props.onViewDateChange ? this.props.viewDate : this.state.viewDate;
      var newViewDate = new Date(currentViewDate.getTime());
      newViewDate.setFullYear(parseInt(event.target.value, 10));
      this.updateViewDate(event, newViewDate);
    }
  }, {
    key: "onTodayButtonClick",
    value: function onTodayButtonClick(event) {
      var today = new Date();
      var dateMeta = {
        day: today.getDate(),
        month: today.getMonth(),
        year: today.getFullYear(),
        today: true,
        selectable: true
      };
      this.updateViewDate(event, today);
      this.onDateSelect(event, dateMeta);

      if (this.props.onTodayButtonClick) {
        this.props.onTodayButtonClick(event);
      }
    }
  }, {
    key: "onClearButtonClick",
    value: function onClearButtonClick(event) {
      this.updateModel(event, null);

      if (this.props.onClearButtonClick) {
        this.props.onClearButtonClick(event);
      }
    }
  }, {
    key: "incrementHour",
    value: function incrementHour(event) {
      var currentTime = this.props.value && this.props.value instanceof Date ? this.props.value : this.getViewDate();
      var currentHour = currentTime.getHours();
      var newHour = currentHour + this.props.stepHour;
      newHour = newHour >= 24 ? newHour - 24 : newHour;

      if (this.validateHour(newHour, currentTime)) {
        this.updateTime(event, newHour, currentTime.getMinutes(), currentTime.getSeconds());
      }

      event.preventDefault();
    }
  }, {
    key: "decrementHour",
    value: function decrementHour(event) {
      var currentTime = this.props.value && this.props.value instanceof Date ? this.props.value : this.getViewDate();
      var currentHour = currentTime.getHours();
      var newHour = currentHour - this.props.stepHour;
      newHour = newHour < 0 ? newHour + 24 : newHour;

      if (this.validateHour(newHour, currentTime)) {
        this.updateTime(event, newHour, currentTime.getMinutes(), currentTime.getSeconds());
      }

      event.preventDefault();
    }
  }, {
    key: "incrementMinute",
    value: function incrementMinute(event) {
      var currentTime = this.props.value && this.props.value instanceof Date ? this.props.value : this.getViewDate();
      var currentMinute = currentTime.getMinutes();
      var newMinute = currentMinute + this.props.stepMinute;
      newMinute = newMinute > 59 ? newMinute - 60 : newMinute;

      if (this.validateMinute(newMinute, currentTime)) {
        this.updateTime(event, currentTime.getHours(), newMinute, currentTime.getSeconds());
      }

      event.preventDefault();
    }
  }, {
    key: "decrementMinute",
    value: function decrementMinute(event) {
      var currentTime = this.props.value && this.props.value instanceof Date ? this.props.value : this.getViewDate();
      var currentMinute = currentTime.getMinutes();
      var newMinute = currentMinute - this.props.stepMinute;
      newMinute = newMinute < 0 ? newMinute + 60 : newMinute;

      if (this.validateMinute(newMinute, currentTime)) {
        this.updateTime(event, currentTime.getHours(), newMinute, currentTime.getSeconds());
      }

      event.preventDefault();
    }
  }, {
    key: "incrementSecond",
    value: function incrementSecond(event) {
      var currentTime = this.props.value && this.props.value instanceof Date ? this.props.value : this.getViewDate();
      var currentSecond = currentTime.getSeconds();
      var newSecond = currentSecond + this.props.stepSecond;
      newSecond = newSecond > 59 ? newSecond - 60 : newSecond;

      if (this.validateSecond(newSecond, currentTime)) {
        this.updateTime(event, currentTime.getHours(), currentTime.getMinutes(), newSecond);
      }

      event.preventDefault();
    }
  }, {
    key: "decrementSecond",
    value: function decrementSecond(event) {
      var currentTime = this.props.value && this.props.value instanceof Date ? this.props.value : this.getViewDate();
      var currentSecond = currentTime.getSeconds();
      var newSecond = currentSecond - this.props.stepSecond;
      newSecond = newSecond < 0 ? newSecond + 60 : newSecond;

      if (this.validateSecond(newSecond, currentTime)) {
        this.updateTime(event, currentTime.getHours(), currentTime.getMinutes(), newSecond);
      }

      event.preventDefault();
    }
  }, {
    key: "toggleAmPm",
    value: function toggleAmPm(event) {
      var currentTime = this.props.value && this.props.value instanceof Date ? this.props.value : this.getViewDate();
      var currentHour = currentTime.getHours();
      var newHour = currentHour >= 12 ? currentHour - 12 : currentHour + 12;
      this.updateTime(event, newHour, currentTime.getMinutes(), currentTime.getSeconds());
      event.preventDefault();
    }
  }, {
    key: "getViewDate",
    value: function getViewDate() {
      return this.props.onViewDateChange ? this.props.viewDate : this.state.viewDate;
    }
  }, {
    key: "validateHour",
    value: function validateHour(hour, value) {
      var valid = true;
      var valueDateString = value ? value.toDateString() : null;

      if (this.props.minDate && valueDateString && this.props.minDate.toDateString() === valueDateString) {
        if (this.props.minDate.getHours() > hour) {
          valid = false;
        }
      }

      if (this.props.maxDate && valueDateString && this.props.maxDate.toDateString() === valueDateString) {
        if (this.props.maxDate.getHours() < hour) {
          valid = false;
        }
      }

      return valid;
    }
  }, {
    key: "validateMinute",
    value: function validateMinute(minute, value) {
      var valid = true;
      var valueDateString = value ? value.toDateString() : null;

      if (this.props.minDate && valueDateString && this.props.minDate.toDateString() === valueDateString) {
        if (value.getHours() === this.props.minDate.getHours()) {
          if (this.props.minDate.getMinutes() > minute) {
            valid = false;
          }
        }
      }

      if (this.props.maxDate && valueDateString && this.props.maxDate.toDateString() === valueDateString) {
        if (value.getHours() === this.props.maxDate.getHours()) {
          if (this.props.maxDate.getMinutes() < minute) {
            valid = false;
          }
        }
      }

      return valid;
    }
  }, {
    key: "validateSecond",
    value: function validateSecond(second, value) {
      var valid = true;
      var valueDateString = value ? value.toDateString() : null;

      if (this.props.minDate && valueDateString && this.props.minDate.toDateString() === valueDateString) {
        if (value.getHours() === this.props.minDate.getHours() && value.getMinutes() === this.props.minDate.getMinutes()) {
          if (this.props.minDate.getMinutes() > second) {
            valid = false;
          }
        }
      }

      if (this.props.maxDate && valueDateString && this.props.maxDate.toDateString() === valueDateString) {
        if (value.getHours() === this.props.maxDate.getHours() && value.getMinutes() === this.props.maxDate.getMinutes()) {
          if (this.props.maxDate.getMinutes() < second) {
            valid = false;
          }
        }
      }

      return valid;
    }
  }, {
    key: "updateTime",
    value: function updateTime(event, hour, minute, second) {
      var newDateTime = this.props.value && this.props.value instanceof Date ? new Date(this.props.value) : new Date();
      newDateTime.setHours(hour);
      newDateTime.setMinutes(minute);
      newDateTime.setSeconds(second);
      this.updateModel(event, newDateTime);

      if (this.props.onSelect) {
        this.props.onSelect({
          originalEvent: event,
          value: newDateTime
        });
      }
    }
  }, {
    key: "updateViewDate",
    value: function updateViewDate(event, value) {
      if (this.props.yearNavigator) {
        var viewYear = value.getFullYear();

        if (this.props.minDate && this.props.minDate.getFullYear() > viewYear) {
          viewYear = this.props.minDate.getFullYear();
        }

        if (this.props.maxDate && this.props.maxDate.getFullYear() < viewYear) {
          viewYear = this.props.maxDate.getFullYear();
        }

        value.setFullYear(viewYear);
      }

      if (this.props.monthNavigator && this.props.view !== 'month') {
        var viewMonth = value.getMonth();
        var viewMonthWithMinMax = parseInt(this.isInMinYear(value) && Math.max(this.props.minDate.getMonth(), viewMonth).toString() || this.isInMaxYear(value) && Math.min(this.props.maxDate.getMonth(), viewMonth).toString() || viewMonth);
        value.setMonth(viewMonthWithMinMax);
      }

      if (this.props.onViewDateChange) {
        this.props.onViewDateChange({
          originalEvent: event,
          value: value
        });
      } else {
        this.viewStateChanged = true;
        this.setState({
          viewDate: value
        });
      }
    }
  }, {
    key: "onDateSelect",
    value: function onDateSelect(event, dateMeta) {
      var _this2 = this;

      if (this.props.disabled || !dateMeta.selectable) {
        event.preventDefault();
        return;
      }

      if (this.isMultipleSelection()) {
        if (this.isSelected(dateMeta)) {
          var value = this.props.value.filter(function (date, i) {
            return !_this2.isDateEquals(date, dateMeta);
          });
          this.updateModel(event, value);
        } else if (!this.props.maxDateCount || !this.props.value || this.props.maxDateCount > this.props.value.length) {
          this.selectDate(event, dateMeta);
        }
      } else {
        this.selectDate(event, dateMeta);
      }

      if (!this.props.inline && this.isSingleSelection() && (!this.props.showTime || this.props.hideOnDateTimeSelect)) {
        setTimeout(function () {
          _this2.hideOverlay();
        }, 100);

        if (this.mask) {
          this.disableModality();
        }
      }

      event.preventDefault();
    }
  }, {
    key: "selectDate",
    value: function selectDate(event, dateMeta) {
      var date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);

      if (this.props.showTime) {
        var time = this.props.value && this.props.value instanceof Date ? this.props.value : new Date();
        date.setHours(time.getHours());
        date.setMinutes(time.getMinutes());
        date.setSeconds(time.getSeconds());
      }

      if (this.props.minDate && this.props.minDate > date) {
        date = this.minDate;
      }

      if (this.maxDate && this.maxDate < date) {
        date = this.maxDate;
      }

      if (this.isSingleSelection()) {
        this.updateModel(event, date);
      } else if (this.isMultipleSelection()) {
        this.updateModel(event, this.props.value ? [].concat(_toConsumableArray(this.props.value), [date]) : [date]);
      } else if (this.isRangeSelection()) {
        if (this.props.value && this.props.value.length) {
          var startDate = this.props.value[0];
          var endDate = this.props.value[1];

          if (!endDate && date.getTime() >= startDate.getTime()) {
            endDate = date;
          } else {
            startDate = date;
            endDate = null;
          }

          this.updateModel(event, [startDate, endDate]);
        } else {
          this.updateModel(event, [date, null]);
        }
      }

      if (this.props.onSelect) {
        this.props.onSelect({
          originalEvent: event,
          value: date
        });
      }
    }
  }, {
    key: "onMonthSelect",
    value: function onMonthSelect(event, month) {
      this.onDateSelect(event, {
        year: this.getViewDate().getFullYear(),
        month: month,
        day: 1,
        selectable: true
      });
      event.preventDefault();
    }
  }, {
    key: "updateModel",
    value: function updateModel(event, value) {
      if (this.props.onChange) {
        this.props.onChange({
          originalEvent: event,
          value: value,
          stopPropagation: function stopPropagation() {},
          preventDefault: function preventDefault() {},
          target: {
            name: this.props.name,
            id: this.props.id,
            value: value
          }
        });
        this.viewStateChanged = true;
      }
    }
  }, {
    key: "showOverlay",
    value: function showOverlay() {
      var _this3 = this;

      if (this.props.autoZIndex) {
        this.panel.style.zIndex = String(this.props.baseZIndex + _DomHandler.default.generateZIndex());
      }

      this.panel.style.display = 'block';
      setTimeout(function () {
        _DomHandler.default.addClass(_this3.panel, 'p-input-overlay-visible');

        _DomHandler.default.removeClass(_this3.panel, 'p-input-overlay-hidden');
      }, 1);
      this.alignPanel();
      this.bindDocumentClickListener();
      this.bindDocumentResizeListener();
    }
  }, {
    key: "hideOverlay",
    value: function hideOverlay() {
      var _this4 = this;

      if (this.panel) {
        _DomHandler.default.addClass(this.panel, 'p-input-overlay-hidden');

        _DomHandler.default.removeClass(this.panel, 'p-input-overlay-visible');

        this.unbindDocumentClickListener();
        this.unbindDocumentResizeListener();
        this.hideTimeout = setTimeout(function () {
          _this4.panel.style.display = 'none';

          _DomHandler.default.removeClass(_this4.panel, 'p-input-overlay-hidden');
        }, 150);
      }
    }
  }, {
    key: "bindDocumentClickListener",
    value: function bindDocumentClickListener() {
      var _this5 = this;

      if (!this.documentClickListener) {
        this.documentClickListener = function (event) {
          if (_this5.isOutsideClicked(event)) {
            _this5.hideOverlay();
          }
        };

        document.addEventListener('click', this.documentClickListener);
      }
    }
  }, {
    key: "unbindDocumentClickListener",
    value: function unbindDocumentClickListener() {
      if (this.documentClickListener) {
        document.removeEventListener('click', this.documentClickListener);
        this.documentClickListener = null;
      }
    }
  }, {
    key: "bindDocumentResizeListener",
    value: function bindDocumentResizeListener() {
      if (!this.documentResizeListener && !this.props.touchUI) {
        this.documentResizeListener = this.onWindowResize.bind(this);
        window.addEventListener('resize', this.documentResizeListener);
      }
    }
  }, {
    key: "unbindDocumentResizeListener",
    value: function unbindDocumentResizeListener() {
      if (this.documentResizeListener) {
        window.removeEventListener('resize', this.documentResizeListener);
        this.documentResizeListener = null;
      }
    }
  }, {
    key: "isOutsideClicked",
    value: function isOutsideClicked(event) {
      return this.container && !(this.container.isSameNode(event.target) || this.isNavIconClicked(event) || this.container.contains(event.target) || this.panel && this.panel.contains(event.target));
    }
  }, {
    key: "isNavIconClicked",
    value: function isNavIconClicked(event) {
      return _DomHandler.default.hasClass(event.target, 'p-datepicker-prev') || _DomHandler.default.hasClass(event.target, 'p-datepicker-prev-icon') || _DomHandler.default.hasClass(event.target, 'p-datepicker-next') || _DomHandler.default.hasClass(event.target, 'p-datepicker-next-icon');
    }
  }, {
    key: "onWindowResize",
    value: function onWindowResize() {
      if (this.panel.offsetParent && !_DomHandler.default.isAndroid()) {
        this.hideOverlay();
      }
    }
  }, {
    key: "alignPanel",
    value: function alignPanel() {
      if (this.props.touchUI) {
        this.enableModality();
      } else {
        if (this.props.appendTo) {
          _DomHandler.default.absolutePosition(this.panel, this.inputElement);

          this.panel.style.minWidth = _DomHandler.default.getWidth(this.container) + 'px';
        } else {
          _DomHandler.default.relativePosition(this.panel, this.inputElement);
        }
      }
    }
  }, {
    key: "enableModality",
    value: function enableModality() {
      var _this6 = this;

      if (!this.mask) {
        this.mask = document.createElement('div');
        this.mask.style.zIndex = String(parseInt(this.panel.style.zIndex, 10) - 1);

        _DomHandler.default.addMultipleClasses(this.mask, 'p-component-overlay p-datepicker-mask p-datepicker-mask-scrollblocker');

        this.maskClickListener = function () {
          _this6.disableModality();
        };

        this.mask.addEventListener('click', this.maskClickListener);
        document.body.appendChild(this.mask);

        _DomHandler.default.addClass(document.body, 'p-overflow-hidden');
      }
    }
  }, {
    key: "disableModality",
    value: function disableModality() {
      if (this.mask) {
        this.mask.removeEventListener('click', this.maskClickListener);
        this.maskClickListener = null;
        document.body.removeChild(this.mask);
        this.mask = null;
        var bodyChildren = document.body.children;
        var hasBlockerMasks;

        for (var i = 0; i < bodyChildren.length; i++) {
          var bodyChild = bodyChildren[i];

          if (_DomHandler.default.hasClass(bodyChild, 'p-datepicker-mask-scrollblocker')) {
            hasBlockerMasks = true;
            break;
          }
        }

        if (!hasBlockerMasks) {
          _DomHandler.default.removeClass(document.body, 'p-overflow-hidden');
        }

        this.hideOverlay();
      }
    }
  }, {
    key: "getFirstDayOfMonthIndex",
    value: function getFirstDayOfMonthIndex(month, year) {
      var day = new Date();
      day.setDate(1);
      day.setMonth(month);
      day.setFullYear(year);
      var dayIndex = day.getDay() + this.getSundayIndex();
      return dayIndex >= 7 ? dayIndex - 7 : dayIndex;
    }
  }, {
    key: "getDaysCountInMonth",
    value: function getDaysCountInMonth(month, year) {
      return 32 - this.daylightSavingAdjust(new Date(year, month, 32)).getDate();
    }
  }, {
    key: "getDaysCountInPrevMonth",
    value: function getDaysCountInPrevMonth(month, year) {
      var prev = this.getPreviousMonthAndYear(month, year);
      return this.getDaysCountInMonth(prev.month, prev.year);
    }
  }, {
    key: "daylightSavingAdjust",
    value: function daylightSavingAdjust(date) {
      if (!date) {
        return null;
      }

      date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);
      return date;
    }
  }, {
    key: "getPreviousMonthAndYear",
    value: function getPreviousMonthAndYear(month, year) {
      var m, y;

      if (month === 0) {
        m = 11;
        y = year - 1;
      } else {
        m = month - 1;
        y = year;
      }

      return {
        'month': m,
        'year': y
      };
    }
  }, {
    key: "getNextMonthAndYear",
    value: function getNextMonthAndYear(month, year) {
      var m, y;

      if (month === 11) {
        m = 0;
        y = year + 1;
      } else {
        m = month + 1;
        y = year;
      }

      return {
        'month': m,
        'year': y
      };
    }
  }, {
    key: "getSundayIndex",
    value: function getSundayIndex() {
      return this.props.locale.firstDayOfWeek > 0 ? 7 - this.props.locale.firstDayOfWeek : 0;
    }
  }, {
    key: "createWeekDays",
    value: function createWeekDays() {
      var weekDays = [];
      var dayIndex = this.props.locale.firstDayOfWeek;

      for (var i = 0; i < 7; i++) {
        weekDays.push(this.props.locale.dayNamesMin[dayIndex]);
        dayIndex = dayIndex === 6 ? 0 : ++dayIndex;
      }

      return weekDays;
    }
  }, {
    key: "createMonths",
    value: function createMonths(month, year) {
      var months = [];

      for (var i = 0; i < this.props.numberOfMonths; i++) {
        var m = month + i;
        var y = year;

        if (m > 11) {
          m = m % 11 - 1;
          y = year + 1;
        }

        months.push(this.createMonth(m, y));
      }

      return months;
    }
  }, {
    key: "createMonth",
    value: function createMonth(month, year) {
      var dates = [];
      var firstDay = this.getFirstDayOfMonthIndex(month, year);
      var daysLength = this.getDaysCountInMonth(month, year);
      var prevMonthDaysLength = this.getDaysCountInPrevMonth(month, year);
      var dayNo = 1;
      var today = new Date();
      var weekNumbers = [];
      var monthRows = Math.ceil((daysLength + firstDay) / 7);

      for (var i = 0; i < monthRows; i++) {
        var week = [];

        if (i === 0) {
          for (var j = prevMonthDaysLength - firstDay + 1; j <= prevMonthDaysLength; j++) {
            var prev = this.getPreviousMonthAndYear(month, year);
            week.push({
              day: j,
              month: prev.month,
              year: prev.year,
              otherMonth: true,
              today: this.isToday(today, j, prev.month, prev.year),
              selectable: this.isSelectable(j, prev.month, prev.year, true)
            });
          }

          var remainingDaysLength = 7 - week.length;

          for (var _j = 0; _j < remainingDaysLength; _j++) {
            week.push({
              day: dayNo,
              month: month,
              year: year,
              today: this.isToday(today, dayNo, month, year),
              selectable: this.isSelectable(dayNo, month, year, false)
            });
            dayNo++;
          }
        } else {
          for (var _j2 = 0; _j2 < 7; _j2++) {
            if (dayNo > daysLength) {
              var next = this.getNextMonthAndYear(month, year);
              week.push({
                day: dayNo - daysLength,
                month: next.month,
                year: next.year,
                otherMonth: true,
                today: this.isToday(today, dayNo - daysLength, next.month, next.year),
                selectable: this.isSelectable(dayNo - daysLength, next.month, next.year, true)
              });
            } else {
              week.push({
                day: dayNo,
                month: month,
                year: year,
                today: this.isToday(today, dayNo, month, year),
                selectable: this.isSelectable(dayNo, month, year, false)
              });
            }

            dayNo++;
          }
        }

        if (this.props.showWeek) {
          weekNumbers.push(this.getWeekNumber(new Date(week[0].year, week[0].month, week[0].day)));
        }

        dates.push(week);
      }

      return {
        month: month,
        year: year,
        dates: dates,
        weekNumbers: weekNumbers
      };
    }
  }, {
    key: "getWeekNumber",
    value: function getWeekNumber(date) {
      var checkDate = new Date(date.getTime());
      checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));
      var time = checkDate.getTime();
      checkDate.setMonth(0);
      checkDate.setDate(1);
      return Math.floor(Math.round((time - checkDate.getTime()) / 86400000) / 7) + 1;
    }
  }, {
    key: "isSelectable",
    value: function isSelectable(day, month, year, otherMonth) {
      var validMin = true;
      var validMax = true;
      var validDate = true;
      var validDay = true;
      var validMonth = true;

      if (this.props.minDate) {
        if (this.props.minDate.getFullYear() > year) {
          validMin = false;
        } else if (this.props.minDate.getFullYear() === year) {
          if (this.props.minDate.getMonth() > month) {
            validMin = false;
          } else if (this.props.minDate.getMonth() === month) {
            if (this.props.minDate.getDate() > day) {
              validMin = false;
            }
          }
        }
      }

      if (this.props.maxDate) {
        if (this.props.maxDate.getFullYear() < year) {
          validMax = false;
        } else if (this.props.maxDate.getFullYear() === year) {
          if (this.props.maxDate.getMonth() < month) {
            validMax = false;
          } else if (this.props.maxDate.getMonth() === month) {
            if (this.props.maxDate.getDate() < day) {
              validMax = false;
            }
          }
        }
      }

      if (this.props.disabledDates) {
        validDate = !this.isDateDisabled(day, month, year);
      }

      if (this.props.disabledDays) {
        validDay = !this.isDayDisabled(day, month, year);
      }

      if (this.props.selectOtherMonths === false && otherMonth) {
        validMonth = false;
      }

      return validMin && validMax && validDate && validDay && validMonth;
    }
  }, {
    key: "isSelected",
    value: function isSelected(dateMeta) {
      if (this.props.value) {
        if (this.isSingleSelection()) {
          return this.isDateEquals(this.props.value, dateMeta);
        } else if (this.isMultipleSelection()) {
          var selected = false;
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = undefined;

          try {
            for (var _iterator = this.props.value[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var date = _step.value;
              selected = this.isDateEquals(date, dateMeta);

              if (selected) {
                break;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }

          return selected;
        } else if (this.isRangeSelection()) {
          if (this.props.value[1]) return this.isDateEquals(this.props.value[0], dateMeta) || this.isDateEquals(this.props.value[1], dateMeta) || this.isDateBetween(this.props.value[0], this.props.value[1], dateMeta);else {
            return this.isDateEquals(this.props.value[0], dateMeta);
          }
        }
      } else {
        return false;
      }
    }
  }, {
    key: "isMonthSelected",
    value: function isMonthSelected(month) {
      var viewDate = this.getViewDate();
      if (this.props.value && this.props.value instanceof Date) return this.props.value.getDate() === 1 && this.props.value.getMonth() === month && this.props.value.getFullYear() === viewDate.getFullYear();else return false;
    }
  }, {
    key: "isDateEquals",
    value: function isDateEquals(value, dateMeta) {
      if (value && value instanceof Date) return value.getDate() === dateMeta.day && value.getMonth() === dateMeta.month && value.getFullYear() === dateMeta.year;else return false;
    }
  }, {
    key: "isDateBetween",
    value: function isDateBetween(start, end, dateMeta) {
      var between = false;

      if (start && end) {
        var date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);
        return start.getTime() <= date.getTime() && end.getTime() >= date.getTime();
      }

      return between;
    }
  }, {
    key: "isSingleSelection",
    value: function isSingleSelection() {
      return this.props.selectionMode === 'single';
    }
  }, {
    key: "isRangeSelection",
    value: function isRangeSelection() {
      return this.props.selectionMode === 'range';
    }
  }, {
    key: "isMultipleSelection",
    value: function isMultipleSelection() {
      return this.props.selectionMode === 'multiple';
    }
  }, {
    key: "isToday",
    value: function isToday(today, day, month, year) {
      return today.getDate() === day && today.getMonth() === month && today.getFullYear() === year;
    }
  }, {
    key: "isDateDisabled",
    value: function isDateDisabled(day, month, year) {
      if (this.props.disabledDates) {
        for (var i = 0; i < this.props.disabledDates.length; i++) {
          var disabledDate = this.props.disabledDates[i];

          if (disabledDate.getFullYear() === year && disabledDate.getMonth() === month && disabledDate.getDate() === day) {
            return true;
          }
        }
      }

      return false;
    }
  }, {
    key: "isDayDisabled",
    value: function isDayDisabled(day, month, year) {
      if (this.props.disabledDays) {
        var weekday = new Date(year, month, day);
        var weekdayNumber = weekday.getDay();
        return this.props.disabledDays.indexOf(weekdayNumber) !== -1;
      }

      return false;
    }
  }, {
    key: "getValueToRender",
    value: function getValueToRender() {
      var formattedValue = '';

      if (this.props.value) {
        try {
          if (this.isSingleSelection()) {
            formattedValue = this.formatDateTime(this.props.value);
          } else if (this.isMultipleSelection()) {
            for (var i = 0; i < this.props.value.length; i++) {
              var dateAsString = this.formatDateTime(this.props.value[i]);
              formattedValue += dateAsString;

              if (i !== this.props.value.length - 1) {
                formattedValue += ', ';
              }
            }
          } else if (this.isRangeSelection()) {
            if (this.props.value && this.props.value.length) {
              var startDate = this.props.value[0];
              var endDate = this.props.value[1];
              formattedValue = this.formatDateTime(startDate);

              if (endDate) {
                formattedValue += ' - ' + this.formatDateTime(endDate);
              }
            }
          }
        } catch (err) {
          formattedValue = this.props.value;
        }
      }

      return formattedValue;
    }
  }, {
    key: "formatDateTime",
    value: function formatDateTime(date) {
      var formattedValue = null;

      if (date) {
        if (this.props.timeOnly) {
          formattedValue = this.formatTime(date);
        } else {
          formattedValue = this.formatDate(date, this.props.dateFormat);

          if (this.props.showTime) {
            formattedValue += ' ' + this.formatTime(date);
          }
        }
      }

      return formattedValue;
    }
  }, {
    key: "formatDate",
    value: function formatDate(date, format) {
      if (!date) {
        return '';
      }

      var iFormat;

      var lookAhead = function lookAhead(match) {
        var matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;

        if (matches) {
          iFormat++;
        }

        return matches;
      },
          formatNumber = function formatNumber(match, value, len) {
        var num = '' + value;

        if (lookAhead(match)) {
          while (num.length < len) {
            num = '0' + num;
          }
        }

        return num;
      },
          formatName = function formatName(match, value, shortNames, longNames) {
        return lookAhead(match) ? longNames[value] : shortNames[value];
      };

      var output = '';
      var literal = false;

      if (date) {
        for (iFormat = 0; iFormat < format.length; iFormat++) {
          if (literal) {
            if (format.charAt(iFormat) === '\'' && !lookAhead('\'')) {
              literal = false;
            } else {
              output += format.charAt(iFormat);
            }
          } else {
            switch (format.charAt(iFormat)) {
              case 'd':
                output += formatNumber('d', date.getDate(), 2);
                break;

              case 'D':
                output += formatName('D', date.getDay(), this.props.locale.dayNamesShort, this.props.locale.dayNames);
                break;

              case 'o':
                output += formatNumber('o', Math.round((new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);
                break;

              case 'm':
                output += formatNumber('m', date.getMonth() + 1, 2);
                break;

              case 'M':
                output += formatName('M', date.getMonth(), this.props.locale.monthNamesShort, this.props.locale.monthNames);
                break;

              case 'y':
                output += lookAhead('y') ? date.getFullYear() : (date.getFullYear() % 100 < 10 ? '0' : '') + date.getFullYear() % 100;
                break;

              case '@':
                output += date.getTime();
                break;

              case '!':
                output += date.getTime() * 10000 + this.ticksTo1970;
                break;

              case '\'':
                if (lookAhead('\'')) {
                  output += '\'';
                } else {
                  literal = true;
                }

                break;

              default:
                output += format.charAt(iFormat);
            }
          }
        }
      }

      return output;
    }
  }, {
    key: "formatTime",
    value: function formatTime(date) {
      if (!date) {
        return '';
      }

      var output = '';
      var hours = date.getHours();
      var minutes = date.getMinutes();
      var seconds = date.getSeconds();

      if (this.props.hourFormat === '12' && hours > 11 && hours !== 12) {
        hours -= 12;
      }

      if (this.props.hourFormat === '12') {
        output += hours === 0 ? 12 : hours < 10 ? '0' + hours : hours;
      } else {
        output += hours < 10 ? '0' + hours : hours;
      }

      output += ':';
      output += minutes < 10 ? '0' + minutes : minutes;

      if (this.props.showSeconds) {
        output += ':';
        output += seconds < 10 ? '0' + seconds : seconds;
      }

      if (this.props.hourFormat === '12') {
        output += date.getHours() > 11 ? ' PM' : ' AM';
      }

      return output;
    }
  }, {
    key: "parseValueFromString",
    value: function parseValueFromString(text) {
      if (!text || text.trim().length === 0) {
        return null;
      }

      var value;

      if (this.isSingleSelection()) {
        value = this.parseDateTime(text);
      } else if (this.isMultipleSelection()) {
        var tokens = text.split(',');
        value = [];
        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;

        try {
          for (var _iterator2 = tokens[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var token = _step2.value;
            value.push(this.parseDateTime(token.trim()));
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }
      } else if (this.isRangeSelection()) {
        var _tokens = text.split(' - ');

        value = [];

        for (var i = 0; i < _tokens.length; i++) {
          value[i] = this.parseDateTime(_tokens[i].trim());
        }
      }

      return value;
    }
  }, {
    key: "parseDateTime",
    value: function parseDateTime(text) {
      var date;
      var parts = text.split(' ');

      if (this.props.timeOnly) {
        date = new Date();
        this.populateTime(date, parts[0], parts[1]);
      } else {
        if (this.props.showTime) {
          date = this.parseDate(parts[0], this.props.dateFormat);
          this.populateTime(date, parts[1], parts[2]);
        } else {
          date = this.parseDate(text, this.props.dateFormat);
        }
      }

      return date;
    }
  }, {
    key: "populateTime",
    value: function populateTime(value, timeString, ampm) {
      if (this.props.hourFormat === '12' && ampm !== 'PM' && ampm !== 'AM') {
        throw new Error('Invalid Time');
      }

      var time = this.parseTime(timeString, ampm);
      value.setHours(time.hour);
      value.setMinutes(time.minute);
      value.setSeconds(time.second);
    }
  }, {
    key: "parseTime",
    value: function parseTime(value, ampm) {
      var tokens = value.split(':');
      var validTokenLength = this.props.showSeconds ? 3 : 2;

      if (tokens.length !== validTokenLength || tokens[0].length !== 2 || tokens[1].length !== 2 || this.props.showSeconds && tokens[2].length !== 2) {
        throw new Error('Invalid time');
      }

      var h = parseInt(tokens[0], 10);
      var m = parseInt(tokens[1], 10);
      var s = this.props.showSeconds ? parseInt(tokens[2], 10) : null;

      if (isNaN(h) || isNaN(m) || h > 23 || m > 59 || this.props.hourFormat === '12' && h > 12 || this.props.showSeconds && (isNaN(s) || s > 59)) {
        throw new Error('Invalid time');
      } else {
        if (this.props.hourFormat === '12' && h !== 12 && ampm === 'PM') {
          h += 12;
        }

        return {
          hour: h,
          minute: m,
          second: s
        };
      }
    } // Ported from jquery-ui datepicker parseDate

  }, {
    key: "parseDate",
    value: function parseDate(value, format) {
      if (format == null || value == null) {
        throw new Error('Invalid arguments');
      }

      if (value.length !== format.length + 2) { // +2 is added because four digit year is represented as "yy" in primereact calendar format
        // workaround for https://github.com/primefaces/primereact/issues/1119
        throw new Error("User input doesn't match the format");
      }

      value = _typeof(value) === "object" ? value.toString() : value + "";

      if (value === "") {
        return null;
      }

      var iFormat,
          dim,
          extra,
          iValue = 0,
          shortYearCutoff = typeof this.props.shortYearCutoff !== "string" ? this.props.shortYearCutoff : new Date().getFullYear() % 100 + parseInt(this.props.shortYearCutoff, 10),
          year = -1,
          month = -1,
          day = -1,
          doy = -1,
          literal = false,
          date,
          lookAhead = function lookAhead(match) {
        var matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;

        if (matches) {
          iFormat++;
        }

        return matches;
      },
          getNumber = function getNumber(match) {
        var isDoubled = lookAhead(match),
            size = match === "@" ? 14 : match === "!" ? 20 : match === "y" && isDoubled ? 4 : match === "o" ? 3 : 2,
            minSize = match === "y" ? size : 1,
            digits = new RegExp("^\\d{" + minSize + "," + size + "}"),
            num = value.substring(iValue).match(digits);

        if (!num) {
          throw new Error('Missing number at position ' + iValue);
        }

        iValue += num[0].length;
        return parseInt(num[0], 10);
      },
          getName = function getName(match, shortNames, longNames) {
        var index = -1;
        var arr = lookAhead(match) ? longNames : shortNames;
        var names = [];

        for (var i = 0; i < arr.length; i++) {
          names.push([i, arr[i]]);
        }

        names.sort(function (a, b) {
          return -(a[1].length - b[1].length);
        });

        for (var _i = 0; _i < names.length; _i++) {
          var name = names[_i][1];

          if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {
            index = names[_i][0];
            iValue += name.length;
            break;
          }
        }

        if (index !== -1) {
          return index + 1;
        } else {
          throw new Error('Unknown name at position ' + iValue);
        }
      },
          checkLiteral = function checkLiteral() {
        if (value.charAt(iValue) !== format.charAt(iFormat)) {
          throw new Error('Unexpected literal at position ' + iValue);
        }

        iValue++;
      };

      if (this.props.view === 'month') {
        day = 1;
      }

      for (iFormat = 0; iFormat < format.length; iFormat++) {
        if (literal) {
          if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
            literal = false;
          } else {
            checkLiteral();
          }
        } else {
          switch (format.charAt(iFormat)) {
            case "d":
              day = getNumber("d");
              break;

            case "D":
              getName("D", this.props.locale.dayNamesShort, this.props.locale.dayNames);
              break;

            case "o":
              doy = getNumber("o");
              break;

            case "m":
              month = getNumber("m");
              break;

            case "M":
              month = getName("M", this.props.locale.monthNamesShort, this.props.locale.monthNames);
              break;

            case "y":
              year = getNumber("y");
              break;

            case "@":
              date = new Date(getNumber("@"));
              year = date.getFullYear();
              month = date.getMonth() + 1;
              day = date.getDate();
              break;

            case "!":
              date = new Date((getNumber("!") - this.ticksTo1970) / 10000);
              year = date.getFullYear();
              month = date.getMonth() + 1;
              day = date.getDate();
              break;

            case "'":
              if (lookAhead("'")) {
                checkLiteral();
              } else {
                literal = true;
              }

              break;

            default:
              checkLiteral();
          }
        }
      }

      if (iValue < value.length) {
        extra = value.substr(iValue);

        if (!/^\s+/.test(extra)) {
          throw new Error('Extra/unparsed characters found in date: ' + extra);
        }
      }

      if (year === -1) {
        year = new Date().getFullYear();
      } else if (year < 100) {
        year += new Date().getFullYear() - new Date().getFullYear() % 100 + (year <= shortYearCutoff ? 0 : -100);
      }

      if (doy > -1) {
        month = 1;
        day = doy;

        do {
          dim = this.getDaysCountInMonth(year, month - 1);

          if (day <= dim) {
            break;
          }

          month++;
          day -= dim;
        } while (true);
      }

      date = this.daylightSavingAdjust(new Date(year, month - 1, day));

      if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {
        throw new Error('Invalid date'); // E.g. 31/02/00
      }

      return date;
    }
  }, {
    key: "renderBackwardNavigator",
    value: function renderBackwardNavigator() {
      return _react.default.createElement("button", {
        className: "p-datepicker-prev p-link",
        onClick: this.navBackward
      }, _react.default.createElement("span", {
        className: "p-datepicker-prev-icon pi pi-chevron-left"
      }));
    }
  }, {
    key: "renderForwardNavigator",
    value: function renderForwardNavigator() {
      return _react.default.createElement("button", {
        className: "p-datepicker-next p-link",
        onClick: this.navForward
      }, _react.default.createElement("span", {
        className: "p-datepicker-next-icon pi pi-chevron-right"
      }));
    }
  }, {
    key: "isInMinYear",
    value: function isInMinYear(viewDate) {
      return this.props.minDate && this.props.minDate.getFullYear() === viewDate.getFullYear();
    }
  }, {
    key: "isInMaxYear",
    value: function isInMaxYear(viewDate) {
      return this.props.maxDate && this.props.maxDate.getFullYear() === viewDate.getFullYear();
    }
  }, {
    key: "renderTitleMonthElement",
    value: function renderTitleMonthElement(month) {
      var _this7 = this;

      if (this.props.monthNavigator && this.props.view !== 'month') {
        var viewDate = this.props.onViewDateChange ? this.props.viewDate : this.state.viewDate;
        var viewMonth = viewDate.getMonth();
        return _react.default.createElement("select", {
          className: "p-datepicker-month",
          onChange: this.onMonthDropdownChange,
          value: viewMonth
        }, this.props.locale.monthNames.map(function (month, index) {
          if ((!_this7.isInMinYear(viewDate) || index >= _this7.props.minDate.getMonth()) && (!_this7.isInMaxYear(viewDate) || index <= _this7.props.maxDate.getMonth())) {
            return _react.default.createElement("option", {
              key: month,
              value: index
            }, month);
          }

          return null;
        }));
      } else {
        return _react.default.createElement("span", {
          className: "p-datepicker-month"
        }, this.props.locale.monthNames[month]);
      }
    }
  }, {
    key: "renderTitleYearElement",
    value: function renderTitleYearElement(year) {
      var _this8 = this;

      if (this.props.yearNavigator) {
        var yearOptions = [];
        var years = this.props.yearRange.split(':');
        var yearStart = parseInt(years[0], 10);
        var yearEnd = parseInt(years[1], 10);

        for (var i = yearStart; i <= yearEnd; i++) {
          yearOptions.push(i);
        }

        var viewDate = this.props.onViewDateChange ? this.props.viewDate : this.state.viewDate;
        var viewYear = viewDate.getFullYear();
        return _react.default.createElement("select", {
          className: "p-datepicker-year",
          onChange: this.onYearDropdownChange,
          value: viewYear
        }, yearOptions.map(function (year) {
          if (!(_this8.props.minDate && _this8.props.minDate.getFullYear() > year) && !(_this8.props.maxDate && _this8.props.maxDate.getFullYear() < year)) {
            return _react.default.createElement("option", {
              key: year,
              value: year
            }, year);
          }

          return null;
        }));
      } else {
        return _react.default.createElement("span", {
          className: "p-datepicker-year"
        }, year);
      }
    }
  }, {
    key: "renderTitle",
    value: function renderTitle(monthMetaData) {
      var month = this.renderTitleMonthElement(monthMetaData.month);
      var year = this.renderTitleYearElement(monthMetaData.year);
      return _react.default.createElement("div", {
        className: "p-datepicker-title"
      }, month, year);
    }
  }, {
    key: "renderDayNames",
    value: function renderDayNames(weekDays) {
      var dayNames = weekDays.map(function (weekDay) {
        return _react.default.createElement("th", {
          key: weekDay,
          scope: "col"
        }, _react.default.createElement("span", null, weekDay));
      });

      if (this.props.showWeek) {
        var weekHeader = _react.default.createElement("th", {
          scope: "col",
          key: 'wn',
          className: "p-datepicker-weekheader p-disabled"
        }, _react.default.createElement("span", null, this.props.locale['weekHeader']));

        return [weekHeader].concat(_toConsumableArray(dayNames));
      } else {
        return dayNames;
      }
    }
  }, {
    key: "renderDateCellContent",
    value: function renderDateCellContent(date, className) {
      var _this9 = this;

      var content = this.props.dateTemplate ? this.props.dateTemplate(date) : date.day;
      return _react.default.createElement("span", {
        className: className,
        onClick: function onClick(e) {
          return _this9.onDateSelect(e, date);
        }
      }, content);
    }
  }, {
    key: "renderWeek",
    value: function renderWeek(weekDates, weekNumber) {
      var _this10 = this;

      var week = weekDates.map(function (date) {
        var selected = _this10.isSelected(date);

        var cellClassName = (0, _classnames.default)({
          'p-datepicker-other-month': date.otherMonth,
          'p-datepicker-today': date.today
        });
        var dateClassName = (0, _classnames.default)({
          'p-highlight': selected,
          'p-disabled': !date.selectable
        });

        var content = _this10.renderDateCellContent(date, dateClassName);

        return _react.default.createElement("td", {
          key: date.day,
          className: cellClassName
        }, content);
      });

      if (this.props.showWeek) {
        var weekNumberCell = _react.default.createElement("td", {
          key: 'wn' + weekNumber,
          className: "p-datepicker-weeknumber"
        }, _react.default.createElement("span", {
          className: "p-disabled"
        }, weekNumber));

        return [weekNumberCell].concat(_toConsumableArray(week));
      } else {
        return week;
      }
    }
  }, {
    key: "renderDates",
    value: function renderDates(monthMetaData) {
      var _this11 = this;

      return monthMetaData.dates.map(function (weekDates, index) {
        return _react.default.createElement("tr", {
          key: index
        }, _this11.renderWeek(weekDates, monthMetaData.weekNumbers[index]));
      });
    }
  }, {
    key: "renderDateViewGrid",
    value: function renderDateViewGrid(monthMetaData, weekDays) {
      var dayNames = this.renderDayNames(weekDays);
      var dates = this.renderDates(monthMetaData);
      return _react.default.createElement("div", {
        className: "p-datepicker-calendar-container"
      }, _react.default.createElement("table", {
        className: "p-datepicker-calendar"
      }, _react.default.createElement("thead", null, _react.default.createElement("tr", null, dayNames)), _react.default.createElement("tbody", null, dates)));
    }
  }, {
    key: "renderMonth",
    value: function renderMonth(monthMetaData, index) {
      var weekDays = this.createWeekDays();
      var backwardNavigator = index === 0 ? this.renderBackwardNavigator() : null;
      var forwardNavigator = this.props.numberOfMonths === 1 || index === this.props.numberOfMonths - 1 ? this.renderForwardNavigator() : null;
      var title = this.renderTitle(monthMetaData);
      var dateViewGrid = this.renderDateViewGrid(monthMetaData, weekDays);
      var header = this.props.headerTemplate ? this.props.headerTemplate() : null;
      return _react.default.createElement("div", {
        key: monthMetaData.month,
        className: "p-datepicker-group"
      }, header, _react.default.createElement("div", {
        className: "p-datepicker-header"
      }, backwardNavigator, forwardNavigator, title), dateViewGrid);
    }
  }, {
    key: "renderMonths",
    value: function renderMonths(monthsMetaData) {
      var _this12 = this;

      return monthsMetaData.map(function (monthMetaData, index) {
        return _this12.renderMonth(monthMetaData, index);
      });
    }
  }, {
    key: "renderDateView",
    value: function renderDateView() {
      var viewDate = this.props.onViewDateChange ? this.props.viewDate : this.state.viewDate;
      var monthsMetaData = this.createMonths(viewDate.getMonth(), viewDate.getFullYear());
      var months = this.renderMonths(monthsMetaData);
      return _react.default.createElement(_react.default.Fragment, null, months);
    }
  }, {
    key: "renderMonthViewMonth",
    value: function renderMonthViewMonth(index) {
      var _this13 = this;

      var className = (0, _classnames.default)('p-monthpicker-month', {
        'p-highlight': this.isMonthSelected(index)
      });
      var monthName = this.props.locale.monthNamesShort[index];
      return _react.default.createElement("span", {
        key: monthName,
        className: className,
        onClick: function onClick(event) {
          return _this13.onMonthSelect(event, index);
        }
      }, monthName);
    }
  }, {
    key: "renderMonthViewMonths",
    value: function renderMonthViewMonths() {
      var months = [];

      for (var i = 0; i <= 11; i++) {
        months.push(this.renderMonthViewMonth(i));
      }

      return months;
    }
  }, {
    key: "renderMonthView",
    value: function renderMonthView() {
      var backwardNavigator = this.renderBackwardNavigator();
      var forwardNavigator = this.renderForwardNavigator();
      var yearElement = this.renderTitleYearElement(this.getViewDate().getFullYear());
      var months = this.renderMonthViewMonths();
      return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement("div", {
        className: "p-datepicker-header"
      }, backwardNavigator, forwardNavigator, _react.default.createElement("div", {
        className: "p-datepicker-title"
      }, yearElement)), _react.default.createElement("div", {
        className: "p-monthpicker"
      }, months));
    }
  }, {
    key: "renderDatePicker",
    value: function renderDatePicker() {
      if (!this.props.timeOnly) {
        if (this.props.view === 'date') {
          return this.renderDateView();
        } else if (this.props.view === 'month') {
          return this.renderMonthView();
        } else {
          return null;
        }
      }
    }
  }, {
    key: "renderHourPicker",
    value: function renderHourPicker() {
      var currentTime = this.props.value && this.props.value instanceof Date ? this.props.value : this.getViewDate();
      var hour = currentTime.getHours();

      if (this.props.hourFormat === '12') {
        if (hour === 0) hour = 12;else if (hour > 11 && hour !== 12) hour = hour - 12;
      }

      var hourDisplay = hour < 10 ? '0' + hour : hour;
      return _react.default.createElement("div", {
        className: "p-hour-picker"
      }, _react.default.createElement("button", {
        className: "p-link",
        onClick: this.incrementHour
      }, _react.default.createElement("span", {
        className: "pi pi-chevron-up"
      })), _react.default.createElement("span", null, hourDisplay), _react.default.createElement("button", {
        className: "p-link",
        onClick: this.decrementHour
      }, _react.default.createElement("span", {
        className: "pi pi-chevron-down"
      })));
    }
  }, {
    key: "renderMinutePicker",
    value: function renderMinutePicker() {
      var currentTime = this.props.value && this.props.value instanceof Date ? this.props.value : this.getViewDate();
      var minute = currentTime.getMinutes();
      var minuteDisplay = minute < 10 ? '0' + minute : minute;
      return _react.default.createElement("div", {
        className: "p-minute-picker"
      }, _react.default.createElement("button", {
        className: "p-link",
        onClick: this.incrementMinute
      }, _react.default.createElement("span", {
        className: "pi pi-chevron-up"
      })), _react.default.createElement("span", null, minuteDisplay), _react.default.createElement("button", {
        className: "p-link",
        onClick: this.decrementMinute
      }, _react.default.createElement("span", {
        className: "pi pi-chevron-down"
      })));
    }
  }, {
    key: "renderSecondPicker",
    value: function renderSecondPicker() {
      if (this.props.showSeconds) {
        var currentTime = this.props.value && this.props.value instanceof Date ? this.props.value : this.getViewDate();
        var second = currentTime.getSeconds();
        var secondDisplay = second < 10 ? '0' + second : second;
        return _react.default.createElement("div", {
          className: "p-second-picker"
        }, _react.default.createElement("button", {
          className: "p-link",
          onClick: this.incrementSecond
        }, _react.default.createElement("span", {
          className: "pi pi-chevron-up"
        })), _react.default.createElement("span", null, secondDisplay), _react.default.createElement("button", {
          className: "p-link",
          onClick: this.decrementSecond
        }, _react.default.createElement("span", {
          className: "pi pi-chevron-down"
        })));
      } else {
        return null;
      }
    }
  }, {
    key: "renderAmPmPicker",
    value: function renderAmPmPicker() {
      if (this.props.hourFormat === '12') {
        var currentTime = this.props.value && this.props.value instanceof Date ? this.props.value : this.getViewDate();
        var hour = currentTime.getHours();
        var display = hour > 11 ? 'PM' : 'AM';
        return _react.default.createElement("div", {
          className: "p-ampm-picker"
        }, _react.default.createElement("button", {
          className: "p-link",
          onClick: this.toggleAmPm
        }, _react.default.createElement("span", {
          className: "pi pi-chevron-up"
        })), _react.default.createElement("span", null, display), _react.default.createElement("button", {
          className: "p-link",
          onClick: this.toggleAmPm
        }, _react.default.createElement("span", {
          className: "pi pi-chevron-down"
        })));
      } else {
        return null;
      }
    }
  }, {
    key: "renderSeparator",
    value: function renderSeparator() {
      return _react.default.createElement("div", {
        className: "p-separator"
      }, _react.default.createElement("span", {
        className: "p-separator-spacer"
      }, _react.default.createElement("span", {
        className: "pi pi-chevron-up"
      })), _react.default.createElement("span", null, ":"), _react.default.createElement("span", {
        className: "p-separator-spacer"
      }, _react.default.createElement("span", {
        className: "pi pi-chevron-down"
      })));
    }
  }, {
    key: "renderTimePicker",
    value: function renderTimePicker() {
      if (this.props.showTime || this.props.timeOnly) {
        return _react.default.createElement("div", {
          className: "p-timepicker"
        }, this.renderHourPicker(), this.renderSeparator(), this.renderMinutePicker(), this.props.showSeconds && this.renderSeparator(), this.renderSecondPicker(), this.props.hourFormat === '12' && this.renderSeparator(), this.renderAmPmPicker());
      } else {
        return null;
      }
    }
  }, {
    key: "renderInputElement",
    value: function renderInputElement() {
      var _this14 = this;

      if (!this.props.inline) {
        var className = (0, _classnames.default)('p-inputtext p-component', this.props.inputClassName);
        var value = this.getValueToRender();
        return _react.default.createElement(_InputText.InputText, {
          ref: function ref(el) {
            return _this14.inputElement = _reactDom.default.findDOMNode(el);
          },
          id: this.props.inputId,
          name: this.props.name,
          value: value,
          type: "text",
          className: className,
          style: this.props.inputStyle,
          readOnly: this.props.readOnlyInput,
          disabled: this.props.disabled,
          tabIndex: this.props.tabIndex,
          required: this.props.required,
          autoComplete: "off",
          placeholder: this.props.placeholder,
          onChange: this.onInputChange,
          onFocus: this.onInputFocus,
          onBlur: this.onInputBlur,
          onKeyDown: this.onInputKeyDown
        });
      } else {
        return null;
      }
    }
  }, {
    key: "renderButton",
    value: function renderButton() {
      if (this.props.showIcon) {
        return _react.default.createElement(_Button.Button, {
          type: "button",
          icon: this.props.icon,
          onClick: this.onButtonClick,
          tabIndex: "-1",
          disabled: this.props.disabled,
          className: "p-datepicker-trigger p-calendar-button"
        });
      } else {
        return null;
      }
    }
  }, {
    key: "renderButtonBar",
    value: function renderButtonBar() {
      if (this.props.showButtonBar) {
        return _react.default.createElement("div", {
          className: "p-datepicker-buttonbar"
        }, _react.default.createElement(_Button.Button, {
          type: "button",
          label: this.props.locale.today,
          onClick: this.onTodayButtonClick,
          className: this.props.todayButtonClassName
        }), _react.default.createElement(_Button.Button, {
          type: "button",
          label: this.props.locale.clear,
          onClick: this.onClearButtonClick,
          className: this.props.clearButtonStyleClass
        }));
      } else {
        return null;
      }
    }
  }, {
    key: "renderFooter",
    value: function renderFooter() {
      if (this.props.footerTemplate) {
        var content = this.props.footerTemplate();
        return _react.default.createElement("div", {
          className: "p-datepicker-footer"
        }, content);
      } else {
        return null;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this15 = this;

      var className = (0, _classnames.default)('p-calendar', this.props.className, {
        'p-calendar-w-btn': this.props.showIcon,
        'p-calendar-timeonly': this.props.timeOnly,
        'p-inputwrapper-filled': this.props.value
      });
      var panelClassName = (0, _classnames.default)('p-datepicker p-component', this.props.panelClassName, {
        'p-datepicker-inline': this.props.inline,
        'p-input-overlay': !this.props.inline,
        'p-shadow': !this.props.inline,
        'p-disabled': this.props.disabled,
        'p-datepicker-timeonly': this.props.timeOnly,
        'p-datepicker-multiple-month': this.props.numberOfMonths > 1,
        'p-datepicker-monthpicker': this.props.view === 'month',
        'p-datepicker-touch-ui': this.props.touchUI
      });
      var input = this.renderInputElement();
      var button = this.renderButton();
      var datePicker = this.renderDatePicker();
      var timePicker = this.renderTimePicker();
      var buttonBar = this.renderButtonBar();
      var footer = this.renderFooter();
      return _react.default.createElement("span", {
        ref: function ref(el) {
          return _this15.container = el;
        },
        id: this.props.id,
        className: className,
        style: this.props.style
      }, input, button, _react.default.createElement(_CalendarPanel.CalendarPanel, {
        ref: function ref(el) {
          return _this15.panel = _reactDom.default.findDOMNode(el);
        },
        className: panelClassName,
        style: this.props.panelStyle,
        appendTo: this.props.appendTo
      }, datePicker, timePicker, buttonBar, footer));
    }
  }]);

  return Calendar;
}(_react.Component);

exports.Calendar = Calendar;

_defineProperty(Calendar, "defaultProps", {
  id: null,
  name: null,
  value: null,
  viewDate: null,
  style: null,
  className: null,
  inline: false,
  selectionMode: 'single',
  inputId: null,
  inputStyle: null,
  inputClassName: null,
  required: false,
  readOnlyInput: false,
  disabled: false,
  tabIndex: null,
  placeholder: null,
  showIcon: false,
  icon: 'pi pi-calendar',
  showOnFocus: true,
  numberOfMonths: 1,
  view: 'date',
  touchUI: false,
  showTime: false,
  timeOnly: false,
  showSeconds: false,
  hourFormat: '24',
  stepHour: 1,
  stepMinute: 1,
  stepSecond: 1,
  shortYearCutoff: '+10',
  hideOnDateTimeSelect: false,
  showWeek: false,
  locale: {
    firstDayOfWeek: 0,
    dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
    monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    today: 'Today',
    clear: 'Clear',
    weekHeader: 'Wk'
  },
  dateFormat: 'mm/dd/yy',
  panelStyle: null,
  panelClassName: null,
  monthNavigator: false,
  yearNavigator: false,
  disabledDates: null,
  disabledDays: null,
  minDate: null,
  maxDate: null,
  maxDateCount: null,
  showOtherMonths: true,
  selectOtherMonths: false,
  showButtonBar: false,
  todayButtonClassName: 'p-button-secondary',
  clearButtonStyleClass: 'p-button-secondary',
  autoZIndex: true,
  baseZIndex: 0,
  appendTo: null,
  tooltip: null,
  tooltipOptions: null,
  dateTemplate: null,
  headerTemplate: null,
  footerTemplate: null,
  onFocus: null,
  onBlur: null,
  onInput: null,
  onSelect: null,
  onChange: null,
  onViewDateChange: null,
  onTodayButtonClick: null,
  onClearButtonClick: null
});

_defineProperty(Calendar, "propTypes", {
  id: _propTypes.default.string,
  name: _propTypes.default.string,
  value: _propTypes.default.any,
  viewDate: _propTypes.default.any,
  style: _propTypes.default.object,
  className: _propTypes.default.string,
  inline: _propTypes.default.bool,
  selectionMode: _propTypes.default.string,
  inputId: _propTypes.default.string,
  inputStyle: _propTypes.default.object,
  inputClassName: _propTypes.default.string,
  required: _propTypes.default.bool,
  readOnlyInput: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  tabIndex: _propTypes.default.string,
  placeholder: _propTypes.default.string,
  showIcon: _propTypes.default.bool,
  icon: _propTypes.default.string,
  showOnFocus: _propTypes.default.bool,
  numberOfMonths: _propTypes.default.number,
  view: _propTypes.default.string,
  touchUI: _propTypes.default.bool,
  showTime: _propTypes.default.bool,
  timeOnly: _propTypes.default.bool,
  showSeconds: _propTypes.default.bool,
  hourFormat: _propTypes.default.string,
  stepHour: _propTypes.default.number,
  stepMinute: _propTypes.default.number,
  stepSecond: _propTypes.default.number,
  shortYearCutoff: _propTypes.default.string,
  hideOnDateTimeSelect: _propTypes.default.bool,
  showWeek: _propTypes.default.bool,
  locale: _propTypes.default.object,
  dateFormat: _propTypes.default.string,
  panelStyle: _propTypes.default.object,
  panelClassName: _propTypes.default.string,
  monthNavigator: _propTypes.default.bool,
  yearNavigator: _propTypes.default.bool,
  disabledDates: _propTypes.default.array,
  disabledDays: _propTypes.default.array,
  minDate: _propTypes.default.any,
  maxDate: _propTypes.default.any,
  maxDateCount: _propTypes.default.number,
  showOtherMonths: _propTypes.default.bool,
  selectOtherMonths: _propTypes.default.bool,
  showButtonBar: _propTypes.default.bool,
  todayButtonClassName: _propTypes.default.string,
  clearButtonStyleClass: _propTypes.default.string,
  autoZIndex: _propTypes.default.bool,
  baseZIndex: _propTypes.default.number,
  appendTo: _propTypes.default.any,
  tooltip: _propTypes.default.string,
  tooltipOptions: _propTypes.default.object,
  dateTemplate: _propTypes.default.func,
  headerTemplate: _propTypes.default.func,
  footerTemplate: _propTypes.default.func,
  onFocus: _propTypes.default.func,
  onBlur: _propTypes.default.func,
  onInput: _propTypes.default.func,
  onSelect: _propTypes.default.func,
  onChange: _propTypes.default.func,
  onViewDateChange: _propTypes.default.func,
  onTodayButtonClick: _propTypes.default.func,
  onClearButtonClick: _propTypes.default.func
});

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InputText = void 0;

var _react = _interopRequireWildcard(__webpack_require__(0));

var _propTypes = _interopRequireDefault(__webpack_require__(14));

var _classnames = _interopRequireDefault(__webpack_require__(1));

var _KeyFilter = _interopRequireDefault(__webpack_require__(103));

var _Tooltip = _interopRequireDefault(__webpack_require__(32));

var _DomHandler = _interopRequireDefault(__webpack_require__(21));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var InputText =
/*#__PURE__*/
function (_Component) {
  _inherits(InputText, _Component);

  function InputText(props) {
    var _this;

    _classCallCheck(this, InputText);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(InputText).call(this, props));
    _this.onInput = _this.onInput.bind(_assertThisInitialized(_this));
    _this.onKeyPress = _this.onKeyPress.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(InputText, [{
    key: "onKeyPress",
    value: function onKeyPress(event) {
      if (this.props.onKeyPress) {
        this.props.onKeyPress(event);
      }

      if (this.props.keyfilter) {
        _KeyFilter.default.onKeyPress(event, this.props.keyfilter, this.props.validateOnly);
      }
    }
  }, {
    key: "onInput",
    value: function onInput(event) {
      var validatePattern = true;

      if (this.props.keyfilter && this.props.validateOnly) {
        validatePattern = _KeyFilter.default.validate(event, this.props.keyfilter);
      }

      if (this.props.onInput) {
        this.props.onInput(event, validatePattern);
      }

      if (!this.props.onChange) {
        if (event.target.value.length > 0) _DomHandler.default.addClass(event.target, 'p-filled');else _DomHandler.default.removeClass(event.target, 'p-filled');
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.tooltip) {
        this.renderTooltip();
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (prevProps.tooltip !== this.props.tooltip) {
        if (this.tooltip) this.tooltip.updateContent(this.props.tooltip);else this.renderTooltip();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.tooltip) {
        this.tooltip.destroy();
        this.tooltip = null;
      }
    }
  }, {
    key: "renderTooltip",
    value: function renderTooltip() {
      this.tooltip = new _Tooltip.default({
        target: this.element,
        content: this.props.tooltip,
        options: this.props.tooltipOptions
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var className = (0, _classnames.default)('p-inputtext p-component', this.props.className, {
        'p-disabled': this.props.disabled,
        'p-filled': this.props.value != null && this.props.value.toString().length > 0 || this.props.defaultValue != null && this.props.defaultValue.toString().length > 0
      });
      var inputProps = Object.assign({}, this.props);
      delete inputProps.onInput;
      delete inputProps.onKeyPress;
      delete inputProps.keyfilter;
      delete inputProps.validateOnly;
      delete inputProps.tooltip;
      delete inputProps.tooltipOptions;
      return _react.default.createElement("input", _extends({
        ref: function ref(el) {
          return _this2.element = el;
        }
      }, inputProps, {
        className: className,
        onInput: this.onInput,
        onKeyPress: this.onKeyPress
      }));
    }
  }]);

  return InputText;
}(_react.Component);

exports.InputText = InputText;

_defineProperty(InputText, "defaultProps", {
  onInput: null,
  onKeyPress: null,
  keyfilter: null,
  validateOnly: false,
  tooltip: null,
  tooltipOptions: null
});

_defineProperty(InputText, "propTypes", {
  onInput: _propTypes.default.func,
  onKeyPress: _propTypes.default.func,
  keyfilter: _propTypes.default.any,
  validateOnly: _propTypes.default.bool,
  tooltip: _propTypes.default.string,
  tooltipOptions: _propTypes.default.object
});

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _DomHandler = _interopRequireDefault(__webpack_require__(21));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var KeyFilter =
/*#__PURE__*/
function () {
  function KeyFilter() {
    _classCallCheck(this, KeyFilter);
  }

  _createClass(KeyFilter, null, [{
    key: "isNavKeyPress",

    /* eslint-disable */

    /* eslint-enable */
    value: function isNavKeyPress(e) {
      var k = e.keyCode;
      k = _DomHandler.default.getBrowser().safari ? KeyFilter.SAFARI_KEYS[k] || k : k;
      return k >= 33 && k <= 40 || k === KeyFilter.KEYS.RETURN || k === KeyFilter.KEYS.TAB || k === KeyFilter.KEYS.ESC;
    }
  }, {
    key: "isSpecialKey",
    value: function isSpecialKey(e) {
      var k = e.keyCode;
      return k === 9 || k === 13 || k === 27 || k === 16 || k === 17 || k >= 18 && k <= 20 || _DomHandler.default.getBrowser().opera && !e.shiftKey && (k === 8 || k >= 33 && k <= 35 || k >= 36 && k <= 39 || k >= 44 && k <= 45);
    }
  }, {
    key: "getKey",
    value: function getKey(e) {
      var k = e.keyCode || e.charCode;
      return _DomHandler.default.getBrowser().safari ? KeyFilter.SAFARI_KEYS[k] || k : k;
    }
  }, {
    key: "getCharCode",
    value: function getCharCode(e) {
      return e.charCode || e.keyCode || e.which;
    }
  }, {
    key: "onKeyPress",
    value: function onKeyPress(e, keyfilter, validateOnly) {
      if (validateOnly) {
        return;
      }

      var regex = KeyFilter.DEFAULT_MASKS[keyfilter] ? KeyFilter.DEFAULT_MASKS[keyfilter] : keyfilter;

      var browser = _DomHandler.default.getBrowser();

      if (e.ctrlKey || e.altKey) {
        return;
      }

      var k = this.getKey(e);

      if (browser.mozilla && (this.isNavKeyPress(e) || k === KeyFilter.KEYS.BACKSPACE || k === KeyFilter.KEYS.DELETE && e.charCode === 0)) {
        return;
      }

      var c = this.getCharCode(e);
      var cc = String.fromCharCode(c);

      if (browser.mozilla && (this.isSpecialKey(e) || !cc)) {
        return;
      }

      if (!regex.test(cc)) {
        e.preventDefault();
      }
    }
  }, {
    key: "validate",
    value: function validate(e, keyfilter) {
      var value = e.target.value,
          validatePattern = true;

      if (value && !keyfilter.test(value)) {
        validatePattern = false;
      }

      return validatePattern;
    }
  }]);

  return KeyFilter;
}();

exports.default = KeyFilter;

_defineProperty(KeyFilter, "DEFAULT_MASKS", {
  pint: /[\d]/,
  int: /[\d\-]/,
  pnum: /[\d\.]/,
  money: /[\d\.\s,]/,
  num: /[\d\-\.]/,
  hex: /[0-9a-f]/i,
  email: /[a-z0-9_\.\-@]/i,
  alpha: /[a-z_]/i,
  alphanum: /[a-z0-9_]/i
});

_defineProperty(KeyFilter, "KEYS", {
  TAB: 9,
  RETURN: 13,
  ESC: 27,
  BACKSPACE: 8,
  DELETE: 46
});

_defineProperty(KeyFilter, "SAFARI_KEYS", {
  63234: 37,
  // left
  63235: 39,
  // right
  63232: 38,
  // up
  63233: 40,
  // down
  63276: 33,
  // page up
  63277: 34,
  // page down
  63272: 46,
  // delete
  63273: 36,
  // home
  63275: 35 // end

});

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Button = void 0;

var _react = _interopRequireWildcard(__webpack_require__(0));

var _propTypes = _interopRequireDefault(__webpack_require__(14));

var _classnames = _interopRequireDefault(__webpack_require__(1));

var _Tooltip = _interopRequireDefault(__webpack_require__(32));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Button =
/*#__PURE__*/
function (_Component) {
  _inherits(Button, _Component);

  function Button() {
    _classCallCheck(this, Button);

    return _possibleConstructorReturn(this, _getPrototypeOf(Button).apply(this, arguments));
  }

  _createClass(Button, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.tooltip) {
        this.renderTooltip();
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (prevProps.tooltip !== this.props.tooltip) {
        if (this.tooltip) this.tooltip.updateContent(this.props.tooltip);else this.renderTooltip();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.tooltip) {
        this.tooltip.destroy();
        this.tooltip = null;
      }
    }
  }, {
    key: "renderTooltip",
    value: function renderTooltip() {
      this.tooltip = new _Tooltip.default({
        target: this.element,
        content: this.props.tooltip,
        options: this.props.tooltipOptions
      });
    }
  }, {
    key: "renderIcon",
    value: function renderIcon() {
      if (this.props.icon) {
        var className = (0, _classnames.default)(this.props.icon, 'p-c', {
          'p-button-icon-left': this.props.iconPos !== 'right',
          'p-button-icon-right': this.props.iconPos === 'right'
        });
        return _react.default.createElement("span", {
          className: className
        });
      } else {
        return null;
      }
    }
  }, {
    key: "renderLabel",
    value: function renderLabel() {
      var buttonLabel = this.props.label || 'p-btn';
      return _react.default.createElement("span", {
        className: "p-button-text p-c"
      }, buttonLabel);
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      var className = (0, _classnames.default)('p-button p-component', this.props.className, {
        'p-button-icon-only': this.props.icon && !this.props.label,
        'p-button-text-icon-left': this.props.icon && this.props.label && this.props.iconPos === 'left',
        'p-button-text-icon-right': this.props.icon && this.props.label && this.props.iconPos === 'right',
        'p-button-text-only': !this.props.icon && this.props.label,
        'p-disabled': this.props.disabled
      });
      var icon = this.renderIcon();
      var label = this.renderLabel();
      var buttonProps = Object.assign({}, this.props);
      delete buttonProps.iconPos;
      delete buttonProps.icon;
      delete buttonProps.label;
      delete buttonProps.tooltip;
      delete buttonProps.tooltipOptions;
      return _react.default.createElement("button", _extends({
        ref: function ref(el) {
          return _this.element = el;
        }
      }, buttonProps, {
        className: className
      }), this.props.iconPos === 'left' && icon, label, this.props.iconPos === 'right' && icon, this.props.children);
    }
  }]);

  return Button;
}(_react.Component);

exports.Button = Button;

_defineProperty(Button, "defaultProps", {
  label: null,
  icon: null,
  iconPos: 'left',
  tooltip: null,
  tooltipOptions: null
});

_defineProperty(Button, "propTypes", {
  label: _propTypes.default.string,
  icon: _propTypes.default.string,
  iconPos: _propTypes.default.string,
  tooltip: _propTypes.default.string,
  tooltipOptions: _propTypes.default.object
});

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CalendarPanel = void 0;

var _react = _interopRequireWildcard(__webpack_require__(0));

var _propTypes = _interopRequireDefault(__webpack_require__(14));

var _reactDom = _interopRequireDefault(__webpack_require__(15));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var CalendarPanel =
/*#__PURE__*/
function (_Component) {
  _inherits(CalendarPanel, _Component);

  function CalendarPanel() {
    _classCallCheck(this, CalendarPanel);

    return _possibleConstructorReturn(this, _getPrototypeOf(CalendarPanel).apply(this, arguments));
  }

  _createClass(CalendarPanel, [{
    key: "renderElement",
    value: function renderElement() {
      var _this = this;

      return _react.default.createElement("div", {
        ref: function ref(el) {
          return _this.element = el;
        },
        className: this.props.className,
        style: this.props.style
      }, this.props.children);
    }
  }, {
    key: "render",
    value: function render() {
      var element = this.renderElement();
      if (this.props.appendTo) return _reactDom.default.createPortal(element, this.props.appendTo);else return element;
    }
  }]);

  return CalendarPanel;
}(_react.Component);

exports.CalendarPanel = CalendarPanel;

_defineProperty(CalendarPanel, "defaultProps", {
  appendTo: null,
  style: null,
  className: null
});

_defineProperty(CalendarPanel, "propTypes", {
  appendTo: _propTypes.default.object,
  style: _propTypes.default.object,
  className: _propTypes.default.string
});

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormLabel = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var FormLabel = /** @class */ (function (_super) {
    __extends(FormLabel, _super);
    function FormLabel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FormLabel.prototype.render = function () {
        var classes = classnames_1.default('form-label form-label--block', {
            'form-label--light': this.props.style === 'light',
        });
        return (React.createElement("div", { className: classes }, this.props.text));
    };
    return FormLabel;
}(React.PureComponent));
exports.FormLabel = FormLabel;


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Switch = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var Switch = /** @class */ (function (_super) {
    __extends(Switch, _super);
    function Switch(props) {
        var _this = _super.call(this, props) || this;
        _this.onClick = _this.onClick.bind(_this);
        return _this;
    }
    Switch.prototype.onClick = function () {
        if (this.props.disabled) {
            return;
        }
        this.props.onChange(!this.props.value);
    };
    Switch.prototype.render = function () {
        var classes = classnames_1.default('sd-toggle', {
            'checked': this.props.value,
            'disabled': this.props.disabled,
        });
        return (React.createElement("span", { className: classes, onClick: this.onClick },
            React.createElement("span", { className: "inner" })));
    };
    return Switch;
}(React.PureComponent));
exports.Switch = Switch;


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ButtonGroup = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var ButtonGroup = /** @class */ (function (_super) {
    __extends(ButtonGroup, _super);
    function ButtonGroup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ButtonGroup.prototype.render = function () {
        var _a;
        var classes = classnames_1.default('button-group', (_a = {},
            _a["button-group--left"] = this.props.align === undefined && !this.props.orientation,
            _a["button-group--" + this.props.align] = this.props.align && !this.props.orientation,
            _a["button-group--vertical"] = this.props.orientation === 'vertical',
            _a["button-group--compact"] = this.props.spaces === 'compact',
            _a["button-group--padded"] = this.props.padded === true,
            _a));
        return (React.createElement("div", { className: classes, role: 'group' }, this.props.children));
    };
    return ButtonGroup;
}(React.PureComponent));
exports.ButtonGroup = ButtonGroup;


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Loader = void 0;
var React = __importStar(__webpack_require__(0));
var Loader = /** @class */ (function (_super) {
    __extends(Loader, _super);
    function Loader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Loader.prototype.render = function () {
        if (this.props.overlay) {
            return (React.createElement("div", { className: 'sd-loader' }));
        }
        else {
            return null;
        }
    };
    return Loader;
}(React.Component));
exports.Loader = Loader;


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Radio = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var react_id_generator_1 = __importDefault(__webpack_require__(10));
var Radio = /** @class */ (function (_super) {
    __extends(Radio, _super);
    function Radio(props) {
        var _this = _super.call(this, props) || this;
        _this.htmlId = react_id_generator_1.default();
        _this.handleLabel = _this.handleLabel.bind(_this);
        return _this;
    }
    Radio.prototype.handleChange = function (item) {
        if (!item.disabled) {
            this.props.onChange(item.value);
        }
    };
    Radio.prototype.handleLabel = function (item, index) {
        var _this = this;
        var classes = classnames_1.default({
            'sd-label--disabled': item.disabled,
            'label--active': this.props.value === item.value,
        });
        return React.createElement("label", { className: classes, onClick: function () { return _this.handleChange(item); }, htmlFor: this.htmlId + index }, item.label);
    };
    Radio.prototype.render = function () {
        var _this = this;
        return (this.props.options.map(function (item, index) { return (React.createElement("span", { className: 'sd-check-new__wrapper', key: index, "label-position": _this.props.labelSide === 'left' ? 'left' : null },
            _this.props.labelSide === 'left' ? _this.handleLabel(item, index) : null,
            React.createElement("input", { type: 'checkbox', className: 'visuallyhidden', id: _this.htmlId + index }),
            React.createElement("span", { className: 'sd-radio-new' +
                    (item.disabled ? ' sd-checkbox--disabled' :
                        (_this.props.value === item.value ? ' checked' : '')), onClick: function () { return _this.handleChange(item); } }),
            !_this.props.labelSide ? _this.handleLabel(item, index) : null)); }));
    };
    return Radio;
}(React.PureComponent));
exports.Radio = Radio;


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Checkbox = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var react_id_generator_1 = __importDefault(__webpack_require__(10));
var Checkbox = /** @class */ (function (_super) {
    __extends(Checkbox, _super);
    function Checkbox(props) {
        var _this = _super.call(this, props) || this;
        _this.htmlId = react_id_generator_1.default();
        _this.handleChange = _this.handleChange.bind(_this);
        _this.handleLabel = _this.handleLabel.bind(_this);
        return _this;
    }
    Checkbox.prototype.handleChange = function () {
        if (!this.props.disabled) {
            this.props.onChange(!this.props.checked);
        }
    };
    Checkbox.prototype.handleLabel = function (text) {
        var classes = classnames_1.default({
            'sd-label--disabled': this.props.disabled,
            'label--active': this.props.checked,
        });
        return React.createElement("label", { className: classes, htmlFor: this.htmlId, onClick: this.handleChange }, text);
    };
    Checkbox.prototype.render = function () {
        return (React.createElement("span", { className: 'sd-check-new__wrapper', "label-position": this.props.label ?
                (this.props.label.side === 'left' ? 'left' : null) : null },
            this.props.label ? (this.props.label.side === 'left' ?
                this.handleLabel(this.props.label.text) : null) : null,
            React.createElement("input", { type: 'checkbox', className: 'visuallyhidden', id: this.htmlId }),
            React.createElement("span", { className: 'sd-check-new' +
                    (this.props.disabled ? (this.props.checked ? ' sd-check-new--disabled checked' : ' sd-check-new--disabled') :
                        (this.props.checked ? ' checked' : '')), onClick: this.handleChange, "aria-label": String(this.props.checked) }),
            this.props.label ? (!this.props.label.side ? this.handleLabel(this.props.label.text) : null) : null));
    };
    return Checkbox;
}(React.Component));
exports.Checkbox = Checkbox;


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RadioButton = void 0;
var React = __importStar(__webpack_require__(0));
var react_id_generator_1 = __importDefault(__webpack_require__(10));
var RadioButton = /** @class */ (function (_super) {
    __extends(RadioButton, _super);
    function RadioButton(props) {
        var _this = _super.call(this, props) || this;
        _this.htmlId = react_id_generator_1.default();
        return _this;
    }
    RadioButton.prototype.handleChange = function (value) {
        this.props.onChange(value);
    };
    RadioButton.prototype.render = function () {
        var _this = this;
        return (this.props.options.map(function (item, index) { return (React.createElement(React.Fragment, { key: index + 1 },
            React.createElement("input", { type: 'checkbox', className: 'visuallyhidden', id: _this.htmlId + index }),
            React.createElement("span", { key: index, className: 'sd-check-button' +
                    (item.disabled ? ' sd-checkbox--disabled' :
                        (_this.props.value === item.value ? ' checked' : '')), onClick: function () { return _this.handleChange(item.value); } },
                item.icon ? React.createElement("i", { className: "icon-" + item.icon }) : null,
                item.disabled ?
                    React.createElement("label", { className: 'sd-check-button__text-label sd-label--disabled', htmlFor: _this.htmlId + index }, item.label) :
                    React.createElement("label", { className: 'sd-check-button__text-label', htmlFor: _this.htmlId + index }, item.label)))); }));
    };
    return RadioButton;
}(React.PureComponent));
exports.RadioButton = RadioButton;


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckboxButton = void 0;
var React = __importStar(__webpack_require__(0));
var react_id_generator_1 = __importDefault(__webpack_require__(10));
var CheckboxButton = /** @class */ (function (_super) {
    __extends(CheckboxButton, _super);
    function CheckboxButton(props) {
        var _this = _super.call(this, props) || this;
        _this.htmlId = react_id_generator_1.default();
        _this.handleChange = _this.handleChange.bind(_this);
        return _this;
    }
    CheckboxButton.prototype.handleChange = function () {
        if (this.props.disabled) {
            return;
        }
        this.props.onChange(!this.props.checked);
    };
    CheckboxButton.prototype.render = function () {
        return (React.createElement(React.Fragment, null,
            React.createElement("input", { type: 'checkbox', className: 'visuallyhidden', id: this.htmlId }),
            React.createElement("span", { className: 'sd-check-button' +
                    (this.props.disabled ? ' sd-check-new--disabled' :
                        (this.props.checked ? ' checked' : '')), onClick: this.handleChange },
                this.props.icon ? React.createElement("i", { className: "icon-" + this.props.icon }) : null,
                this.props.disabled ?
                    (React.createElement("label", { className: 'sd-check-button__text-label sd-label--disabled', "aria-label": this.props.iconOnly ? this.props.label.text : '', htmlFor: this.htmlId }, !this.props.iconOnly ? this.props.label.text : null)) :
                    (React.createElement("label", { className: 'sd-check-button__text-label', "aria-label": this.props.iconOnly ? this.props.label.text : '', htmlFor: this.htmlId }, !this.props.iconOnly ? this.props.label.text : null)))));
    };
    return CheckboxButton;
}(React.PureComponent));
exports.CheckboxButton = CheckboxButton;


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckGroup = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var CheckGroup = /** @class */ (function (_super) {
    __extends(CheckGroup, _super);
    function CheckGroup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CheckGroup.prototype.render = function () {
        var _a;
        var classes = classnames_1.default('sd-check__group-new', (_a = {},
            _a["sd-check__group-new--vertical"] = this.props.orientation === 'vertical',
            _a));
        return (React.createElement("div", { className: classes }, this.props.children));
    };
    return CheckGroup;
}(React.PureComponent));
exports.CheckGroup = CheckGroup;


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckButtonGroup = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var CheckButtonGroup = /** @class */ (function (_super) {
    __extends(CheckButtonGroup, _super);
    function CheckButtonGroup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CheckButtonGroup.prototype.render = function () {
        var _a;
        var classes = classnames_1.default('sd-check-button__group', (_a = {},
            _a["sd-check-button__group--" + this.props.align] = this.props.align,
            _a["sd-check-button__group--left"] = !this.props.grid && this.props.align === undefined,
            _a["button-group--vertical"] = this.props.orientation === 'vertical',
            _a["sd-check-button__group--grid"] = this.props.grid,
            _a["sd-check-button__group--padded"] = this.props.padded === true,
            _a));
        return (React.createElement("div", { className: classes }, this.props.children));
    };
    return CheckButtonGroup;
}(React.PureComponent));
exports.CheckButtonGroup = CheckButtonGroup;


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NavButton = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var Icon_1 = __webpack_require__(16);
var NavButton = /** @class */ (function (_super) {
    __extends(NavButton, _super);
    function NavButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NavButton.prototype.render = function () {
        var _a;
        var classes = classnames_1.default('sd-navbtn', (_a = {
                'sd-navbtn-dark': this.props.theme === 'dark'
            },
            _a["sd-navbtn--" + this.props.type] = this.props.type,
            _a['sd-navbtn--textual'] = this.props.text,
            _a));
        var value = this.props.value === undefined ? 'button' : this.props.value;
        return (React.createElement("button", { className: classes, onClick: this.props.onClick, "aria-label": value },
            this.props.icon ? React.createElement(Icon_1.Icon, { name: this.props.icon, size: this.props.iconSize }) : null,
            this.props.text ? React.createElement("span", { className: "sd-navbtn__text" }, this.props.text) : null));
    };
    return NavButton;
}(React.PureComponent));
exports.NavButton = NavButton;


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TabList = exports.Tab = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var Tab = /** @class */ (function (_super) {
    __extends(Tab, _super);
    function Tab() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Tab.prototype.render = function () {
        return (React.createElement("div", { className: 'sd-nav-tabs__pane', role: 'tabpanel' }, this.props.children));
    };
    return Tab;
}(React.PureComponent));
exports.Tab = Tab;
var TabList = /** @class */ (function (_super) {
    __extends(TabList, _super);
    function TabList(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            index: 0,
        };
        _this.handleChange = _this.handleChange.bind(_this);
        _this.goTo = _this.goTo.bind(_this);
        return _this;
    }
    TabList.prototype.handleChange = function (index) {
        this.setState({
            index: index,
        });
    };
    TabList.prototype.goTo = function (label) {
        var refLabel = this.props.children.find(function (item) { return item.props.label === label; });
        this.setState({
            index: this.props.children.indexOf(refLabel),
        });
    };
    TabList.prototype.render = function () {
        var _a;
        var _this = this;
        var classes = classnames_1.default('sd-nav-tabs', (_a = {},
            _a["sd-nav-tabs--" + this.props.size] = this.props.size && this.props.size !== undefined,
            _a['sd-nav-tabs--ui-dark'] = this.props.theme === 'dark',
            _a));
        return (React.createElement(React.Fragment, null,
            React.createElement("div", { className: classes, role: 'tablist' }, this.props.children.map(function (item, index) {
                return React.createElement("button", { key: index, onClick: function () { return _this.handleChange(index); }, role: 'tab', "aria-selected": _this.state.index === index ? 'true' : 'false', className: 'sd-nav-tabs__tab' + (_this.state.index === index ? ' sd-nav-tabs__tab--active' : '') },
                    React.createElement("span", null, item.props.label));
            })),
            React.createElement("div", { className: 'sd-nav-tabs__content' +
                    (this.props.theme === 'dark' ? ' sd-nav-tabs__content--ui-dark' : '') }, this.props.children[this.state.index])));
    };
    return TabList;
}(React.PureComponent));
exports.TabList = TabList;


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LeftMenu = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var LeftMenu = /** @class */ (function (_super) {
    __extends(LeftMenu, _super);
    function LeftMenu(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            active: '',
        };
        return _this;
    }
    LeftMenu.prototype.handleClick = function (id, route) {
        this.setState({
            active: id,
        });
        this.props.onSelect(id, route);
    };
    LeftMenu.prototype.render = function () {
        var _a;
        var _this = this;
        var classes = classnames_1.default('sd-left-nav', (_a = {},
            _a["" + this.props.navClass] = this.props.navClass,
            _a));
        return (React.createElement("nav", { className: classes, "aria-label": this.props.ariaLabel }, this.props.groups.map(function (group, i) {
            return (React.createElement(React.Fragment, { key: i },
                React.createElement("span", { className: 'sd-left-nav__group-header' }, group.label),
                group.items.map(function (item, j) {
                    return (React.createElement("button", { key: j, onClick: function () {
                            _this.handleClick(item.id, item.route ? item.route : '');
                        }, className: item.id === _this.state.active ? 'sd-left-nav__btn sd-left-nav__btn--active' : 'sd-left-nav__btn' }, item.label));
                })));
        })));
    };
    return LeftMenu;
}(React.PureComponent));
exports.LeftMenu = LeftMenu;


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubNav = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var SubNav = /** @class */ (function (_super) {
    __extends(SubNav, _super);
    function SubNav() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SubNav.prototype.render = function () {
        var _a;
        var classes = classnames_1.default('subnav', (_a = {
                'subnav--light': this.props.color === undefined
            },
            _a["subnav--" + this.props.color] = this.props.color || this.props.color !== undefined,
            _a['subnav--dark-ui'] = this.props.theme === 'dark',
            _a));
        var style = {
            zIndex: 1000 + (this.props.zIndex ? this.props.zIndex : 0),
        };
        return (React.createElement("div", { className: classes, style: style }, this.props.children));
    };
    return SubNav;
}(React.PureComponent));
exports.SubNav = SubNav;


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SlidingToolbar = void 0;
var React = __importStar(__webpack_require__(0));
var SlidingToolbar = /** @class */ (function (_super) {
    __extends(SlidingToolbar, _super);
    function SlidingToolbar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SlidingToolbar.prototype.render = function () {
        return (React.createElement("div", { className: 'subnav__sliding-toolbar' }, this.props.children));
    };
    return SlidingToolbar;
}(React.PureComponent));
exports.SlidingToolbar = SlidingToolbar;


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StrechBar = void 0;
var React = __importStar(__webpack_require__(0));
var StrechBar = /** @class */ (function (_super) {
    __extends(StrechBar, _super);
    function StrechBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StrechBar.prototype.render = function () {
        return (React.createElement("div", { className: 'subnav__stretch-bar' }, this.props.children));
    };
    return StrechBar;
}(React.PureComponent));
exports.StrechBar = StrechBar;


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PropsList = exports.Prop = void 0;
var React = __importStar(__webpack_require__(0));
var Prop = /** @class */ (function (_super) {
    __extends(Prop, _super);
    function Prop() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Prop.prototype.render = function () {
        return (React.createElement(React.Fragment, null,
            React.createElement("tr", null,
                React.createElement("td", null, this.props.name),
                React.createElement("td", null, this.props.isRequered ? 'yes' : 'no'),
                React.createElement("td", null, this.props.type),
                React.createElement("td", null, this.props.default),
                React.createElement("td", null, this.props.description))));
    };
    return Prop;
}(React.PureComponent));
exports.Prop = Prop;
var PropsList = /** @class */ (function (_super) {
    __extends(PropsList, _super);
    function PropsList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PropsList.prototype.render = function () {
        return (React.createElement("table", null,
            React.createElement("thead", null,
                React.createElement("tr", null,
                    React.createElement("th", null, "Name"),
                    React.createElement("th", null, "Required"),
                    React.createElement("th", null, "Type"),
                    React.createElement("th", null, "Default Value"),
                    React.createElement("th", null, "Description"))),
            React.createElement("tbody", null, this.props.children)));
    };
    return PropsList;
}(React.PureComponent));
exports.PropsList = PropsList;


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Divider = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var Divider = /** @class */ (function (_super) {
    __extends(Divider, _super);
    function Divider() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Divider.prototype.render = function () {
        var _a;
        var classes = classnames_1.default('button-group__divider', (_a = {
                'button-group__divider--small': this.props.size === undefined,
                'button-group__divider--border': this.props.border === true
            },
            _a["button-group__divider--" + this.props.size] = this.props.size || this.props.size !== undefined,
            _a));
        return (React.createElement("div", { className: classes }));
    };
    return Divider;
}(React.PureComponent));
exports.Divider = Divider;


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HeadingText = void 0;
var React = __importStar(__webpack_require__(0));
var HeadingText = /** @class */ (function (_super) {
    __extends(HeadingText, _super);
    function HeadingText() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HeadingText.prototype.render = function () {
        return (React.createElement("div", { className: 'sd-toast__message' },
            React.createElement("div", { className: 'sd-toast__message-header' },
                React.createElement("h4", { className: 'sd-toast__heading' }, this.props.heading),
                this.props.timestamp ?
                    React.createElement("time", null, this.props.timestamp.toLocaleString()) : null),
            React.createElement("p", null, this.props.text)));
    };
    return HeadingText;
}(React.PureComponent));
exports.HeadingText = HeadingText;


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Dropdown = void 0;
var React = __importStar(__webpack_require__(0));
var ReactDOM = __importStar(__webpack_require__(15));
var core_1 = __webpack_require__(126);
var react_id_generator_1 = __webpack_require__(10);
exports.Dropdown = function (_a) {
    var items = _a.items, header = _a.header, footer = _a.footer, children = _a.children, append = _a.append, align = _a.align;
    var _b = React.useState(false), open = _b[0], setOpen = _b[1];
    var _c = React.useState(false), change = _c[0], setChange = _c[1];
    var menuID = react_id_generator_1.useId()[0];
    var DROPDOWN_ID = "react-placeholder";
    var ref = React.useRef(null);
    var refSubMenu = React.useRef(null);
    var buttonRef = React.useRef(null);
    var refButtonSubMenu = React.useRef(null);
    var headerElements = header === null || header === void 0 ? void 0 : header.map(function (el, index) {
        return each(el, index);
    });
    var dropdownElements = items.map(function (el, index) {
        return each(el, index);
    });
    var footerElements = footer === null || footer === void 0 ? void 0 : footer.map(function (el, index) {
        return each(el, index);
    });
    React.useEffect(function () {
        var existingElement = document.getElementById(DROPDOWN_ID);
        if (!existingElement) {
            var el = document.createElement("div");
            el.id = DROPDOWN_ID;
            // style placeholder
            el.style.position = 'absolute';
            el.style.top = '0';
            el.style.left = '0';
            el.style.width = '1px';
            el.style.height = '1px';
            document.body.appendChild(el);
        }
    }, [change]);
    React.useLayoutEffect(function () {
        if (append && change) {
            addInPlaceholder();
        }
        setChange(true);
    }, [open]);
    // structure for append menu
    function createAppendMenu() {
        if (header && footer) {
            return (React.createElement("div", { className: 'dropdown__menu dropdown__menu--has-head-foot', id: menuID, ref: ref },
                React.createElement("ul", { className: 'dropdown__menu-header' }, headerElements),
                React.createElement("ul", { className: 'dropdown__menu-body' }, dropdownElements),
                React.createElement("ul", { className: 'dropdown__menu-footer dropdown__menu-footer--has-list ' }, footerElements)));
        }
        else if (header) {
            return (React.createElement("div", { className: 'dropdown__menu dropdown__menu--has-head-foot', id: menuID, ref: ref },
                React.createElement("ul", { className: 'dropdown__menu-header' }, headerElements),
                React.createElement("ul", { className: 'dropdown__menu-body' }, dropdownElements)));
        }
        else if (footer) {
            return (React.createElement("div", { className: 'dropdown__menu dropdown__menu--has-head-foot', id: menuID, ref: ref },
                React.createElement("ul", { className: 'dropdown__menu-body' }, dropdownElements),
                React.createElement("ul", { className: 'dropdown__menu-footer dropdown__menu-footer--has-list ' }, footerElements)));
        }
        else {
            return (React.createElement("ul", { className: 'dropdown__menu ', id: menuID, ref: ref }, dropdownElements));
        }
    }
    // toggle menu
    function toggleDisplay() {
        if (!open) {
            setOpen(true);
            if (!append) {
                var menuRef = ref.current;
                var toggleRef = buttonRef.current;
                if (toggleRef && menuRef) {
                    core_1.createPopper(toggleRef, menuRef, {
                        placement: checkAlign() ? 'bottom-end' : 'bottom-start',
                    });
                }
            }
            else {
                setTimeout(function () {
                    var menuRef = ref.current;
                    var toggleRef = buttonRef.current;
                    if (toggleRef && menuRef) {
                        core_1.createPopper(toggleRef, menuRef, {
                            placement: checkAlign() ? 'bottom-end' : 'bottom-start',
                            strategy: 'fixed',
                        });
                        menuRef.style.display = 'block';
                    }
                }, 0);
            }
            document.addEventListener('click', closeMenu);
        }
        else {
            setOpen(false);
        }
    }
    function closeMenu() {
        document.removeEventListener('click', closeMenu);
        setOpen(false);
    }
    function checkAlign() {
        if (align === 'right') {
            return true;
        }
        else {
            return false;
        }
    }
    function addInPlaceholder() {
        var placeholder = document.getElementById(DROPDOWN_ID);
        var menu = createAppendMenu();
        if (open) {
            return ReactDOM.render(menu, placeholder);
        }
        else {
            var menuDOM = document.getElementById(menuID);
            if (menuDOM) {
                menuDOM.style.display = 'none';
            }
        }
    }
    function each(item, index) {
        if (item['type'] === 'submenu') {
            var submenuItems_1 = [];
            item['items'].forEach(function (el, key) {
                submenuItems_1.push(each(el, key));
            });
            return (React.createElement("li", { key: index },
                React.createElement("div", { className: 'dropdown' },
                    React.createElement("button", { ref: refButtonSubMenu, className: 'dropdown__toggle dropdown-toggle', onMouseOver: function () {
                            var subMenuRef = refSubMenu.current;
                            var subToggleRef = refButtonSubMenu.current;
                            if (subMenuRef && subToggleRef) {
                                core_1.createPopper(subToggleRef, subMenuRef, {
                                    placement: 'right-start',
                                });
                            }
                        }, onClick: item['onSelect'] },
                        item['icon'] ? React.createElement("i", { className: 'icon-' + item['icon'] }) : null,
                        item['label']),
                    React.createElement("ul", { ref: refSubMenu, className: 'dropdown__menu' }, submenuItems_1))));
        }
        else if (item['type'] === 'group') {
            var groupItems_1 = [];
            item['items'].forEach(function (el, key) {
                groupItems_1.push(each(el, key));
            });
            return (React.createElement(React.Fragment, { key: index },
                React.createElement("li", null,
                    React.createElement("div", { className: "dropdown__menu-label" }, item['label'])),
                groupItems_1));
        }
        else if (item === 'divider') {
            return (React.createElement("li", { className: "dropdown__menu-divider", key: index }));
        }
        else {
            return (React.createElement(DropdownItem, { key: index, label: item['label'], icon: item['icon'], onSelect: item['onSelect'] }));
        }
    }
    return (React.createElement("div", { className: 'dropdown ' + (open ? 'open' : '') },
        typeof children === 'object' ?
            (React.isValidElement(children) ?
                React.createElement("div", { ref: buttonRef, style: { display: 'content' } }, React.cloneElement(children, {
                    className: children.props.className ? (children.props.className + ' dropdown__toggle dropdown-toggle') : 'dropdown__toggle dropdown-toggle',
                    onClick: toggleDisplay,
                    ref: buttonRef,
                })) : null)
            :
                React.createElement("button", { ref: buttonRef, className: ' dropdown__toggle dropdown-toggle', onClick: toggleDisplay },
                    children,
                    React.createElement("span", { className: "dropdown__caret" })),
        append ?
            null : (function () {
            if (header && footer) {
                return (React.createElement("div", { className: 'dropdown__menu dropdown__menu--has-head-foot', ref: ref },
                    React.createElement("ul", { className: 'dropdown__menu-header' }, headerElements),
                    React.createElement("ul", { className: 'dropdown__menu-body' }, dropdownElements),
                    React.createElement("ul", { className: 'dropdown__menu-footer dropdown__menu-footer--has-list ' }, footerElements)));
            }
            else if (header) {
                return (React.createElement("div", { className: 'dropdown__menu dropdown__menu--has-head-foot', ref: ref },
                    React.createElement("ul", { className: 'dropdown__menu-header' }, headerElements),
                    React.createElement("ul", { className: 'dropdown__menu-body' }, dropdownElements)));
            }
            else if (footer) {
                return (React.createElement("div", { className: 'dropdown__menu dropdown__menu--has-head-foot', ref: ref },
                    React.createElement("ul", { className: 'dropdown__menu-body' }, dropdownElements),
                    React.createElement("ul", { className: 'dropdown__menu-footer dropdown__menu-footer--has-list ' }, footerElements)));
            }
            else {
                return (React.createElement("ul", { className: 'dropdown__menu', ref: ref }, dropdownElements));
            }
        })()));
};
var DropdownItem = function (_a) {
    var label = _a.label, icon = _a.icon, onSelect = _a.onSelect;
    return (React.createElement("li", null,
        React.createElement("button", { onClick: onSelect },
            React.createElement("i", { className: icon ? ('icon-' + icon) : '' }),
            label)));
};


/***/ }),
/* 126 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPopper", function() { return createPopper; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultModifiers", function() { return defaultModifiers; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index_js__ = __webpack_require__(127);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__modifiers_eventListeners_js__ = __webpack_require__(142);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__modifiers_popperOffsets_js__ = __webpack_require__(143);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__modifiers_computeStyles_js__ = __webpack_require__(144);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__modifiers_applyStyles_js__ = __webpack_require__(145);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__modifiers_offset_js__ = __webpack_require__(146);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__modifiers_flip_js__ = __webpack_require__(147);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__modifiers_preventOverflow_js__ = __webpack_require__(151);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__modifiers_arrow_js__ = __webpack_require__(153);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__modifiers_hide_js__ = __webpack_require__(154);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "popperGenerator", function() { return __WEBPACK_IMPORTED_MODULE_0__index_js__["b"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "detectOverflow", function() { return __WEBPACK_IMPORTED_MODULE_0__index_js__["a"]; });










var defaultModifiers = [__WEBPACK_IMPORTED_MODULE_1__modifiers_eventListeners_js__["a" /* default */], __WEBPACK_IMPORTED_MODULE_2__modifiers_popperOffsets_js__["a" /* default */], __WEBPACK_IMPORTED_MODULE_3__modifiers_computeStyles_js__["a" /* default */], __WEBPACK_IMPORTED_MODULE_4__modifiers_applyStyles_js__["a" /* default */], __WEBPACK_IMPORTED_MODULE_5__modifiers_offset_js__["a" /* default */], __WEBPACK_IMPORTED_MODULE_6__modifiers_flip_js__["a" /* default */], __WEBPACK_IMPORTED_MODULE_7__modifiers_preventOverflow_js__["a" /* default */], __WEBPACK_IMPORTED_MODULE_8__modifiers_arrow_js__["a" /* default */], __WEBPACK_IMPORTED_MODULE_9__modifiers_hide_js__["a" /* default */]];
var createPopper = /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_0__index_js__["b" /* popperGenerator */])({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules



/***/ }),
/* 127 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (immutable) */ __webpack_exports__["b"] = popperGenerator;
/* unused harmony export createPopper */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__dom_utils_getCompositeRect_js__ = __webpack_require__(128);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dom_utils_getLayoutRect_js__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dom_utils_listScrollParents_js__ = __webpack_require__(45);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dom_utils_getOffsetParent_js__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__dom_utils_getComputedStyle_js__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_orderModifiers_js__ = __webpack_require__(133);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utils_debounce_js__ = __webpack_require__(134);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__utils_validateModifiers_js__ = __webpack_require__(135);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__utils_uniqueBy_js__ = __webpack_require__(137);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__utils_getBasePlacement_js__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__utils_mergeByName_js__ = __webpack_require__(138);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__utils_detectOverflow_js__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__dom_utils_instanceOf_js__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__enums_js__ = __webpack_require__(3);
/* unused harmony namespace reexport */
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_11__utils_detectOverflow_js__["a"]; });















var INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';
var INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';
var DEFAULT_OPTIONS = {
  placement: 'bottom',
  modifiers: [],
  strategy: 'absolute'
};

function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return !args.some(function (element) {
    return !(element && typeof element.getBoundingClientRect === 'function');
  });
}

function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }

  var _generatorOptions = generatorOptions,
      _generatorOptions$def = _generatorOptions.defaultModifiers,
      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
      _generatorOptions$def2 = _generatorOptions.defaultOptions,
      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper(reference, popper, options) {
    if (options === void 0) {
      options = defaultOptions;
    }

    var state = {
      placement: 'bottom',
      orderedModifiers: [],
      options: Object.assign(Object.assign({}, DEFAULT_OPTIONS), defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference,
        popper: popper
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state,
      setOptions: function setOptions(options) {
        cleanupModifierEffects();
        state.options = Object.assign(Object.assign(Object.assign({}, defaultOptions), state.options), options);
        state.scrollParents = {
          reference: Object(__WEBPACK_IMPORTED_MODULE_12__dom_utils_instanceOf_js__["a" /* isElement */])(reference) ? Object(__WEBPACK_IMPORTED_MODULE_2__dom_utils_listScrollParents_js__["a" /* default */])(reference) : reference.contextElement ? Object(__WEBPACK_IMPORTED_MODULE_2__dom_utils_listScrollParents_js__["a" /* default */])(reference.contextElement) : [],
          popper: Object(__WEBPACK_IMPORTED_MODULE_2__dom_utils_listScrollParents_js__["a" /* default */])(popper)
        }; // Orders the modifiers based on their dependencies and `phase`
        // properties

        var orderedModifiers = Object(__WEBPACK_IMPORTED_MODULE_5__utils_orderModifiers_js__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_10__utils_mergeByName_js__["a" /* default */])([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

        state.orderedModifiers = orderedModifiers.filter(function (m) {
          return m.enabled;
        }); // Validate the provided modifiers so that the consumer will get warned
        // if one of the modifiers is invalid for any reason

        if (process.env.NODE_ENV !== "production") {
          var modifiers = Object(__WEBPACK_IMPORTED_MODULE_8__utils_uniqueBy_js__["a" /* default */])([].concat(orderedModifiers, state.options.modifiers), function (_ref) {
            var name = _ref.name;
            return name;
          });
          Object(__WEBPACK_IMPORTED_MODULE_7__utils_validateModifiers_js__["a" /* default */])(modifiers);

          if (Object(__WEBPACK_IMPORTED_MODULE_9__utils_getBasePlacement_js__["a" /* default */])(state.options.placement) === __WEBPACK_IMPORTED_MODULE_13__enums_js__["a" /* auto */]) {
            var flipModifier = state.orderedModifiers.find(function (_ref2) {
              var name = _ref2.name;
              return name === 'flip';
            });

            if (!flipModifier) {
              console.error(['Popper: "auto" placements require the "flip" modifier be', 'present and enabled to work.'].join(' '));
            }
          }

          var _getComputedStyle = Object(__WEBPACK_IMPORTED_MODULE_4__dom_utils_getComputedStyle_js__["a" /* default */])(popper),
              marginTop = _getComputedStyle.marginTop,
              marginRight = _getComputedStyle.marginRight,
              marginBottom = _getComputedStyle.marginBottom,
              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can
          // cause bugs with positioning, so we'll warn the consumer


          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {
            return parseFloat(margin);
          })) {
            console.warn(['Popper: CSS "margin" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));
          }
        }

        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }

        var _state$elements = state.elements,
            reference = _state$elements.reference,
            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
        // anymore

        if (!areValidElements(reference, popper)) {
          if (process.env.NODE_ENV !== "production") {
            console.error(INVALID_ELEMENT_ERROR);
          }

          return;
        } // Store the reference and popper rects to be read by modifiers


        state.rects = {
          reference: Object(__WEBPACK_IMPORTED_MODULE_0__dom_utils_getCompositeRect_js__["a" /* default */])(reference, Object(__WEBPACK_IMPORTED_MODULE_3__dom_utils_getOffsetParent_js__["a" /* default */])(popper), state.options.strategy === 'fixed'),
          popper: Object(__WEBPACK_IMPORTED_MODULE_1__dom_utils_getLayoutRect_js__["a" /* default */])(popper)
        }; // Modifiers have the ability to reset the current update cycle. The
        // most common use case for this is the `flip` modifier changing the
        // placement, which then needs to re-run all the modifiers, because the
        // logic was previously ran for the previous placement and is therefore
        // stale/incorrect

        state.reset = false;
        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
        // is filled with the initial data specified by the modifier. This means
        // it doesn't persist and is fresh on each update.
        // To ensure persistent data, use `${name}#persistent`

        state.orderedModifiers.forEach(function (modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        var __debug_loops__ = 0;

        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (process.env.NODE_ENV !== "production") {
            __debug_loops__ += 1;

            if (__debug_loops__ > 100) {
              console.error(INFINITE_LOOP_ERROR);
              break;
            }
          }

          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }

          var _state$orderedModifie = state.orderedModifiers[index],
              fn = _state$orderedModifie.fn,
              _state$orderedModifie2 = _state$orderedModifie.options,
              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
              name = _state$orderedModifie.name;

          if (typeof fn === 'function') {
            state = fn({
              state: state,
              options: _options,
              name: name,
              instance: instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: Object(__WEBPACK_IMPORTED_MODULE_6__utils_debounce_js__["a" /* default */])(function () {
        return new Promise(function (resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };

    if (!areValidElements(reference, popper)) {
      if (process.env.NODE_ENV !== "production") {
        console.error(INVALID_ELEMENT_ERROR);
      }

      return instance;
    }

    instance.setOptions(options).then(function (state) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state);
      }
    }); // Modifiers have the ability to execute arbitrary code before the first
    // update cycle runs. They will be executed in the same order as the update
    // cycle. This is useful when a modifier adds some persistent data that
    // other modifiers need to use, but the modifier is run after the dependent
    // one.

    function runModifierEffects() {
      state.orderedModifiers.forEach(function (_ref3) {
        var name = _ref3.name,
            _ref3$options = _ref3.options,
            options = _ref3$options === void 0 ? {} : _ref3$options,
            effect = _ref3.effect;

        if (typeof effect === 'function') {
          var cleanupFn = effect({
            state: state,
            name: name,
            instance: instance,
            options: options
          });

          var noopFn = function noopFn() {};

          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }

    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function (fn) {
        return fn();
      });
      effectCleanupFns = [];
    }

    return instance;
  };
}
var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules


/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(5)))

/***/ }),
/* 128 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getCompositeRect;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getBoundingClientRect_js__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getNodeScroll_js__ = __webpack_require__(129);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getNodeName_js__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__instanceOf_js__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__getWindowScrollBarX_js__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__getDocumentElement_js__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__isScrollParent_js__ = __webpack_require__(35);






 // Returns the composite rect of an element relative to its offsetParent.
// Composite means it takes into account transforms as well as layout.

function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }

  var documentElement = Object(__WEBPACK_IMPORTED_MODULE_5__getDocumentElement_js__["a" /* default */])(offsetParent);
  var rect = Object(__WEBPACK_IMPORTED_MODULE_0__getBoundingClientRect_js__["a" /* default */])(elementOrVirtualElement);
  var isOffsetParentAnElement = Object(__WEBPACK_IMPORTED_MODULE_3__instanceOf_js__["b" /* isHTMLElement */])(offsetParent);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };

  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (Object(__WEBPACK_IMPORTED_MODULE_2__getNodeName_js__["a" /* default */])(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
    Object(__WEBPACK_IMPORTED_MODULE_6__isScrollParent_js__["a" /* default */])(documentElement)) {
      scroll = Object(__WEBPACK_IMPORTED_MODULE_1__getNodeScroll_js__["a" /* default */])(offsetParent);
    }

    if (Object(__WEBPACK_IMPORTED_MODULE_3__instanceOf_js__["b" /* isHTMLElement */])(offsetParent)) {
      offsets = Object(__WEBPACK_IMPORTED_MODULE_0__getBoundingClientRect_js__["a" /* default */])(offsetParent);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = Object(__WEBPACK_IMPORTED_MODULE_4__getWindowScrollBarX_js__["a" /* default */])(documentElement);
    }
  }

  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

/***/ }),
/* 129 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getNodeScroll;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getWindowScroll_js__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getWindow_js__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__instanceOf_js__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__getHTMLElementScroll_js__ = __webpack_require__(130);




function getNodeScroll(node) {
  if (node === Object(__WEBPACK_IMPORTED_MODULE_1__getWindow_js__["a" /* default */])(node) || !Object(__WEBPACK_IMPORTED_MODULE_2__instanceOf_js__["b" /* isHTMLElement */])(node)) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__getWindowScroll_js__["a" /* default */])(node);
  } else {
    return Object(__WEBPACK_IMPORTED_MODULE_3__getHTMLElementScroll_js__["a" /* default */])(node);
  }
}

/***/ }),
/* 130 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getHTMLElementScroll;
function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

/***/ }),
/* 131 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getScrollParent;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getParentNode_js__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isScrollParent_js__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getNodeName_js__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__instanceOf_js__ = __webpack_require__(7);




function getScrollParent(node) {
  if (['html', 'body', '#document'].indexOf(Object(__WEBPACK_IMPORTED_MODULE_2__getNodeName_js__["a" /* default */])(node)) >= 0) {
    // $FlowFixMe: assume body is always available
    return node.ownerDocument.body;
  }

  if (Object(__WEBPACK_IMPORTED_MODULE_3__instanceOf_js__["b" /* isHTMLElement */])(node) && Object(__WEBPACK_IMPORTED_MODULE_1__isScrollParent_js__["a" /* default */])(node)) {
    return node;
  }

  return getScrollParent(Object(__WEBPACK_IMPORTED_MODULE_0__getParentNode_js__["a" /* default */])(node));
}

/***/ }),
/* 132 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isTableElement;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getNodeName_js__ = __webpack_require__(11);

function isTableElement(element) {
  return ['table', 'td', 'th'].indexOf(Object(__WEBPACK_IMPORTED_MODULE_0__getNodeName_js__["a" /* default */])(element)) >= 0;
}

/***/ }),
/* 133 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = orderModifiers;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__enums_js__ = __webpack_require__(3);
 // source: https://stackoverflow.com/questions/49875255

function order(modifiers) {
  var map = new Map();
  var visited = new Set();
  var result = [];
  modifiers.forEach(function (modifier) {
    map.set(modifier.name, modifier);
  }); // On visiting object, check for its dependencies and visit them recursively

  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function (dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);

        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }

  modifiers.forEach(function (modifier) {
    if (!visited.has(modifier.name)) {
      // check for visited object
      sort(modifier);
    }
  });
  return result;
}

function orderModifiers(modifiers) {
  // order based on dependencies
  var orderedModifiers = order(modifiers); // order based on phase

  return __WEBPACK_IMPORTED_MODULE_0__enums_js__["g" /* modifierPhases */].reduce(function (acc, phase) {
    return acc.concat(orderedModifiers.filter(function (modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

/***/ }),
/* 134 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = debounce;
function debounce(fn) {
  var pending;
  return function () {
    if (!pending) {
      pending = new Promise(function (resolve) {
        Promise.resolve().then(function () {
          pending = undefined;
          resolve(fn());
        });
      });
    }

    return pending;
  };
}

/***/ }),
/* 135 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = validateModifiers;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__format_js__ = __webpack_require__(136);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__enums_js__ = __webpack_require__(3);


var INVALID_MODIFIER_ERROR = 'Popper: modifier "%s" provided an invalid %s property, expected %s but got %s';
var MISSING_DEPENDENCY_ERROR = 'Popper: modifier "%s" requires "%s", but "%s" modifier is not available';
var VALID_PROPERTIES = ['name', 'enabled', 'phase', 'fn', 'effect', 'requires', 'options'];
function validateModifiers(modifiers) {
  modifiers.forEach(function (modifier) {
    Object.keys(modifier).forEach(function (key) {
      switch (key) {
        case 'name':
          if (typeof modifier.name !== 'string') {
            console.error(Object(__WEBPACK_IMPORTED_MODULE_0__format_js__["a" /* default */])(INVALID_MODIFIER_ERROR, String(modifier.name), '"name"', '"string"', "\"" + String(modifier.name) + "\""));
          }

          break;

        case 'enabled':
          if (typeof modifier.enabled !== 'boolean') {
            console.error(Object(__WEBPACK_IMPORTED_MODULE_0__format_js__["a" /* default */])(INVALID_MODIFIER_ERROR, modifier.name, '"enabled"', '"boolean"', "\"" + String(modifier.enabled) + "\""));
          }

        case 'phase':
          if (__WEBPACK_IMPORTED_MODULE_1__enums_js__["g" /* modifierPhases */].indexOf(modifier.phase) < 0) {
            console.error(Object(__WEBPACK_IMPORTED_MODULE_0__format_js__["a" /* default */])(INVALID_MODIFIER_ERROR, modifier.name, '"phase"', "either " + __WEBPACK_IMPORTED_MODULE_1__enums_js__["g" /* modifierPhases */].join(', '), "\"" + String(modifier.phase) + "\""));
          }

          break;

        case 'fn':
          if (typeof modifier.fn !== 'function') {
            console.error(Object(__WEBPACK_IMPORTED_MODULE_0__format_js__["a" /* default */])(INVALID_MODIFIER_ERROR, modifier.name, '"fn"', '"function"', "\"" + String(modifier.fn) + "\""));
          }

          break;

        case 'effect':
          if (typeof modifier.effect !== 'function') {
            console.error(Object(__WEBPACK_IMPORTED_MODULE_0__format_js__["a" /* default */])(INVALID_MODIFIER_ERROR, modifier.name, '"effect"', '"function"', "\"" + String(modifier.fn) + "\""));
          }

          break;

        case 'requires':
          if (!Array.isArray(modifier.requires)) {
            console.error(Object(__WEBPACK_IMPORTED_MODULE_0__format_js__["a" /* default */])(INVALID_MODIFIER_ERROR, modifier.name, '"requires"', '"array"', "\"" + String(modifier.requires) + "\""));
          }

          break;

        case 'requiresIfExists':
          if (!Array.isArray(modifier.requiresIfExists)) {
            console.error(Object(__WEBPACK_IMPORTED_MODULE_0__format_js__["a" /* default */])(INVALID_MODIFIER_ERROR, modifier.name, '"requiresIfExists"', '"array"', "\"" + String(modifier.requiresIfExists) + "\""));
          }

          break;

        case 'options':
        case 'data':
          break;

        default:
          console.error("PopperJS: an invalid property has been provided to the \"" + modifier.name + "\" modifier, valid properties are " + VALID_PROPERTIES.map(function (s) {
            return "\"" + s + "\"";
          }).join(', ') + "; but \"" + key + "\" was provided.");
      }

      modifier.requires && modifier.requires.forEach(function (requirement) {
        if (modifiers.find(function (mod) {
          return mod.name === requirement;
        }) == null) {
          console.error(Object(__WEBPACK_IMPORTED_MODULE_0__format_js__["a" /* default */])(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));
        }
      });
    });
  });
}

/***/ }),
/* 136 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = format;
function format(str) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  return [].concat(args).reduce(function (p, c) {
    return p.replace(/%s/, c);
  }, str);
}

/***/ }),
/* 137 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = uniqueBy;
function uniqueBy(arr, fn) {
  var identifiers = new Set();
  return arr.filter(function (item) {
    var identifier = fn(item);

    if (!identifiers.has(identifier)) {
      identifiers.add(identifier);
      return true;
    }
  });
}

/***/ }),
/* 138 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = mergeByName;
function mergeByName(modifiers) {
  var merged = modifiers.reduce(function (merged, current) {
    var existing = merged[current.name];
    merged[current.name] = existing ? Object.assign(Object.assign(Object.assign({}, existing), current), {}, {
      options: Object.assign(Object.assign({}, existing.options), current.options),
      data: Object.assign(Object.assign({}, existing.data), current.data)
    }) : current;
    return merged;
  }, {}); // IE11 does not support Object.values

  return Object.keys(merged).map(function (key) {
    return merged[key];
  });
}

/***/ }),
/* 139 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getClippingRect;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__enums_js__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getViewportRect_js__ = __webpack_require__(140);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getDocumentRect_js__ = __webpack_require__(141);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__listScrollParents_js__ = __webpack_require__(45);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__getOffsetParent_js__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__getDocumentElement_js__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__getComputedStyle_js__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__instanceOf_js__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__getBoundingClientRect_js__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__getParentNode_js__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__contains_js__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__getNodeName_js__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__utils_rectToClientRect_js__ = __webpack_require__(47);














function getInnerBoundingClientRect(element) {
  var rect = Object(__WEBPACK_IMPORTED_MODULE_8__getBoundingClientRect_js__["a" /* default */])(element);
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}

function getClientRectFromMixedType(element, clippingParent) {
  return clippingParent === __WEBPACK_IMPORTED_MODULE_0__enums_js__["o" /* viewport */] ? Object(__WEBPACK_IMPORTED_MODULE_12__utils_rectToClientRect_js__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_1__getViewportRect_js__["a" /* default */])(element)) : Object(__WEBPACK_IMPORTED_MODULE_7__instanceOf_js__["b" /* isHTMLElement */])(clippingParent) ? getInnerBoundingClientRect(clippingParent) : Object(__WEBPACK_IMPORTED_MODULE_12__utils_rectToClientRect_js__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_2__getDocumentRect_js__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_5__getDocumentElement_js__["a" /* default */])(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`


function getClippingParents(element) {
  var clippingParents = Object(__WEBPACK_IMPORTED_MODULE_3__listScrollParents_js__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_9__getParentNode_js__["a" /* default */])(element));
  var canEscapeClipping = ['absolute', 'fixed'].indexOf(Object(__WEBPACK_IMPORTED_MODULE_6__getComputedStyle_js__["a" /* default */])(element).position) >= 0;
  var clipperElement = canEscapeClipping && Object(__WEBPACK_IMPORTED_MODULE_7__instanceOf_js__["b" /* isHTMLElement */])(element) ? Object(__WEBPACK_IMPORTED_MODULE_4__getOffsetParent_js__["a" /* default */])(element) : element;

  if (!Object(__WEBPACK_IMPORTED_MODULE_7__instanceOf_js__["a" /* isElement */])(clipperElement)) {
    return [];
  } // $FlowFixMe: https://github.com/facebook/flow/issues/1414


  return clippingParents.filter(function (clippingParent) {
    return Object(__WEBPACK_IMPORTED_MODULE_7__instanceOf_js__["a" /* isElement */])(clippingParent) && Object(__WEBPACK_IMPORTED_MODULE_10__contains_js__["a" /* default */])(clippingParent, clipperElement) && Object(__WEBPACK_IMPORTED_MODULE_11__getNodeName_js__["a" /* default */])(clippingParent) !== 'body';
  });
} // Gets the maximum area that the element is visible in due to any number of
// clipping parents


function getClippingRect(element, boundary, rootBoundary) {
  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents[0];
  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent);
    accRect.top = Math.max(rect.top, accRect.top);
    accRect.right = Math.min(rect.right, accRect.right);
    accRect.bottom = Math.min(rect.bottom, accRect.bottom);
    accRect.left = Math.max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

/***/ }),
/* 140 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getViewportRect;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getWindow_js__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getDocumentElement_js__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getWindowScrollBarX_js__ = __webpack_require__(34);



function getViewportRect(element) {
  var win = Object(__WEBPACK_IMPORTED_MODULE_0__getWindow_js__["a" /* default */])(element);
  var html = Object(__WEBPACK_IMPORTED_MODULE_1__getDocumentElement_js__["a" /* default */])(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper
  // can be obscured underneath it.
  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even
  // if it isn't open, so if this isn't available, the popper will be detected
  // to overflow the bottom of the screen too early.

  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)
    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding
    // errors due to floating point numbers, so we need to check precision.
    // Safari returns a number <= 0, usually < -1 when pinch-zoomed
    // Feature detection fails in mobile emulation mode in Chrome.
    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <
    // 0.001
    // Fallback here: "Not Safari" userAgent

    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }

  return {
    width: width,
    height: height,
    x: x + Object(__WEBPACK_IMPORTED_MODULE_2__getWindowScrollBarX_js__["a" /* default */])(element),
    y: y
  };
}

/***/ }),
/* 141 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getDocumentRect;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getDocumentElement_js__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getComputedStyle_js__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getWindowScrollBarX_js__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__getWindowScroll_js__ = __webpack_require__(33);



 // Gets the entire size of the scrollable document area, even extending outside
// of the `<html>` and `<body>` rect bounds if horizontally scrollable

function getDocumentRect(element) {
  var html = Object(__WEBPACK_IMPORTED_MODULE_0__getDocumentElement_js__["a" /* default */])(element);
  var winScroll = Object(__WEBPACK_IMPORTED_MODULE_3__getWindowScroll_js__["a" /* default */])(element);
  var body = element.ownerDocument.body;
  var width = Math.max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = Math.max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + Object(__WEBPACK_IMPORTED_MODULE_2__getWindowScrollBarX_js__["a" /* default */])(element);
  var y = -winScroll.scrollTop;

  if (Object(__WEBPACK_IMPORTED_MODULE_1__getComputedStyle_js__["a" /* default */])(body || html).direction === 'rtl') {
    x += Math.max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }

  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}

/***/ }),
/* 142 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__dom_utils_getWindow_js__ = __webpack_require__(8);
 // eslint-disable-next-line import/no-unused-modules

var passive = {
  passive: true
};

function effect(_ref) {
  var state = _ref.state,
      instance = _ref.instance,
      options = _ref.options;
  var _options$scroll = options.scroll,
      scroll = _options$scroll === void 0 ? true : _options$scroll,
      _options$resize = options.resize,
      resize = _options$resize === void 0 ? true : _options$resize;
  var window = Object(__WEBPACK_IMPORTED_MODULE_0__dom_utils_getWindow_js__["a" /* default */])(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

  if (scroll) {
    scrollParents.forEach(function (scrollParent) {
      scrollParent.addEventListener('scroll', instance.update, passive);
    });
  }

  if (resize) {
    window.addEventListener('resize', instance.update, passive);
  }

  return function () {
    if (scroll) {
      scrollParents.forEach(function (scrollParent) {
        scrollParent.removeEventListener('scroll', instance.update, passive);
      });
    }

    if (resize) {
      window.removeEventListener('resize', instance.update, passive);
    }
  };
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'eventListeners',
  enabled: true,
  phase: 'write',
  fn: function fn() {},
  effect: effect,
  data: {}
});

/***/ }),
/* 143 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_computeOffsets_js__ = __webpack_require__(48);


function popperOffsets(_ref) {
  var state = _ref.state,
      name = _ref.name;
  // Offsets are the actual position the popper needs to have to be
  // properly positioned near its reference element
  // This is the most basic placement, and will be adjusted by
  // the modifiers in the next step
  state.modifiersData[name] = Object(__WEBPACK_IMPORTED_MODULE_0__utils_computeOffsets_js__["a" /* default */])({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: 'absolute',
    placement: state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'popperOffsets',
  enabled: true,
  phase: 'read',
  fn: popperOffsets,
  data: {}
});

/***/ }),
/* 144 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* unused harmony export mapToStyles */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__enums_js__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dom_utils_getOffsetParent_js__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dom_utils_getWindow_js__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dom_utils_getDocumentElement_js__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__dom_utils_getComputedStyle_js__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_getBasePlacement_js__ = __webpack_require__(12);





 // eslint-disable-next-line import/no-unused-modules

var unsetSides = {
  top: 'auto',
  right: 'auto',
  bottom: 'auto',
  left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.

function roundOffsets(_ref) {
  var x = _ref.x,
      y = _ref.y;
  var win = window;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: Math.round(x * dpr) / dpr || 0,
    y: Math.round(y * dpr) / dpr || 0
  };
}

function mapToStyles(_ref2) {
  var _Object$assign2;

  var popper = _ref2.popper,
      popperRect = _ref2.popperRect,
      placement = _ref2.placement,
      offsets = _ref2.offsets,
      position = _ref2.position,
      gpuAcceleration = _ref2.gpuAcceleration,
      adaptive = _ref2.adaptive;

  var _roundOffsets = roundOffsets(offsets),
      x = _roundOffsets.x,
      y = _roundOffsets.y;

  var hasX = offsets.hasOwnProperty('x');
  var hasY = offsets.hasOwnProperty('y');
  var sideX = __WEBPACK_IMPORTED_MODULE_0__enums_js__["f" /* left */];
  var sideY = __WEBPACK_IMPORTED_MODULE_0__enums_js__["m" /* top */];
  var win = window;

  if (adaptive) {
    var offsetParent = Object(__WEBPACK_IMPORTED_MODULE_1__dom_utils_getOffsetParent_js__["a" /* default */])(popper);

    if (offsetParent === Object(__WEBPACK_IMPORTED_MODULE_2__dom_utils_getWindow_js__["a" /* default */])(popper)) {
      offsetParent = Object(__WEBPACK_IMPORTED_MODULE_3__dom_utils_getDocumentElement_js__["a" /* default */])(popper);
    } // $FlowFixMe: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it

    /*:: offsetParent = (offsetParent: Element); */


    if (placement === __WEBPACK_IMPORTED_MODULE_0__enums_js__["m" /* top */]) {
      sideY = __WEBPACK_IMPORTED_MODULE_0__enums_js__["c" /* bottom */];
      y -= offsetParent.clientHeight - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }

    if (placement === __WEBPACK_IMPORTED_MODULE_0__enums_js__["f" /* left */]) {
      sideX = __WEBPACK_IMPORTED_MODULE_0__enums_js__["k" /* right */];
      x -= offsetParent.clientWidth - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }

  var commonStyles = Object.assign({
    position: position
  }, adaptive && unsetSides);

  if (gpuAcceleration) {
    var _Object$assign;

    return Object.assign(Object.assign({}, commonStyles), {}, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) < 2 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }

  return Object.assign(Object.assign({}, commonStyles), {}, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}

function computeStyles(_ref3) {
  var state = _ref3.state,
      options = _ref3.options;
  var _options$gpuAccelerat = options.gpuAcceleration,
      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
      _options$adaptive = options.adaptive,
      adaptive = _options$adaptive === void 0 ? true : _options$adaptive;

  if (process.env.NODE_ENV !== "production") {
    var transitionProperty = Object(__WEBPACK_IMPORTED_MODULE_4__dom_utils_getComputedStyle_js__["a" /* default */])(state.elements.popper).transitionProperty || '';

    if (adaptive && ['transform', 'top', 'right', 'bottom', 'left'].some(function (property) {
      return transitionProperty.indexOf(property) >= 0;
    })) {
      console.warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: "transform", "top", "right", "bottom", "left".', '\n\n', 'Disable the "computeStyles" modifier\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\n\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '));
    }
  }

  var commonStyles = {
    placement: Object(__WEBPACK_IMPORTED_MODULE_5__utils_getBasePlacement_js__["a" /* default */])(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration: gpuAcceleration
  };

  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign(Object.assign({}, state.styles.popper), mapToStyles(Object.assign(Object.assign({}, commonStyles), {}, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive: adaptive
    })));
  }

  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign(Object.assign({}, state.styles.arrow), mapToStyles(Object.assign(Object.assign({}, commonStyles), {}, {
      offsets: state.modifiersData.arrow,
      position: 'absolute',
      adaptive: false
    })));
  }

  state.attributes.popper = Object.assign(Object.assign({}, state.attributes.popper), {}, {
    'data-popper-placement': state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'computeStyles',
  enabled: true,
  phase: 'beforeWrite',
  fn: computeStyles,
  data: {}
});
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(5)))

/***/ }),
/* 145 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__dom_utils_getNodeName_js__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dom_utils_instanceOf_js__ = __webpack_require__(7);

 // This modifier takes the styles prepared by the `computeStyles` modifier
// and applies them to the HTMLElements such as popper and arrow

function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function (name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name]; // arrow is optional + virtual elements

    if (!Object(__WEBPACK_IMPORTED_MODULE_1__dom_utils_instanceOf_js__["b" /* isHTMLElement */])(element) || !Object(__WEBPACK_IMPORTED_MODULE_0__dom_utils_getNodeName_js__["a" /* default */])(element)) {
      return;
    } // Flow doesn't support to extend this property, but it's the most
    // effective way to apply styles to an HTMLElement
    // $FlowFixMe


    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function (name) {
      var value = attributes[name];

      if (value === false) {
        element.removeAttribute(name);
      } else {
        element.setAttribute(name, value === true ? '' : value);
      }
    });
  });
}

function effect(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: '0',
      top: '0',
      margin: '0'
    },
    arrow: {
      position: 'absolute'
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);

  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }

  return function () {
    Object.keys(state.elements).forEach(function (name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them

      var style = styleProperties.reduce(function (style, property) {
        style[property] = '';
        return style;
      }, {}); // arrow is optional + virtual elements

      if (!Object(__WEBPACK_IMPORTED_MODULE_1__dom_utils_instanceOf_js__["b" /* isHTMLElement */])(element) || !Object(__WEBPACK_IMPORTED_MODULE_0__dom_utils_getNodeName_js__["a" /* default */])(element)) {
        return;
      } // Flow doesn't support to extend this property, but it's the most
      // effective way to apply styles to an HTMLElement
      // $FlowFixMe


      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function (attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'applyStyles',
  enabled: true,
  phase: 'write',
  fn: applyStyles,
  effect: effect,
  requires: ['computeStyles']
});

/***/ }),
/* 146 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export distanceAndSkiddingToXY */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_getBasePlacement_js__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__enums_js__ = __webpack_require__(3);


function distanceAndSkiddingToXY(placement, rects, offset) {
  var basePlacement = Object(__WEBPACK_IMPORTED_MODULE_0__utils_getBasePlacement_js__["a" /* default */])(placement);
  var invertDistance = [__WEBPACK_IMPORTED_MODULE_1__enums_js__["f" /* left */], __WEBPACK_IMPORTED_MODULE_1__enums_js__["m" /* top */]].indexOf(basePlacement) >= 0 ? -1 : 1;

  var _ref = typeof offset === 'function' ? offset(Object.assign(Object.assign({}, rects), {}, {
    placement: placement
  })) : offset,
      skidding = _ref[0],
      distance = _ref[1];

  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [__WEBPACK_IMPORTED_MODULE_1__enums_js__["f" /* left */], __WEBPACK_IMPORTED_MODULE_1__enums_js__["k" /* right */]].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}

function offset(_ref2) {
  var state = _ref2.state,
      options = _ref2.options,
      name = _ref2.name;
  var _options$offset = options.offset,
      offset = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = __WEBPACK_IMPORTED_MODULE_1__enums_js__["h" /* placements */].reduce(function (acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement],
      x = _data$state$placement.x,
      y = _data$state$placement.y;

  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'offset',
  enabled: true,
  phase: 'main',
  requires: ['popperOffsets'],
  fn: offset
});

/***/ }),
/* 147 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_getOppositePlacement_js__ = __webpack_require__(148);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_getBasePlacement_js__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_getOppositeVariationPlacement_js__ = __webpack_require__(149);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_detectOverflow_js__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_computeAutoPlacement_js__ = __webpack_require__(150);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__enums_js__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utils_getVariation_js__ = __webpack_require__(25);






 // eslint-disable-next-line import/no-unused-modules

function getExpandedFallbackPlacements(placement) {
  if (Object(__WEBPACK_IMPORTED_MODULE_1__utils_getBasePlacement_js__["a" /* default */])(placement) === __WEBPACK_IMPORTED_MODULE_5__enums_js__["a" /* auto */]) {
    return [];
  }

  var oppositePlacement = Object(__WEBPACK_IMPORTED_MODULE_0__utils_getOppositePlacement_js__["a" /* default */])(placement);
  return [Object(__WEBPACK_IMPORTED_MODULE_2__utils_getOppositeVariationPlacement_js__["a" /* default */])(placement), oppositePlacement, Object(__WEBPACK_IMPORTED_MODULE_2__utils_getOppositeVariationPlacement_js__["a" /* default */])(oppositePlacement)];
}

function flip(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;

  if (state.modifiersData[name]._skip) {
    return;
  }

  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
      specifiedFallbackPlacements = options.fallbackPlacements,
      padding = options.padding,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      _options$flipVariatio = options.flipVariations,
      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
      allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = Object(__WEBPACK_IMPORTED_MODULE_1__utils_getBasePlacement_js__["a" /* default */])(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [Object(__WEBPACK_IMPORTED_MODULE_0__utils_getOppositePlacement_js__["a" /* default */])(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
    return acc.concat(Object(__WEBPACK_IMPORTED_MODULE_1__utils_getBasePlacement_js__["a" /* default */])(placement) === __WEBPACK_IMPORTED_MODULE_5__enums_js__["a" /* auto */] ? Object(__WEBPACK_IMPORTED_MODULE_4__utils_computeAutoPlacement_js__["a" /* default */])(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding,
      flipVariations: flipVariations,
      allowedAutoPlacements: allowedAutoPlacements
    }) : placement);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements[0];

  for (var i = 0; i < placements.length; i++) {
    var placement = placements[i];

    var _basePlacement = Object(__WEBPACK_IMPORTED_MODULE_1__utils_getBasePlacement_js__["a" /* default */])(placement);

    var isStartVariation = Object(__WEBPACK_IMPORTED_MODULE_6__utils_getVariation_js__["a" /* default */])(placement) === __WEBPACK_IMPORTED_MODULE_5__enums_js__["l" /* start */];
    var isVertical = [__WEBPACK_IMPORTED_MODULE_5__enums_js__["m" /* top */], __WEBPACK_IMPORTED_MODULE_5__enums_js__["c" /* bottom */]].indexOf(_basePlacement) >= 0;
    var len = isVertical ? 'width' : 'height';
    var overflow = Object(__WEBPACK_IMPORTED_MODULE_3__utils_detectOverflow_js__["a" /* default */])(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      altBoundary: altBoundary,
      padding: padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? __WEBPACK_IMPORTED_MODULE_5__enums_js__["k" /* right */] : __WEBPACK_IMPORTED_MODULE_5__enums_js__["f" /* left */] : isStartVariation ? __WEBPACK_IMPORTED_MODULE_5__enums_js__["c" /* bottom */] : __WEBPACK_IMPORTED_MODULE_5__enums_js__["m" /* top */];

    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = Object(__WEBPACK_IMPORTED_MODULE_0__utils_getOppositePlacement_js__["a" /* default */])(mainVariationSide);
    }

    var altVariationSide = Object(__WEBPACK_IMPORTED_MODULE_0__utils_getOppositePlacement_js__["a" /* default */])(mainVariationSide);
    var checks = [];

    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }

    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }

    if (checks.every(function (check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }

    checksMap.set(placement, checks);
  }

  if (makeFallbackChecks) {
    // `2` may be desired in some cases – research later
    var numberOfChecks = flipVariations ? 3 : 1;

    var _loop = function _loop(_i) {
      var fittingPlacement = placements.find(function (placement) {
        var checks = checksMap.get(placement);

        if (checks) {
          return checks.slice(0, _i).every(function (check) {
            return check;
          });
        }
      });

      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };

    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);

      if (_ret === "break") break;
    }
  }

  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'flip',
  enabled: true,
  phase: 'main',
  fn: flip,
  requiresIfExists: ['offset'],
  data: {
    _skip: false
  }
});

/***/ }),
/* 148 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getOppositePlacement;
var hash = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}

/***/ }),
/* 149 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getOppositeVariationPlacement;
var hash = {
  start: 'end',
  end: 'start'
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function (matched) {
    return hash[matched];
  });
}

/***/ }),
/* 150 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (immutable) */ __webpack_exports__["a"] = computeAutoPlacement;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getVariation_js__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__enums_js__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__detectOverflow_js__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__getBasePlacement_js__ = __webpack_require__(12);





/*:: type OverflowsMap = { [ComputedPlacement]: number }; */

/*;; type OverflowsMap = { [key in ComputedPlacement]: number }; */
function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      placement = _options.placement,
      boundary = _options.boundary,
      rootBoundary = _options.rootBoundary,
      padding = _options.padding,
      flipVariations = _options.flipVariations,
      _options$allowedAutoP = _options.allowedAutoPlacements,
      allowedAutoPlacements = _options$allowedAutoP === void 0 ? __WEBPACK_IMPORTED_MODULE_1__enums_js__["h" /* placements */] : _options$allowedAutoP;
  var variation = Object(__WEBPACK_IMPORTED_MODULE_0__getVariation_js__["a" /* default */])(placement);
  var placements = variation ? flipVariations ? __WEBPACK_IMPORTED_MODULE_1__enums_js__["n" /* variationPlacements */] : __WEBPACK_IMPORTED_MODULE_1__enums_js__["n" /* variationPlacements */].filter(function (placement) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__getVariation_js__["a" /* default */])(placement) === variation;
  }) : __WEBPACK_IMPORTED_MODULE_1__enums_js__["b" /* basePlacements */]; // $FlowFixMe

  var allowedPlacements = placements.filter(function (placement) {
    return allowedAutoPlacements.indexOf(placement) >= 0;
  });

  if (allowedPlacements.length === 0) {
    allowedPlacements = placements;

    if (process.env.NODE_ENV !== "production") {
      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, "auto" cannot be used to allow "bottom-start".', 'Use "auto-start" instead.'].join(' '));
    }
  } // $FlowFixMe: Flow seems to have problems with two array unions...


  var overflows = allowedPlacements.reduce(function (acc, placement) {
    acc[placement] = Object(__WEBPACK_IMPORTED_MODULE_2__detectOverflow_js__["a" /* default */])(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding
    })[Object(__WEBPACK_IMPORTED_MODULE_3__getBasePlacement_js__["a" /* default */])(placement)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function (a, b) {
    return overflows[a] - overflows[b];
  });
}
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(5)))

/***/ }),
/* 151 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__enums_js__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_getBasePlacement_js__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_getMainAxisFromPlacement_js__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_getAltAxis_js__ = __webpack_require__(152);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_within_js__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__dom_utils_getLayoutRect_js__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__dom_utils_getOffsetParent_js__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__utils_detectOverflow_js__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__utils_getVariation_js__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__utils_getFreshSideObject_js__ = __webpack_require__(50);











function preventOverflow(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;
  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      padding = options.padding,
      _options$tether = options.tether,
      tether = _options$tether === void 0 ? true : _options$tether,
      _options$tetherOffset = options.tetherOffset,
      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = Object(__WEBPACK_IMPORTED_MODULE_7__utils_detectOverflow_js__["a" /* default */])(state, {
    boundary: boundary,
    rootBoundary: rootBoundary,
    padding: padding,
    altBoundary: altBoundary
  });
  var basePlacement = Object(__WEBPACK_IMPORTED_MODULE_1__utils_getBasePlacement_js__["a" /* default */])(state.placement);
  var variation = Object(__WEBPACK_IMPORTED_MODULE_8__utils_getVariation_js__["a" /* default */])(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = Object(__WEBPACK_IMPORTED_MODULE_2__utils_getMainAxisFromPlacement_js__["a" /* default */])(basePlacement);
  var altAxis = Object(__WEBPACK_IMPORTED_MODULE_3__utils_getAltAxis_js__["a" /* default */])(mainAxis);
  var popperOffsets = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign(Object.assign({}, state.rects), {}, {
    placement: state.placement
  })) : tetherOffset;
  var data = {
    x: 0,
    y: 0
  };

  if (!popperOffsets) {
    return;
  }

  if (checkMainAxis) {
    var mainSide = mainAxis === 'y' ? __WEBPACK_IMPORTED_MODULE_0__enums_js__["m" /* top */] : __WEBPACK_IMPORTED_MODULE_0__enums_js__["f" /* left */];
    var altSide = mainAxis === 'y' ? __WEBPACK_IMPORTED_MODULE_0__enums_js__["c" /* bottom */] : __WEBPACK_IMPORTED_MODULE_0__enums_js__["k" /* right */];
    var len = mainAxis === 'y' ? 'height' : 'width';
    var offset = popperOffsets[mainAxis];
    var min = popperOffsets[mainAxis] + overflow[mainSide];
    var max = popperOffsets[mainAxis] - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === __WEBPACK_IMPORTED_MODULE_0__enums_js__["l" /* start */] ? referenceRect[len] : popperRect[len];
    var maxLen = variation === __WEBPACK_IMPORTED_MODULE_0__enums_js__["l" /* start */] ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
    // outside the reference bounds

    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? Object(__WEBPACK_IMPORTED_MODULE_5__dom_utils_getLayoutRect_js__["a" /* default */])(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : Object(__WEBPACK_IMPORTED_MODULE_9__utils_getFreshSideObject_js__["a" /* default */])();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
    // to include its full size in the calculation. If the reference is small
    // and near the edge of a boundary, the popper can overflow even if the
    // reference is not overflowing as well (e.g. virtual elements with no
    // width or height)

    var arrowLen = Object(__WEBPACK_IMPORTED_MODULE_4__utils_within_js__["a" /* default */])(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;
    var arrowOffsetParent = state.elements.arrow && Object(__WEBPACK_IMPORTED_MODULE_6__dom_utils_getOffsetParent_js__["a" /* default */])(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;
    var tetherMin = popperOffsets[mainAxis] + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = popperOffsets[mainAxis] + maxOffset - offsetModifierValue;
    var preventedOffset = Object(__WEBPACK_IMPORTED_MODULE_4__utils_within_js__["a" /* default */])(tether ? Math.min(min, tetherMin) : min, offset, tether ? Math.max(max, tetherMax) : max);
    popperOffsets[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset;
  }

  if (checkAltAxis) {
    var _mainSide = mainAxis === 'x' ? __WEBPACK_IMPORTED_MODULE_0__enums_js__["m" /* top */] : __WEBPACK_IMPORTED_MODULE_0__enums_js__["f" /* left */];

    var _altSide = mainAxis === 'x' ? __WEBPACK_IMPORTED_MODULE_0__enums_js__["c" /* bottom */] : __WEBPACK_IMPORTED_MODULE_0__enums_js__["k" /* right */];

    var _offset = popperOffsets[altAxis];

    var _min = _offset + overflow[_mainSide];

    var _max = _offset - overflow[_altSide];

    var _preventedOffset = Object(__WEBPACK_IMPORTED_MODULE_4__utils_within_js__["a" /* default */])(_min, _offset, _max);

    popperOffsets[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'preventOverflow',
  enabled: true,
  phase: 'main',
  fn: preventOverflow,
  requiresIfExists: ['offset']
});

/***/ }),
/* 152 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = getAltAxis;
function getAltAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}

/***/ }),
/* 153 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_getBasePlacement_js__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dom_utils_getLayoutRect_js__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dom_utils_contains_js__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dom_utils_getOffsetParent_js__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_getMainAxisFromPlacement_js__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_within_js__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utils_mergePaddingObject_js__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__utils_expandToHashMap_js__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__enums_js__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__dom_utils_instanceOf_js__ = __webpack_require__(7);









 // eslint-disable-next-line import/no-unused-modules

function arrow(_ref) {
  var _state$modifiersData$;

  var state = _ref.state,
      name = _ref.name;
  var arrowElement = state.elements.arrow;
  var popperOffsets = state.modifiersData.popperOffsets;
  var basePlacement = Object(__WEBPACK_IMPORTED_MODULE_0__utils_getBasePlacement_js__["a" /* default */])(state.placement);
  var axis = Object(__WEBPACK_IMPORTED_MODULE_4__utils_getMainAxisFromPlacement_js__["a" /* default */])(basePlacement);
  var isVertical = [__WEBPACK_IMPORTED_MODULE_8__enums_js__["f" /* left */], __WEBPACK_IMPORTED_MODULE_8__enums_js__["k" /* right */]].indexOf(basePlacement) >= 0;
  var len = isVertical ? 'height' : 'width';

  if (!arrowElement || !popperOffsets) {
    return;
  }

  var paddingObject = state.modifiersData[name + "#persistent"].padding;
  var arrowRect = Object(__WEBPACK_IMPORTED_MODULE_1__dom_utils_getLayoutRect_js__["a" /* default */])(arrowElement);
  var minProp = axis === 'y' ? __WEBPACK_IMPORTED_MODULE_8__enums_js__["m" /* top */] : __WEBPACK_IMPORTED_MODULE_8__enums_js__["f" /* left */];
  var maxProp = axis === 'y' ? __WEBPACK_IMPORTED_MODULE_8__enums_js__["c" /* bottom */] : __WEBPACK_IMPORTED_MODULE_8__enums_js__["k" /* right */];
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
  var arrowOffsetParent = Object(__WEBPACK_IMPORTED_MODULE_3__dom_utils_getOffsetParent_js__["a" /* default */])(arrowElement);
  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
  // outside of the popper bounds

  var min = paddingObject[minProp];
  var max = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset = Object(__WEBPACK_IMPORTED_MODULE_5__utils_within_js__["a" /* default */])(min, center, max); // Prevents breaking syntax highlighting...

  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}

function effect(_ref2) {
  var state = _ref2.state,
      options = _ref2.options,
      name = _ref2.name;
  var _options$element = options.element,
      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element,
      _options$padding = options.padding,
      padding = _options$padding === void 0 ? 0 : _options$padding;

  if (arrowElement == null) {
    return;
  } // CSS selector


  if (typeof arrowElement === 'string') {
    arrowElement = state.elements.popper.querySelector(arrowElement);

    if (!arrowElement) {
      return;
    }
  }

  if (process.env.NODE_ENV !== "production") {
    if (!Object(__WEBPACK_IMPORTED_MODULE_9__dom_utils_instanceOf_js__["b" /* isHTMLElement */])(arrowElement)) {
      console.error(['Popper: "arrow" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));
    }
  }

  if (!Object(__WEBPACK_IMPORTED_MODULE_2__dom_utils_contains_js__["a" /* default */])(state.elements.popper, arrowElement)) {
    if (process.env.NODE_ENV !== "production") {
      console.error(['Popper: "arrow" modifier\'s `element` must be a child of the popper', 'element.'].join(' '));
    }

    return;
  }

  state.elements.arrow = arrowElement;
  state.modifiersData[name + "#persistent"] = {
    padding: Object(__WEBPACK_IMPORTED_MODULE_6__utils_mergePaddingObject_js__["a" /* default */])(typeof padding !== 'number' ? padding : Object(__WEBPACK_IMPORTED_MODULE_7__utils_expandToHashMap_js__["a" /* default */])(padding, __WEBPACK_IMPORTED_MODULE_8__enums_js__["b" /* basePlacements */]))
  };
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'arrow',
  enabled: true,
  phase: 'main',
  fn: arrow,
  effect: effect,
  requires: ['popperOffsets'],
  requiresIfExists: ['preventOverflow']
});
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(5)))

/***/ }),
/* 154 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__enums_js__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_detectOverflow_js__ = __webpack_require__(19);



function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }

  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}

function isAnySideFullyClipped(overflow) {
  return [__WEBPACK_IMPORTED_MODULE_0__enums_js__["m" /* top */], __WEBPACK_IMPORTED_MODULE_0__enums_js__["k" /* right */], __WEBPACK_IMPORTED_MODULE_0__enums_js__["c" /* bottom */], __WEBPACK_IMPORTED_MODULE_0__enums_js__["f" /* left */]].some(function (side) {
    return overflow[side] >= 0;
  });
}

function hide(_ref) {
  var state = _ref.state,
      name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = Object(__WEBPACK_IMPORTED_MODULE_1__utils_detectOverflow_js__["a" /* default */])(state, {
    elementContext: 'reference'
  });
  var popperAltOverflow = Object(__WEBPACK_IMPORTED_MODULE_1__utils_detectOverflow_js__["a" /* default */])(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets: referenceClippingOffsets,
    popperEscapeOffsets: popperEscapeOffsets,
    isReferenceHidden: isReferenceHidden,
    hasPopperEscaped: hasPopperEscaped
  };
  state.attributes.popper = Object.assign(Object.assign({}, state.attributes.popper), {}, {
    'data-popper-reference-hidden': isReferenceHidden,
    'data-popper-escaped': hasPopperEscaped
  });
} // eslint-disable-next-line import/no-unused-modules


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'hide',
  enabled: true,
  phase: 'main',
  requiresIfExists: ['preventOverflow'],
  fn: hide
});

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tag = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
exports.Tag = function (_a) {
    var _b;
    var text = _a.text, keyValue = _a.keyValue, shade = _a.shade, shape = _a.shape, onClick = _a.onClick;
    var classes = classnames_1.default('tag-label', (_b = {},
        _b["tag-label--" + shade] = shade && shade !== 'light',
        _b['tag-label--square'] = shape === 'square',
        _b));
    return (React.createElement("div", { className: classes, key: keyValue },
        text,
        React.createElement("button", { className: 'tag-label__remove', onClick: onClick },
            React.createElement("i", { className: 'icon-close-small' }))));
};


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TabPanel = exports.TabContent = exports.Tabs = exports.TabLabel = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
exports.TabLabel = function (_a) {
    var label = _a.label;
    return (React.createElement("span", null, label));
};
exports.Tabs = function (_a) {
    var _b;
    var size = _a.size, theme = _a.theme, ariaLabel = _a.ariaLabel, children = _a.children, onClick = _a.onClick;
    var _c = React.useState(0), index = _c[0], setIndex = _c[1];
    function handleSelected(i) {
        setIndex(i);
        handleClick(i);
    }
    var handleClick = function (i) {
        onClick(i);
    };
    var classes = classnames_1.default('sd-nav-tabs', (_b = {},
        _b["sd-nav-tabs--" + size] = size && size !== undefined,
        _b['sd-nav-tabs--ui-dark'] = theme === 'dark',
        _b));
    return (React.createElement("div", { className: classes, role: 'tablist', "aria-label": ariaLabel ? ariaLabel : 'tabs' }, children.map(function (item, i) {
        return React.createElement("button", { key: i, "aria-controls": 'tabpanel-' + i, className: 'sd-nav-tabs__tab' + (index === i ? ' sd-nav-tabs__tab--active' : ''), onClick: function () { return handleSelected(i); }, role: 'tab', "aria-selected": index === i ? 'true' : 'false' }, item);
    })));
};
exports.TabContent = function (_a) {
    var theme = _a.theme, children = _a.children, activePanel = _a.activePanel;
    return (React.createElement("div", { className: 'sd-nav-tabs__content' +
            (theme === 'dark' ? ' sd-nav-tabs__content--ui-dark' : '') }, children.map(function (panel, i) {
        return panel.props.indexValue === activePanel ?
            React.createElement("div", { className: 'sd-nav-tabs__pane', role: 'tabpanel', "aria-labelledby": 'tab-' + activePanel, key: i }, panel) : null;
    })));
};
exports.TabPanel = function (_a) {
    var children = _a.children, indexValue = _a.indexValue;
    return (React.createElement(React.Fragment, { key: indexValue }, children));
};


/***/ }),
/* 157 */,
/* 158 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MemoryRouter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Prompt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return Redirect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return Route; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return Router; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return StaticRouter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return Switch; });
/* unused harmony export __HistoryContext */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return context; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return generatePath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return matchPath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return useHistory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return useLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return useParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return useRouteMatch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return withRouter; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_inheritsLoose__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_history__ = __webpack_require__(159);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_tiny_warning__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_mini_create_react_context__ = __webpack_require__(192);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_tiny_invariant__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_extends__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_path_to_regexp__ = __webpack_require__(193);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_path_to_regexp___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_path_to_regexp__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_react_is__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_react_is___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_react_is__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__ = __webpack_require__(160);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_hoist_non_react_statics__ = __webpack_require__(195);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_hoist_non_react_statics___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_hoist_non_react_statics__);













// TODO: Replace with React.createContext once we can assume React 16+

var createNamedContext = function createNamedContext(name) {
  var context = Object(__WEBPACK_IMPORTED_MODULE_5_mini_create_react_context__["a" /* default */])();
  context.displayName = name;
  return context;
};

var historyContext =
/*#__PURE__*/
createNamedContext("Router-History");

// TODO: Replace with React.createContext once we can assume React 16+

var createNamedContext$1 = function createNamedContext(name) {
  var context = Object(__WEBPACK_IMPORTED_MODULE_5_mini_create_react_context__["a" /* default */])();
  context.displayName = name;
  return context;
};

var context =
/*#__PURE__*/
createNamedContext$1("Router");

/**
 * The public API for putting history on context.
 */

var Router =
/*#__PURE__*/
function (_React$Component) {
  Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(Router, _React$Component);

  Router.computeRootMatch = function computeRootMatch(pathname) {
    return {
      path: "/",
      url: "/",
      params: {},
      isExact: pathname === "/"
    };
  };

  function Router(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;
    _this.state = {
      location: props.history.location
    }; // This is a bit of a hack. We have to start listening for location
    // changes here in the constructor in case there are any <Redirect>s
    // on the initial render. If there are, they will replace/push when
    // they mount and since cDM fires in children before parents, we may
    // get a new location before the <Router> is mounted.

    _this._isMounted = false;
    _this._pendingLocation = null;

    if (!props.staticContext) {
      _this.unlisten = props.history.listen(function (location) {
        if (_this._isMounted) {
          _this.setState({
            location: location
          });
        } else {
          _this._pendingLocation = location;
        }
      });
    }

    return _this;
  }

  var _proto = Router.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this._isMounted = true;

    if (this._pendingLocation) {
      this.setState({
        location: this._pendingLocation
      });
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.unlisten) this.unlisten();
  };

  _proto.render = function render() {
    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(context.Provider, {
      value: {
        history: this.props.history,
        location: this.state.location,
        match: Router.computeRootMatch(this.state.location.pathname),
        staticContext: this.props.staticContext
      }
    }, __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(historyContext.Provider, {
      children: this.props.children || null,
      value: this.props.history
    }));
  };

  return Router;
}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);

if (process.env.NODE_ENV !== "production") {
  Router.propTypes = {
    children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node,
    history: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object.isRequired,
    staticContext: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object
  };

  Router.prototype.componentDidUpdate = function (prevProps) {
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(prevProps.history === this.props.history, "You cannot change <Router history>") : void 0;
  };
}

/**
 * The public API for a <Router> that stores location in memory.
 */

var MemoryRouter =
/*#__PURE__*/
function (_React$Component) {
  Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(MemoryRouter, _React$Component);

  function MemoryRouter() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = Object(__WEBPACK_IMPORTED_MODULE_3_history__["d" /* createMemoryHistory */])(_this.props);
    return _this;
  }

  var _proto = MemoryRouter.prototype;

  _proto.render = function render() {
    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(Router, {
      history: this.history,
      children: this.props.children
    });
  };

  return MemoryRouter;
}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);

if (process.env.NODE_ENV !== "production") {
  MemoryRouter.propTypes = {
    initialEntries: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.array,
    initialIndex: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.number,
    getUserConfirmation: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,
    keyLength: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.number,
    children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node
  };

  MemoryRouter.prototype.componentDidMount = function () {
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(!this.props.history, "<MemoryRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { MemoryRouter as Router }`.") : void 0;
  };
}

var Lifecycle =
/*#__PURE__*/
function (_React$Component) {
  Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(Lifecycle, _React$Component);

  function Lifecycle() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Lifecycle.prototype;

  _proto.componentDidMount = function componentDidMount() {
    if (this.props.onMount) this.props.onMount.call(this, this);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (this.props.onUpdate) this.props.onUpdate.call(this, this, prevProps);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.props.onUnmount) this.props.onUnmount.call(this, this);
  };

  _proto.render = function render() {
    return null;
  };

  return Lifecycle;
}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);

/**
 * The public API for prompting the user before navigating away from a screen.
 */

function Prompt(_ref) {
  var message = _ref.message,
      _ref$when = _ref.when,
      when = _ref$when === void 0 ? true : _ref$when;
  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(context.Consumer, null, function (context) {
    !context ? process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You should not use <Prompt> outside a <Router>") : Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) : void 0;
    if (!when || context.staticContext) return null;
    var method = context.history.block;
    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(Lifecycle, {
      onMount: function onMount(self) {
        self.release = method(message);
      },
      onUpdate: function onUpdate(self, prevProps) {
        if (prevProps.message !== message) {
          self.release();
          self.release = method(message);
        }
      },
      onUnmount: function onUnmount(self) {
        self.release();
      },
      message: message
    });
  });
}

if (process.env.NODE_ENV !== "production") {
  var messageType = __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string]);
  Prompt.propTypes = {
    when: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool,
    message: messageType.isRequired
  };
}

var cache = {};
var cacheLimit = 10000;
var cacheCount = 0;

function compilePath(path) {
  if (cache[path]) return cache[path];
  var generator = __WEBPACK_IMPORTED_MODULE_8_path_to_regexp___default.a.compile(path);

  if (cacheCount < cacheLimit) {
    cache[path] = generator;
    cacheCount++;
  }

  return generator;
}
/**
 * Public API for generating a URL pathname from a path and parameters.
 */


function generatePath(path, params) {
  if (path === void 0) {
    path = "/";
  }

  if (params === void 0) {
    params = {};
  }

  return path === "/" ? path : compilePath(path)(params, {
    pretty: true
  });
}

/**
 * The public API for navigating programmatically with a component.
 */

function Redirect(_ref) {
  var computedMatch = _ref.computedMatch,
      to = _ref.to,
      _ref$push = _ref.push,
      push = _ref$push === void 0 ? false : _ref$push;
  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(context.Consumer, null, function (context) {
    !context ? process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You should not use <Redirect> outside a <Router>") : Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) : void 0;
    var history = context.history,
        staticContext = context.staticContext;
    var method = push ? history.push : history.replace;
    var location = Object(__WEBPACK_IMPORTED_MODULE_3_history__["c" /* createLocation */])(computedMatch ? typeof to === "string" ? generatePath(to, computedMatch.params) : Object(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_extends__["a" /* default */])({}, to, {
      pathname: generatePath(to.pathname, computedMatch.params)
    }) : to); // When rendering in a static context,
    // set the new location immediately.

    if (staticContext) {
      method(location);
      return null;
    }

    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(Lifecycle, {
      onMount: function onMount() {
        method(location);
      },
      onUpdate: function onUpdate(self, prevProps) {
        var prevLocation = Object(__WEBPACK_IMPORTED_MODULE_3_history__["c" /* createLocation */])(prevProps.to);

        if (!Object(__WEBPACK_IMPORTED_MODULE_3_history__["f" /* locationsAreEqual */])(prevLocation, Object(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_extends__["a" /* default */])({}, location, {
          key: prevLocation.key
        }))) {
          method(location);
        }
      },
      to: to
    });
  });
}

if (process.env.NODE_ENV !== "production") {
  Redirect.propTypes = {
    push: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool,
    from: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string,
    to: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object]).isRequired
  };
}

var cache$1 = {};
var cacheLimit$1 = 10000;
var cacheCount$1 = 0;

function compilePath$1(path, options) {
  var cacheKey = "" + options.end + options.strict + options.sensitive;
  var pathCache = cache$1[cacheKey] || (cache$1[cacheKey] = {});
  if (pathCache[path]) return pathCache[path];
  var keys = [];
  var regexp = __WEBPACK_IMPORTED_MODULE_8_path_to_regexp___default()(path, keys, options);
  var result = {
    regexp: regexp,
    keys: keys
  };

  if (cacheCount$1 < cacheLimit$1) {
    pathCache[path] = result;
    cacheCount$1++;
  }

  return result;
}
/**
 * Public API for matching a URL pathname to a path.
 */


function matchPath(pathname, options) {
  if (options === void 0) {
    options = {};
  }

  if (typeof options === "string" || Array.isArray(options)) {
    options = {
      path: options
    };
  }

  var _options = options,
      path = _options.path,
      _options$exact = _options.exact,
      exact = _options$exact === void 0 ? false : _options$exact,
      _options$strict = _options.strict,
      strict = _options$strict === void 0 ? false : _options$strict,
      _options$sensitive = _options.sensitive,
      sensitive = _options$sensitive === void 0 ? false : _options$sensitive;
  var paths = [].concat(path);
  return paths.reduce(function (matched, path) {
    if (!path && path !== "") return null;
    if (matched) return matched;

    var _compilePath = compilePath$1(path, {
      end: exact,
      strict: strict,
      sensitive: sensitive
    }),
        regexp = _compilePath.regexp,
        keys = _compilePath.keys;

    var match = regexp.exec(pathname);
    if (!match) return null;
    var url = match[0],
        values = match.slice(1);
    var isExact = pathname === url;
    if (exact && !isExact) return null;
    return {
      path: path,
      // the path used to match
      url: path === "/" && url === "" ? "/" : url,
      // the matched portion of the URL
      isExact: isExact,
      // whether or not we matched exactly
      params: keys.reduce(function (memo, key, index) {
        memo[key.name] = values[index];
        return memo;
      }, {})
    };
  }, null);
}

function isEmptyChildren(children) {
  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.Children.count(children) === 0;
}

function evalChildrenDev(children, props, path) {
  var value = children(props);
  process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(value !== undefined, "You returned `undefined` from the `children` function of " + ("<Route" + (path ? " path=\"" + path + "\"" : "") + ">, but you ") + "should have returned a React element or `null`") : void 0;
  return value || null;
}
/**
 * The public API for matching a single path and rendering.
 */


var Route =
/*#__PURE__*/
function (_React$Component) {
  Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(Route, _React$Component);

  function Route() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Route.prototype;

  _proto.render = function render() {
    var _this = this;

    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(context.Consumer, null, function (context$1) {
      !context$1 ? process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You should not use <Route> outside a <Router>") : Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) : void 0;
      var location = _this.props.location || context$1.location;
      var match = _this.props.computedMatch ? _this.props.computedMatch // <Switch> already computed the match for us
      : _this.props.path ? matchPath(location.pathname, _this.props) : context$1.match;

      var props = Object(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_extends__["a" /* default */])({}, context$1, {
        location: location,
        match: match
      });

      var _this$props = _this.props,
          children = _this$props.children,
          component = _this$props.component,
          render = _this$props.render; // Preact uses an empty array as children by
      // default, so use null if that's the case.

      if (Array.isArray(children) && children.length === 0) {
        children = null;
      }

      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(context.Provider, {
        value: props
      }, props.match ? children ? typeof children === "function" ? process.env.NODE_ENV !== "production" ? evalChildrenDev(children, props, _this.props.path) : children(props) : children : component ? __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(component, props) : render ? render(props) : null : typeof children === "function" ? process.env.NODE_ENV !== "production" ? evalChildrenDev(children, props, _this.props.path) : children(props) : null);
    });
  };

  return Route;
}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);

if (process.env.NODE_ENV !== "production") {
  Route.propTypes = {
    children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node]),
    component: function component(props, propName) {
      if (props[propName] && !Object(__WEBPACK_IMPORTED_MODULE_9_react_is__["isValidElementType"])(props[propName])) {
        return new Error("Invalid prop 'component' supplied to 'Route': the prop is not a valid React component");
      }
    },
    exact: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool,
    location: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object,
    path: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string)]),
    render: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,
    sensitive: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool,
    strict: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool
  };

  Route.prototype.componentDidMount = function () {
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.component), "You should not use <Route component> and <Route children> in the same route; <Route component> will be ignored") : void 0;
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.render), "You should not use <Route render> and <Route children> in the same route; <Route render> will be ignored") : void 0;
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(!(this.props.component && this.props.render), "You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored") : void 0;
  };

  Route.prototype.componentDidUpdate = function (prevProps) {
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(!(this.props.location && !prevProps.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.') : void 0;
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(!(!this.props.location && prevProps.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.') : void 0;
  };
}

function addLeadingSlash(path) {
  return path.charAt(0) === "/" ? path : "/" + path;
}

function addBasename(basename, location) {
  if (!basename) return location;
  return Object(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_extends__["a" /* default */])({}, location, {
    pathname: addLeadingSlash(basename) + location.pathname
  });
}

function stripBasename(basename, location) {
  if (!basename) return location;
  var base = addLeadingSlash(basename);
  if (location.pathname.indexOf(base) !== 0) return location;
  return Object(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_extends__["a" /* default */])({}, location, {
    pathname: location.pathname.substr(base.length)
  });
}

function createURL(location) {
  return typeof location === "string" ? location : Object(__WEBPACK_IMPORTED_MODULE_3_history__["e" /* createPath */])(location);
}

function staticHandler(methodName) {
  return function () {
     process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You cannot %s with <StaticRouter>", methodName) : Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) ;
  };
}

function noop() {}
/**
 * The public top-level API for a "static" <Router>, so-called because it
 * can't actually change the current location. Instead, it just records
 * location changes in a context object. Useful mainly in testing and
 * server-rendering scenarios.
 */


var StaticRouter =
/*#__PURE__*/
function (_React$Component) {
  Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(StaticRouter, _React$Component);

  function StaticRouter() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _this.handlePush = function (location) {
      return _this.navigateTo(location, "PUSH");
    };

    _this.handleReplace = function (location) {
      return _this.navigateTo(location, "REPLACE");
    };

    _this.handleListen = function () {
      return noop;
    };

    _this.handleBlock = function () {
      return noop;
    };

    return _this;
  }

  var _proto = StaticRouter.prototype;

  _proto.navigateTo = function navigateTo(location, action) {
    var _this$props = this.props,
        _this$props$basename = _this$props.basename,
        basename = _this$props$basename === void 0 ? "" : _this$props$basename,
        _this$props$context = _this$props.context,
        context = _this$props$context === void 0 ? {} : _this$props$context;
    context.action = action;
    context.location = addBasename(basename, Object(__WEBPACK_IMPORTED_MODULE_3_history__["c" /* createLocation */])(location));
    context.url = createURL(context.location);
  };

  _proto.render = function render() {
    var _this$props2 = this.props,
        _this$props2$basename = _this$props2.basename,
        basename = _this$props2$basename === void 0 ? "" : _this$props2$basename,
        _this$props2$context = _this$props2.context,
        context = _this$props2$context === void 0 ? {} : _this$props2$context,
        _this$props2$location = _this$props2.location,
        location = _this$props2$location === void 0 ? "/" : _this$props2$location,
        rest = Object(__WEBPACK_IMPORTED_MODULE_10__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__["a" /* default */])(_this$props2, ["basename", "context", "location"]);

    var history = {
      createHref: function createHref(path) {
        return addLeadingSlash(basename + createURL(path));
      },
      action: "POP",
      location: stripBasename(basename, Object(__WEBPACK_IMPORTED_MODULE_3_history__["c" /* createLocation */])(location)),
      push: this.handlePush,
      replace: this.handleReplace,
      go: staticHandler("go"),
      goBack: staticHandler("goBack"),
      goForward: staticHandler("goForward"),
      listen: this.handleListen,
      block: this.handleBlock
    };
    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(Router, Object(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_extends__["a" /* default */])({}, rest, {
      history: history,
      staticContext: context
    }));
  };

  return StaticRouter;
}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);

if (process.env.NODE_ENV !== "production") {
  StaticRouter.propTypes = {
    basename: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string,
    context: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object,
    location: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object])
  };

  StaticRouter.prototype.componentDidMount = function () {
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(!this.props.history, "<StaticRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { StaticRouter as Router }`.") : void 0;
  };
}

/**
 * The public API for rendering the first <Route> that matches.
 */

var Switch =
/*#__PURE__*/
function (_React$Component) {
  Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(Switch, _React$Component);

  function Switch() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Switch.prototype;

  _proto.render = function render() {
    var _this = this;

    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(context.Consumer, null, function (context) {
      !context ? process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You should not use <Switch> outside a <Router>") : Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) : void 0;
      var location = _this.props.location || context.location;
      var element, match; // We use React.Children.forEach instead of React.Children.toArray().find()
      // here because toArray adds keys to all child elements and we do not want
      // to trigger an unmount/remount for two <Route>s that render the same
      // component at different URLs.

      __WEBPACK_IMPORTED_MODULE_1_react___default.a.Children.forEach(_this.props.children, function (child) {
        if (match == null && __WEBPACK_IMPORTED_MODULE_1_react___default.a.isValidElement(child)) {
          element = child;
          var path = child.props.path || child.props.from;
          match = path ? matchPath(location.pathname, Object(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_extends__["a" /* default */])({}, child.props, {
            path: path
          })) : context.match;
        }
      });
      return match ? __WEBPACK_IMPORTED_MODULE_1_react___default.a.cloneElement(element, {
        location: location,
        computedMatch: match
      }) : null;
    });
  };

  return Switch;
}(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);

if (process.env.NODE_ENV !== "production") {
  Switch.propTypes = {
    children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node,
    location: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object
  };

  Switch.prototype.componentDidUpdate = function (prevProps) {
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(!(this.props.location && !prevProps.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.') : void 0;
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_4_tiny_warning__["a" /* default */])(!(!this.props.location && prevProps.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.') : void 0;
  };
}

/**
 * A public higher-order component to access the imperative API
 */

function withRouter(Component) {
  var displayName = "withRouter(" + (Component.displayName || Component.name) + ")";

  var C = function C(props) {
    var wrappedComponentRef = props.wrappedComponentRef,
        remainingProps = Object(__WEBPACK_IMPORTED_MODULE_10__babel_runtime_helpers_esm_objectWithoutPropertiesLoose__["a" /* default */])(props, ["wrappedComponentRef"]);

    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(context.Consumer, null, function (context) {
      !context ? process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You should not use <" + displayName + " /> outside a <Router>") : Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) : void 0;
      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(Component, Object(__WEBPACK_IMPORTED_MODULE_7__babel_runtime_helpers_esm_extends__["a" /* default */])({}, remainingProps, context, {
        ref: wrappedComponentRef
      }));
    });
  };

  C.displayName = displayName;
  C.WrappedComponent = Component;

  if (process.env.NODE_ENV !== "production") {
    C.propTypes = {
      wrappedComponentRef: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object])
    };
  }

  return __WEBPACK_IMPORTED_MODULE_11_hoist_non_react_statics___default()(C, Component);
}

var useContext = __WEBPACK_IMPORTED_MODULE_1_react___default.a.useContext;
function useHistory() {
  if (process.env.NODE_ENV !== "production") {
    !(typeof useContext === "function") ? process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You must use React >= 16.8 in order to use useHistory()") : Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) : void 0;
  }

  return useContext(historyContext);
}
function useLocation() {
  if (process.env.NODE_ENV !== "production") {
    !(typeof useContext === "function") ? process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You must use React >= 16.8 in order to use useLocation()") : Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) : void 0;
  }

  return useContext(context).location;
}
function useParams() {
  if (process.env.NODE_ENV !== "production") {
    !(typeof useContext === "function") ? process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You must use React >= 16.8 in order to use useParams()") : Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) : void 0;
  }

  var match = useContext(context).match;
  return match ? match.params : {};
}
function useRouteMatch(path) {
  if (process.env.NODE_ENV !== "production") {
    !(typeof useContext === "function") ? process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false, "You must use React >= 16.8 in order to use useRouteMatch()") : Object(__WEBPACK_IMPORTED_MODULE_6_tiny_invariant__["a" /* default */])(false) : void 0;
  }

  var location = useLocation();
  var match = useContext(context).match;
  return path ? matchPath(location.pathname, path) : match;
}

if (process.env.NODE_ENV !== "production") {
  if (typeof window !== "undefined") {
    var global = window;
    var key = "__react_router_build__";
    var buildNames = {
      cjs: "CommonJS",
      esm: "ES modules",
      umd: "UMD"
    };

    if (global[key] && global[key] !== "esm") {
      var initialBuildName = buildNames[global[key]];
      var secondaryBuildName = buildNames["esm"]; // TODO: Add link to article that explains in detail how to avoid
      // loading 2 different builds.

      throw new Error("You are loading the " + secondaryBuildName + " build of React Router " + ("on a page that is already running the " + initialBuildName + " ") + "build, so things won't work right.");
    }

    global[key] = "esm";
  }
}


//# sourceMappingURL=react-router.js.map

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(5)))

/***/ }),
/* 159 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return createBrowserHistory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return createHashHistory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return createMemoryHistory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return createLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return locationsAreEqual; });
/* unused harmony export parsePath */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return createPath; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_resolve_pathname__ = __webpack_require__(190);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_value_equal__ = __webpack_require__(191);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_tiny_warning__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_tiny_invariant__ = __webpack_require__(64);






function addLeadingSlash(path) {
  return path.charAt(0) === '/' ? path : '/' + path;
}
function stripLeadingSlash(path) {
  return path.charAt(0) === '/' ? path.substr(1) : path;
}
function hasBasename(path, prefix) {
  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;
}
function stripBasename(path, prefix) {
  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;
}
function stripTrailingSlash(path) {
  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;
}
function parsePath(path) {
  var pathname = path || '/';
  var search = '';
  var hash = '';
  var hashIndex = pathname.indexOf('#');

  if (hashIndex !== -1) {
    hash = pathname.substr(hashIndex);
    pathname = pathname.substr(0, hashIndex);
  }

  var searchIndex = pathname.indexOf('?');

  if (searchIndex !== -1) {
    search = pathname.substr(searchIndex);
    pathname = pathname.substr(0, searchIndex);
  }

  return {
    pathname: pathname,
    search: search === '?' ? '' : search,
    hash: hash === '#' ? '' : hash
  };
}
function createPath(location) {
  var pathname = location.pathname,
      search = location.search,
      hash = location.hash;
  var path = pathname || '/';
  if (search && search !== '?') path += search.charAt(0) === '?' ? search : "?" + search;
  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : "#" + hash;
  return path;
}

function createLocation(path, state, key, currentLocation) {
  var location;

  if (typeof path === 'string') {
    // Two-arg form: push(path, state)
    location = parsePath(path);
    location.state = state;
  } else {
    // One-arg form: push(location)
    location = Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__["a" /* default */])({}, path);
    if (location.pathname === undefined) location.pathname = '';

    if (location.search) {
      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;
    } else {
      location.search = '';
    }

    if (location.hash) {
      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;
    } else {
      location.hash = '';
    }

    if (state !== undefined && location.state === undefined) location.state = state;
  }

  try {
    location.pathname = decodeURI(location.pathname);
  } catch (e) {
    if (e instanceof URIError) {
      throw new URIError('Pathname "' + location.pathname + '" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');
    } else {
      throw e;
    }
  }

  if (key) location.key = key;

  if (currentLocation) {
    // Resolve incomplete/relative pathname relative to current location.
    if (!location.pathname) {
      location.pathname = currentLocation.pathname;
    } else if (location.pathname.charAt(0) !== '/') {
      location.pathname = Object(__WEBPACK_IMPORTED_MODULE_1_resolve_pathname__["a" /* default */])(location.pathname, currentLocation.pathname);
    }
  } else {
    // When there is no prior location and pathname is empty, set it to /
    if (!location.pathname) {
      location.pathname = '/';
    }
  }

  return location;
}
function locationsAreEqual(a, b) {
  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && Object(__WEBPACK_IMPORTED_MODULE_2_value_equal__["a" /* default */])(a.state, b.state);
}

function createTransitionManager() {
  var prompt = null;

  function setPrompt(nextPrompt) {
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(prompt == null, 'A history supports only one prompt at a time') : void 0;
    prompt = nextPrompt;
    return function () {
      if (prompt === nextPrompt) prompt = null;
    };
  }

  function confirmTransitionTo(location, action, getUserConfirmation, callback) {
    // TODO: If another transition starts while we're still confirming
    // the previous one, we may end up in a weird state. Figure out the
    // best way to handle this.
    if (prompt != null) {
      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;

      if (typeof result === 'string') {
        if (typeof getUserConfirmation === 'function') {
          getUserConfirmation(result, callback);
        } else {
          process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;
          callback(true);
        }
      } else {
        // Return false from a transition hook to cancel the transition.
        callback(result !== false);
      }
    } else {
      callback(true);
    }
  }

  var listeners = [];

  function appendListener(fn) {
    var isActive = true;

    function listener() {
      if (isActive) fn.apply(void 0, arguments);
    }

    listeners.push(listener);
    return function () {
      isActive = false;
      listeners = listeners.filter(function (item) {
        return item !== listener;
      });
    };
  }

  function notifyListeners() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    listeners.forEach(function (listener) {
      return listener.apply(void 0, args);
    });
  }

  return {
    setPrompt: setPrompt,
    confirmTransitionTo: confirmTransitionTo,
    appendListener: appendListener,
    notifyListeners: notifyListeners
  };
}

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
function getConfirmation(message, callback) {
  callback(window.confirm(message)); // eslint-disable-line no-alert
}
/**
 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
 *
 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
 */

function supportsHistory() {
  var ua = window.navigator.userAgent;
  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;
  return window.history && 'pushState' in window.history;
}
/**
 * Returns true if browser fires popstate on hash change.
 * IE10 and IE11 do not.
 */

function supportsPopStateOnHashChange() {
  return window.navigator.userAgent.indexOf('Trident') === -1;
}
/**
 * Returns false if using go(n) with hash history causes a full page reload.
 */

function supportsGoWithoutReloadUsingHash() {
  return window.navigator.userAgent.indexOf('Firefox') === -1;
}
/**
 * Returns true if a given popstate event is an extraneous WebKit event.
 * Accounts for the fact that Chrome on iOS fires real popstate events
 * containing undefined state when pressing the back button.
 */

function isExtraneousPopstateEvent(event) {
  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;
}

var PopStateEvent = 'popstate';
var HashChangeEvent = 'hashchange';

function getHistoryState() {
  try {
    return window.history.state || {};
  } catch (e) {
    // IE 11 sometimes throws when accessing window.history.state
    // See https://github.com/ReactTraining/history/pull/289
    return {};
  }
}
/**
 * Creates a history object that uses the HTML5 history API including
 * pushState, replaceState, and the popstate event.
 */


function createBrowserHistory(props) {
  if (props === void 0) {
    props = {};
  }

  !canUseDOM ? process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_4_tiny_invariant__["a" /* default */])(false, 'Browser history needs a DOM') : Object(__WEBPACK_IMPORTED_MODULE_4_tiny_invariant__["a" /* default */])(false) : void 0;
  var globalHistory = window.history;
  var canUseHistory = supportsHistory();
  var needsHashChangeListener = !supportsPopStateOnHashChange();
  var _props = props,
      _props$forceRefresh = _props.forceRefresh,
      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,
      _props$getUserConfirm = _props.getUserConfirmation,
      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,
      _props$keyLength = _props.keyLength,
      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';

  function getDOMLocation(historyState) {
    var _ref = historyState || {},
        key = _ref.key,
        state = _ref.state;

    var _window$location = window.location,
        pathname = _window$location.pathname,
        search = _window$location.search,
        hash = _window$location.hash;
    var path = pathname + search + hash;
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".') : void 0;
    if (basename) path = stripBasename(path, basename);
    return createLocation(path, state, key);
  }

  function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  }

  var transitionManager = createTransitionManager();

  function setState(nextState) {
    Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__["a" /* default */])(history, nextState);

    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  function handlePopState(event) {
    // Ignore extraneous popstate events in WebKit.
    if (isExtraneousPopstateEvent(event)) return;
    handlePop(getDOMLocation(event.state));
  }

  function handleHashChange() {
    handlePop(getDOMLocation(getHistoryState()));
  }

  var forceNextPop = false;

  function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = 'POP';
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (ok) {
          setState({
            action: action,
            location: location
          });
        } else {
          revertPop(location);
        }
      });
    }
  }

  function revertPop(fromLocation) {
    var toLocation = history.location; // TODO: We could probably make this more reliable by
    // keeping a list of keys we've seen in sessionStorage.
    // Instead, we just default to 0 for keys we don't know.

    var toIndex = allKeys.indexOf(toLocation.key);
    if (toIndex === -1) toIndex = 0;
    var fromIndex = allKeys.indexOf(fromLocation.key);
    if (fromIndex === -1) fromIndex = 0;
    var delta = toIndex - fromIndex;

    if (delta) {
      forceNextPop = true;
      go(delta);
    }
  }

  var initialLocation = getDOMLocation(getHistoryState());
  var allKeys = [initialLocation.key]; // Public interface

  function createHref(location) {
    return basename + createPath(location);
  }

  function push(path, state) {
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;
    var action = 'PUSH';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var href = createHref(location);
      var key = location.key,
          state = location.state;

      if (canUseHistory) {
        globalHistory.pushState({
          key: key,
          state: state
        }, null, href);

        if (forceRefresh) {
          window.location.href = href;
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          var nextKeys = allKeys.slice(0, prevIndex + 1);
          nextKeys.push(location.key);
          allKeys = nextKeys;
          setState({
            action: action,
            location: location
          });
        }
      } else {
        process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;
        window.location.href = href;
      }
    });
  }

  function replace(path, state) {
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;
    var action = 'REPLACE';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var href = createHref(location);
      var key = location.key,
          state = location.state;

      if (canUseHistory) {
        globalHistory.replaceState({
          key: key,
          state: state
        }, null, href);

        if (forceRefresh) {
          window.location.replace(href);
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          if (prevIndex !== -1) allKeys[prevIndex] = location.key;
          setState({
            action: action,
            location: location
          });
        }
      } else {
        process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;
        window.location.replace(href);
      }
    });
  }

  function go(n) {
    globalHistory.go(n);
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  var listenerCount = 0;

  function checkDOMListeners(delta) {
    listenerCount += delta;

    if (listenerCount === 1 && delta === 1) {
      window.addEventListener(PopStateEvent, handlePopState);
      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);
    } else if (listenerCount === 0) {
      window.removeEventListener(PopStateEvent, handlePopState);
      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);
    }
  }

  var isBlocked = false;

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    var unblock = transitionManager.setPrompt(prompt);

    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }

    return function () {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }

      return unblock();
    };
  }

  function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function () {
      checkDOMListeners(-1);
      unlisten();
    };
  }

  var history = {
    length: globalHistory.length,
    action: 'POP',
    location: initialLocation,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    block: block,
    listen: listen
  };
  return history;
}

var HashChangeEvent$1 = 'hashchange';
var HashPathCoders = {
  hashbang: {
    encodePath: function encodePath(path) {
      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);
    },
    decodePath: function decodePath(path) {
      return path.charAt(0) === '!' ? path.substr(1) : path;
    }
  },
  noslash: {
    encodePath: stripLeadingSlash,
    decodePath: addLeadingSlash
  },
  slash: {
    encodePath: addLeadingSlash,
    decodePath: addLeadingSlash
  }
};

function stripHash(url) {
  var hashIndex = url.indexOf('#');
  return hashIndex === -1 ? url : url.slice(0, hashIndex);
}

function getHashPath() {
  // We can't use window.location.hash here because it's not
  // consistent across browsers - Firefox will pre-decode it!
  var href = window.location.href;
  var hashIndex = href.indexOf('#');
  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
}

function pushHashPath(path) {
  window.location.hash = path;
}

function replaceHashPath(path) {
  window.location.replace(stripHash(window.location.href) + '#' + path);
}

function createHashHistory(props) {
  if (props === void 0) {
    props = {};
  }

  !canUseDOM ? process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_4_tiny_invariant__["a" /* default */])(false, 'Hash history needs a DOM') : Object(__WEBPACK_IMPORTED_MODULE_4_tiny_invariant__["a" /* default */])(false) : void 0;
  var globalHistory = window.history;
  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();
  var _props = props,
      _props$getUserConfirm = _props.getUserConfirmation,
      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,
      _props$hashType = _props.hashType,
      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;
  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';
  var _HashPathCoders$hashT = HashPathCoders[hashType],
      encodePath = _HashPathCoders$hashT.encodePath,
      decodePath = _HashPathCoders$hashT.decodePath;

  function getDOMLocation() {
    var path = decodePath(getHashPath());
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".') : void 0;
    if (basename) path = stripBasename(path, basename);
    return createLocation(path);
  }

  var transitionManager = createTransitionManager();

  function setState(nextState) {
    Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__["a" /* default */])(history, nextState);

    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  var forceNextPop = false;
  var ignorePath = null;

  function locationsAreEqual$$1(a, b) {
    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;
  }

  function handleHashChange() {
    var path = getHashPath();
    var encodedPath = encodePath(path);

    if (path !== encodedPath) {
      // Ensure we always have a properly-encoded hash.
      replaceHashPath(encodedPath);
    } else {
      var location = getDOMLocation();
      var prevLocation = history.location;
      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location)) return; // A hashchange doesn't always == location change.

      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.

      ignorePath = null;
      handlePop(location);
    }
  }

  function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = 'POP';
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (ok) {
          setState({
            action: action,
            location: location
          });
        } else {
          revertPop(location);
        }
      });
    }
  }

  function revertPop(fromLocation) {
    var toLocation = history.location; // TODO: We could probably make this more reliable by
    // keeping a list of paths we've seen in sessionStorage.
    // Instead, we just default to 0 for paths we don't know.

    var toIndex = allPaths.lastIndexOf(createPath(toLocation));
    if (toIndex === -1) toIndex = 0;
    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));
    if (fromIndex === -1) fromIndex = 0;
    var delta = toIndex - fromIndex;

    if (delta) {
      forceNextPop = true;
      go(delta);
    }
  } // Ensure the hash is encoded properly before doing anything else.


  var path = getHashPath();
  var encodedPath = encodePath(path);
  if (path !== encodedPath) replaceHashPath(encodedPath);
  var initialLocation = getDOMLocation();
  var allPaths = [createPath(initialLocation)]; // Public interface

  function createHref(location) {
    var baseTag = document.querySelector('base');
    var href = '';

    if (baseTag && baseTag.getAttribute('href')) {
      href = stripHash(window.location.href);
    }

    return href + '#' + encodePath(basename + createPath(location));
  }

  function push(path, state) {
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;
    var action = 'PUSH';
    var location = createLocation(path, undefined, undefined, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var path = createPath(location);
      var encodedPath = encodePath(basename + path);
      var hashChanged = getHashPath() !== encodedPath;

      if (hashChanged) {
        // We cannot tell if a hashchange was caused by a PUSH, so we'd
        // rather setState here and ignore the hashchange. The caveat here
        // is that other hash histories in the page will consider it a POP.
        ignorePath = path;
        pushHashPath(encodedPath);
        var prevIndex = allPaths.lastIndexOf(createPath(history.location));
        var nextPaths = allPaths.slice(0, prevIndex + 1);
        nextPaths.push(path);
        allPaths = nextPaths;
        setState({
          action: action,
          location: location
        });
      } else {
        process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;
        setState();
      }
    });
  }

  function replace(path, state) {
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;
    var action = 'REPLACE';
    var location = createLocation(path, undefined, undefined, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var path = createPath(location);
      var encodedPath = encodePath(basename + path);
      var hashChanged = getHashPath() !== encodedPath;

      if (hashChanged) {
        // We cannot tell if a hashchange was caused by a REPLACE, so we'd
        // rather setState here and ignore the hashchange. The caveat here
        // is that other hash histories in the page will consider it a POP.
        ignorePath = path;
        replaceHashPath(encodedPath);
      }

      var prevIndex = allPaths.indexOf(createPath(history.location));
      if (prevIndex !== -1) allPaths[prevIndex] = path;
      setState({
        action: action,
        location: location
      });
    });
  }

  function go(n) {
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;
    globalHistory.go(n);
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  var listenerCount = 0;

  function checkDOMListeners(delta) {
    listenerCount += delta;

    if (listenerCount === 1 && delta === 1) {
      window.addEventListener(HashChangeEvent$1, handleHashChange);
    } else if (listenerCount === 0) {
      window.removeEventListener(HashChangeEvent$1, handleHashChange);
    }
  }

  var isBlocked = false;

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    var unblock = transitionManager.setPrompt(prompt);

    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }

    return function () {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }

      return unblock();
    };
  }

  function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function () {
      checkDOMListeners(-1);
      unlisten();
    };
  }

  var history = {
    length: globalHistory.length,
    action: 'POP',
    location: initialLocation,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    block: block,
    listen: listen
  };
  return history;
}

function clamp(n, lowerBound, upperBound) {
  return Math.min(Math.max(n, lowerBound), upperBound);
}
/**
 * Creates a history object that stores locations in memory.
 */


function createMemoryHistory(props) {
  if (props === void 0) {
    props = {};
  }

  var _props = props,
      getUserConfirmation = _props.getUserConfirmation,
      _props$initialEntries = _props.initialEntries,
      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,
      _props$initialIndex = _props.initialIndex,
      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,
      _props$keyLength = _props.keyLength,
      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
  var transitionManager = createTransitionManager();

  function setState(nextState) {
    Object(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_helpers_esm_extends__["a" /* default */])(history, nextState);

    history.length = history.entries.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  }

  var index = clamp(initialIndex, 0, initialEntries.length - 1);
  var entries = initialEntries.map(function (entry) {
    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());
  }); // Public interface

  var createHref = createPath;

  function push(path, state) {
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;
    var action = 'PUSH';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var prevIndex = history.index;
      var nextIndex = prevIndex + 1;
      var nextEntries = history.entries.slice(0);

      if (nextEntries.length > nextIndex) {
        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);
      } else {
        nextEntries.push(location);
      }

      setState({
        action: action,
        location: location,
        index: nextIndex,
        entries: nextEntries
      });
    });
  }

  function replace(path, state) {
    process.env.NODE_ENV !== "production" ? Object(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;
    var action = 'REPLACE';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      history.entries[history.index] = location;
      setState({
        action: action,
        location: location
      });
    });
  }

  function go(n) {
    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);
    var action = 'POP';
    var location = history.entries[nextIndex];
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (ok) {
        setState({
          action: action,
          location: location,
          index: nextIndex
        });
      } else {
        // Mimic the behavior of DOM histories by
        // causing a render after a cancelled POP.
        setState();
      }
    });
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  function canGo(n) {
    var nextIndex = history.index + n;
    return nextIndex >= 0 && nextIndex < history.entries.length;
  }

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    return transitionManager.setPrompt(prompt);
  }

  function listen(listener) {
    return transitionManager.appendListener(listener);
  }

  var history = {
    length: entries.length,
    action: 'POP',
    location: entries[index],
    index: index,
    entries: entries,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    canGo: canGo,
    block: block,
    listen: listen
  };
  return history;
}



/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(5)))

/***/ }),
/* 160 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = _objectWithoutPropertiesLoose;
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

/***/ }),
/* 161 */
/***/ (function(module, exports) {

module.exports = "<header class=\"docs-page__header\">\r\n    <a href=\"#/\" class=\"docs-page__header-logo\"></a>\r\n    <h1 class=\"docs-page__h1\">Superdesk UI</h1>\r\n    <ul class=\"docs-page__header-nav\">\r\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/\">Home</a></li>\r\n        <li class=\"docs-page__header-nav-item docs-page__header-nav-item--active\"><a class=\"docs-page__header-nav-link\" href=\"#/design\">Design guidelines</a></li>\r\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/components\">Components</a></li>\r\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/react\">React</a></li>\r\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/playgrounds\">Playground</a></li>\r\n    </ul>\r\n</header>\r\n\r\n<aside class=\"docs-page__sidebar\">\r\n    <ul class=\"docs-page__nav\" doc-nav>\r\n        <li ng-repeat=\"group in design\">\r\n            <span class=\"docs-page__nav-title\">{{group.name}}</span>\r\n            <ul class=\"docs-page__nav--sub-level\">\r\n                <li class=\"docs-page__nav-item\" ng-repeat=\"(name, item) in group.items\"\r\n                    ng-class=\"{'docs-page__nav-item--active': isActive(name)}\"><a href=\"#/design/{{name}}\">{{item.name}}</a>\r\n                </li>\r\n            </ul>\r\n        </li>\r\n    </ul>\r\n</aside>\r\n\r\n<main class=\"docs-page__content docs-page__container-fluid\" ng-if=\"page\" ng-include=\"'design/' + page + '.html'\"></main>\r\n\r\n<main class=\"docs-page__content docs-page__container-fluid\" ng-if=\"!page\">\r\n    <section class=\"docs-page__container\">\r\n        <div class=\"docs-page__hero\">\r\n            <figure class=\"docs-page__hero-image\">\r\n                <img src=\"/illustration--design.svg\" alt=\"Design guidelines\">\r\n            </figure>\r\n            <h2 class=\"docs-page__hero-h2 docs-page__color--primary\">Superdesk Design guidelines</h2>\r\n            <p class=\"docs-page__hero-text\">What to do and what not while creating user interfaces in Superdesk.</p>\r\n        </div>\r\n    </section>\r\n</main>";

/***/ }),
/* 162 */
/***/ (function(module, exports) {

module.exports = "<header class=\"docs-page__header\">\r\n    <a href=\"#/\" class=\"docs-page__header-logo\"></a>\r\n    <h1 class=\"docs-page__h1\">Superdesk UI</h1>\r\n    <ul class=\"docs-page__header-nav\">\r\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/\">Home</a></li>\r\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/design\">Design guidelines</a></li>\r\n        <li class=\"docs-page__header-nav-item docs-page__header-nav-item--active\"><a class=\"docs-page__header-nav-link\" href=\"#/components\">Components</a></li>\r\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/react\">React</a></li>\r\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/playgrounds\">Playground</a></li>\r\n    </ul>\r\n</header>\r\n\r\n<aside class=\"docs-page__sidebar\">\r\n    <ul class=\"docs-page__nav\" doc-nav>\r\n        <li ng-repeat=\"group in components\">\r\n            <span class=\"docs-page__nav-title\">{{group.name}}</span>\r\n            <ul class=\"docs-page__nav--sub-level\">\r\n                <li class=\"docs-page__nav-item\" ng-repeat=\"(name, item) in group.items\"\r\n                    ng-class=\"{'docs-page__nav-item--active': isActive(name)}\"><a href=\"#/components/{{name}}\">{{item.name}}</a>\r\n                </li>\r\n            </ul>\r\n        </li>\r\n    </ul>\r\n</aside>\r\n\r\n<main class=\"docs-page__content docs-page__container-fluid\" ng-if=\"page\" ng-include=\"'components/' + page + '.html'\"></main>\r\n\r\n<main class=\"docs-page__content docs-page__container-fluid\" ng-if=\"!page\">\r\n    <section class=\"docs-page__container\">\r\n        <div class=\"docs-page__hero\">\r\n            <figure class=\"docs-page__hero-image\">\r\n                <img src=\"/illustration--components.svg\" alt=\"Components\">\r\n            </figure>\r\n            <h2 class=\"docs-page__hero-h2 docs-page__color--primary\">Superdesk HTML/CSS and Angular UI components</h2>\r\n            <p class=\"docs-page__hero-text\">Since we are moving completely to React, check fist if what you are looking for is available as a react component. If it's not – this is the right place to look.</p>\r\n        </div>\r\n    </section>\r\n</main>";

/***/ }),
/* 163 */
/***/ (function(module, exports) {

module.exports = "<header class=\"docs-page__header\">\r\n    <a href=\"#/\" class=\"docs-page__header-logo\"></a>\r\n    <h1 class=\"docs-page__h1\">Superdesk UI</h1>\r\n    <ul class=\"docs-page__header-nav\">\r\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/\">Home</a></li>\r\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/design\">Design guidelines</a></li>\r\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/components\">Components</a></li>\r\n        <li class=\"docs-page__header-nav-item docs-page__header-nav-item--active\"><a class=\"docs-page__header-nav-link\" href=\"#/react\">React</a></li>\r\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/playgrounds\">Playground</a></li>\r\n    </ul>\r\n</header>\r\n\r\n<doc-react class=\"sd-wrap-helper\"></doc-react>\r\n";

/***/ }),
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */,
/* 173 */,
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

__webpack_require__(175);

__webpack_require__(177);

__webpack_require__(178);

__webpack_require__(179);

__webpack_require__(180);

__webpack_require__(181);

__webpack_require__(182);

__webpack_require__(183);

/* eslint-disable */

exports.default = angular.module('ui-docs', ['ngRoute', 'superdesk-ui', 'ui-docs.directives']).config(['$locationProvider', function ($locationProvider) {
    return $locationProvider.hashPrefix('');
}]).factory('components', function () {
    return {
        basicComponents: {
            name: 'Basic Components',
            items: {
                buttons: {
                    name: 'Buttons',
                    page: 'buttons.html'
                },
                labels: {
                    name: 'Labels',
                    page: 'labels.html'
                },
                badge: {
                    name: 'Badge',
                    page: 'badge.html'
                },
                'tag-labels': {
                    name: 'Tag labels',
                    page: 'tag-labels.html'
                },
                'icon-labels': {
                    name: 'Icon labels',
                    page: 'icon-labels.html'
                },
                alerts: {
                    name: 'Alerts',
                    page: 'alerts.html'
                },
                dropdown: {
                    name: 'Dropdown',
                    page: 'dropdown.html'
                },
                tooltips: {
                    name: 'Tooltips',
                    page: 'tooltips.html'
                },
                tables: {
                    name: 'Tables',
                    page: 'tables.html'
                },
                'panel-info': {
                    name: 'Panel info',
                    page: 'panel-info.html'
                },
                slider: {
                    name: 'Slider control',
                    page: 'slider.html'
                },
                loader: {
                    name: 'Animated loader',
                    page: 'loader.html'
                }
            }
        },
        navigation: {
            name: 'Navigation',
            items: {
                tabs: {
                    name: 'Tabs',
                    page: 'tabs.html'
                },
                'left-nav': {
                    name: 'Left navigation',
                    page: 'left-nav.html'
                },
                'vertical-tabs': {
                    name: 'Vertical tabs',
                    page: 'vertical-tabs.html'
                }
            }
        },
        formElements: {
            name: 'Form elements',
            items: {
                input: {
                    name: 'Inputs',
                    page: 'input.html'
                },
                select: {
                    name: 'Select',
                    page: 'select.html'
                },
                'tag-input': {
                    name: 'Tag Input',
                    page: 'tag-input.html'
                },
                checkbox: {
                    name: 'Checkbox',
                    page: 'checkbox.html'
                },
                radio: {
                    name: 'Radio',
                    page: 'radio.html'
                },
                'switch': {
                    name: 'Switch',
                    page: 'switch.html'
                },
                'form-layout': {
                    name: 'Form layout',
                    page: 'form-layout.html'
                },
                'other-elements': {
                    name: 'Other form elements',
                    page: 'other-elements.html'
                }
            }
        },
        containers: {
            name: 'Containers',
            items: {
                modals: {
                    name: 'Modals',
                    page: 'modals.html'
                },
                wizard: {
                    name: 'Wizard',
                    page: 'wizard.html'
                },
                carousel: {
                    name: 'Carousel',
                    page: 'carousel.html'
                }
            }
        },
        layout: {
            name: 'Layout',
            items: {
                'basic-grid': {
                    name: 'Basic grid',
                    page: 'basic-grid.html'
                },
                'layout-grid': {
                    name: 'Layout grid',
                    page: 'layout-grid.html'
                }
            }
        },
        layoutElements: {
            name: 'Layout elements',
            items: {
                'list-item': {
                    name: 'List item',
                    page: 'list-item.html'
                },
                'simple-list': {
                    name: 'Simple list',
                    page: 'simple-list.html'
                },
                toggle: {
                    name: 'Toggle box',
                    page: 'toggle.html'
                }
            }
        },
        general: {
            name: 'General',
            items: {
                'icons': {
                    name: 'Icon font',
                    page: 'icons.html'
                },
                'big-icons': {
                    name: 'Big icon font',
                    page: 'big-icons.html'
                },
                'colors': {
                    name: 'Colors',
                    page: 'colors.html'
                }
            }
        },
        helpers: {
            name: 'Helper classes',
            items: {
                'spacing': {
                    name: 'Spacing',
                    page: 'spacing.html'
                },
                'text': {
                    name: 'Text helpers',
                    page: 'text.html'
                },
                'shadows': {
                    name: 'Shadows',
                    page: 'shadows.html'
                }
            }
        }
    };
}).factory('design', function () {
    return {
        basicComponents: {
            name: 'Basic Components',
            items: {
                'buttons': {
                    name: 'Buttons',
                    page: 'buttons.html'
                },
                'checkbox-and-radio': {
                    name: 'Checkbox & Radio',
                    page: 'checkbox-and-radio.html'
                },
                'switch': {
                    name: 'Switch',
                    page: 'switch.html'
                }
            }
        },
        layoutComponents: {
            name: 'Layout',
            items: {
                'layout-principles': {
                    name: 'Layout principles',
                    page: 'layout-principles.html'
                },
                'application-structure': {
                    name: 'Main application structure',
                    page: 'application-structure.html'
                },
                'pages': {
                    name: 'Page layouts',
                    page: 'pages.html'
                },
                'modules': {
                    name: 'Modules',
                    page: 'modules.html'
                }
            }
        }

    };
}).factory('playgrounds', function () {
    return {
        // Superdesk playgrounds
        superdesk: {
            'planning': {
                name: 'Planning',
                page: 'buttons.html'
            },
            'layout-grid': {
                name: 'Layout Grid',
                page: 'layout-grid.html'
            },
            'cards': {
                name: 'Cards',
                page: 'cards.html'
            },
            'side-navigation': {
                name: 'Side Navigation',
                page: 'side-navigation.html'
            },
            'list-item-test': {
                name: 'List Item Test',
                page: 'list-item-test.html'
            },
            'settings': {
                name: 'Settings',
                page: 'settings.html'
            },
            'photo-desk': {
                name: 'Photo Desk',
                page: 'photo-desk.html'
            },
            'media-carousel': {
                name: 'Media Carousel',
                page: 'media-carousel.html'
            },
            'tags-input': {
                name: 'Tags Input',
                page: 'tags-input.html'
            },
            'circular-progress': {
                name: 'Circular Progress',
                page: 'circular-progress.html'
            },
            'publish': {
                name: 'Publish Pane',
                page: 'publish.html'
            },
            'swimlane-view': {
                name: 'Swimlane View',
                page: 'swimlane-view.html'
            },
            'layout-test-2': {
                name: 'Layout Test',
                page: 'layout-test-2.html'
            },
            'toasts': {
                name: 'Toasts',
                page: 'toasts.html'
            },
            'form-layout': {
                name: 'Form layout',
                page: 'form-layout.html'
            },
            'boxed-list': {
                name: 'Boxed-list',
                page: 'boxed-list.html'
            },
            'video-editor': {
                name: 'Video editor',
                page: 'video-editor.html'
            },
            'nav-buttons': {
                name: 'Nav buttons',
                page: 'nav-buttons.html'
            },
            'accessible-theme-test': {
                name: 'Accessible theme',
                page: 'accessible-theme-test.html'
            },
            'master-desk': {
                name: 'Master Desk',
                page: 'master-desk.html'
            }
        },
        // Publisher playgrounds
        publisher: {
            'publisher-dashboard': {
                name: 'Dashboard',
                page: 'publisher-dashboard.html'
            },
            'publisher-content-lists': {
                name: 'Content Lists',
                page: 'publisher-content-lists.html'
            },
            'publisher-content-list-manual': {
                name: 'Content List - Manual',
                page: 'publisher-content-list-manual.html'
            },
            'publisher-content-list-automatic': {
                name: 'Content List - Automatic',
                page: 'publisher-content-list-automatic.html'
            },
            'publisher-output-control': {
                name: 'Output Control',
                page: 'publisher-output-control.html'
            },
            'publisher-content-analytics': {
                name: 'Content Analytics',
                page: 'publisher-content-analytics.html'
            },
            'publisher-website-settings': {
                name: 'Website Settings',
                page: 'publisher-website-settings.html'
            },
            'publisher-website-settings-general': {
                name: 'Website Settings - General',
                page: 'publisher-website-settings-general.html'
            }
        },

        // React playgrounds
        react: {
            'first-playground': {
                name: 'First playground',
                component: 'FirstPlayground'
            },
            'sams-playground': {
                name: 'SAMS',
                component: 'SamsPlayground'
            }
        }
    };
}).config(function ($routeProvider) {
    $routeProvider.when('/', {
        title: 'Main',
        template: __webpack_require__(248)
    }).when('/design', {
        template: __webpack_require__(161)
    }).when('/design/:name*', {
        template: __webpack_require__(161)
    }).when('/components', {
        template: __webpack_require__(162)
    }).when('/components/:name*', {
        template: __webpack_require__(162)
    }).when('/react', {
        template: __webpack_require__(163)
    }).when('/react/:name*', {
        template: __webpack_require__(163)
    }).when('/playgrounds', {
        template: __webpack_require__(249)
    }).when('/playgrounds/react/:name*', {
        template: '<doc-react-playground />'
    }).when('/playgrounds/:name*', {
        template: function template(urlattr) {
            return __webpack_require__(250)("./" + urlattr.name + '.html');
        }
    }).otherwise({ redirectTo: '/' });
}).run(function ($rootScope, $route) {
    $rootScope.$route = $route;
});

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(176);
module.exports = 'ngRoute';


/***/ }),
/* 176 */
/***/ (function(module, exports) {

/**
 * @license AngularJS v1.8.0
 * (c) 2010-2020 Google, Inc. http://angularjs.org
 * License: MIT
 */
(function(window, angular) {'use strict';

/* global shallowCopy: true */

/**
 * Creates a shallow copy of an object, an array or a primitive.
 *
 * Assumes that there are no proto properties for objects.
 */
function shallowCopy(src, dst) {
  if (isArray(src)) {
    dst = dst || [];

    for (var i = 0, ii = src.length; i < ii; i++) {
      dst[i] = src[i];
    }
  } else if (isObject(src)) {
    dst = dst || {};

    for (var key in src) {
      if (!(key.charAt(0) === '$' && key.charAt(1) === '$')) {
        dst[key] = src[key];
      }
    }
  }

  return dst || src;
}

/* global routeToRegExp: true */

/**
 * @param {string} path - The path to parse. (It is assumed to have query and hash stripped off.)
 * @param {Object} opts - Options.
 * @return {Object} - An object containing an array of path parameter names (`keys`) and a regular
 *     expression (`regexp`) that can be used to identify a matching URL and extract the path
 *     parameter values.
 *
 * @description
 * Parses the given path, extracting path parameter names and a regular expression to match URLs.
 *
 * Originally inspired by `pathRexp` in `visionmedia/express/lib/utils.js`.
 */
function routeToRegExp(path, opts) {
  var keys = [];

  var pattern = path
    .replace(/([().])/g, '\\$1')
    .replace(/(\/)?:(\w+)(\*\?|[?*])?/g, function(_, slash, key, option) {
      var optional = option === '?' || option === '*?';
      var star = option === '*' || option === '*?';
      keys.push({name: key, optional: optional});
      slash = slash || '';
      return (
        (optional ? '(?:' + slash : slash + '(?:') +
        (star ? '(.+?)' : '([^/]+)') +
        (optional ? '?)?' : ')')
      );
    })
    .replace(/([/$*])/g, '\\$1');

  if (opts.ignoreTrailingSlashes) {
    pattern = pattern.replace(/\/+$/, '') + '/*';
  }

  return {
    keys: keys,
    regexp: new RegExp(
      '^' + pattern + '(?:[?#]|$)',
      opts.caseInsensitiveMatch ? 'i' : ''
    )
  };
}

/* global routeToRegExp: false */
/* global shallowCopy: false */

// `isArray` and `isObject` are necessary for `shallowCopy()` (included via `src/shallowCopy.js`).
// They are initialized inside the `$RouteProvider`, to ensure `window.angular` is available.
var isArray;
var isObject;
var isDefined;
var noop;

/**
 * @ngdoc module
 * @name ngRoute
 * @description
 *
 * The `ngRoute` module provides routing and deeplinking services and directives for AngularJS apps.
 *
 * ## Example
 * See {@link ngRoute.$route#examples $route} for an example of configuring and using `ngRoute`.
 *
 */
/* global -ngRouteModule */
var ngRouteModule = angular.
  module('ngRoute', []).
  info({ angularVersion: '1.8.0' }).
  provider('$route', $RouteProvider).
  // Ensure `$route` will be instantiated in time to capture the initial `$locationChangeSuccess`
  // event (unless explicitly disabled). This is necessary in case `ngView` is included in an
  // asynchronously loaded template.
  run(instantiateRoute);
var $routeMinErr = angular.$$minErr('ngRoute');
var isEagerInstantiationEnabled;


/**
 * @ngdoc provider
 * @name $routeProvider
 * @this
 *
 * @description
 *
 * Used for configuring routes.
 *
 * ## Example
 * See {@link ngRoute.$route#examples $route} for an example of configuring and using `ngRoute`.
 *
 * ## Dependencies
 * Requires the {@link ngRoute `ngRoute`} module to be installed.
 */
function $RouteProvider() {
  isArray = angular.isArray;
  isObject = angular.isObject;
  isDefined = angular.isDefined;
  noop = angular.noop;

  function inherit(parent, extra) {
    return angular.extend(Object.create(parent), extra);
  }

  var routes = {};

  /**
   * @ngdoc method
   * @name $routeProvider#when
   *
   * @param {string} path Route path (matched against `$location.path`). If `$location.path`
   *    contains redundant trailing slash or is missing one, the route will still match and the
   *    `$location.path` will be updated to add or drop the trailing slash to exactly match the
   *    route definition.
   *
   *    * `path` can contain named groups starting with a colon: e.g. `:name`. All characters up
   *        to the next slash are matched and stored in `$routeParams` under the given `name`
   *        when the route matches.
   *    * `path` can contain named groups starting with a colon and ending with a star:
   *        e.g.`:name*`. All characters are eagerly stored in `$routeParams` under the given `name`
   *        when the route matches.
   *    * `path` can contain optional named groups with a question mark: e.g.`:name?`.
   *
   *    For example, routes like `/color/:color/largecode/:largecode*\/edit` will match
   *    `/color/brown/largecode/code/with/slashes/edit` and extract:
   *
   *    * `color: brown`
   *    * `largecode: code/with/slashes`.
   *
   *
   * @param {Object} route Mapping information to be assigned to `$route.current` on route
   *    match.
   *
   *    Object properties:
   *
   *    - `controller` – `{(string|Function)=}` – Controller fn that should be associated with
   *      newly created scope or the name of a {@link angular.Module#controller registered
   *      controller} if passed as a string.
   *    - `controllerAs` – `{string=}` – An identifier name for a reference to the controller.
   *      If present, the controller will be published to scope under the `controllerAs` name.
   *    - `template` – `{(string|Function)=}` – html template as a string or a function that
   *      returns an html template as a string which should be used by {@link
   *      ngRoute.directive:ngView ngView} or {@link ng.directive:ngInclude ngInclude} directives.
   *      This property takes precedence over `templateUrl`.
   *
   *      If `template` is a function, it will be called with the following parameters:
   *
   *      - `{Array.<Object>}` - route parameters extracted from the current
   *        `$location.path()` by applying the current route
   *
   *      One of `template` or `templateUrl` is required.
   *
   *    - `templateUrl` – `{(string|Function)=}` – path or function that returns a path to an html
   *      template that should be used by {@link ngRoute.directive:ngView ngView}.
   *
   *      If `templateUrl` is a function, it will be called with the following parameters:
   *
   *      - `{Array.<Object>}` - route parameters extracted from the current
   *        `$location.path()` by applying the current route
   *
   *      One of `templateUrl` or `template` is required.
   *
   *    - `resolve` - `{Object.<string, Function>=}` - An optional map of dependencies which should
   *      be injected into the controller. If any of these dependencies are promises, the router
   *      will wait for them all to be resolved or one to be rejected before the controller is
   *      instantiated.
   *      If all the promises are resolved successfully, the values of the resolved promises are
   *      injected and {@link ngRoute.$route#$routeChangeSuccess $routeChangeSuccess} event is
   *      fired. If any of the promises are rejected the
   *      {@link ngRoute.$route#$routeChangeError $routeChangeError} event is fired.
   *      For easier access to the resolved dependencies from the template, the `resolve` map will
   *      be available on the scope of the route, under `$resolve` (by default) or a custom name
   *      specified by the `resolveAs` property (see below). This can be particularly useful, when
   *      working with {@link angular.Module#component components} as route templates.<br />
   *      <div class="alert alert-warning">
   *        **Note:** If your scope already contains a property with this name, it will be hidden
   *        or overwritten. Make sure, you specify an appropriate name for this property, that
   *        does not collide with other properties on the scope.
   *      </div>
   *      The map object is:
   *
   *      - `key` – `{string}`: a name of a dependency to be injected into the controller.
   *      - `factory` - `{string|Function}`: If `string` then it is an alias for a service.
   *        Otherwise if function, then it is {@link auto.$injector#invoke injected}
   *        and the return value is treated as the dependency. If the result is a promise, it is
   *        resolved before its value is injected into the controller. Be aware that
   *        `ngRoute.$routeParams` will still refer to the previous route within these resolve
   *        functions.  Use `$route.current.params` to access the new route parameters, instead.
   *
   *    - `resolveAs` - `{string=}` - The name under which the `resolve` map will be available on
   *      the scope of the route. If omitted, defaults to `$resolve`.
   *
   *    - `redirectTo` – `{(string|Function)=}` – value to update
   *      {@link ng.$location $location} path with and trigger route redirection.
   *
   *      If `redirectTo` is a function, it will be called with the following parameters:
   *
   *      - `{Object.<string>}` - route parameters extracted from the current
   *        `$location.path()` by applying the current route templateUrl.
   *      - `{string}` - current `$location.path()`
   *      - `{Object}` - current `$location.search()`
   *
   *      The custom `redirectTo` function is expected to return a string which will be used
   *      to update `$location.url()`. If the function throws an error, no further processing will
   *      take place and the {@link ngRoute.$route#$routeChangeError $routeChangeError} event will
   *      be fired.
   *
   *      Routes that specify `redirectTo` will not have their controllers, template functions
   *      or resolves called, the `$location` will be changed to the redirect url and route
   *      processing will stop. The exception to this is if the `redirectTo` is a function that
   *      returns `undefined`. In this case the route transition occurs as though there was no
   *      redirection.
   *
   *    - `resolveRedirectTo` – `{Function=}` – a function that will (eventually) return the value
   *      to update {@link ng.$location $location} URL with and trigger route redirection. In
   *      contrast to `redirectTo`, dependencies can be injected into `resolveRedirectTo` and the
   *      return value can be either a string or a promise that will be resolved to a string.
   *
   *      Similar to `redirectTo`, if the return value is `undefined` (or a promise that gets
   *      resolved to `undefined`), no redirection takes place and the route transition occurs as
   *      though there was no redirection.
   *
   *      If the function throws an error or the returned promise gets rejected, no further
   *      processing will take place and the
   *      {@link ngRoute.$route#$routeChangeError $routeChangeError} event will be fired.
   *
   *      `redirectTo` takes precedence over `resolveRedirectTo`, so specifying both on the same
   *      route definition, will cause the latter to be ignored.
   *
   *    - `[reloadOnUrl=true]` - `{boolean=}` - reload route when any part of the URL changes
   *      (including the path) even if the new URL maps to the same route.
   *
   *      If the option is set to `false` and the URL in the browser changes, but the new URL maps
   *      to the same route, then a `$routeUpdate` event is broadcasted on the root scope (without
   *      reloading the route).
   *
   *    - `[reloadOnSearch=true]` - `{boolean=}` - reload route when only `$location.search()`
   *      or `$location.hash()` changes.
   *
   *      If the option is set to `false` and the URL in the browser changes, then a `$routeUpdate`
   *      event is broadcasted on the root scope (without reloading the route).
   *
   *      <div class="alert alert-warning">
   *        **Note:** This option has no effect if `reloadOnUrl` is set to `false`.
   *      </div>
   *
   *    - `[caseInsensitiveMatch=false]` - `{boolean=}` - match routes without being case sensitive
   *
   *      If the option is set to `true`, then the particular route can be matched without being
   *      case sensitive
   *
   * @returns {Object} self
   *
   * @description
   * Adds a new route definition to the `$route` service.
   */
  this.when = function(path, route) {
    //copy original route object to preserve params inherited from proto chain
    var routeCopy = shallowCopy(route);
    if (angular.isUndefined(routeCopy.reloadOnUrl)) {
      routeCopy.reloadOnUrl = true;
    }
    if (angular.isUndefined(routeCopy.reloadOnSearch)) {
      routeCopy.reloadOnSearch = true;
    }
    if (angular.isUndefined(routeCopy.caseInsensitiveMatch)) {
      routeCopy.caseInsensitiveMatch = this.caseInsensitiveMatch;
    }
    routes[path] = angular.extend(
      routeCopy,
      {originalPath: path},
      path && routeToRegExp(path, routeCopy)
    );

    // create redirection for trailing slashes
    if (path) {
      var redirectPath = (path[path.length - 1] === '/')
            ? path.substr(0, path.length - 1)
            : path + '/';

      routes[redirectPath] = angular.extend(
        {originalPath: path, redirectTo: path},
        routeToRegExp(redirectPath, routeCopy)
      );
    }

    return this;
  };

  /**
   * @ngdoc property
   * @name $routeProvider#caseInsensitiveMatch
   * @description
   *
   * A boolean property indicating if routes defined
   * using this provider should be matched using a case insensitive
   * algorithm. Defaults to `false`.
   */
  this.caseInsensitiveMatch = false;

  /**
   * @ngdoc method
   * @name $routeProvider#otherwise
   *
   * @description
   * Sets route definition that will be used on route change when no other route definition
   * is matched.
   *
   * @param {Object|string} params Mapping information to be assigned to `$route.current`.
   * If called with a string, the value maps to `redirectTo`.
   * @returns {Object} self
   */
  this.otherwise = function(params) {
    if (typeof params === 'string') {
      params = {redirectTo: params};
    }
    this.when(null, params);
    return this;
  };

  /**
   * @ngdoc method
   * @name $routeProvider#eagerInstantiationEnabled
   * @kind function
   *
   * @description
   * Call this method as a setter to enable/disable eager instantiation of the
   * {@link ngRoute.$route $route} service upon application bootstrap. You can also call it as a
   * getter (i.e. without any arguments) to get the current value of the
   * `eagerInstantiationEnabled` flag.
   *
   * Instantiating `$route` early is necessary for capturing the initial
   * {@link ng.$location#$locationChangeStart $locationChangeStart} event and navigating to the
   * appropriate route. Usually, `$route` is instantiated in time by the
   * {@link ngRoute.ngView ngView} directive. Yet, in cases where `ngView` is included in an
   * asynchronously loaded template (e.g. in another directive's template), the directive factory
   * might not be called soon enough for `$route` to be instantiated _before_ the initial
   * `$locationChangeSuccess` event is fired. Eager instantiation ensures that `$route` is always
   * instantiated in time, regardless of when `ngView` will be loaded.
   *
   * The default value is true.
   *
   * **Note**:<br />
   * You may want to disable the default behavior when unit-testing modules that depend on
   * `ngRoute`, in order to avoid an unexpected request for the default route's template.
   *
   * @param {boolean=} enabled - If provided, update the internal `eagerInstantiationEnabled` flag.
   *
   * @returns {*} The current value of the `eagerInstantiationEnabled` flag if used as a getter or
   *     itself (for chaining) if used as a setter.
   */
  isEagerInstantiationEnabled = true;
  this.eagerInstantiationEnabled = function eagerInstantiationEnabled(enabled) {
    if (isDefined(enabled)) {
      isEagerInstantiationEnabled = enabled;
      return this;
    }

    return isEagerInstantiationEnabled;
  };


  this.$get = ['$rootScope',
               '$location',
               '$routeParams',
               '$q',
               '$injector',
               '$templateRequest',
               '$sce',
               '$browser',
      function($rootScope, $location, $routeParams, $q, $injector, $templateRequest, $sce, $browser) {

    /**
     * @ngdoc service
     * @name $route
     * @requires $location
     * @requires $routeParams
     *
     * @property {Object} current Reference to the current route definition.
     * The route definition contains:
     *
     *   - `controller`: The controller constructor as defined in the route definition.
     *   - `locals`: A map of locals which is used by {@link ng.$controller $controller} service for
     *     controller instantiation. The `locals` contain
     *     the resolved values of the `resolve` map. Additionally the `locals` also contain:
     *
     *     - `$scope` - The current route scope.
     *     - `$template` - The current route template HTML.
     *
     *     The `locals` will be assigned to the route scope's `$resolve` property. You can override
     *     the property name, using `resolveAs` in the route definition. See
     *     {@link ngRoute.$routeProvider $routeProvider} for more info.
     *
     * @property {Object} routes Object with all route configuration Objects as its properties.
     *
     * @description
     * `$route` is used for deep-linking URLs to controllers and views (HTML partials).
     * It watches `$location.url()` and tries to map the path to an existing route definition.
     *
     * Requires the {@link ngRoute `ngRoute`} module to be installed.
     *
     * You can define routes through {@link ngRoute.$routeProvider $routeProvider}'s API.
     *
     * The `$route` service is typically used in conjunction with the
     * {@link ngRoute.directive:ngView `ngView`} directive and the
     * {@link ngRoute.$routeParams `$routeParams`} service.
     *
     * @example
     * This example shows how changing the URL hash causes the `$route` to match a route against the
     * URL, and the `ngView` pulls in the partial.
     *
     * <example name="$route-service" module="ngRouteExample"
     *          deps="angular-route.js" fixBase="true">
     *   <file name="index.html">
     *     <div ng-controller="MainController">
     *       Choose:
     *       <a href="Book/Moby">Moby</a> |
     *       <a href="Book/Moby/ch/1">Moby: Ch1</a> |
     *       <a href="Book/Gatsby">Gatsby</a> |
     *       <a href="Book/Gatsby/ch/4?key=value">Gatsby: Ch4</a> |
     *       <a href="Book/Scarlet">Scarlet Letter</a><br/>
     *
     *       <div ng-view></div>
     *
     *       <hr />
     *
     *       <pre>$location.path() = {{$location.path()}}</pre>
     *       <pre>$route.current.templateUrl = {{$route.current.templateUrl}}</pre>
     *       <pre>$route.current.params = {{$route.current.params}}</pre>
     *       <pre>$route.current.scope.name = {{$route.current.scope.name}}</pre>
     *       <pre>$routeParams = {{$routeParams}}</pre>
     *     </div>
     *   </file>
     *
     *   <file name="book.html">
     *     controller: {{name}}<br />
     *     Book Id: {{params.bookId}}<br />
     *   </file>
     *
     *   <file name="chapter.html">
     *     controller: {{name}}<br />
     *     Book Id: {{params.bookId}}<br />
     *     Chapter Id: {{params.chapterId}}
     *   </file>
     *
     *   <file name="script.js">
     *     angular.module('ngRouteExample', ['ngRoute'])
     *
     *      .controller('MainController', function($scope, $route, $routeParams, $location) {
     *          $scope.$route = $route;
     *          $scope.$location = $location;
     *          $scope.$routeParams = $routeParams;
     *      })
     *
     *      .controller('BookController', function($scope, $routeParams) {
     *          $scope.name = 'BookController';
     *          $scope.params = $routeParams;
     *      })
     *
     *      .controller('ChapterController', function($scope, $routeParams) {
     *          $scope.name = 'ChapterController';
     *          $scope.params = $routeParams;
     *      })
     *
     *     .config(function($routeProvider, $locationProvider) {
     *       $routeProvider
     *        .when('/Book/:bookId', {
     *         templateUrl: 'book.html',
     *         controller: 'BookController',
     *         resolve: {
     *           // I will cause a 1 second delay
     *           delay: function($q, $timeout) {
     *             var delay = $q.defer();
     *             $timeout(delay.resolve, 1000);
     *             return delay.promise;
     *           }
     *         }
     *       })
     *       .when('/Book/:bookId/ch/:chapterId', {
     *         templateUrl: 'chapter.html',
     *         controller: 'ChapterController'
     *       });
     *
     *       // configure html5 to get links working on jsfiddle
     *       $locationProvider.html5Mode(true);
     *     });
     *
     *   </file>
     *
     *   <file name="protractor.js" type="protractor">
     *     it('should load and compile correct template', function() {
     *       element(by.linkText('Moby: Ch1')).click();
     *       var content = element(by.css('[ng-view]')).getText();
     *       expect(content).toMatch(/controller: ChapterController/);
     *       expect(content).toMatch(/Book Id: Moby/);
     *       expect(content).toMatch(/Chapter Id: 1/);
     *
     *       element(by.partialLinkText('Scarlet')).click();
     *
     *       content = element(by.css('[ng-view]')).getText();
     *       expect(content).toMatch(/controller: BookController/);
     *       expect(content).toMatch(/Book Id: Scarlet/);
     *     });
     *   </file>
     * </example>
     */

    /**
     * @ngdoc event
     * @name $route#$routeChangeStart
     * @eventType broadcast on root scope
     * @description
     * Broadcasted before a route change. At this  point the route services starts
     * resolving all of the dependencies needed for the route change to occur.
     * Typically this involves fetching the view template as well as any dependencies
     * defined in `resolve` route property. Once  all of the dependencies are resolved
     * `$routeChangeSuccess` is fired.
     *
     * The route change (and the `$location` change that triggered it) can be prevented
     * by calling `preventDefault` method of the event. See {@link ng.$rootScope.Scope#$on}
     * for more details about event object.
     *
     * @param {Object} angularEvent Synthetic event object.
     * @param {Route} next Future route information.
     * @param {Route} current Current route information.
     */

    /**
     * @ngdoc event
     * @name $route#$routeChangeSuccess
     * @eventType broadcast on root scope
     * @description
     * Broadcasted after a route change has happened successfully.
     * The `resolve` dependencies are now available in the `current.locals` property.
     *
     * {@link ngRoute.directive:ngView ngView} listens for the directive
     * to instantiate the controller and render the view.
     *
     * @param {Object} angularEvent Synthetic event object.
     * @param {Route} current Current route information.
     * @param {Route|Undefined} previous Previous route information, or undefined if current is
     * first route entered.
     */

    /**
     * @ngdoc event
     * @name $route#$routeChangeError
     * @eventType broadcast on root scope
     * @description
     * Broadcasted if a redirection function fails or any redirection or resolve promises are
     * rejected.
     *
     * @param {Object} angularEvent Synthetic event object
     * @param {Route} current Current route information.
     * @param {Route} previous Previous route information.
     * @param {Route} rejection The thrown error or the rejection reason of the promise. Usually
     * the rejection reason is the error that caused the promise to get rejected.
     */

    /**
     * @ngdoc event
     * @name $route#$routeUpdate
     * @eventType broadcast on root scope
     * @description
     * Broadcasted if the same instance of a route (including template, controller instance,
     * resolved dependencies, etc.) is being reused. This can happen if either `reloadOnSearch` or
     * `reloadOnUrl` has been set to `false`.
     *
     * @param {Object} angularEvent Synthetic event object
     * @param {Route} current Current/previous route information.
     */

    var forceReload = false,
        preparedRoute,
        preparedRouteIsUpdateOnly,
        $route = {
          routes: routes,

          /**
           * @ngdoc method
           * @name $route#reload
           *
           * @description
           * Causes `$route` service to reload the current route even if
           * {@link ng.$location $location} hasn't changed.
           *
           * As a result of that, {@link ngRoute.directive:ngView ngView}
           * creates new scope and reinstantiates the controller.
           */
          reload: function() {
            forceReload = true;

            var fakeLocationEvent = {
              defaultPrevented: false,
              preventDefault: function fakePreventDefault() {
                this.defaultPrevented = true;
                forceReload = false;
              }
            };

            $rootScope.$evalAsync(function() {
              prepareRoute(fakeLocationEvent);
              if (!fakeLocationEvent.defaultPrevented) commitRoute();
            });
          },

          /**
           * @ngdoc method
           * @name $route#updateParams
           *
           * @description
           * Causes `$route` service to update the current URL, replacing
           * current route parameters with those specified in `newParams`.
           * Provided property names that match the route's path segment
           * definitions will be interpolated into the location's path, while
           * remaining properties will be treated as query params.
           *
           * @param {!Object<string, string>} newParams mapping of URL parameter names to values
           */
          updateParams: function(newParams) {
            if (this.current && this.current.$$route) {
              newParams = angular.extend({}, this.current.params, newParams);
              $location.path(interpolate(this.current.$$route.originalPath, newParams));
              // interpolate modifies newParams, only query params are left
              $location.search(newParams);
            } else {
              throw $routeMinErr('norout', 'Tried updating route with no current route');
            }
          }
        };

    $rootScope.$on('$locationChangeStart', prepareRoute);
    $rootScope.$on('$locationChangeSuccess', commitRoute);

    return $route;

    /////////////////////////////////////////////////////

    /**
     * @param on {string} current url
     * @param route {Object} route regexp to match the url against
     * @return {?Object}
     *
     * @description
     * Check if the route matches the current url.
     *
     * Inspired by match in
     * visionmedia/express/lib/router/router.js.
     */
    function switchRouteMatcher(on, route) {
      var keys = route.keys,
          params = {};

      if (!route.regexp) return null;

      var m = route.regexp.exec(on);
      if (!m) return null;

      for (var i = 1, len = m.length; i < len; ++i) {
        var key = keys[i - 1];

        var val = m[i];

        if (key && val) {
          params[key.name] = val;
        }
      }
      return params;
    }

    function prepareRoute($locationEvent) {
      var lastRoute = $route.current;

      preparedRoute = parseRoute();
      preparedRouteIsUpdateOnly = isNavigationUpdateOnly(preparedRoute, lastRoute);

      if (!preparedRouteIsUpdateOnly && (lastRoute || preparedRoute)) {
        if ($rootScope.$broadcast('$routeChangeStart', preparedRoute, lastRoute).defaultPrevented) {
          if ($locationEvent) {
            $locationEvent.preventDefault();
          }
        }
      }
    }

    function commitRoute() {
      var lastRoute = $route.current;
      var nextRoute = preparedRoute;

      if (preparedRouteIsUpdateOnly) {
        lastRoute.params = nextRoute.params;
        angular.copy(lastRoute.params, $routeParams);
        $rootScope.$broadcast('$routeUpdate', lastRoute);
      } else if (nextRoute || lastRoute) {
        forceReload = false;
        $route.current = nextRoute;

        var nextRoutePromise = $q.resolve(nextRoute);

        $browser.$$incOutstandingRequestCount('$route');

        nextRoutePromise.
          then(getRedirectionData).
          then(handlePossibleRedirection).
          then(function(keepProcessingRoute) {
            return keepProcessingRoute && nextRoutePromise.
              then(resolveLocals).
              then(function(locals) {
                // after route change
                if (nextRoute === $route.current) {
                  if (nextRoute) {
                    nextRoute.locals = locals;
                    angular.copy(nextRoute.params, $routeParams);
                  }
                  $rootScope.$broadcast('$routeChangeSuccess', nextRoute, lastRoute);
                }
              });
          }).catch(function(error) {
            if (nextRoute === $route.current) {
              $rootScope.$broadcast('$routeChangeError', nextRoute, lastRoute, error);
            }
          }).finally(function() {
            // Because `commitRoute()` is called from a `$rootScope.$evalAsync` block (see
            // `$locationWatch`), this `$$completeOutstandingRequest()` call will not cause
            // `outstandingRequestCount` to hit zero.  This is important in case we are redirecting
            // to a new route which also requires some asynchronous work.

            $browser.$$completeOutstandingRequest(noop, '$route');
          });
      }
    }

    function getRedirectionData(route) {
      var data = {
        route: route,
        hasRedirection: false
      };

      if (route) {
        if (route.redirectTo) {
          if (angular.isString(route.redirectTo)) {
            data.path = interpolate(route.redirectTo, route.params);
            data.search = route.params;
            data.hasRedirection = true;
          } else {
            var oldPath = $location.path();
            var oldSearch = $location.search();
            var newUrl = route.redirectTo(route.pathParams, oldPath, oldSearch);

            if (angular.isDefined(newUrl)) {
              data.url = newUrl;
              data.hasRedirection = true;
            }
          }
        } else if (route.resolveRedirectTo) {
          return $q.
            resolve($injector.invoke(route.resolveRedirectTo)).
            then(function(newUrl) {
              if (angular.isDefined(newUrl)) {
                data.url = newUrl;
                data.hasRedirection = true;
              }

              return data;
            });
        }
      }

      return data;
    }

    function handlePossibleRedirection(data) {
      var keepProcessingRoute = true;

      if (data.route !== $route.current) {
        keepProcessingRoute = false;
      } else if (data.hasRedirection) {
        var oldUrl = $location.url();
        var newUrl = data.url;

        if (newUrl) {
          $location.
            url(newUrl).
            replace();
        } else {
          newUrl = $location.
            path(data.path).
            search(data.search).
            replace().
            url();
        }

        if (newUrl !== oldUrl) {
          // Exit out and don't process current next value,
          // wait for next location change from redirect
          keepProcessingRoute = false;
        }
      }

      return keepProcessingRoute;
    }

    function resolveLocals(route) {
      if (route) {
        var locals = angular.extend({}, route.resolve);
        angular.forEach(locals, function(value, key) {
          locals[key] = angular.isString(value) ?
              $injector.get(value) :
              $injector.invoke(value, null, null, key);
        });
        var template = getTemplateFor(route);
        if (angular.isDefined(template)) {
          locals['$template'] = template;
        }
        return $q.all(locals);
      }
    }

    function getTemplateFor(route) {
      var template, templateUrl;
      if (angular.isDefined(template = route.template)) {
        if (angular.isFunction(template)) {
          template = template(route.params);
        }
      } else if (angular.isDefined(templateUrl = route.templateUrl)) {
        if (angular.isFunction(templateUrl)) {
          templateUrl = templateUrl(route.params);
        }
        if (angular.isDefined(templateUrl)) {
          route.loadedTemplateUrl = $sce.valueOf(templateUrl);
          template = $templateRequest(templateUrl);
        }
      }
      return template;
    }

    /**
     * @returns {Object} the current active route, by matching it against the URL
     */
    function parseRoute() {
      // Match a route
      var params, match;
      angular.forEach(routes, function(route, path) {
        if (!match && (params = switchRouteMatcher($location.path(), route))) {
          match = inherit(route, {
            params: angular.extend({}, $location.search(), params),
            pathParams: params});
          match.$$route = route;
        }
      });
      // No route matched; fallback to "otherwise" route
      return match || routes[null] && inherit(routes[null], {params: {}, pathParams:{}});
    }

    /**
     * @param {Object} newRoute - The new route configuration (as returned by `parseRoute()`).
     * @param {Object} oldRoute - The previous route configuration (as returned by `parseRoute()`).
     * @returns {boolean} Whether this is an "update-only" navigation, i.e. the URL maps to the same
     *                    route and it can be reused (based on the config and the type of change).
     */
    function isNavigationUpdateOnly(newRoute, oldRoute) {
      // IF this is not a forced reload
      return !forceReload
          // AND both `newRoute`/`oldRoute` are defined
          && newRoute && oldRoute
          // AND they map to the same Route Definition Object
          && (newRoute.$$route === oldRoute.$$route)
          // AND `reloadOnUrl` is disabled
          && (!newRoute.reloadOnUrl
              // OR `reloadOnSearch` is disabled
              || (!newRoute.reloadOnSearch
                  // AND both routes have the same path params
                  && angular.equals(newRoute.pathParams, oldRoute.pathParams)
              )
          );
    }

    /**
     * @returns {string} interpolation of the redirect path with the parameters
     */
    function interpolate(string, params) {
      var result = [];
      angular.forEach((string || '').split(':'), function(segment, i) {
        if (i === 0) {
          result.push(segment);
        } else {
          var segmentMatch = segment.match(/(\w+)(?:[?*])?(.*)/);
          var key = segmentMatch[1];
          result.push(params[key]);
          result.push(segmentMatch[2] || '');
          delete params[key];
        }
      });
      return result.join('');
    }
  }];
}

instantiateRoute.$inject = ['$injector'];
function instantiateRoute($injector) {
  if (isEagerInstantiationEnabled) {
    // Instantiate `$route`
    $injector.get('$route');
  }
}

ngRouteModule.provider('$routeParams', $RouteParamsProvider);


/**
 * @ngdoc service
 * @name $routeParams
 * @requires $route
 * @this
 *
 * @description
 * The `$routeParams` service allows you to retrieve the current set of route parameters.
 *
 * Requires the {@link ngRoute `ngRoute`} module to be installed.
 *
 * The route parameters are a combination of {@link ng.$location `$location`}'s
 * {@link ng.$location#search `search()`} and {@link ng.$location#path `path()`}.
 * The `path` parameters are extracted when the {@link ngRoute.$route `$route`} path is matched.
 *
 * In case of parameter name collision, `path` params take precedence over `search` params.
 *
 * The service guarantees that the identity of the `$routeParams` object will remain unchanged
 * (but its properties will likely change) even when a route change occurs.
 *
 * Note that the `$routeParams` are only updated *after* a route change completes successfully.
 * This means that you cannot rely on `$routeParams` being correct in route resolve functions.
 * Instead you can use `$route.current.params` to access the new route's parameters.
 *
 * @example
 * ```js
 *  // Given:
 *  // URL: http://server.com/index.html#/Chapter/1/Section/2?search=moby
 *  // Route: /Chapter/:chapterId/Section/:sectionId
 *  //
 *  // Then
 *  $routeParams ==> {chapterId:'1', sectionId:'2', search:'moby'}
 * ```
 */
function $RouteParamsProvider() {
  this.$get = function() { return {}; };
}

ngRouteModule.directive('ngView', ngViewFactory);
ngRouteModule.directive('ngView', ngViewFillContentFactory);


/**
 * @ngdoc directive
 * @name ngView
 * @restrict ECA
 *
 * @description
 * `ngView` is a directive that complements the {@link ngRoute.$route $route} service by
 * including the rendered template of the current route into the main layout (`index.html`) file.
 * Every time the current route changes, the included view changes with it according to the
 * configuration of the `$route` service.
 *
 * Requires the {@link ngRoute `ngRoute`} module to be installed.
 *
 * @animations
 * | Animation                        | Occurs                              |
 * |----------------------------------|-------------------------------------|
 * | {@link ng.$animate#enter enter}  | when the new element is inserted to the DOM |
 * | {@link ng.$animate#leave leave}  | when the old element is removed from to the DOM  |
 *
 * The enter and leave animation occur concurrently.
 *
 * @scope
 * @priority 400
 * @param {string=} onload Expression to evaluate whenever the view updates.
 *
 * @param {string=} autoscroll Whether `ngView` should call {@link ng.$anchorScroll
 *                  $anchorScroll} to scroll the viewport after the view is updated.
 *
 *                  - If the attribute is not set, disable scrolling.
 *                  - If the attribute is set without value, enable scrolling.
 *                  - Otherwise enable scrolling only if the `autoscroll` attribute value evaluated
 *                    as an expression yields a truthy value.
 * @example
    <example name="ngView-directive" module="ngViewExample"
             deps="angular-route.js;angular-animate.js"
             animations="true" fixBase="true">
      <file name="index.html">
        <div ng-controller="MainCtrl as main">
          Choose:
          <a href="Book/Moby">Moby</a> |
          <a href="Book/Moby/ch/1">Moby: Ch1</a> |
          <a href="Book/Gatsby">Gatsby</a> |
          <a href="Book/Gatsby/ch/4?key=value">Gatsby: Ch4</a> |
          <a href="Book/Scarlet">Scarlet Letter</a><br/>

          <div class="view-animate-container">
            <div ng-view class="view-animate"></div>
          </div>
          <hr />

          <pre>$location.path() = {{main.$location.path()}}</pre>
          <pre>$route.current.templateUrl = {{main.$route.current.templateUrl}}</pre>
          <pre>$route.current.params = {{main.$route.current.params}}</pre>
          <pre>$routeParams = {{main.$routeParams}}</pre>
        </div>
      </file>

      <file name="book.html">
        <div>
          controller: {{book.name}}<br />
          Book Id: {{book.params.bookId}}<br />
        </div>
      </file>

      <file name="chapter.html">
        <div>
          controller: {{chapter.name}}<br />
          Book Id: {{chapter.params.bookId}}<br />
          Chapter Id: {{chapter.params.chapterId}}
        </div>
      </file>

      <file name="animations.css">
        .view-animate-container {
          position:relative;
          height:100px!important;
          background:white;
          border:1px solid black;
          height:40px;
          overflow:hidden;
        }

        .view-animate {
          padding:10px;
        }

        .view-animate.ng-enter, .view-animate.ng-leave {
          transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 1.5s;

          display:block;
          width:100%;
          border-left:1px solid black;

          position:absolute;
          top:0;
          left:0;
          right:0;
          bottom:0;
          padding:10px;
        }

        .view-animate.ng-enter {
          left:100%;
        }
        .view-animate.ng-enter.ng-enter-active {
          left:0;
        }
        .view-animate.ng-leave.ng-leave-active {
          left:-100%;
        }
      </file>

      <file name="script.js">
        angular.module('ngViewExample', ['ngRoute', 'ngAnimate'])
          .config(['$routeProvider', '$locationProvider',
            function($routeProvider, $locationProvider) {
              $routeProvider
                .when('/Book/:bookId', {
                  templateUrl: 'book.html',
                  controller: 'BookCtrl',
                  controllerAs: 'book'
                })
                .when('/Book/:bookId/ch/:chapterId', {
                  templateUrl: 'chapter.html',
                  controller: 'ChapterCtrl',
                  controllerAs: 'chapter'
                });

              $locationProvider.html5Mode(true);
          }])
          .controller('MainCtrl', ['$route', '$routeParams', '$location',
            function MainCtrl($route, $routeParams, $location) {
              this.$route = $route;
              this.$location = $location;
              this.$routeParams = $routeParams;
          }])
          .controller('BookCtrl', ['$routeParams', function BookCtrl($routeParams) {
            this.name = 'BookCtrl';
            this.params = $routeParams;
          }])
          .controller('ChapterCtrl', ['$routeParams', function ChapterCtrl($routeParams) {
            this.name = 'ChapterCtrl';
            this.params = $routeParams;
          }]);

      </file>

      <file name="protractor.js" type="protractor">
        it('should load and compile correct template', function() {
          element(by.linkText('Moby: Ch1')).click();
          var content = element(by.css('[ng-view]')).getText();
          expect(content).toMatch(/controller: ChapterCtrl/);
          expect(content).toMatch(/Book Id: Moby/);
          expect(content).toMatch(/Chapter Id: 1/);

          element(by.partialLinkText('Scarlet')).click();

          content = element(by.css('[ng-view]')).getText();
          expect(content).toMatch(/controller: BookCtrl/);
          expect(content).toMatch(/Book Id: Scarlet/);
        });
      </file>
    </example>
 */


/**
 * @ngdoc event
 * @name ngView#$viewContentLoaded
 * @eventType emit on the current ngView scope
 * @description
 * Emitted every time the ngView content is reloaded.
 */
ngViewFactory.$inject = ['$route', '$anchorScroll', '$animate'];
function ngViewFactory($route, $anchorScroll, $animate) {
  return {
    restrict: 'ECA',
    terminal: true,
    priority: 400,
    transclude: 'element',
    link: function(scope, $element, attr, ctrl, $transclude) {
        var currentScope,
            currentElement,
            previousLeaveAnimation,
            autoScrollExp = attr.autoscroll,
            onloadExp = attr.onload || '';

        scope.$on('$routeChangeSuccess', update);
        update();

        function cleanupLastView() {
          if (previousLeaveAnimation) {
            $animate.cancel(previousLeaveAnimation);
            previousLeaveAnimation = null;
          }

          if (currentScope) {
            currentScope.$destroy();
            currentScope = null;
          }
          if (currentElement) {
            previousLeaveAnimation = $animate.leave(currentElement);
            previousLeaveAnimation.done(function(response) {
              if (response !== false) previousLeaveAnimation = null;
            });
            currentElement = null;
          }
        }

        function update() {
          var locals = $route.current && $route.current.locals,
              template = locals && locals.$template;

          if (angular.isDefined(template)) {
            var newScope = scope.$new();
            var current = $route.current;

            // Note: This will also link all children of ng-view that were contained in the original
            // html. If that content contains controllers, ... they could pollute/change the scope.
            // However, using ng-view on an element with additional content does not make sense...
            // Note: We can't remove them in the cloneAttchFn of $transclude as that
            // function is called before linking the content, which would apply child
            // directives to non existing elements.
            var clone = $transclude(newScope, function(clone) {
              $animate.enter(clone, null, currentElement || $element).done(function onNgViewEnter(response) {
                if (response !== false && angular.isDefined(autoScrollExp)
                  && (!autoScrollExp || scope.$eval(autoScrollExp))) {
                  $anchorScroll();
                }
              });
              cleanupLastView();
            });

            currentElement = clone;
            currentScope = current.scope = newScope;
            currentScope.$emit('$viewContentLoaded');
            currentScope.$eval(onloadExp);
          } else {
            cleanupLastView();
          }
        }
    }
  };
}

// This directive is called during the $transclude call of the first `ngView` directive.
// It will replace and compile the content of the element with the loaded template.
// We need this directive so that the element content is already filled when
// the link function of another directive on the same element as ngView
// is called.
ngViewFillContentFactory.$inject = ['$compile', '$controller', '$route'];
function ngViewFillContentFactory($compile, $controller, $route) {
  return {
    restrict: 'ECA',
    priority: -400,
    link: function(scope, $element) {
      var current = $route.current,
          locals = current.locals;

      $element.html(locals.$template);

      var link = $compile($element.contents());

      if (current.controller) {
        locals.$scope = scope;
        var controller = $controller(current.controller, locals);
        if (current.controllerAs) {
          scope[current.controllerAs] = controller;
        }
        $element.data('$ngControllerController', controller);
        $element.children().data('$ngControllerController', controller);
      }
      scope[current.resolveAs || '$resolve'] = locals;

      link(scope);
    }
  };
}


})(window, window.angular);


/***/ }),
/* 177 */
/***/ (function(module, exports) {

/**
 * @license
 * Copyright (C) 2006 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview
 * some functions for browser-side pretty printing of code contained in html.
 *
 * <p>
 * For a fairly comprehensive set of languages see the
 * <a href="https://github.com/google/code-prettify#for-which-languages-does-it-work">README</a>
 * file that came with this source.  At a minimum, the lexer should work on a
 * number of languages including C and friends, Java, Python, Bash, SQL, HTML,
 * XML, CSS, Javascript, and Makefiles.  It works passably on Ruby, PHP and Awk
 * and a subset of Perl, but, because of commenting conventions, doesn't work on
 * Smalltalk, Lisp-like, or CAML-like languages without an explicit lang class.
 * <p>
 * Usage: <ol>
 * <li> include this source file in an html page via
 *   {@code <script type="text/javascript" src="/path/to/prettify.js"></script>}
 * <li> define style rules.  See the example page for examples.
 * <li> mark the {@code <pre>} and {@code <code>} tags in your source with
 *    {@code class=prettyprint.}
 *    You can also use the (html deprecated) {@code <xmp>} tag, but the pretty
 *    printer needs to do more substantial DOM manipulations to support that, so
 *    some css styles may not be preserved.
 * </ol>
 * That's it.  I wanted to keep the API as simple as possible, so there's no
 * need to specify which language the code is in, but if you wish, you can add
 * another class to the {@code <pre>} or {@code <code>} element to specify the
 * language, as in {@code <pre class="prettyprint lang-java">}.  Any class that
 * starts with "lang-" followed by a file extension, specifies the file type.
 * See the "lang-*.js" files in this directory for code that implements
 * per-language file handlers.
 * <p>
 * Change log:<br>
 * cbeust, 2006/08/22
 * <blockquote>
 *   Java annotations (start with "@") are now captured as literals ("lit")
 * </blockquote>
 * @requires console
 */

// JSLint declarations
/*global console, document, navigator, setTimeout, window, define */


/**
* @typedef {!Array.<number|string>}
* Alternating indices and the decorations that should be inserted there.
* The indices are monotonically increasing.
*/
var DecorationsT;

/**
* @typedef {!{
*   sourceNode: !Element,
*   pre: !(number|boolean),
*   langExtension: ?string,
*   numberLines: ?(number|boolean),
*   sourceCode: ?string,
*   spans: ?(Array.<number|Node>),
*   basePos: ?number,
*   decorations: ?DecorationsT
* }}
* <dl>
*  <dt>sourceNode<dd>the element containing the source
*  <dt>sourceCode<dd>source as plain text
*  <dt>pre<dd>truthy if white-space in text nodes
*     should be considered significant.
*  <dt>spans<dd> alternating span start indices into source
*     and the text node or element (e.g. {@code <BR>}) corresponding to that
*     span.
*  <dt>decorations<dd>an array of style classes preceded
*     by the position at which they start in job.sourceCode in order
*  <dt>basePos<dd>integer position of this.sourceCode in the larger chunk of
*     source.
* </dl>
*/
var JobT;

/**
* @typedef {!{
*   sourceCode: string,
*   spans: !(Array.<number|Node>)
* }}
* <dl>
*  <dt>sourceCode<dd>source as plain text
*  <dt>spans<dd> alternating span start indices into source
*     and the text node or element (e.g. {@code <BR>}) corresponding to that
*     span.
* </dl>
*/
var SourceSpansT;

/** @define {boolean} */
var IN_GLOBAL_SCOPE = false;

var HACK_TO_FIX_JS_INCLUDE_PL;

/**
 * {@type !{
 *   'createSimpleLexer': function (Array, Array): (function (JobT)),
 *   'registerLangHandler': function (function (JobT), Array.<string>),
 *   'PR_ATTRIB_NAME': string,
 *   'PR_ATTRIB_NAME': string,
 *   'PR_ATTRIB_VALUE': string,
 *   'PR_COMMENT': string,
 *   'PR_DECLARATION': string,
 *   'PR_KEYWORD': string,
 *   'PR_LITERAL': string,
 *   'PR_NOCODE': string,
 *   'PR_PLAIN': string,
 *   'PR_PUNCTUATION': string,
 *   'PR_SOURCE': string,
 *   'PR_STRING': string,
 *   'PR_TAG': string,
 *   'PR_TYPE': string,
 *   'prettyPrintOne': function (string, string, number|boolean),
 *   'prettyPrint': function (?function, ?(HTMLElement|HTMLDocument))
 * }}
 * @const
 */
var PR;

/**
 * Split {@code prettyPrint} into multiple timeouts so as not to interfere with
 * UI events.
 * If set to {@code false}, {@code prettyPrint()} is synchronous.
 */
window['PR_SHOULD_USE_CONTINUATION'] = true;

/**
 * Pretty print a chunk of code.
 * @param {string} sourceCodeHtml The HTML to pretty print.
 * @param {string} opt_langExtension The language name to use.
 *     Typically, a filename extension like 'cpp' or 'java'.
 * @param {number|boolean} opt_numberLines True to number lines,
 *     or the 1-indexed number of the first line in sourceCodeHtml.
 * @return {string} code as html, but prettier
 */
var prettyPrintOne;
/**
 * Find all the {@code <pre>} and {@code <code>} tags in the DOM with
 * {@code class=prettyprint} and prettify them.
 *
 * @param {Function} opt_whenDone called when prettifying is done.
 * @param {HTMLElement|HTMLDocument} opt_root an element or document
 *   containing all the elements to pretty print.
 *   Defaults to {@code document.body}.
 */
var prettyPrint;


(function () {
  var win = window;
  // Keyword lists for various languages.
  // We use things that coerce to strings to make them compact when minified
  // and to defeat aggressive optimizers that fold large string constants.
  var FLOW_CONTROL_KEYWORDS = ["break,continue,do,else,for,if,return,while"];
  var C_KEYWORDS = [FLOW_CONTROL_KEYWORDS,"auto,case,char,const,default," +
      "double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed," +
      "sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"];
  var COMMON_KEYWORDS = [C_KEYWORDS,"catch,class,delete,false,import," +
      "new,operator,private,protected,public,this,throw,true,try,typeof"];
  var CPP_KEYWORDS = [COMMON_KEYWORDS,"alignas,alignof,align_union,asm,axiom,bool," +
      "concept,concept_map,const_cast,constexpr,decltype,delegate," +
      "dynamic_cast,explicit,export,friend,generic,late_check," +
      "mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert," +
      "static_cast,template,typeid,typename,using,virtual,where"];
  var JAVA_KEYWORDS = [COMMON_KEYWORDS,
      "abstract,assert,boolean,byte,extends,finally,final,implements,import," +
      "instanceof,interface,null,native,package,strictfp,super,synchronized," +
      "throws,transient"];
  var CSHARP_KEYWORDS = [COMMON_KEYWORDS,
      "abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending," +
      "dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface," +
      "internal,into,is,join,let,lock,null,object,out,override,orderby,params," +
      "partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong," +
      "unchecked,unsafe,ushort,value,var,virtual,where,yield"];
  var COFFEE_KEYWORDS = "all,and,by,catch,class,else,extends,false,finally," +
      "for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then," +
      "throw,true,try,unless,until,when,while,yes";
  var JSCRIPT_KEYWORDS = [COMMON_KEYWORDS,
      "abstract,async,await,constructor,debugger,enum,eval,export,function," +
      "get,implements,instanceof,interface,let,null,set,undefined,var,with," +
      "yield,Infinity,NaN"];
  var PERL_KEYWORDS = "caller,delete,die,do,dump,elsif,eval,exit,foreach,for," +
      "goto,if,import,last,local,my,next,no,our,print,package,redo,require," +
      "sub,undef,unless,until,use,wantarray,while,BEGIN,END";
  var PYTHON_KEYWORDS = [FLOW_CONTROL_KEYWORDS, "and,as,assert,class,def,del," +
      "elif,except,exec,finally,from,global,import,in,is,lambda," +
      "nonlocal,not,or,pass,print,raise,try,with,yield," +
      "False,True,None"];
  var RUBY_KEYWORDS = [FLOW_CONTROL_KEYWORDS, "alias,and,begin,case,class," +
      "def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo," +
      "rescue,retry,self,super,then,true,undef,unless,until,when,yield," +
      "BEGIN,END"];
  var SH_KEYWORDS = [FLOW_CONTROL_KEYWORDS, "case,done,elif,esac,eval,fi," +
      "function,in,local,set,then,until"];
  var ALL_KEYWORDS = [
      CPP_KEYWORDS, CSHARP_KEYWORDS, JAVA_KEYWORDS, JSCRIPT_KEYWORDS,
      PERL_KEYWORDS, PYTHON_KEYWORDS, RUBY_KEYWORDS, SH_KEYWORDS];
  var C_TYPES = /^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\d*)\b/;

  // token style names.  correspond to css classes
  /**
   * token style for a string literal
   * @const
   */
  var PR_STRING = 'str';
  /**
   * token style for a keyword
   * @const
   */
  var PR_KEYWORD = 'kwd';
  /**
   * token style for a comment
   * @const
   */
  var PR_COMMENT = 'com';
  /**
   * token style for a type
   * @const
   */
  var PR_TYPE = 'typ';
  /**
   * token style for a literal value.  e.g. 1, null, true.
   * @const
   */
  var PR_LITERAL = 'lit';
  /**
   * token style for a punctuation string.
   * @const
   */
  var PR_PUNCTUATION = 'pun';
  /**
   * token style for plain text.
   * @const
   */
  var PR_PLAIN = 'pln';

  /**
   * token style for an sgml tag.
   * @const
   */
  var PR_TAG = 'tag';
  /**
   * token style for a markup declaration such as a DOCTYPE.
   * @const
   */
  var PR_DECLARATION = 'dec';
  /**
   * token style for embedded source.
   * @const
   */
  var PR_SOURCE = 'src';
  /**
   * token style for an sgml attribute name.
   * @const
   */
  var PR_ATTRIB_NAME = 'atn';
  /**
   * token style for an sgml attribute value.
   * @const
   */
  var PR_ATTRIB_VALUE = 'atv';

  /**
   * A class that indicates a section of markup that is not code, e.g. to allow
   * embedding of line numbers within code listings.
   * @const
   */
  var PR_NOCODE = 'nocode';

  
  
  /**
   * A set of tokens that can precede a regular expression literal in
   * javascript
   * http://web.archive.org/web/20070717142515/http://www.mozilla.org/js/language/js20/rationale/syntax.html
   * has the full list, but I've removed ones that might be problematic when
   * seen in languages that don't support regular expression literals.
   *
   * <p>Specifically, I've removed any keywords that can't precede a regexp
   * literal in a syntactically legal javascript program, and I've removed the
   * "in" keyword since it's not a keyword in many languages, and might be used
   * as a count of inches.
   *
   * <p>The link above does not accurately describe EcmaScript rules since
   * it fails to distinguish between (a=++/b/i) and (a++/b/i) but it works
   * very well in practice.
   *
   * @private
   * @const
   */
  var REGEXP_PRECEDER_PATTERN = '(?:^^\\.?|[+-]|[!=]=?=?|\\#|%=?|&&?=?|\\(|\\*=?|[+\\-]=|->|\\/=?|::?|<<?=?|>>?>?=?|,|;|\\?|@|\\[|~|{|\\^\\^?=?|\\|\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\s*';
  
  // CAVEAT: this does not properly handle the case where a regular
  // expression immediately follows another since a regular expression may
  // have flags for case-sensitivity and the like.  Having regexp tokens
  // adjacent is not valid in any language I'm aware of, so I'm punting.
  // TODO: maybe style special characters inside a regexp as punctuation.

  /**
   * Given a group of {@link RegExp}s, returns a {@code RegExp} that globally
   * matches the union of the sets of strings matched by the input RegExp.
   * Since it matches globally, if the input strings have a start-of-input
   * anchor (/^.../), it is ignored for the purposes of unioning.
   * @param {Array.<RegExp>} regexs non multiline, non-global regexs.
   * @return {RegExp} a global regex.
   */
  function combinePrefixPatterns(regexs) {
    var capturedGroupIndex = 0;
  
    var needToFoldCase = false;
    var ignoreCase = false;
    for (var i = 0, n = regexs.length; i < n; ++i) {
      var regex = regexs[i];
      if (regex.ignoreCase) {
        ignoreCase = true;
      } else if (/[a-z]/i.test(regex.source.replace(
                     /\\u[0-9a-f]{4}|\\x[0-9a-f]{2}|\\[^ux]/gi, ''))) {
        needToFoldCase = true;
        ignoreCase = false;
        break;
      }
    }
  
    var escapeCharToCodeUnit = {
      'b': 8,
      't': 9,
      'n': 0xa,
      'v': 0xb,
      'f': 0xc,
      'r': 0xd
    };
  
    function decodeEscape(charsetPart) {
      var cc0 = charsetPart.charCodeAt(0);
      if (cc0 !== 92 /* \\ */) {
        return cc0;
      }
      var c1 = charsetPart.charAt(1);
      cc0 = escapeCharToCodeUnit[c1];
      if (cc0) {
        return cc0;
      } else if ('0' <= c1 && c1 <= '7') {
        return parseInt(charsetPart.substring(1), 8);
      } else if (c1 === 'u' || c1 === 'x') {
        return parseInt(charsetPart.substring(2), 16);
      } else {
        return charsetPart.charCodeAt(1);
      }
    }
  
    function encodeEscape(charCode) {
      if (charCode < 0x20) {
        return (charCode < 0x10 ? '\\x0' : '\\x') + charCode.toString(16);
      }
      var ch = String.fromCharCode(charCode);
      return (ch === '\\' || ch === '-' || ch === ']' || ch === '^')
          ? "\\" + ch : ch;
    }
  
    function caseFoldCharset(charSet) {
      var charsetParts = charSet.substring(1, charSet.length - 1).match(
          new RegExp(
              '\\\\u[0-9A-Fa-f]{4}'
              + '|\\\\x[0-9A-Fa-f]{2}'
              + '|\\\\[0-3][0-7]{0,2}'
              + '|\\\\[0-7]{1,2}'
              + '|\\\\[\\s\\S]'
              + '|-'
              + '|[^-\\\\]',
              'g'));
      var ranges = [];
      var inverse = charsetParts[0] === '^';
  
      var out = ['['];
      if (inverse) { out.push('^'); }
  
      for (var i = inverse ? 1 : 0, n = charsetParts.length; i < n; ++i) {
        var p = charsetParts[i];
        if (/\\[bdsw]/i.test(p)) {  // Don't muck with named groups.
          out.push(p);
        } else {
          var start = decodeEscape(p);
          var end;
          if (i + 2 < n && '-' === charsetParts[i + 1]) {
            end = decodeEscape(charsetParts[i + 2]);
            i += 2;
          } else {
            end = start;
          }
          ranges.push([start, end]);
          // If the range might intersect letters, then expand it.
          // This case handling is too simplistic.
          // It does not deal with non-latin case folding.
          // It works for latin source code identifiers though.
          if (!(end < 65 || start > 122)) {
            if (!(end < 65 || start > 90)) {
              ranges.push([Math.max(65, start) | 32, Math.min(end, 90) | 32]);
            }
            if (!(end < 97 || start > 122)) {
              ranges.push([Math.max(97, start) & ~32, Math.min(end, 122) & ~32]);
            }
          }
        }
      }
  
      // [[1, 10], [3, 4], [8, 12], [14, 14], [16, 16], [17, 17]]
      // -> [[1, 12], [14, 14], [16, 17]]
      ranges.sort(function (a, b) { return (a[0] - b[0]) || (b[1]  - a[1]); });
      var consolidatedRanges = [];
      var lastRange = [];
      for (var i = 0; i < ranges.length; ++i) {
        var range = ranges[i];
        if (range[0] <= lastRange[1] + 1) {
          lastRange[1] = Math.max(lastRange[1], range[1]);
        } else {
          consolidatedRanges.push(lastRange = range);
        }
      }
  
      for (var i = 0; i < consolidatedRanges.length; ++i) {
        var range = consolidatedRanges[i];
        out.push(encodeEscape(range[0]));
        if (range[1] > range[0]) {
          if (range[1] + 1 > range[0]) { out.push('-'); }
          out.push(encodeEscape(range[1]));
        }
      }
      out.push(']');
      return out.join('');
    }
  
    function allowAnywhereFoldCaseAndRenumberGroups(regex) {
      // Split into character sets, escape sequences, punctuation strings
      // like ('(', '(?:', ')', '^'), and runs of characters that do not
      // include any of the above.
      var parts = regex.source.match(
          new RegExp(
              '(?:'
              + '\\[(?:[^\\x5C\\x5D]|\\\\[\\s\\S])*\\]'  // a character set
              + '|\\\\u[A-Fa-f0-9]{4}'  // a unicode escape
              + '|\\\\x[A-Fa-f0-9]{2}'  // a hex escape
              + '|\\\\[0-9]+'  // a back-reference or octal escape
              + '|\\\\[^ux0-9]'  // other escape sequence
              + '|\\(\\?[:!=]'  // start of a non-capturing group
              + '|[\\(\\)\\^]'  // start/end of a group, or line start
              + '|[^\\x5B\\x5C\\(\\)\\^]+'  // run of other characters
              + ')',
              'g'));
      var n = parts.length;
  
      // Maps captured group numbers to the number they will occupy in
      // the output or to -1 if that has not been determined, or to
      // undefined if they need not be capturing in the output.
      var capturedGroups = [];
  
      // Walk over and identify back references to build the capturedGroups
      // mapping.
      for (var i = 0, groupIndex = 0; i < n; ++i) {
        var p = parts[i];
        if (p === '(') {
          // groups are 1-indexed, so max group index is count of '('
          ++groupIndex;
        } else if ('\\' === p.charAt(0)) {
          var decimalValue = +p.substring(1);
          if (decimalValue) {
            if (decimalValue <= groupIndex) {
              capturedGroups[decimalValue] = -1;
            } else {
              // Replace with an unambiguous escape sequence so that
              // an octal escape sequence does not turn into a backreference
              // to a capturing group from an earlier regex.
              parts[i] = encodeEscape(decimalValue);
            }
          }
        }
      }
  
      // Renumber groups and reduce capturing groups to non-capturing groups
      // where possible.
      for (var i = 1; i < capturedGroups.length; ++i) {
        if (-1 === capturedGroups[i]) {
          capturedGroups[i] = ++capturedGroupIndex;
        }
      }
      for (var i = 0, groupIndex = 0; i < n; ++i) {
        var p = parts[i];
        if (p === '(') {
          ++groupIndex;
          if (!capturedGroups[groupIndex]) {
            parts[i] = '(?:';
          }
        } else if ('\\' === p.charAt(0)) {
          var decimalValue = +p.substring(1);
          if (decimalValue && decimalValue <= groupIndex) {
            parts[i] = '\\' + capturedGroups[decimalValue];
          }
        }
      }
  
      // Remove any prefix anchors so that the output will match anywhere.
      // ^^ really does mean an anchored match though.
      for (var i = 0; i < n; ++i) {
        if ('^' === parts[i] && '^' !== parts[i + 1]) { parts[i] = ''; }
      }
  
      // Expand letters to groups to handle mixing of case-sensitive and
      // case-insensitive patterns if necessary.
      if (regex.ignoreCase && needToFoldCase) {
        for (var i = 0; i < n; ++i) {
          var p = parts[i];
          var ch0 = p.charAt(0);
          if (p.length >= 2 && ch0 === '[') {
            parts[i] = caseFoldCharset(p);
          } else if (ch0 !== '\\') {
            // TODO: handle letters in numeric escapes.
            parts[i] = p.replace(
                /[a-zA-Z]/g,
                function (ch) {
                  var cc = ch.charCodeAt(0);
                  return '[' + String.fromCharCode(cc & ~32, cc | 32) + ']';
                });
          }
        }
      }
  
      return parts.join('');
    }
  
    var rewritten = [];
    for (var i = 0, n = regexs.length; i < n; ++i) {
      var regex = regexs[i];
      if (regex.global || regex.multiline) { throw new Error('' + regex); }
      rewritten.push(
          '(?:' + allowAnywhereFoldCaseAndRenumberGroups(regex) + ')');
    }
  
    return new RegExp(rewritten.join('|'), ignoreCase ? 'gi' : 'g');
  }

  /**
   * Split markup into a string of source code and an array mapping ranges in
   * that string to the text nodes in which they appear.
   *
   * <p>
   * The HTML DOM structure:</p>
   * <pre>
   * (Element   "p"
   *   (Element "b"
   *     (Text  "print "))       ; #1
   *   (Text    "'Hello '")      ; #2
   *   (Element "br")            ; #3
   *   (Text    "  + 'World';")) ; #4
   * </pre>
   * <p>
   * corresponds to the HTML
   * {@code <p><b>print </b>'Hello '<br>  + 'World';</p>}.</p>
   *
   * <p>
   * It will produce the output:</p>
   * <pre>
   * {
   *   sourceCode: "print 'Hello '\n  + 'World';",
   *   //                     1          2
   *   //           012345678901234 5678901234567
   *   spans: [0, #1, 6, #2, 14, #3, 15, #4]
   * }
   * </pre>
   * <p>
   * where #1 is a reference to the {@code "print "} text node above, and so
   * on for the other text nodes.
   * </p>
   *
   * <p>
   * The {@code} spans array is an array of pairs.  Even elements are the start
   * indices of substrings, and odd elements are the text nodes (or BR elements)
   * that contain the text for those substrings.
   * Substrings continue until the next index or the end of the source.
   * </p>
   *
   * @param {Node} node an HTML DOM subtree containing source-code.
   * @param {boolean|number} isPreformatted truthy if white-space in
   *    text nodes should be considered significant.
   * @return {SourceSpansT} source code and the nodes in which they occur.
   */
  function extractSourceSpans(node, isPreformatted) {
    var nocode = /(?:^|\s)nocode(?:\s|$)/;
  
    var chunks = [];
    var length = 0;
    var spans = [];
    var k = 0;
  
    function walk(node) {
      var type = node.nodeType;
      if (type == 1) {  // Element
        if (nocode.test(node.className)) { return; }
        for (var child = node.firstChild; child; child = child.nextSibling) {
          walk(child);
        }
        var nodeName = node.nodeName.toLowerCase();
        if ('br' === nodeName || 'li' === nodeName) {
          chunks[k] = '\n';
          spans[k << 1] = length++;
          spans[(k++ << 1) | 1] = node;
        }
      } else if (type == 3 || type == 4) {  // Text
        var text = node.nodeValue;
        if (text.length) {
          if (!isPreformatted) {
            text = text.replace(/[ \t\r\n]+/g, ' ');
          } else {
            text = text.replace(/\r\n?/g, '\n');  // Normalize newlines.
          }
          // TODO: handle tabs here?
          chunks[k] = text;
          spans[k << 1] = length;
          length += text.length;
          spans[(k++ << 1) | 1] = node;
        }
      }
    }
  
    walk(node);
  
    return {
      sourceCode: chunks.join('').replace(/\n$/, ''),
      spans: spans
    };
  }

  /**
   * Apply the given language handler to sourceCode and add the resulting
   * decorations to out.
   * @param {!Element} sourceNode
   * @param {number} basePos the index of sourceCode within the chunk of source
   *    whose decorations are already present on out.
   * @param {string} sourceCode
   * @param {function(JobT)} langHandler
   * @param {DecorationsT} out
   */
  function appendDecorations(
      sourceNode, basePos, sourceCode, langHandler, out) {
    if (!sourceCode) { return; }
    /** @type {JobT} */
    var job = {
      sourceNode: sourceNode,
      pre: 1,
      langExtension: null,
      numberLines: null,
      sourceCode: sourceCode,
      spans: null,
      basePos: basePos,
      decorations: null
    };
    langHandler(job);
    out.push.apply(out, job.decorations);
  }

  var notWs = /\S/;

  /**
   * Given an element, if it contains only one child element and any text nodes
   * it contains contain only space characters, return the sole child element.
   * Otherwise returns undefined.
   * <p>
   * This is meant to return the CODE element in {@code <pre><code ...>} when
   * there is a single child element that contains all the non-space textual
   * content, but not to return anything where there are multiple child elements
   * as in {@code <pre><code>...</code><code>...</code></pre>} or when there
   * is textual content.
   */
  function childContentWrapper(element) {
    var wrapper = undefined;
    for (var c = element.firstChild; c; c = c.nextSibling) {
      var type = c.nodeType;
      wrapper = (type === 1)  // Element Node
          ? (wrapper ? element : c)
          : (type === 3)  // Text Node
          ? (notWs.test(c.nodeValue) ? element : wrapper)
          : wrapper;
    }
    return wrapper === element ? undefined : wrapper;
  }

  /** Given triples of [style, pattern, context] returns a lexing function,
    * The lexing function interprets the patterns to find token boundaries and
    * returns a decoration list of the form
    * [index_0, style_0, index_1, style_1, ..., index_n, style_n]
    * where index_n is an index into the sourceCode, and style_n is a style
    * constant like PR_PLAIN.  index_n-1 <= index_n, and style_n-1 applies to
    * all characters in sourceCode[index_n-1:index_n].
    *
    * The stylePatterns is a list whose elements have the form
    * [style : string, pattern : RegExp, DEPRECATED, shortcut : string].
    *
    * Style is a style constant like PR_PLAIN, or can be a string of the
    * form 'lang-FOO', where FOO is a language extension describing the
    * language of the portion of the token in $1 after pattern executes.
    * E.g., if style is 'lang-lisp', and group 1 contains the text
    * '(hello (world))', then that portion of the token will be passed to the
    * registered lisp handler for formatting.
    * The text before and after group 1 will be restyled using this decorator
    * so decorators should take care that this doesn't result in infinite
    * recursion.  For example, the HTML lexer rule for SCRIPT elements looks
    * something like ['lang-js', /<[s]cript>(.+?)<\/script>/].  This may match
    * '<script>foo()<\/script>', which would cause the current decorator to
    * be called with '<script>' which would not match the same rule since
    * group 1 must not be empty, so it would be instead styled as PR_TAG by
    * the generic tag rule.  The handler registered for the 'js' extension would
    * then be called with 'foo()', and finally, the current decorator would
    * be called with '<\/script>' which would not match the original rule and
    * so the generic tag rule would identify it as a tag.
    *
    * Pattern must only match prefixes, and if it matches a prefix, then that
    * match is considered a token with the same style.
    *
    * Context is applied to the last non-whitespace, non-comment token
    * recognized.
    *
    * Shortcut is an optional string of characters, any of which, if the first
    * character, gurantee that this pattern and only this pattern matches.
    *
    * @param {Array} shortcutStylePatterns patterns that always start with
    *   a known character.  Must have a shortcut string.
    * @param {Array} fallthroughStylePatterns patterns that will be tried in
    *   order if the shortcut ones fail.  May have shortcuts.
    *
    * @return {function (JobT)} a function that takes an undecorated job and
    *   attaches a list of decorations.
    */
  function createSimpleLexer(shortcutStylePatterns, fallthroughStylePatterns) {
    var shortcuts = {};
    var tokenizer;
    (function () {
      var allPatterns = shortcutStylePatterns.concat(fallthroughStylePatterns);
      var allRegexs = [];
      var regexKeys = {};
      for (var i = 0, n = allPatterns.length; i < n; ++i) {
        var patternParts = allPatterns[i];
        var shortcutChars = patternParts[3];
        if (shortcutChars) {
          for (var c = shortcutChars.length; --c >= 0;) {
            shortcuts[shortcutChars.charAt(c)] = patternParts;
          }
        }
        var regex = patternParts[1];
        var k = '' + regex;
        if (!regexKeys.hasOwnProperty(k)) {
          allRegexs.push(regex);
          regexKeys[k] = null;
        }
      }
      allRegexs.push(/[\0-\uffff]/);
      tokenizer = combinePrefixPatterns(allRegexs);
    })();

    var nPatterns = fallthroughStylePatterns.length;

    /**
     * Lexes job.sourceCode and attaches an output array job.decorations of
     * style classes preceded by the position at which they start in
     * job.sourceCode in order.
     *
     * @type{function (JobT)}
     */
    var decorate = function (job) {
      var sourceCode = job.sourceCode, basePos = job.basePos;
      var sourceNode = job.sourceNode;
      /** Even entries are positions in source in ascending order.  Odd enties
        * are style markers (e.g., PR_COMMENT) that run from that position until
        * the end.
        * @type {DecorationsT}
        */
      var decorations = [basePos, PR_PLAIN];
      var pos = 0;  // index into sourceCode
      var tokens = sourceCode.match(tokenizer) || [];
      var styleCache = {};

      for (var ti = 0, nTokens = tokens.length; ti < nTokens; ++ti) {
        var token = tokens[ti];
        var style = styleCache[token];
        var match = void 0;

        var isEmbedded;
        if (typeof style === 'string') {
          isEmbedded = false;
        } else {
          var patternParts = shortcuts[token.charAt(0)];
          if (patternParts) {
            match = token.match(patternParts[1]);
            style = patternParts[0];
          } else {
            for (var i = 0; i < nPatterns; ++i) {
              patternParts = fallthroughStylePatterns[i];
              match = token.match(patternParts[1]);
              if (match) {
                style = patternParts[0];
                break;
              }
            }

            if (!match) {  // make sure that we make progress
              style = PR_PLAIN;
            }
          }

          isEmbedded = style.length >= 5 && 'lang-' === style.substring(0, 5);
          if (isEmbedded && !(match && typeof match[1] === 'string')) {
            isEmbedded = false;
            style = PR_SOURCE;
          }

          if (!isEmbedded) { styleCache[token] = style; }
        }

        var tokenStart = pos;
        pos += token.length;

        if (!isEmbedded) {
          decorations.push(basePos + tokenStart, style);
        } else {  // Treat group 1 as an embedded block of source code.
          var embeddedSource = match[1];
          var embeddedSourceStart = token.indexOf(embeddedSource);
          var embeddedSourceEnd = embeddedSourceStart + embeddedSource.length;
          if (match[2]) {
            // If embeddedSource can be blank, then it would match at the
            // beginning which would cause us to infinitely recurse on the
            // entire token, so we catch the right context in match[2].
            embeddedSourceEnd = token.length - match[2].length;
            embeddedSourceStart = embeddedSourceEnd - embeddedSource.length;
          }
          var lang = style.substring(5);
          // Decorate the left of the embedded source
          appendDecorations(
              sourceNode,
              basePos + tokenStart,
              token.substring(0, embeddedSourceStart),
              decorate, decorations);
          // Decorate the embedded source
          appendDecorations(
              sourceNode,
              basePos + tokenStart + embeddedSourceStart,
              embeddedSource,
              langHandlerForExtension(lang, embeddedSource),
              decorations);
          // Decorate the right of the embedded section
          appendDecorations(
              sourceNode,
              basePos + tokenStart + embeddedSourceEnd,
              token.substring(embeddedSourceEnd),
              decorate, decorations);
        }
      }
      job.decorations = decorations;
    };
    return decorate;
  }

  /** returns a function that produces a list of decorations from source text.
    *
    * This code treats ", ', and ` as string delimiters, and \ as a string
    * escape.  It does not recognize perl's qq() style strings.
    * It has no special handling for double delimiter escapes as in basic, or
    * the tripled delimiters used in python, but should work on those regardless
    * although in those cases a single string literal may be broken up into
    * multiple adjacent string literals.
    *
    * It recognizes C, C++, and shell style comments.
    *
    * @param {Object} options a set of optional parameters.
    * @return {function (JobT)} a function that examines the source code
    *     in the input job and builds a decoration list which it attaches to
    *     the job.
    */
  function sourceDecorator(options) {
    var shortcutStylePatterns = [], fallthroughStylePatterns = [];
    if (options['tripleQuotedStrings']) {
      // '''multi-line-string''', 'single-line-string', and double-quoted
      shortcutStylePatterns.push(
          [PR_STRING,  /^(?:\'\'\'(?:[^\'\\]|\\[\s\S]|\'{1,2}(?=[^\']))*(?:\'\'\'|$)|\"\"\"(?:[^\"\\]|\\[\s\S]|\"{1,2}(?=[^\"]))*(?:\"\"\"|$)|\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$))/,
           null, '\'"']);
    } else if (options['multiLineStrings']) {
      // 'multi-line-string', "multi-line-string"
      shortcutStylePatterns.push(
          [PR_STRING,  /^(?:\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$)|\`(?:[^\\\`]|\\[\s\S])*(?:\`|$))/,
           null, '\'"`']);
    } else {
      // 'single-line-string', "single-line-string"
      shortcutStylePatterns.push(
          [PR_STRING,
           /^(?:\'(?:[^\\\'\r\n]|\\.)*(?:\'|$)|\"(?:[^\\\"\r\n]|\\.)*(?:\"|$))/,
           null, '"\'']);
    }
    if (options['verbatimStrings']) {
      // verbatim-string-literal production from the C# grammar.  See issue 93.
      fallthroughStylePatterns.push(
          [PR_STRING, /^@\"(?:[^\"]|\"\")*(?:\"|$)/, null]);
    }
    var hc = options['hashComments'];
    if (hc) {
      if (options['cStyleComments']) {
        if (hc > 1) {  // multiline hash comments
          shortcutStylePatterns.push(
              [PR_COMMENT, /^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/, null, '#']);
        } else {
          // Stop C preprocessor declarations at an unclosed open comment
          shortcutStylePatterns.push(
              [PR_COMMENT, /^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\b|[^\r\n]*)/,
               null, '#']);
        }
        // #include <stdio.h>
        fallthroughStylePatterns.push(
            [PR_STRING,
             /^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h(?:h|pp|\+\+)?|[a-z]\w*)>/,
             null]);
      } else {
        shortcutStylePatterns.push([PR_COMMENT, /^#[^\r\n]*/, null, '#']);
      }
    }
    if (options['cStyleComments']) {
      fallthroughStylePatterns.push([PR_COMMENT, /^\/\/[^\r\n]*/, null]);
      fallthroughStylePatterns.push(
          [PR_COMMENT, /^\/\*[\s\S]*?(?:\*\/|$)/, null]);
    }
    var regexLiterals = options['regexLiterals'];
    if (regexLiterals) {
      /**
       * @const
       */
      var regexExcls = regexLiterals > 1
        ? ''  // Multiline regex literals
        : '\n\r';
      /**
       * @const
       */
      var regexAny = regexExcls ? '.' : '[\\S\\s]';
      /**
       * @const
       */
      var REGEX_LITERAL = (
          // A regular expression literal starts with a slash that is
          // not followed by * or / so that it is not confused with
          // comments.
          '/(?=[^/*' + regexExcls + '])'
          // and then contains any number of raw characters,
          + '(?:[^/\\x5B\\x5C' + regexExcls + ']'
          // escape sequences (\x5C),
          +    '|\\x5C' + regexAny
          // or non-nesting character sets (\x5B\x5D);
          +    '|\\x5B(?:[^\\x5C\\x5D' + regexExcls + ']'
          +             '|\\x5C' + regexAny + ')*(?:\\x5D|$))+'
          // finally closed by a /.
          + '/');
      fallthroughStylePatterns.push(
          ['lang-regex',
           RegExp('^' + REGEXP_PRECEDER_PATTERN + '(' + REGEX_LITERAL + ')')
           ]);
    }

    var types = options['types'];
    if (types) {
      fallthroughStylePatterns.push([PR_TYPE, types]);
    }

    var keywords = ("" + options['keywords']).replace(/^ | $/g, '');
    if (keywords.length) {
      fallthroughStylePatterns.push(
          [PR_KEYWORD,
           new RegExp('^(?:' + keywords.replace(/[\s,]+/g, '|') + ')\\b'),
           null]);
    }

    shortcutStylePatterns.push([PR_PLAIN,       /^\s+/, null, ' \r\n\t\xA0']);

    var punctuation =
      // The Bash man page says

      // A word is a sequence of characters considered as a single
      // unit by GRUB. Words are separated by metacharacters,
      // which are the following plus space, tab, and newline: { }
      // | & $ ; < >
      // ...

      // A word beginning with # causes that word and all remaining
      // characters on that line to be ignored.

      // which means that only a '#' after /(?:^|[{}|&$;<>\s])/ starts a
      // comment but empirically
      // $ echo {#}
      // {#}
      // $ echo \$#
      // $#
      // $ echo }#
      // }#

      // so /(?:^|[|&;<>\s])/ is more appropriate.

      // http://gcc.gnu.org/onlinedocs/gcc-2.95.3/cpp_1.html#SEC3
      // suggests that this definition is compatible with a
      // default mode that tries to use a single token definition
      // to recognize both bash/python style comments and C
      // preprocessor directives.

      // This definition of punctuation does not include # in the list of
      // follow-on exclusions, so # will not be broken before if preceeded
      // by a punctuation character.  We could try to exclude # after
      // [|&;<>] but that doesn't seem to cause many major problems.
      // If that does turn out to be a problem, we should change the below
      // when hc is truthy to include # in the run of punctuation characters
      // only when not followint [|&;<>].
      '^.[^\\s\\w.$@\'"`/\\\\]*';
    if (options['regexLiterals']) {
      punctuation += '(?!\s*\/)';
    }

    fallthroughStylePatterns.push(
        // TODO(mikesamuel): recognize non-latin letters and numerals in idents
        [PR_LITERAL,     /^@[a-z_$][a-z_$@0-9]*/i, null],
        [PR_TYPE,        /^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\w+_t\b)/, null],
        [PR_PLAIN,       /^[a-z_$][a-z_$@0-9]*/i, null],
        [PR_LITERAL,
         new RegExp(
             '^(?:'
             // A hex number
             + '0x[a-f0-9]+'
             // or an octal or decimal number,
             + '|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)'
             // possibly in scientific notation
             + '(?:e[+\\-]?\\d+)?'
             + ')'
             // with an optional modifier like UL for unsigned long
             + '[a-z]*', 'i'),
         null, '0123456789'],
        // Don't treat escaped quotes in bash as starting strings.
        // See issue 144.
        [PR_PLAIN,       /^\\[\s\S]?/, null],
        [PR_PUNCTUATION, new RegExp(punctuation), null]);

    return createSimpleLexer(shortcutStylePatterns, fallthroughStylePatterns);
  }

  var decorateSource = sourceDecorator({
        'keywords': ALL_KEYWORDS,
        'hashComments': true,
        'cStyleComments': true,
        'multiLineStrings': true,
        'regexLiterals': true
      });

  /**
   * Given a DOM subtree, wraps it in a list, and puts each line into its own
   * list item.
   *
   * @param {Node} node modified in place.  Its content is pulled into an
   *     HTMLOListElement, and each line is moved into a separate list item.
   *     This requires cloning elements, so the input might not have unique
   *     IDs after numbering.
   * @param {number|null|boolean} startLineNum
   *     If truthy, coerced to an integer which is the 1-indexed line number
   *     of the first line of code.  The number of the first line will be
   *     attached to the list.
   * @param {boolean} isPreformatted true iff white-space in text nodes should
   *     be treated as significant.
   */
  function numberLines(node, startLineNum, isPreformatted) {
    var nocode = /(?:^|\s)nocode(?:\s|$)/;
    var lineBreak = /\r\n?|\n/;
  
    var document = node.ownerDocument;
  
    var li = document.createElement('li');
    while (node.firstChild) {
      li.appendChild(node.firstChild);
    }
    // An array of lines.  We split below, so this is initialized to one
    // un-split line.
    var listItems = [li];
  
    function walk(node) {
      var type = node.nodeType;
      if (type == 1 && !nocode.test(node.className)) {  // Element
        if ('br' === node.nodeName) {
          breakAfter(node);
          // Discard the <BR> since it is now flush against a </LI>.
          if (node.parentNode) {
            node.parentNode.removeChild(node);
          }
        } else {
          for (var child = node.firstChild; child; child = child.nextSibling) {
            walk(child);
          }
        }
      } else if ((type == 3 || type == 4) && isPreformatted) {  // Text
        var text = node.nodeValue;
        var match = text.match(lineBreak);
        if (match) {
          var firstLine = text.substring(0, match.index);
          node.nodeValue = firstLine;
          var tail = text.substring(match.index + match[0].length);
          if (tail) {
            var parent = node.parentNode;
            parent.insertBefore(
              document.createTextNode(tail), node.nextSibling);
          }
          breakAfter(node);
          if (!firstLine) {
            // Don't leave blank text nodes in the DOM.
            node.parentNode.removeChild(node);
          }
        }
      }
    }
  
    // Split a line after the given node.
    function breakAfter(lineEndNode) {
      // If there's nothing to the right, then we can skip ending the line
      // here, and move root-wards since splitting just before an end-tag
      // would require us to create a bunch of empty copies.
      while (!lineEndNode.nextSibling) {
        lineEndNode = lineEndNode.parentNode;
        if (!lineEndNode) { return; }
      }
  
      function breakLeftOf(limit, copy) {
        // Clone shallowly if this node needs to be on both sides of the break.
        var rightSide = copy ? limit.cloneNode(false) : limit;
        var parent = limit.parentNode;
        if (parent) {
          // We clone the parent chain.
          // This helps us resurrect important styling elements that cross lines.
          // E.g. in <i>Foo<br>Bar</i>
          // should be rewritten to <li><i>Foo</i></li><li><i>Bar</i></li>.
          var parentClone = breakLeftOf(parent, 1);
          // Move the clone and everything to the right of the original
          // onto the cloned parent.
          var next = limit.nextSibling;
          parentClone.appendChild(rightSide);
          for (var sibling = next; sibling; sibling = next) {
            next = sibling.nextSibling;
            parentClone.appendChild(sibling);
          }
        }
        return rightSide;
      }
  
      var copiedListItem = breakLeftOf(lineEndNode.nextSibling, 0);
  
      // Walk the parent chain until we reach an unattached LI.
      for (var parent;
           // Check nodeType since IE invents document fragments.
           (parent = copiedListItem.parentNode) && parent.nodeType === 1;) {
        copiedListItem = parent;
      }
      // Put it on the list of lines for later processing.
      listItems.push(copiedListItem);
    }
  
    // Split lines while there are lines left to split.
    for (var i = 0;  // Number of lines that have been split so far.
         i < listItems.length;  // length updated by breakAfter calls.
         ++i) {
      walk(listItems[i]);
    }
  
    // Make sure numeric indices show correctly.
    if (startLineNum === (startLineNum|0)) {
      listItems[0].setAttribute('value', startLineNum);
    }
  
    var ol = document.createElement('ol');
    ol.className = 'linenums';
    var offset = Math.max(0, ((startLineNum - 1 /* zero index */)) | 0) || 0;
    for (var i = 0, n = listItems.length; i < n; ++i) {
      li = listItems[i];
      // Stick a class on the LIs so that stylesheets can
      // color odd/even rows, or any other row pattern that
      // is co-prime with 10.
      li.className = 'L' + ((i + offset) % 10);
      if (!li.firstChild) {
        li.appendChild(document.createTextNode('\xA0'));
      }
      ol.appendChild(li);
    }
  
    node.appendChild(ol);
  }

  /**
   * Breaks {@code job.sourceCode} around style boundaries in
   * {@code job.decorations} and modifies {@code job.sourceNode} in place.
   * @param {JobT} job
   * @private
   */
  function recombineTagsAndDecorations(job) {
    var isIE8OrEarlier = /\bMSIE\s(\d+)/.exec(navigator.userAgent);
    isIE8OrEarlier = isIE8OrEarlier && +isIE8OrEarlier[1] <= 8;
    var newlineRe = /\n/g;
  
    var source = job.sourceCode;
    var sourceLength = source.length;
    // Index into source after the last code-unit recombined.
    var sourceIndex = 0;
  
    var spans = job.spans;
    var nSpans = spans.length;
    // Index into spans after the last span which ends at or before sourceIndex.
    var spanIndex = 0;
  
    var decorations = job.decorations;
    var nDecorations = decorations.length;
    // Index into decorations after the last decoration which ends at or before
    // sourceIndex.
    var decorationIndex = 0;
  
    // Remove all zero-length decorations.
    decorations[nDecorations] = sourceLength;
    var decPos, i;
    for (i = decPos = 0; i < nDecorations;) {
      if (decorations[i] !== decorations[i + 2]) {
        decorations[decPos++] = decorations[i++];
        decorations[decPos++] = decorations[i++];
      } else {
        i += 2;
      }
    }
    nDecorations = decPos;
  
    // Simplify decorations.
    for (i = decPos = 0; i < nDecorations;) {
      var startPos = decorations[i];
      // Conflate all adjacent decorations that use the same style.
      var startDec = decorations[i + 1];
      var end = i + 2;
      while (end + 2 <= nDecorations && decorations[end + 1] === startDec) {
        end += 2;
      }
      decorations[decPos++] = startPos;
      decorations[decPos++] = startDec;
      i = end;
    }
  
    nDecorations = decorations.length = decPos;
  
    var sourceNode = job.sourceNode;
    var oldDisplay = "";
    if (sourceNode) {
      oldDisplay = sourceNode.style.display;
      sourceNode.style.display = 'none';
    }
    try {
      var decoration = null;
      while (spanIndex < nSpans) {
        var spanStart = spans[spanIndex];
        var spanEnd = /** @type{number} */ (spans[spanIndex + 2])
            || sourceLength;
  
        var decEnd = decorations[decorationIndex + 2] || sourceLength;
  
        var end = Math.min(spanEnd, decEnd);
  
        var textNode = /** @type{Node} */ (spans[spanIndex + 1]);
        var styledText;
        if (textNode.nodeType !== 1  // Don't muck with <BR>s or <LI>s
            // Don't introduce spans around empty text nodes.
            && (styledText = source.substring(sourceIndex, end))) {
          // This may seem bizarre, and it is.  Emitting LF on IE causes the
          // code to display with spaces instead of line breaks.
          // Emitting Windows standard issue linebreaks (CRLF) causes a blank
          // space to appear at the beginning of every line but the first.
          // Emitting an old Mac OS 9 line separator makes everything spiffy.
          if (isIE8OrEarlier) {
            styledText = styledText.replace(newlineRe, '\r');
          }
          textNode.nodeValue = styledText;
          var document = textNode.ownerDocument;
          var span = document.createElement('span');
          span.className = decorations[decorationIndex + 1];
          var parentNode = textNode.parentNode;
          parentNode.replaceChild(span, textNode);
          span.appendChild(textNode);
          if (sourceIndex < spanEnd) {  // Split off a text node.
            spans[spanIndex + 1] = textNode
                // TODO: Possibly optimize by using '' if there's no flicker.
                = document.createTextNode(source.substring(end, spanEnd));
            parentNode.insertBefore(textNode, span.nextSibling);
          }
        }
  
        sourceIndex = end;
  
        if (sourceIndex >= spanEnd) {
          spanIndex += 2;
        }
        if (sourceIndex >= decEnd) {
          decorationIndex += 2;
        }
      }
    } finally {
      if (sourceNode) {
        sourceNode.style.display = oldDisplay;
      }
    }
  }

  /** Maps language-specific file extensions to handlers. */
  var langHandlerRegistry = {};
  /** Register a language handler for the given file extensions.
    * @param {function (JobT)} handler a function from source code to a list
    *      of decorations.  Takes a single argument job which describes the
    *      state of the computation and attaches the decorations to it.
    * @param {Array.<string>} fileExtensions
    */
  function registerLangHandler(handler, fileExtensions) {
    for (var i = fileExtensions.length; --i >= 0;) {
      var ext = fileExtensions[i];
      if (!langHandlerRegistry.hasOwnProperty(ext)) {
        langHandlerRegistry[ext] = handler;
      } else if (win['console']) {
        console['warn']('cannot override language handler %s', ext);
      }
    }
  }
  function langHandlerForExtension(extension, source) {
    if (!(extension && langHandlerRegistry.hasOwnProperty(extension))) {
      // Treat it as markup if the first non whitespace character is a < and
      // the last non-whitespace character is a >.
      extension = /^\s*</.test(source)
          ? 'default-markup'
          : 'default-code';
    }
    return langHandlerRegistry[extension];
  }
  registerLangHandler(decorateSource, ['default-code']);
  registerLangHandler(
      createSimpleLexer(
          [],
          [
           [PR_PLAIN,       /^[^<?]+/],
           [PR_DECLARATION, /^<!\w[^>]*(?:>|$)/],
           [PR_COMMENT,     /^<\!--[\s\S]*?(?:-\->|$)/],
           // Unescaped content in an unknown language
           ['lang-',        /^<\?([\s\S]+?)(?:\?>|$)/],
           ['lang-',        /^<%([\s\S]+?)(?:%>|$)/],
           [PR_PUNCTUATION, /^(?:<[%?]|[%?]>)/],
           ['lang-',        /^<xmp\b[^>]*>([\s\S]+?)<\/xmp\b[^>]*>/i],
           // Unescaped content in javascript.  (Or possibly vbscript).
           ['lang-js',      /^<script\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],
           // Contains unescaped stylesheet content
           ['lang-css',     /^<style\b[^>]*>([\s\S]*?)(<\/style\b[^>]*>)/i],
           ['lang-in.tag',  /^(<\/?[a-z][^<>]*>)/i]
          ]),
      ['default-markup', 'htm', 'html', 'mxml', 'xhtml', 'xml', 'xsl']);
  registerLangHandler(
      createSimpleLexer(
          [
           [PR_PLAIN,        /^[\s]+/, null, ' \t\r\n'],
           [PR_ATTRIB_VALUE, /^(?:\"[^\"]*\"?|\'[^\']*\'?)/, null, '\"\'']
           ],
          [
           [PR_TAG,          /^^<\/?[a-z](?:[\w.:-]*\w)?|\/?>$/i],
           [PR_ATTRIB_NAME,  /^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],
           ['lang-uq.val',   /^=\s*([^>\'\"\s]*(?:[^>\'\"\s\/]|\/(?=\s)))/],
           [PR_PUNCTUATION,  /^[=<>\/]+/],
           ['lang-js',       /^on\w+\s*=\s*\"([^\"]+)\"/i],
           ['lang-js',       /^on\w+\s*=\s*\'([^\']+)\'/i],
           ['lang-js',       /^on\w+\s*=\s*([^\"\'>\s]+)/i],
           ['lang-css',      /^style\s*=\s*\"([^\"]+)\"/i],
           ['lang-css',      /^style\s*=\s*\'([^\']+)\'/i],
           ['lang-css',      /^style\s*=\s*([^\"\'>\s]+)/i]
           ]),
      ['in.tag']);
  registerLangHandler(
      createSimpleLexer([], [[PR_ATTRIB_VALUE, /^[\s\S]+/]]), ['uq.val']);
  registerLangHandler(sourceDecorator({
          'keywords': CPP_KEYWORDS,
          'hashComments': true,
          'cStyleComments': true,
          'types': C_TYPES
        }), ['c', 'cc', 'cpp', 'cxx', 'cyc', 'm']);
  registerLangHandler(sourceDecorator({
          'keywords': 'null,true,false'
        }), ['json']);
  registerLangHandler(sourceDecorator({
          'keywords': CSHARP_KEYWORDS,
          'hashComments': true,
          'cStyleComments': true,
          'verbatimStrings': true,
          'types': C_TYPES
        }), ['cs']);
  registerLangHandler(sourceDecorator({
          'keywords': JAVA_KEYWORDS,
          'cStyleComments': true
        }), ['java']);
  registerLangHandler(sourceDecorator({
          'keywords': SH_KEYWORDS,
          'hashComments': true,
          'multiLineStrings': true
        }), ['bash', 'bsh', 'csh', 'sh']);
  registerLangHandler(sourceDecorator({
          'keywords': PYTHON_KEYWORDS,
          'hashComments': true,
          'multiLineStrings': true,
          'tripleQuotedStrings': true
        }), ['cv', 'py', 'python']);
  registerLangHandler(sourceDecorator({
          'keywords': PERL_KEYWORDS,
          'hashComments': true,
          'multiLineStrings': true,
          'regexLiterals': 2  // multiline regex literals
        }), ['perl', 'pl', 'pm']);
  registerLangHandler(sourceDecorator({
          'keywords': RUBY_KEYWORDS,
          'hashComments': true,
          'multiLineStrings': true,
          'regexLiterals': true
        }), ['rb', 'ruby']);
  registerLangHandler(sourceDecorator({
          'keywords': JSCRIPT_KEYWORDS,
          'cStyleComments': true,
          'regexLiterals': true
        }), ['javascript', 'js', 'ts', 'typescript']);
  registerLangHandler(sourceDecorator({
          'keywords': COFFEE_KEYWORDS,
          'hashComments': 3,  // ### style block comments
          'cStyleComments': true,
          'multilineStrings': true,
          'tripleQuotedStrings': true,
          'regexLiterals': true
        }), ['coffee']);
  registerLangHandler(
      createSimpleLexer([], [[PR_STRING, /^[\s\S]+/]]), ['regex']);

  /** @param {JobT} job */
  function applyDecorator(job) {
    var opt_langExtension = job.langExtension;

    try {
      // Extract tags, and convert the source code to plain text.
      var sourceAndSpans = extractSourceSpans(job.sourceNode, job.pre);
      /** Plain text. @type {string} */
      var source = sourceAndSpans.sourceCode;
      job.sourceCode = source;
      job.spans = sourceAndSpans.spans;
      job.basePos = 0;

      // Apply the appropriate language handler
      langHandlerForExtension(opt_langExtension, source)(job);

      // Integrate the decorations and tags back into the source code,
      // modifying the sourceNode in place.
      recombineTagsAndDecorations(job);
    } catch (e) {
      if (win['console']) {
        console['log'](e && e['stack'] || e);
      }
    }
  }

  /**
   * Pretty print a chunk of code.
   * @param sourceCodeHtml {string} The HTML to pretty print.
   * @param opt_langExtension {string} The language name to use.
   *     Typically, a filename extension like 'cpp' or 'java'.
   * @param opt_numberLines {number|boolean} True to number lines,
   *     or the 1-indexed number of the first line in sourceCodeHtml.
   */
  function $prettyPrintOne(sourceCodeHtml, opt_langExtension, opt_numberLines) {
    /** @type{number|boolean} */
    var nl = opt_numberLines || false;
    /** @type{string|null} */
    var langExtension = opt_langExtension || null;
    /** @type{!Element} */
    var container = document.createElement('div');
    // This could cause images to load and onload listeners to fire.
    // E.g. <img onerror="alert(1337)" src="nosuchimage.png">.
    // We assume that the inner HTML is from a trusted source.
    // The pre-tag is required for IE8 which strips newlines from innerHTML
    // when it is injected into a <pre> tag.
    // http://stackoverflow.com/questions/451486/pre-tag-loses-line-breaks-when-setting-innerhtml-in-ie
    // http://stackoverflow.com/questions/195363/inserting-a-newline-into-a-pre-tag-ie-javascript
    container.innerHTML = '<pre>' + sourceCodeHtml + '</pre>';
    container = /** @type{!Element} */(container.firstChild);
    if (nl) {
      numberLines(container, nl, true);
    }

    /** @type{JobT} */
    var job = {
      langExtension: langExtension,
      numberLines: nl,
      sourceNode: container,
      pre: 1,
      sourceCode: null,
      basePos: null,
      spans: null,
      decorations: null
    };
    applyDecorator(job);
    return container.innerHTML;
  }

   /**
    * Find all the {@code <pre>} and {@code <code>} tags in the DOM with
    * {@code class=prettyprint} and prettify them.
    *
    * @param {Function} opt_whenDone called when prettifying is done.
    * @param {HTMLElement|HTMLDocument} opt_root an element or document
    *   containing all the elements to pretty print.
    *   Defaults to {@code document.body}.
    */
  function $prettyPrint(opt_whenDone, opt_root) {
    var root = opt_root || document.body;
    var doc = root.ownerDocument || document;
    function byTagName(tn) { return root.getElementsByTagName(tn); }
    // fetch a list of nodes to rewrite
    var codeSegments = [byTagName('pre'), byTagName('code'), byTagName('xmp')];
    var elements = [];
    for (var i = 0; i < codeSegments.length; ++i) {
      for (var j = 0, n = codeSegments[i].length; j < n; ++j) {
        elements.push(codeSegments[i][j]);
      }
    }
    codeSegments = null;

    var clock = Date;
    if (!clock['now']) {
      clock = { 'now': function () { return +(new Date); } };
    }

    // The loop is broken into a series of continuations to make sure that we
    // don't make the browser unresponsive when rewriting a large page.
    var k = 0;

    var langExtensionRe = /\blang(?:uage)?-([\w.]+)(?!\S)/;
    var prettyPrintRe = /\bprettyprint\b/;
    var prettyPrintedRe = /\bprettyprinted\b/;
    var preformattedTagNameRe = /pre|xmp/i;
    var codeRe = /^code$/i;
    var preCodeXmpRe = /^(?:pre|code|xmp)$/i;
    var EMPTY = {};

    function doWork() {
      var endTime = (win['PR_SHOULD_USE_CONTINUATION'] ?
                     clock['now']() + 250 /* ms */ :
                     Infinity);
      for (; k < elements.length && clock['now']() < endTime; k++) {
        var cs = elements[k];

        // Look for a preceding comment like
        // <?prettify lang="..." linenums="..."?>
        var attrs = EMPTY;
        {
          for (var preceder = cs; (preceder = preceder.previousSibling);) {
            var nt = preceder.nodeType;
            // <?foo?> is parsed by HTML 5 to a comment node (8)
            // like <!--?foo?-->, but in XML is a processing instruction
            var value = (nt === 7 || nt === 8) && preceder.nodeValue;
            if (value
                ? !/^\??prettify\b/.test(value)
                : (nt !== 3 || /\S/.test(preceder.nodeValue))) {
              // Skip over white-space text nodes but not others.
              break;
            }
            if (value) {
              attrs = {};
              value.replace(
                  /\b(\w+)=([\w:.%+-]+)/g,
                function (_, name, value) { attrs[name] = value; });
              break;
            }
          }
        }

        var className = cs.className;
        if ((attrs !== EMPTY || prettyPrintRe.test(className))
            // Don't redo this if we've already done it.
            // This allows recalling pretty print to just prettyprint elements
            // that have been added to the page since last call.
            && !prettyPrintedRe.test(className)) {

          // make sure this is not nested in an already prettified element
          var nested = false;
          for (var p = cs.parentNode; p; p = p.parentNode) {
            var tn = p.tagName;
            if (preCodeXmpRe.test(tn)
                && p.className && prettyPrintRe.test(p.className)) {
              nested = true;
              break;
            }
          }
          if (!nested) {
            // Mark done.  If we fail to prettyprint for whatever reason,
            // we shouldn't try again.
            cs.className += ' prettyprinted';

            // If the classes includes a language extensions, use it.
            // Language extensions can be specified like
            //     <pre class="prettyprint lang-cpp">
            // the language extension "cpp" is used to find a language handler
            // as passed to PR.registerLangHandler.
            // HTML5 recommends that a language be specified using "language-"
            // as the prefix instead.  Google Code Prettify supports both.
            // http://dev.w3.org/html5/spec-author-view/the-code-element.html
            var langExtension = attrs['lang'];
            if (!langExtension) {
              langExtension = className.match(langExtensionRe);
              // Support <pre class="prettyprint"><code class="language-c">
              var wrapper;
              if (!langExtension && (wrapper = childContentWrapper(cs))
                  && codeRe.test(wrapper.tagName)) {
                langExtension = wrapper.className.match(langExtensionRe);
              }

              if (langExtension) { langExtension = langExtension[1]; }
            }

            var preformatted;
            if (preformattedTagNameRe.test(cs.tagName)) {
              preformatted = 1;
            } else {
              var currentStyle = cs['currentStyle'];
              var defaultView = doc.defaultView;
              var whitespace = (
                  currentStyle
                  ? currentStyle['whiteSpace']
                  : (defaultView
                     && defaultView.getComputedStyle)
                  ? defaultView.getComputedStyle(cs, null)
                  .getPropertyValue('white-space')
                  : 0);
              preformatted = whitespace
                  && 'pre' === whitespace.substring(0, 3);
            }

            // Look for a class like linenums or linenums:<n> where <n> is the
            // 1-indexed number of the first line.
            var lineNums = attrs['linenums'];
            if (!(lineNums = lineNums === 'true' || +lineNums)) {
              lineNums = className.match(/\blinenums\b(?::(\d+))?/);
              lineNums =
                lineNums
                ? lineNums[1] && lineNums[1].length
                  ? +lineNums[1] : true
                : false;
            }
            if (lineNums) { numberLines(cs, lineNums, preformatted); }

            // do the pretty printing
            var prettyPrintingJob = {
              langExtension: langExtension,
              sourceNode: cs,
              numberLines: lineNums,
              pre: preformatted,
              sourceCode: null,
              basePos: null,
              spans: null,
              decorations: null
            };
            applyDecorator(prettyPrintingJob);
          }
        }
      }
      if (k < elements.length) {
        // finish up in a continuation
        win.setTimeout(doWork, 250);
      } else if ('function' === typeof opt_whenDone) {
        opt_whenDone();
      }
    }

    doWork();
  }

  /**
   * Contains functions for creating and registering new language handlers.
   * @type {Object}
   */
  var PR = win['PR'] = {
        'createSimpleLexer': createSimpleLexer,
        'registerLangHandler': registerLangHandler,
        'sourceDecorator': sourceDecorator,
        'PR_ATTRIB_NAME': PR_ATTRIB_NAME,
        'PR_ATTRIB_VALUE': PR_ATTRIB_VALUE,
        'PR_COMMENT': PR_COMMENT,
        'PR_DECLARATION': PR_DECLARATION,
        'PR_KEYWORD': PR_KEYWORD,
        'PR_LITERAL': PR_LITERAL,
        'PR_NOCODE': PR_NOCODE,
        'PR_PLAIN': PR_PLAIN,
        'PR_PUNCTUATION': PR_PUNCTUATION,
        'PR_SOURCE': PR_SOURCE,
        'PR_STRING': PR_STRING,
        'PR_TAG': PR_TAG,
        'PR_TYPE': PR_TYPE,
        'prettyPrintOne':
           IN_GLOBAL_SCOPE
             ? (win['prettyPrintOne'] = $prettyPrintOne)
             : (prettyPrintOne = $prettyPrintOne),
        'prettyPrint': prettyPrint =
           IN_GLOBAL_SCOPE
             ? (win['prettyPrint'] = $prettyPrint)
             : (prettyPrint = $prettyPrint)
      };

  // Make PR available via the Asynchronous Module Definition (AMD) API.
  // Per https://github.com/amdjs/amdjs-api/wiki/AMD:
  // The Asynchronous Module Definition (AMD) API specifies a
  // mechanism for defining modules such that the module and its
  // dependencies can be asynchronously loaded.
  // ...
  // To allow a clear indicator that a global define function (as
  // needed for script src browser loading) conforms to the AMD API,
  // any global define function SHOULD have a property called "amd"
  // whose value is an object. This helps avoid conflict with any
  // other existing JavaScript code that could have defined a define()
  // function that does not conform to the AMD API.
  var define = win['define'];
  if (typeof define === "function" && define['amd']) {
    define("google-code-prettify", [], function () {
      return PR;
    });
  }
})();


/***/ }),
/* 178 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 179 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 180 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 181 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 182 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function($) {

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _Index = __webpack_require__(184);

var _reactRouterDom = __webpack_require__(55);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(15);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _package = __webpack_require__(246);

var _package2 = _interopRequireDefault(_package);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

docPrettyPrint.$inject = []; /* eslint-disable */
/* global _, PR */

function docPrettyPrint() {
    return {
        restrict: 'C',
        link: function link(scope, element, attrs) {
            // Remove leading whitespaces
            var str = element[0].innerHTML;
            var pos = 0;
            var sum = 0;
            while (str.charCodeAt(pos) === 32) {
                sum = sum + 1;
                pos = pos + 1;
            }
            var pattern = '\\s{' + sum + '}';
            var spaces = new RegExp(pattern, 'g');
            element[0].innerHTML = str.replace(spaces, '\n');

            // Remove ng-non-bindable from code
            element.find('[ng-non-bindable=""]').each(function (i, val) {
                $(val).removeAttr('ng-non-bindable');
            });

            var langExtension = attrs['class'].match(/\blang(?:uage)?-([\w.]+)(?!\S)/);
            if (langExtension) {
                langExtension = langExtension[1];
            }

            element.html(PR.prettyPrintOne(_.escape(element.html()), langExtension, true));
        }
    };
}

docPlayground.$inject = ['components', 'design', 'playgrounds', '$route'];
function docPlayground(components, design, playgrounds, $route) {
    return {
        link: function link(scope) {
            scope.version = _package2.default.version;
            scope.components = components;
            scope.design = design;
            scope.playgrounds = playgrounds;

            scope.page = $route.current.params.name;

            scope.items = [{ name: 'just' }, { name: 'some' }, { name: 'cool' }, { name: 'tags' }];

            scope.freeItems = ['Audi', 'BMW', 'Opel', 'Hyundai'];

            scope.console = function () {
                var _console;

                (_console = console).log.apply(_console, arguments);
            };
        }
    };
}

docTabs.$inject = [];
function docTabs() {
    return {
        link: function link(scope, elem, attr, ctrl) {
            elem.find('.docs-page__window-bar').children('a').click(function (e) {
                e.preventDefault();
                $(this).addClass('active').siblings().removeClass('active');

                elem.find('.docs-page__code-' + $(this).attr('id')).show().siblings().hide();
            });
        }
    };
}

docNav.$inject = ['components', '$rootScope'];
function docNav(components, $rootScope) {
    return {
        link: function link(scope, elem, attr, ctrl) {
            scope.isActive = function (route) {
                return $rootScope.$route.current && $rootScope.$route.current.params.name === route;
            };
        }
    };
}

docModal.$inject = ['$modal'];
function docModal($modal) {
    return {
        link: function link(scope) {
            scope.modalActive = false;

            scope.openModal = function (obj) {
                scope[obj] = true;
            };

            scope.closeModal = function (obj) {
                scope[obj] = false;
            };

            var modal;

            scope.openTemplateModal = function () {
                modal = $modal.open({
                    template: __webpack_require__(247),
                    controller: docModalController,
                    size: 'large'
                });
            };

            scope.close = function () {
                modal.close('cancel');
            };

            function docModalController($scope) {
                $scope.data = 'Element binded inside controller';
            }

            scope.openCarousel = function () {
                scope.carouselActive = true;
            };

            scope.hideCarousel = function () {
                scope.carouselActive = false;
            };
        }
    };
}

docReact.$inject = [];
function docReact() {
    return {
        link: function link(scope, elem) {
            _reactDom2.default.render(_react2.default.createElement(
                _reactRouterDom.HashRouter,
                null,
                _react2.default.createElement(_Index.ReactDoc, null)
            ), elem[0]);
        }
    };
}

docReactPlayground.$inject = ['playgrounds'];
function docReactPlayground(playgrounds) {
    return {
        link: function link(scope, elem) {
            _reactDom2.default.render(_react2.default.createElement(
                _reactRouterDom.HashRouter,
                null,
                _react2.default.createElement(_Index.ReactPlayground, { playgrounds: playgrounds.react })
            ), elem[0]);
        }
    };
}

docGifImg.$inject = [];
function docGifImg() {
    return {
        scope: {
            src: '@'
        },
        template: '<img src="{{activeImage}}" ng-click="playGif()" />',
        link: function link(scope) {
            scope.image = scope.src.replace('.gif', '.png');
            scope.animation = scope.src;

            // Default settings
            scope.played = false;
            scope.activeImage = scope.image;

            scope.playGif = function () {
                if (scope.played) {
                    scope.activeImage = scope.image;
                    scope.played = false;
                } else {
                    scope.activeImage = scope.animation;
                    scope.played = true;
                }
            };
        }
    };
}

exports.default = angular.module('ui-docs.directives', []).directive('prettyprint', docPrettyPrint).directive('docPlayground', docPlayground).directive('docTabs', docTabs).directive('docNav', docNav).directive('docModal', docModal).directive('docReact', docReact).directive('docReactPlayground', docReactPlayground).directive('docGifImg', docGifImg);
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20)))

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReactPlayground = exports.ReactDoc = void 0;
var React = __importStar(__webpack_require__(0));
var react_1 = __webpack_require__(4);
var react_router_dom_1 = __webpack_require__(55);
var Inputs_1 = __importDefault(__webpack_require__(196));
var Selects_1 = __importDefault(__webpack_require__(197));
var Buttons_1 = __importDefault(__webpack_require__(198));
var Labels_1 = __importDefault(__webpack_require__(216));
var ButtonGroups_1 = __importDefault(__webpack_require__(217));
var Badges_1 = __importDefault(__webpack_require__(218));
var Alerts_1 = __importDefault(__webpack_require__(219));
var Avatar_1 = __importDefault(__webpack_require__(220));
var IconButtons_1 = __importDefault(__webpack_require__(221));
var IconLabels_1 = __importDefault(__webpack_require__(222));
var Tooltips_1 = __importDefault(__webpack_require__(223));
var DatePicker_1 = __importDefault(__webpack_require__(224));
var Switch_1 = __importDefault(__webpack_require__(225));
var Radios_1 = __importDefault(__webpack_require__(226));
var Checkboxs_1 = __importDefault(__webpack_require__(227));
var Tabs_1 = __importDefault(__webpack_require__(228));
var LeftNavigations_1 = __importDefault(__webpack_require__(229));
var NavButtons_1 = __importDefault(__webpack_require__(230));
var IconFont_1 = __importDefault(__webpack_require__(231));
var BigIconFont_1 = __importDefault(__webpack_require__(233));
var SubNav_1 = __importDefault(__webpack_require__(235));
var Dropdowns_1 = __importDefault(__webpack_require__(236));
var Toasts_1 = __importDefault(__webpack_require__(237));
var Tags_1 = __importDefault(__webpack_require__(242));
var Playgrounds = __importStar(__webpack_require__(243));
var pages = {
    basicComponents: {
        name: 'Basic Components',
        items: {
            'buttons': {
                name: 'Buttons',
            },
            'icon-buttons': {
                name: 'Icon Buttons'
            },
            'button-groups': {
                name: 'Button Group & Divider'
            },
            'labels': {
                name: 'Labels',
            },
            'icon-labels': {
                name: 'Icon Labels'
            },
            'badges': {
                name: 'Badges',
            },
            'alerts': {
                name: 'Alerts'
            },
            'avatar': {
                name: 'Avatar',
            },
            'tooltips': {
                name: 'Tooltips'
            },
            'tags': {
                name: 'Tags'
            },
            'dropdowns': {
                name: 'Dropdowns'
            },
            'nav-buttons': {
                name: 'Nav buttons'
            },
            'toast': {
                name: 'Toasts'
            }
        }
    },
    navigationComponents: {
        name: "Navigation",
        items: {
            'tab': {
                name: 'Tabs'
            },
            'left-navigation': {
                name: 'Left navigation'
            },
            'sub-navigation': {
                name: 'Sub navigation bar'
            },
        }
    },
    formComponents: {
        name: "Form Components",
        items: {
            'inputs': {
                name: 'Inputs',
            },
            'select': {
                name: 'Select',
            },
            'date-picker': {
                name: 'Date Picker',
            },
            'switch': {
                name: 'Switch'
            },
            'radio': {
                name: 'Radio'
            },
            'checkbox': {
                name: 'Checkbox'
            }
        }
    },
    generalComponents: {
        name: "General",
        items: {
            'icon-font': {
                name: 'Icon font',
            },
            'big-icon-font': {
                name: 'Big icon font'
            }
        }
    }
};
var ReactDoc = /** @class */ (function (_super) {
    __extends(ReactDoc, _super);
    function ReactDoc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ReactDoc.prototype.render = function () {
        return (React.createElement(React.Fragment, null,
            React.createElement(react_1.ReactNav, { pages: pages }),
            React.createElement("main", { className: "docs-page__content docs-page__container-fluid" },
                React.createElement(react_router_dom_1.Switch, null,
                    React.createElement(react_router_dom_1.Route, { path: "/react/buttons", component: Buttons_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/icon-buttons", component: IconButtons_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/button-groups", component: ButtonGroups_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/labels", component: Labels_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/icon-labels", component: IconLabels_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/badges", component: Badges_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/alerts", component: Alerts_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/avatar", component: Avatar_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/tooltips", component: Tooltips_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/tags", component: Tags_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/inputs", component: Inputs_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/select", component: Selects_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/date-picker", component: DatePicker_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/switch", component: Switch_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/radio", component: Radios_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/checkbox", component: Checkboxs_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/tab", component: Tabs_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/left-navigation", component: LeftNavigations_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/nav-buttons", component: NavButtons_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/icon-font", component: IconFont_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/big-icon-font", component: BigIconFont_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/sub-navigation", component: SubNav_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/dropdowns", component: Dropdowns_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/react/toast", component: Toasts_1.default }),
                    React.createElement(react_router_dom_1.Route, { path: "/", component: react_1.ReactDefault })))));
    };
    return ReactDoc;
}(React.Component));
exports.ReactDoc = ReactDoc;
var ReactPlayground = /** @class */ (function (_super) {
    __extends(ReactPlayground, _super);
    function ReactPlayground() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ReactPlayground.prototype.render = function () {
        var _this = this;
        return (React.createElement(react_router_dom_1.Switch, null,
            React.createElement(react_router_dom_1.Route, { path: "/playgrounds/react/:id", render: function (props) { return parsePlayground(props, _this.props.playgrounds); } })));
    };
    return ReactPlayground;
}(React.Component));
exports.ReactPlayground = ReactPlayground;
var parsePlayground = function (_a, playgrounds) {
    var match = _a.match;
    var Component = Playgrounds[playgrounds[match.params.id].component];
    return (React.createElement(Component, null));
};


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {
/* **********************************************
     Begin prism-core.js
********************************************** */

/// <reference lib="WebWorker"/>

var _self = (typeof window !== 'undefined')
	? window   // if in browser
	: (
		(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)
		? self // if in worker
		: {}   // if in node js
	);

/**
 * Prism: Lightweight, robust, elegant syntax highlighting
 *
 * @license MIT <https://opensource.org/licenses/MIT>
 * @author Lea Verou <https://lea.verou.me>
 * @namespace
 * @public
 */
var Prism = (function (_self){

// Private helper vars
var lang = /\blang(?:uage)?-([\w-]+)\b/i;
var uniqueId = 0;


var _ = {
	/**
	 * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the
	 * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load
	 * additional languages or plugins yourself.
	 *
	 * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.
	 *
	 * You obviously have to change this value before the automatic highlighting started. To do this, you can add an
	 * empty Prism object into the global scope before loading the Prism script like this:
	 *
	 * ```js
	 * window.Prism = window.Prism || {};
	 * Prism.manual = true;
	 * // add a new <script> to load Prism's script
	 * ```
	 *
	 * @default false
	 * @type {boolean}
	 * @memberof Prism
	 * @public
	 */
	manual: _self.Prism && _self.Prism.manual,
	disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,

	/**
	 * A namespace for utility methods.
	 *
	 * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may
	 * change or disappear at any time.
	 *
	 * @namespace
	 * @memberof Prism
	 */
	util: {
		encode: function encode(tokens) {
			if (tokens instanceof Token) {
				return new Token(tokens.type, encode(tokens.content), tokens.alias);
			} else if (Array.isArray(tokens)) {
				return tokens.map(encode);
			} else {
				return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\u00a0/g, ' ');
			}
		},

		/**
		 * Returns the name of the type of the given value.
		 *
		 * @param {any} o
		 * @returns {string}
		 * @example
		 * type(null)      === 'Null'
		 * type(undefined) === 'Undefined'
		 * type(123)       === 'Number'
		 * type('foo')     === 'String'
		 * type(true)      === 'Boolean'
		 * type([1, 2])    === 'Array'
		 * type({})        === 'Object'
		 * type(String)    === 'Function'
		 * type(/abc+/)    === 'RegExp'
		 */
		type: function (o) {
			return Object.prototype.toString.call(o).slice(8, -1);
		},

		/**
		 * Returns a unique number for the given object. Later calls will still return the same number.
		 *
		 * @param {Object} obj
		 * @returns {number}
		 */
		objId: function (obj) {
			if (!obj['__id']) {
				Object.defineProperty(obj, '__id', { value: ++uniqueId });
			}
			return obj['__id'];
		},

		/**
		 * Creates a deep clone of the given object.
		 *
		 * The main intended use of this function is to clone language definitions.
		 *
		 * @param {T} o
		 * @param {Record<number, any>} [visited]
		 * @returns {T}
		 * @template T
		 */
		clone: function deepClone(o, visited) {
			visited = visited || {};

			var clone, id;
			switch (_.util.type(o)) {
				case 'Object':
					id = _.util.objId(o);
					if (visited[id]) {
						return visited[id];
					}
					clone = /** @type {Record<string, any>} */ ({});
					visited[id] = clone;

					for (var key in o) {
						if (o.hasOwnProperty(key)) {
							clone[key] = deepClone(o[key], visited);
						}
					}

					return /** @type {any} */ (clone);

				case 'Array':
					id = _.util.objId(o);
					if (visited[id]) {
						return visited[id];
					}
					clone = [];
					visited[id] = clone;

					(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {
						clone[i] = deepClone(v, visited);
					});

					return /** @type {any} */ (clone);

				default:
					return o;
			}
		},

		/**
		 * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.
		 *
		 * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.
		 *
		 * @param {Element} element
		 * @returns {string}
		 */
		getLanguage: function (element) {
			while (element && !lang.test(element.className)) {
				element = element.parentElement;
			}
			if (element) {
				return (element.className.match(lang) || [, 'none'])[1].toLowerCase();
			}
			return 'none';
		},

		/**
		 * Returns the script element that is currently executing.
		 *
		 * This does __not__ work for line script element.
		 *
		 * @returns {HTMLScriptElement | null}
		 */
		currentScript: function () {
			if (typeof document === 'undefined') {
				return null;
			}
			if ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {
				return /** @type {any} */ (document.currentScript);
			}

			// IE11 workaround
			// we'll get the src of the current script by parsing IE11's error stack trace
			// this will not work for inline scripts

			try {
				throw new Error();
			} catch (err) {
				// Get file src url from stack. Specifically works with the format of stack traces in IE.
				// A stack will look like this:
				//
				// Error
				//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)
				//    at Global code (http://localhost/components/prism-core.js:606:1)

				var src = (/at [^(\r\n]*\((.*):.+:.+\)$/i.exec(err.stack) || [])[1];
				if (src) {
					var scripts = document.getElementsByTagName('script');
					for (var i in scripts) {
						if (scripts[i].src == src) {
							return scripts[i];
						}
					}
				}
				return null;
			}
		},

		/**
		 * Returns whether a given class is active for `element`.
		 *
		 * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated
		 * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the
		 * given class is just the given class with a `no-` prefix.
		 *
		 * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is
		 * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its
		 * ancestors have the given class or the negated version of it, then the default activation will be returned.
		 *
		 * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated
		 * version of it, the class is considered active.
		 *
		 * @param {Element} element
		 * @param {string} className
		 * @param {boolean} [defaultActivation=false]
		 * @returns {boolean}
		 */
		isActive: function (element, className, defaultActivation) {
			var no = 'no-' + className;

			while (element) {
				var classList = element.classList;
				if (classList.contains(className)) {
					return true;
				}
				if (classList.contains(no)) {
					return false;
				}
				element = element.parentElement;
			}
			return !!defaultActivation;
		}
	},

	/**
	 * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.
	 *
	 * @namespace
	 * @memberof Prism
	 * @public
	 */
	languages: {
		/**
		 * Creates a deep copy of the language with the given id and appends the given tokens.
		 *
		 * If a token in `redef` also appears in the copied language, then the existing token in the copied language
		 * will be overwritten at its original position.
		 *
		 * ## Best practices
		 *
		 * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)
		 * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to
		 * understand the language definition because, normally, the order of tokens matters in Prism grammars.
		 *
		 * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.
		 * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.
		 *
		 * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.
		 * @param {Grammar} redef The new tokens to append.
		 * @returns {Grammar} The new language created.
		 * @public
		 * @example
		 * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {
		 *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token
		 *     // at its original position
		 *     'comment': { ... },
		 *     // CSS doesn't have a 'color' token, so this token will be appended
		 *     'color': /\b(?:red|green|blue)\b/
		 * });
		 */
		extend: function (id, redef) {
			var lang = _.util.clone(_.languages[id]);

			for (var key in redef) {
				lang[key] = redef[key];
			}

			return lang;
		},

		/**
		 * Inserts tokens _before_ another token in a language definition or any other grammar.
		 *
		 * ## Usage
		 *
		 * This helper method makes it easy to modify existing languages. For example, the CSS language definition
		 * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded
		 * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the
		 * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do
		 * this:
		 *
		 * ```js
		 * Prism.languages.markup.style = {
		 *     // token
		 * };
		 * ```
		 *
		 * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens
		 * before existing tokens. For the CSS example above, you would use it like this:
		 *
		 * ```js
		 * Prism.languages.insertBefore('markup', 'cdata', {
		 *     'style': {
		 *         // token
		 *     }
		 * });
		 * ```
		 *
		 * ## Special cases
		 *
		 * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar
		 * will be ignored.
		 *
		 * This behavior can be used to insert tokens after `before`:
		 *
		 * ```js
		 * Prism.languages.insertBefore('markup', 'comment', {
		 *     'comment': Prism.languages.markup.comment,
		 *     // tokens after 'comment'
		 * });
		 * ```
		 *
		 * ## Limitations
		 *
		 * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object
		 * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave
		 * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily
		 * deleting properties which is necessary to insert at arbitrary positions.
		 *
		 * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.
		 * Instead, it will create a new object and replace all references to the target object with the new one. This
		 * can be done without temporarily deleting properties, so the iteration order is well-defined.
		 *
		 * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if
		 * you hold the target object in a variable, then the value of the variable will not change.
		 *
		 * ```js
		 * var oldMarkup = Prism.languages.markup;
		 * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });
		 *
		 * assert(oldMarkup !== Prism.languages.markup);
		 * assert(newMarkup === Prism.languages.markup);
		 * ```
		 *
		 * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the
		 * object to be modified.
		 * @param {string} before The key to insert before.
		 * @param {Grammar} insert An object containing the key-value pairs to be inserted.
		 * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the
		 * object to be modified.
		 *
		 * Defaults to `Prism.languages`.
		 * @returns {Grammar} The new grammar object.
		 * @public
		 */
		insertBefore: function (inside, before, insert, root) {
			root = root || /** @type {any} */ (_.languages);
			var grammar = root[inside];
			/** @type {Grammar} */
			var ret = {};

			for (var token in grammar) {
				if (grammar.hasOwnProperty(token)) {

					if (token == before) {
						for (var newToken in insert) {
							if (insert.hasOwnProperty(newToken)) {
								ret[newToken] = insert[newToken];
							}
						}
					}

					// Do not insert token which also occur in insert. See #1525
					if (!insert.hasOwnProperty(token)) {
						ret[token] = grammar[token];
					}
				}
			}

			var old = root[inside];
			root[inside] = ret;

			// Update references in other language definitions
			_.languages.DFS(_.languages, function(key, value) {
				if (value === old && key != inside) {
					this[key] = ret;
				}
			});

			return ret;
		},

		// Traverse a language definition with Depth First Search
		DFS: function DFS(o, callback, type, visited) {
			visited = visited || {};

			var objId = _.util.objId;

			for (var i in o) {
				if (o.hasOwnProperty(i)) {
					callback.call(o, i, o[i], type || i);

					var property = o[i],
					    propertyType = _.util.type(property);

					if (propertyType === 'Object' && !visited[objId(property)]) {
						visited[objId(property)] = true;
						DFS(property, callback, null, visited);
					}
					else if (propertyType === 'Array' && !visited[objId(property)]) {
						visited[objId(property)] = true;
						DFS(property, callback, i, visited);
					}
				}
			}
		}
	},

	plugins: {},

	/**
	 * This is the most high-level function in Prism’s API.
	 * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on
	 * each one of them.
	 *
	 * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.
	 *
	 * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.
	 * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.
	 * @memberof Prism
	 * @public
	 */
	highlightAll: function(async, callback) {
		_.highlightAllUnder(document, async, callback);
	},

	/**
	 * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls
	 * {@link Prism.highlightElement} on each one of them.
	 *
	 * The following hooks will be run:
	 * 1. `before-highlightall`
	 * 2. All hooks of {@link Prism.highlightElement} for each element.
	 *
	 * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.
	 * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.
	 * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.
	 * @memberof Prism
	 * @public
	 */
	highlightAllUnder: function(container, async, callback) {
		var env = {
			callback: callback,
			container: container,
			selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'
		};

		_.hooks.run('before-highlightall', env);

		env.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));

		_.hooks.run('before-all-elements-highlight', env);

		for (var i = 0, element; element = env.elements[i++];) {
			_.highlightElement(element, async === true, env.callback);
		}
	},

	/**
	 * Highlights the code inside a single element.
	 *
	 * The following hooks will be run:
	 * 1. `before-sanity-check`
	 * 2. `before-highlight`
	 * 3. All hooks of {@link Prism.highlight}. These hooks will only be run by the current worker if `async` is `true`.
	 * 4. `before-insert`
	 * 5. `after-highlight`
	 * 6. `complete`
	 *
	 * @param {Element} element The element containing the code.
	 * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.
	 * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers
	 * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is
	 * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).
	 *
	 * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for
	 * asynchronous highlighting to work. You can build your own bundle on the
	 * [Download page](https://prismjs.com/download.html).
	 * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.
	 * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.
	 * @memberof Prism
	 * @public
	 */
	highlightElement: function(element, async, callback) {
		// Find language
		var language = _.util.getLanguage(element);
		var grammar = _.languages[language];

		// Set language on the element, if not present
		element.className = element.className.replace(lang, '').replace(/\s+/g, ' ') + ' language-' + language;

		// Set language on the parent, for styling
		var parent = element.parentElement;
		if (parent && parent.nodeName.toLowerCase() === 'pre') {
			parent.className = parent.className.replace(lang, '').replace(/\s+/g, ' ') + ' language-' + language;
		}

		var code = element.textContent;

		var env = {
			element: element,
			language: language,
			grammar: grammar,
			code: code
		};

		function insertHighlightedCode(highlightedCode) {
			env.highlightedCode = highlightedCode;

			_.hooks.run('before-insert', env);

			env.element.innerHTML = env.highlightedCode;

			_.hooks.run('after-highlight', env);
			_.hooks.run('complete', env);
			callback && callback.call(env.element);
		}

		_.hooks.run('before-sanity-check', env);

		if (!env.code) {
			_.hooks.run('complete', env);
			callback && callback.call(env.element);
			return;
		}

		_.hooks.run('before-highlight', env);

		if (!env.grammar) {
			insertHighlightedCode(_.util.encode(env.code));
			return;
		}

		if (async && _self.Worker) {
			var worker = new Worker(_.filename);

			worker.onmessage = function(evt) {
				insertHighlightedCode(evt.data);
			};

			worker.postMessage(JSON.stringify({
				language: env.language,
				code: env.code,
				immediateClose: true
			}));
		}
		else {
			insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));
		}
	},

	/**
	 * Low-level function, only use if you know what you’re doing. It accepts a string of text as input
	 * and the language definitions to use, and returns a string with the HTML produced.
	 *
	 * The following hooks will be run:
	 * 1. `before-tokenize`
	 * 2. `after-tokenize`
	 * 3. `wrap`: On each {@link Token}.
	 *
	 * @param {string} text A string with the code to be highlighted.
	 * @param {Grammar} grammar An object containing the tokens to use.
	 *
	 * Usually a language definition like `Prism.languages.markup`.
	 * @param {string} language The name of the language definition passed to `grammar`.
	 * @returns {string} The highlighted HTML.
	 * @memberof Prism
	 * @public
	 * @example
	 * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');
	 */
	highlight: function (text, grammar, language) {
		var env = {
			code: text,
			grammar: grammar,
			language: language
		};
		_.hooks.run('before-tokenize', env);
		env.tokens = _.tokenize(env.code, env.grammar);
		_.hooks.run('after-tokenize', env);
		return Token.stringify(_.util.encode(env.tokens), env.language);
	},

	/**
	 * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input
	 * and the language definitions to use, and returns an array with the tokenized code.
	 *
	 * When the language definition includes nested tokens, the function is called recursively on each of these tokens.
	 *
	 * This method could be useful in other contexts as well, as a very crude parser.
	 *
	 * @param {string} text A string with the code to be highlighted.
	 * @param {Grammar} grammar An object containing the tokens to use.
	 *
	 * Usually a language definition like `Prism.languages.markup`.
	 * @returns {TokenStream} An array of strings and tokens, a token stream.
	 * @memberof Prism
	 * @public
	 * @example
	 * let code = `var foo = 0;`;
	 * let tokens = Prism.tokenize(code, Prism.languages.javascript);
	 * tokens.forEach(token => {
	 *     if (token instanceof Prism.Token && token.type === 'number') {
	 *         console.log(`Found numeric literal: ${token.content}`);
	 *     }
	 * });
	 */
	tokenize: function(text, grammar) {
		var rest = grammar.rest;
		if (rest) {
			for (var token in rest) {
				grammar[token] = rest[token];
			}

			delete grammar.rest;
		}

		var tokenList = new LinkedList();
		addAfter(tokenList, tokenList.head, text);

		matchGrammar(text, tokenList, grammar, tokenList.head, 0);

		return toArray(tokenList);
	},

	/**
	 * @namespace
	 * @memberof Prism
	 * @public
	 */
	hooks: {
		all: {},

		/**
		 * Adds the given callback to the list of callbacks for the given hook.
		 *
		 * The callback will be invoked when the hook it is registered for is run.
		 * Hooks are usually directly run by a highlight function but you can also run hooks yourself.
		 *
		 * One callback function can be registered to multiple hooks and the same hook multiple times.
		 *
		 * @param {string} name The name of the hook.
		 * @param {HookCallback} callback The callback function which is given environment variables.
		 * @public
		 */
		add: function (name, callback) {
			var hooks = _.hooks.all;

			hooks[name] = hooks[name] || [];

			hooks[name].push(callback);
		},

		/**
		 * Runs a hook invoking all registered callbacks with the given environment variables.
		 *
		 * Callbacks will be invoked synchronously and in the order in which they were registered.
		 *
		 * @param {string} name The name of the hook.
		 * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.
		 * @public
		 */
		run: function (name, env) {
			var callbacks = _.hooks.all[name];

			if (!callbacks || !callbacks.length) {
				return;
			}

			for (var i=0, callback; callback = callbacks[i++];) {
				callback(env);
			}
		}
	},

	Token: Token
};
_self.Prism = _;


// Typescript note:
// The following can be used to import the Token type in JSDoc:
//
//   @typedef {InstanceType<import("./prism-core")["Token"]>} Token

/**
 * Creates a new token.
 *
 * @param {string} type See {@link Token#type type}
 * @param {string | TokenStream} content See {@link Token#content content}
 * @param {string|string[]} [alias] The alias(es) of the token.
 * @param {string} [matchedStr=""] A copy of the full string this token was created from.
 * @class
 * @global
 * @public
 */
function Token(type, content, alias, matchedStr) {
	/**
	 * The type of the token.
	 *
	 * This is usually the key of a pattern in a {@link Grammar}.
	 *
	 * @type {string}
	 * @see GrammarToken
	 * @public
	 */
	this.type = type;
	/**
	 * The strings or tokens contained by this token.
	 *
	 * This will be a token stream if the pattern matched also defined an `inside` grammar.
	 *
	 * @type {string | TokenStream}
	 * @public
	 */
	this.content = content;
	/**
	 * The alias(es) of the token.
	 *
	 * @type {string|string[]}
	 * @see GrammarToken
	 * @public
	 */
	this.alias = alias;
	// Copy of the full string this token was created from
	this.length = (matchedStr || '').length | 0;
}

/**
 * A token stream is an array of strings and {@link Token Token} objects.
 *
 * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process
 * them.
 *
 * 1. No adjacent strings.
 * 2. No empty strings.
 *
 *    The only exception here is the token stream that only contains the empty string and nothing else.
 *
 * @typedef {Array<string | Token>} TokenStream
 * @global
 * @public
 */

/**
 * Converts the given token or token stream to an HTML representation.
 *
 * The following hooks will be run:
 * 1. `wrap`: On each {@link Token}.
 *
 * @param {string | Token | TokenStream} o The token or token stream to be converted.
 * @param {string} language The name of current language.
 * @returns {string} The HTML representation of the token or token stream.
 * @memberof Token
 * @static
 */
Token.stringify = function stringify(o, language) {
	if (typeof o == 'string') {
		return o;
	}
	if (Array.isArray(o)) {
		var s = '';
		o.forEach(function (e) {
			s += stringify(e, language);
		});
		return s;
	}

	var env = {
		type: o.type,
		content: stringify(o.content, language),
		tag: 'span',
		classes: ['token', o.type],
		attributes: {},
		language: language
	};

	var aliases = o.alias;
	if (aliases) {
		if (Array.isArray(aliases)) {
			Array.prototype.push.apply(env.classes, aliases);
		} else {
			env.classes.push(aliases);
		}
	}

	_.hooks.run('wrap', env);

	var attributes = '';
	for (var name in env.attributes) {
		attributes += ' ' + name + '="' + (env.attributes[name] || '').replace(/"/g, '&quot;') + '"';
	}

	return '<' + env.tag + ' class="' + env.classes.join(' ') + '"' + attributes + '>' + env.content + '</' + env.tag + '>';
};

/**
 * @param {string} text
 * @param {LinkedList<string | Token>} tokenList
 * @param {any} grammar
 * @param {LinkedListNode<string | Token>} startNode
 * @param {number} startPos
 * @param {RematchOptions} [rematch]
 * @returns {void}
 * @private
 *
 * @typedef RematchOptions
 * @property {string} cause
 * @property {number} reach
 */
function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {
	for (var token in grammar) {
		if (!grammar.hasOwnProperty(token) || !grammar[token]) {
			continue;
		}

		var patterns = grammar[token];
		patterns = Array.isArray(patterns) ? patterns : [patterns];

		for (var j = 0; j < patterns.length; ++j) {
			if (rematch && rematch.cause == token + ',' + j) {
				return;
			}

			var patternObj = patterns[j],
				inside = patternObj.inside,
				lookbehind = !!patternObj.lookbehind,
				greedy = !!patternObj.greedy,
				lookbehindLength = 0,
				alias = patternObj.alias;

			if (greedy && !patternObj.pattern.global) {
				// Without the global flag, lastIndex won't work
				var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];
				patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');
			}

			/** @type {RegExp} */
			var pattern = patternObj.pattern || patternObj;

			for ( // iterate the token list and keep track of the current token/string position
				var currentNode = startNode.next, pos = startPos;
				currentNode !== tokenList.tail;
				pos += currentNode.value.length, currentNode = currentNode.next
			) {

				if (rematch && pos >= rematch.reach) {
					break;
				}

				var str = currentNode.value;

				if (tokenList.length > text.length) {
					// Something went terribly wrong, ABORT, ABORT!
					return;
				}

				if (str instanceof Token) {
					continue;
				}

				var removeCount = 1; // this is the to parameter of removeBetween

				if (greedy && currentNode != tokenList.tail.prev) {
					pattern.lastIndex = pos;
					var match = pattern.exec(text);
					if (!match) {
						break;
					}

					var from = match.index + (lookbehind && match[1] ? match[1].length : 0);
					var to = match.index + match[0].length;
					var p = pos;

					// find the node that contains the match
					p += currentNode.value.length;
					while (from >= p) {
						currentNode = currentNode.next;
						p += currentNode.value.length;
					}
					// adjust pos (and p)
					p -= currentNode.value.length;
					pos = p;

					// the current node is a Token, then the match starts inside another Token, which is invalid
					if (currentNode.value instanceof Token) {
						continue;
					}

					// find the last node which is affected by this match
					for (
						var k = currentNode;
						k !== tokenList.tail && (p < to || typeof k.value === 'string');
						k = k.next
					) {
						removeCount++;
						p += k.value.length;
					}
					removeCount--;

					// replace with the new match
					str = text.slice(pos, p);
					match.index -= pos;
				} else {
					pattern.lastIndex = 0;

					var match = pattern.exec(str);
				}

				if (!match) {
					continue;
				}

				if (lookbehind) {
					lookbehindLength = match[1] ? match[1].length : 0;
				}

				var from = match.index + lookbehindLength,
					matchStr = match[0].slice(lookbehindLength),
					to = from + matchStr.length,
					before = str.slice(0, from),
					after = str.slice(to);

				var reach = pos + str.length;
				if (rematch && reach > rematch.reach) {
					rematch.reach = reach;
				}

				var removeFrom = currentNode.prev;

				if (before) {
					removeFrom = addAfter(tokenList, removeFrom, before);
					pos += before.length;
				}

				removeRange(tokenList, removeFrom, removeCount);

				var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);
				currentNode = addAfter(tokenList, removeFrom, wrapped);

				if (after) {
					addAfter(tokenList, currentNode, after);
				}

				if (removeCount > 1) {
					// at least one Token object was removed, so we have to do some rematching
					// this can only happen if the current pattern is greedy
					matchGrammar(text, tokenList, grammar, currentNode.prev, pos, {
						cause: token + ',' + j,
						reach: reach
					});
				}
			}
		}
	}
}

/**
 * @typedef LinkedListNode
 * @property {T} value
 * @property {LinkedListNode<T> | null} prev The previous node.
 * @property {LinkedListNode<T> | null} next The next node.
 * @template T
 * @private
 */

/**
 * @template T
 * @private
 */
function LinkedList() {
	/** @type {LinkedListNode<T>} */
	var head = { value: null, prev: null, next: null };
	/** @type {LinkedListNode<T>} */
	var tail = { value: null, prev: head, next: null };
	head.next = tail;

	/** @type {LinkedListNode<T>} */
	this.head = head;
	/** @type {LinkedListNode<T>} */
	this.tail = tail;
	this.length = 0;
}

/**
 * Adds a new node with the given value to the list.
 * @param {LinkedList<T>} list
 * @param {LinkedListNode<T>} node
 * @param {T} value
 * @returns {LinkedListNode<T>} The added node.
 * @template T
 */
function addAfter(list, node, value) {
	// assumes that node != list.tail && values.length >= 0
	var next = node.next;

	var newNode = { value: value, prev: node, next: next };
	node.next = newNode;
	next.prev = newNode;
	list.length++;

	return newNode;
}
/**
 * Removes `count` nodes after the given node. The given node will not be removed.
 * @param {LinkedList<T>} list
 * @param {LinkedListNode<T>} node
 * @param {number} count
 * @template T
 */
function removeRange(list, node, count) {
	var next = node.next;
	for (var i = 0; i < count && next !== list.tail; i++) {
		next = next.next;
	}
	node.next = next;
	next.prev = node;
	list.length -= i;
}
/**
 * @param {LinkedList<T>} list
 * @returns {T[]}
 * @template T
 */
function toArray(list) {
	var array = [];
	var node = list.head.next;
	while (node !== list.tail) {
		array.push(node.value);
		node = node.next;
	}
	return array;
}


if (!_self.document) {
	if (!_self.addEventListener) {
		// in Node.js
		return _;
	}

	if (!_.disableWorkerMessageHandler) {
		// In worker
		_self.addEventListener('message', function (evt) {
			var message = JSON.parse(evt.data),
				lang = message.language,
				code = message.code,
				immediateClose = message.immediateClose;

			_self.postMessage(_.highlight(code, _.languages[lang], lang));
			if (immediateClose) {
				_self.close();
			}
		}, false);
	}

	return _;
}

// Get current script and highlight
var script = _.util.currentScript();

if (script) {
	_.filename = script.src;

	if (script.hasAttribute('data-manual')) {
		_.manual = true;
	}
}

function highlightAutomaticallyCallback() {
	if (!_.manual) {
		_.highlightAll();
	}
}

if (!_.manual) {
	// If the document state is "loading", then we'll use DOMContentLoaded.
	// If the document state is "interactive" and the prism.js script is deferred, then we'll also use the
	// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they
	// might take longer one animation frame to execute which can create a race condition where only some plugins have
	// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.
	// See https://github.com/PrismJS/prism/issues/2102
	var readyState = document.readyState;
	if (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {
		document.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);
	} else {
		if (window.requestAnimationFrame) {
			window.requestAnimationFrame(highlightAutomaticallyCallback);
		} else {
			window.setTimeout(highlightAutomaticallyCallback, 16);
		}
	}
}

return _;

})(_self);

if (typeof module !== 'undefined' && module.exports) {
	module.exports = Prism;
}

// hack for components to work correctly in node.js
if (typeof global !== 'undefined') {
	global.Prism = Prism;
}

// some additional documentation/types

/**
 * The expansion of a simple `RegExp` literal to support additional properties.
 *
 * @typedef GrammarToken
 * @property {RegExp} pattern The regular expression of the token.
 * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)
 * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.
 * @property {boolean} [greedy=false] Whether the token is greedy.
 * @property {string|string[]} [alias] An optional alias or list of aliases.
 * @property {Grammar} [inside] The nested grammar of this token.
 *
 * The `inside` grammar will be used to tokenize the text value of each token of this kind.
 *
 * This can be used to make nested and even recursive language definitions.
 *
 * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into
 * each another.
 * @global
 * @public
*/

/**
 * @typedef Grammar
 * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}
 * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.
 * @global
 * @public
 */

/**
 * A function which will invoked after an element was successfully highlighted.
 *
 * @callback HighlightCallback
 * @param {Element} element The element successfully highlighted.
 * @returns {void}
 * @global
 * @public
*/

/**
 * @callback HookCallback
 * @param {Object<string, any>} env The environment variables of the hook.
 * @returns {void}
 * @global
 * @public
 */


/* **********************************************
     Begin prism-markup.js
********************************************** */

Prism.languages.markup = {
	'comment': /<!--[\s\S]*?-->/,
	'prolog': /<\?[\s\S]+?\?>/,
	'doctype': {
		// https://www.w3.org/TR/xml/#NT-doctypedecl
		pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,
		greedy: true,
		inside: {
			'internal-subset': {
				pattern: /(\[)[\s\S]+(?=\]>$)/,
				lookbehind: true,
				greedy: true,
				inside: null // see below
			},
			'string': {
				pattern: /"[^"]*"|'[^']*'/,
				greedy: true
			},
			'punctuation': /^<!|>$|[[\]]/,
			'doctype-tag': /^DOCTYPE/,
			'name': /[^\s<>'"]+/
		}
	},
	'cdata': /<!\[CDATA\[[\s\S]*?]]>/i,
	'tag': {
		pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,
		greedy: true,
		inside: {
			'tag': {
				pattern: /^<\/?[^\s>\/]+/,
				inside: {
					'punctuation': /^<\/?/,
					'namespace': /^[^\s>\/:]+:/
				}
			},
			'attr-value': {
				pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,
				inside: {
					'punctuation': [
						{
							pattern: /^=/,
							alias: 'attr-equals'
						},
						/"|'/
					]
				}
			},
			'punctuation': /\/?>/,
			'attr-name': {
				pattern: /[^\s>\/]+/,
				inside: {
					'namespace': /^[^\s>\/:]+:/
				}
			}

		}
	},
	'entity': [
		{
			pattern: /&[\da-z]{1,8};/i,
			alias: 'named-entity'
		},
		/&#x?[\da-f]{1,8};/i
	]
};

Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =
	Prism.languages.markup['entity'];
Prism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;

// Plugin to make entity title show the real entity, idea by Roman Komarov
Prism.hooks.add('wrap', function (env) {

	if (env.type === 'entity') {
		env.attributes['title'] = env.content.replace(/&amp;/, '&');
	}
});

Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {
	/**
	 * Adds an inlined language to markup.
	 *
	 * An example of an inlined language is CSS with `<style>` tags.
	 *
	 * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as
	 * case insensitive.
	 * @param {string} lang The language key.
	 * @example
	 * addInlined('style', 'css');
	 */
	value: function addInlined(tagName, lang) {
		var includedCdataInside = {};
		includedCdataInside['language-' + lang] = {
			pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,
			lookbehind: true,
			inside: Prism.languages[lang]
		};
		includedCdataInside['cdata'] = /^<!\[CDATA\[|\]\]>$/i;

		var inside = {
			'included-cdata': {
				pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
				inside: includedCdataInside
			}
		};
		inside['language-' + lang] = {
			pattern: /[\s\S]+/,
			inside: Prism.languages[lang]
		};

		var def = {};
		def[tagName] = {
			pattern: RegExp(/(<__[\s\S]*?>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),
			lookbehind: true,
			greedy: true,
			inside: inside
		};

		Prism.languages.insertBefore('markup', 'cdata', def);
	}
});

Prism.languages.html = Prism.languages.markup;
Prism.languages.mathml = Prism.languages.markup;
Prism.languages.svg = Prism.languages.markup;

Prism.languages.xml = Prism.languages.extend('markup', {});
Prism.languages.ssml = Prism.languages.xml;
Prism.languages.atom = Prism.languages.xml;
Prism.languages.rss = Prism.languages.xml;


/* **********************************************
     Begin prism-css.js
********************************************** */

(function (Prism) {

	var string = /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;

	Prism.languages.css = {
		'comment': /\/\*[\s\S]*?\*\//,
		'atrule': {
			pattern: /@[\w-]+[\s\S]*?(?:;|(?=\s*\{))/,
			inside: {
				'rule': /^@[\w-]+/,
				'selector-function-argument': {
					pattern: /(\bselector\s*\((?!\s*\))\s*)(?:[^()]|\((?:[^()]|\([^()]*\))*\))+?(?=\s*\))/,
					lookbehind: true,
					alias: 'selector'
				},
				'keyword': {
					pattern: /(^|[^\w-])(?:and|not|only|or)(?![\w-])/,
					lookbehind: true
				}
				// See rest below
			}
		},
		'url': {
			// https://drafts.csswg.org/css-values-3/#urls
			pattern: RegExp('\\burl\\((?:' + string.source + '|' + /(?:[^\\\r\n()"']|\\[\s\S])*/.source + ')\\)', 'i'),
			greedy: true,
			inside: {
				'function': /^url/i,
				'punctuation': /^\(|\)$/,
				'string': {
					pattern: RegExp('^' + string.source + '$'),
					alias: 'url'
				}
			}
		},
		'selector': RegExp('[^{}\\s](?:[^{};"\']|' + string.source + ')*?(?=\\s*\\{)'),
		'string': {
			pattern: string,
			greedy: true
		},
		'property': /[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*(?=\s*:)/i,
		'important': /!important\b/i,
		'function': /[-a-z0-9]+(?=\()/i,
		'punctuation': /[(){};:,]/
	};

	Prism.languages.css['atrule'].inside.rest = Prism.languages.css;

	var markup = Prism.languages.markup;
	if (markup) {
		markup.tag.addInlined('style', 'css');

		Prism.languages.insertBefore('inside', 'attr-value', {
			'style-attr': {
				pattern: /\s*style=("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/i,
				inside: {
					'attr-name': {
						pattern: /^\s*style/i,
						inside: markup.tag.inside
					},
					'punctuation': /^\s*=\s*['"]|['"]\s*$/,
					'attr-value': {
						pattern: /.+/i,
						inside: Prism.languages.css
					}
				},
				alias: 'language-css'
			}
		}, markup.tag);
	}

}(Prism));


/* **********************************************
     Begin prism-clike.js
********************************************** */

Prism.languages.clike = {
	'comment': [
		{
			pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
			lookbehind: true
		},
		{
			pattern: /(^|[^\\:])\/\/.*/,
			lookbehind: true,
			greedy: true
		}
	],
	'string': {
		pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
		greedy: true
	},
	'class-name': {
		pattern: /(\b(?:class|interface|extends|implements|trait|instanceof|new)\s+|\bcatch\s+\()[\w.\\]+/i,
		lookbehind: true,
		inside: {
			'punctuation': /[.\\]/
		}
	},
	'keyword': /\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,
	'boolean': /\b(?:true|false)\b/,
	'function': /\w+(?=\()/,
	'number': /\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i,
	'operator': /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,
	'punctuation': /[{}[\];(),.:]/
};


/* **********************************************
     Begin prism-javascript.js
********************************************** */

Prism.languages.javascript = Prism.languages.extend('clike', {
	'class-name': [
		Prism.languages.clike['class-name'],
		{
			pattern: /(^|[^$\w\xA0-\uFFFF])[_$A-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\.(?:prototype|constructor))/,
			lookbehind: true
		}
	],
	'keyword': [
		{
			pattern: /((?:^|})\s*)(?:catch|finally)\b/,
			lookbehind: true
		},
		{
			pattern: /(^|[^.]|\.\.\.\s*)\b(?:as|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\s*[\[$\w\xA0-\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
			lookbehind: true
		},
	],
	'number': /\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/,
	// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)
	'function': /#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
	'operator': /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/
});

Prism.languages.javascript['class-name'][0].pattern = /(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/;

Prism.languages.insertBefore('javascript', 'keyword', {
	'regex': {
		pattern: /((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*]|\\.|[^/\\\[\r\n])+\/[gimyus]{0,6}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,
		lookbehind: true,
		greedy: true
	},
	// This must be declared before keyword because we use "function" inside the look-forward
	'function-variable': {
		pattern: /#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/,
		alias: 'function'
	},
	'parameter': [
		{
			pattern: /(function(?:\s+[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)?\s*\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\))/,
			lookbehind: true,
			inside: Prism.languages.javascript
		},
		{
			pattern: /[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=>)/i,
			inside: Prism.languages.javascript
		},
		{
			pattern: /(\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*=>)/,
			lookbehind: true,
			inside: Prism.languages.javascript
		},
		{
			pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*\{)/,
			lookbehind: true,
			inside: Prism.languages.javascript
		}
	],
	'constant': /\b[A-Z](?:[A-Z_]|\dx?)*\b/
});

Prism.languages.insertBefore('javascript', 'string', {
	'template-string': {
		pattern: /`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\${)[^\\`])*`/,
		greedy: true,
		inside: {
			'template-punctuation': {
				pattern: /^`|`$/,
				alias: 'string'
			},
			'interpolation': {
				pattern: /((?:^|[^\\])(?:\\{2})*)\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,
				lookbehind: true,
				inside: {
					'interpolation-punctuation': {
						pattern: /^\${|}$/,
						alias: 'punctuation'
					},
					rest: Prism.languages.javascript
				}
			},
			'string': /[\s\S]+/
		}
	}
});

if (Prism.languages.markup) {
	Prism.languages.markup.tag.addInlined('script', 'javascript');
}

Prism.languages.js = Prism.languages.javascript;


/* **********************************************
     Begin prism-file-highlight.js
********************************************** */

(function () {
	if (typeof self === 'undefined' || !self.Prism || !self.document) {
		return;
	}

	var Prism = window.Prism;

	var LOADING_MESSAGE = 'Loading…';
	var FAILURE_MESSAGE = function (status, message) {
		return '✖ Error ' + status + ' while fetching file: ' + message;
	};
	var FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';

	var EXTENSIONS = {
		'js': 'javascript',
		'py': 'python',
		'rb': 'ruby',
		'ps1': 'powershell',
		'psm1': 'powershell',
		'sh': 'bash',
		'bat': 'batch',
		'h': 'c',
		'tex': 'latex'
	};

	var STATUS_ATTR = 'data-src-status';
	var STATUS_LOADING = 'loading';
	var STATUS_LOADED = 'loaded';
	var STATUS_FAILED = 'failed';

	var SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '="' + STATUS_LOADED + '"])'
		+ ':not([' + STATUS_ATTR + '="' + STATUS_LOADING + '"])';

	var lang = /\blang(?:uage)?-([\w-]+)\b/i;

	/**
	 * Sets the Prism `language-xxxx` or `lang-xxxx` class to the given language.
	 *
	 * @param {HTMLElement} element
	 * @param {string} language
	 * @returns {void}
	 */
	function setLanguageClass(element, language) {
		var className = element.className;
		className = className.replace(lang, ' ') + ' language-' + language;
		element.className = className.replace(/\s+/g, ' ').trim();
	}


	Prism.hooks.add('before-highlightall', function (env) {
		env.selector += ', ' + SELECTOR;
	});

	Prism.hooks.add('before-sanity-check', function (env) {
		var pre = /** @type {HTMLPreElement} */ (env.element);
		if (pre.matches(SELECTOR)) {
			env.code = ''; // fast-path the whole thing and go to complete

			pre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading

			// add code element with loading message
			var code = pre.appendChild(document.createElement('CODE'));
			code.textContent = LOADING_MESSAGE;

			var src = pre.getAttribute('data-src');

			var language = env.language;
			if (language === 'none') {
				// the language might be 'none' because there is no language set;
				// in this case, we want to use the extension as the language
				var extension = (/\.(\w+)$/.exec(src) || [, 'none'])[1];
				language = EXTENSIONS[extension] || extension;
			}

			// set language classes
			setLanguageClass(code, language);
			setLanguageClass(pre, language);

			// preload the language
			var autoloader = Prism.plugins.autoloader;
			if (autoloader) {
				autoloader.loadLanguages(language);
			}

			// load file
			var xhr = new XMLHttpRequest();
			xhr.open('GET', src, true);
			xhr.onreadystatechange = function () {
				if (xhr.readyState == 4) {
					if (xhr.status < 400 && xhr.responseText) {
						// mark as loaded
						pre.setAttribute(STATUS_ATTR, STATUS_LOADED);

						// highlight code
						code.textContent = xhr.responseText;
						Prism.highlightElement(code);

					} else {
						// mark as failed
						pre.setAttribute(STATUS_ATTR, STATUS_FAILED);

						if (xhr.status >= 400) {
							code.textContent = FAILURE_MESSAGE(xhr.status, xhr.statusText);
						} else {
							code.textContent = FAILURE_EMPTY_MESSAGE;
						}
					}
				}
			};
			xhr.send(null);
		}
	});

	Prism.plugins.fileHighlight = {
		/**
		 * Executes the File Highlight plugin for all matching `pre` elements under the given container.
		 *
		 * Note: Elements which are already loaded or currently loading will not be touched by this method.
		 *
		 * @param {ParentNode} [container=document]
		 */
		highlight: function highlight(container) {
			var elements = (container || document).querySelectorAll(SELECTOR);

			for (var i = 0, element; element = elements[i++];) {
				Prism.highlightElement(element);
			}
		}
	};

	var logged = false;
	/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */
	Prism.fileHighlight = function () {
		if (!logged) {
			console.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');
			logged = true;
		}
		Prism.plugins.fileHighlight.highlight.apply(this, arguments);
	}

})();

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(26)))

/***/ }),
/* 186 */
/***/ (function(module, exports) {

(function() {

var assign = Object.assign || function (obj1, obj2) {
	for (var name in obj2) {
		if (obj2.hasOwnProperty(name))
			obj1[name] = obj2[name];
	}
	return obj1;
}

function NormalizeWhitespace(defaults) {
	this.defaults = assign({}, defaults);
}

function toCamelCase(value) {
	return value.replace(/-(\w)/g, function(match, firstChar) {
		return firstChar.toUpperCase();
	});
}

function tabLen(str) {
	var res = 0;
	for (var i = 0; i < str.length; ++i) {
		if (str.charCodeAt(i) == '\t'.charCodeAt(0))
			res += 3;
	}
	return str.length + res;
}

NormalizeWhitespace.prototype = {
	setDefaults: function (defaults) {
		this.defaults = assign(this.defaults, defaults);
	},
	normalize: function (input, settings) {
		settings = assign(this.defaults, settings);

		for (var name in settings) {
			var methodName = toCamelCase(name);
			if (name !== "normalize" && methodName !== 'setDefaults' &&
					settings[name] && this[methodName]) {
				input = this[methodName].call(this, input, settings[name]);
			}
		}

		return input;
	},

	/*
	 * Normalization methods
	 */
	leftTrim: function (input) {
		return input.replace(/^\s+/, '');
	},
	rightTrim: function (input) {
		return input.replace(/\s+$/, '');
	},
	tabsToSpaces: function (input, spaces) {
		spaces = spaces|0 || 4;
		return input.replace(/\t/g, new Array(++spaces).join(' '));
	},
	spacesToTabs: function (input, spaces) {
		spaces = spaces|0 || 4;
		return input.replace(RegExp(' {' + spaces + '}', 'g'), '\t');
	},
	removeTrailing: function (input) {
		return input.replace(/\s*?$/gm, '');
	},
	// Support for deprecated plugin remove-initial-line-feed
	removeInitialLineFeed: function (input) {
		return input.replace(/^(?:\r?\n|\r)/, '');
	},
	removeIndent: function (input) {
		var indents = input.match(/^[^\S\n\r]*(?=\S)/gm);

		if (!indents || !indents[0].length)
			return input;

		indents.sort(function(a, b){return a.length - b.length; });

		if (!indents[0].length)
			return input;

		return input.replace(RegExp('^' + indents[0], 'gm'), '');
	},
	indent: function (input, tabs) {
		return input.replace(/^[^\S\n\r]*(?=\S)/gm, new Array(++tabs).join('\t') + '$&');
	},
	breakLines: function (input, characters) {
		characters = (characters === true) ? 80 : characters|0 || 80;

		var lines = input.split('\n');
		for (var i = 0; i < lines.length; ++i) {
			if (tabLen(lines[i]) <= characters)
				continue;

			var line = lines[i].split(/(\s+)/g),
			    len = 0;

			for (var j = 0; j < line.length; ++j) {
				var tl = tabLen(line[j]);
				len += tl;
				if (len > characters) {
					line[j] = '\n' + line[j];
					len = tl;
				}
			}
			lines[i] = line.join('');
		}
		return lines.join('\n');
	}
};

// Support node modules
if (typeof module !== 'undefined' && module.exports) {
	module.exports = NormalizeWhitespace;
}

// Exit if prism is not loaded
if (typeof Prism === 'undefined') {
	return;
}

Prism.plugins.NormalizeWhitespace = new NormalizeWhitespace({
	'remove-trailing': true,
	'remove-indent': true,
	'left-trim': true,
	'right-trim': true,
	/*'break-lines': 80,
	'indent': 2,
	'remove-initial-line-feed': false,
	'tabs-to-spaces': 4,
	'spaces-to-tabs': 4*/
});

Prism.hooks.add('before-sanity-check', function (env) {
	var Normalizer = Prism.plugins.NormalizeWhitespace;

	// Check settings
	if (env.settings && env.settings['whitespace-normalization'] === false) {
		return;
	}

	// Check classes
	if (!Prism.util.isActive(env.element, 'whitespace-normalization', true)) {
		return;
	}

	// Simple mode if there is no env.element
	if ((!env.element || !env.element.parentNode) && env.code) {
		env.code = Normalizer.normalize(env.code, env.settings);
		return;
	}

	// Normal mode
	var pre = env.element.parentNode;
	if (!env.code || !pre || pre.nodeName.toLowerCase() !== 'pre') {
		return;
	}

	var children = pre.childNodes,
	    before = '',
	    after = '',
	    codeFound = false;

	// Move surrounding whitespace from the <pre> tag into the <code> tag
	for (var i = 0; i < children.length; ++i) {
		var node = children[i];

		if (node == env.element) {
			codeFound = true;
		} else if (node.nodeName === "#text") {
			if (codeFound) {
				after += node.nodeValue;
			} else {
				before += node.nodeValue;
			}

			pre.removeChild(node);
			--i;
		}
	}

	if (!env.element.children.length || !Prism.plugins.KeepMarkup) {
		env.code = before + env.code + after;
		env.code = Normalizer.normalize(env.code, env.settings);
	} else {
		// Preserve markup for keep-markup plugin
		var html = before + env.element.innerHTML + after;
		env.element.innerHTML = Normalizer.normalize(html, env.settings);
		env.code = env.element.textContent;
	}
});

}());


/***/ }),
/* 187 */
/***/ (function(module, exports) {

(function () {

	if (typeof self === 'undefined' || !self.Prism || !self.document) {
		return;
	}

	/**
	 * Plugin name which is used as a class name for <pre> which is activating the plugin
	 * @type {String}
	 */
	var PLUGIN_NAME = 'line-numbers';

	/**
	 * Regular expression used for determining line breaks
	 * @type {RegExp}
	 */
	var NEW_LINE_EXP = /\n(?!$)/g;


	/**
	 * Global exports
	 */
	var config = Prism.plugins.lineNumbers = {
		/**
		 * Get node for provided line number
		 * @param {Element} element pre element
		 * @param {Number} number line number
		 * @return {Element|undefined}
		 */
		getLine: function (element, number) {
			if (element.tagName !== 'PRE' || !element.classList.contains(PLUGIN_NAME)) {
				return;
			}

			var lineNumberRows = element.querySelector('.line-numbers-rows');
			var lineNumberStart = parseInt(element.getAttribute('data-start'), 10) || 1;
			var lineNumberEnd = lineNumberStart + (lineNumberRows.children.length - 1);

			if (number < lineNumberStart) {
				number = lineNumberStart;
			}
			if (number > lineNumberEnd) {
				number = lineNumberEnd;
			}

			var lineIndex = number - lineNumberStart;

			return lineNumberRows.children[lineIndex];
		},

		/**
		 * Resizes the line numbers of the given element.
		 *
		 * This function will not add line numbers. It will only resize existing ones.
		 * @param {HTMLElement} element A `<pre>` element with line numbers.
		 * @returns {void}
		 */
		resize: function (element) {
			resizeElements([element]);
		},

		/**
		 * Whether the plugin can assume that the units font sizes and margins are not depended on the size of
		 * the current viewport.
		 *
		 * Setting this to `true` will allow the plugin to do certain optimizations for better performance.
		 *
		 * Set this to `false` if you use any of the following CSS units: `vh`, `vw`, `vmin`, `vmax`.
		 *
		 * @type {boolean}
		 */
		assumeViewportIndependence: true
	};

	/**
	 * Resizes the given elements.
	 *
	 * @param {HTMLElement[]} elements
	 */
	function resizeElements(elements) {
		elements = elements.filter(function (e) {
			var codeStyles = getStyles(e);
			var whiteSpace = codeStyles['white-space'];
			return whiteSpace === 'pre-wrap' || whiteSpace === 'pre-line';
		});

		if (elements.length == 0) {
			return;
		}

		var infos = elements.map(function (element) {
			var codeElement = element.querySelector('code');
			var lineNumbersWrapper = element.querySelector('.line-numbers-rows');
			if (!codeElement || !lineNumbersWrapper) {
				return undefined;
			}

			/** @type {HTMLElement} */
			var lineNumberSizer = element.querySelector('.line-numbers-sizer');
			var codeLines = codeElement.textContent.split(NEW_LINE_EXP);

			if (!lineNumberSizer) {
				lineNumberSizer = document.createElement('span');
				lineNumberSizer.className = 'line-numbers-sizer';

				codeElement.appendChild(lineNumberSizer);
			}

			lineNumberSizer.innerHTML = '0';
			lineNumberSizer.style.display = 'block';

			var oneLinerHeight = lineNumberSizer.getBoundingClientRect().height;
			lineNumberSizer.innerHTML = '';

			return {
				element: element,
				lines: codeLines,
				lineHeights: [],
				oneLinerHeight: oneLinerHeight,
				sizer: lineNumberSizer,
			};
		}).filter(Boolean);

		infos.forEach(function (info) {
			var lineNumberSizer = info.sizer;
			var lines = info.lines;
			var lineHeights = info.lineHeights;
			var oneLinerHeight = info.oneLinerHeight;

			lineHeights[lines.length - 1] = undefined;
			lines.forEach(function (line, index) {
				if (line && line.length > 1) {
					var e = lineNumberSizer.appendChild(document.createElement('span'));
					e.style.display = 'block';
					e.textContent = line;
				} else {
					lineHeights[index] = oneLinerHeight;
				}
			});
		});

		infos.forEach(function (info) {
			var lineNumberSizer = info.sizer;
			var lineHeights = info.lineHeights;

			var childIndex = 0;
			for (var i = 0; i < lineHeights.length; i++) {
				if (lineHeights[i] === undefined) {
					lineHeights[i] = lineNumberSizer.children[childIndex++].getBoundingClientRect().height;
				}
			}
		});

		infos.forEach(function (info) {
			var lineNumberSizer = info.sizer;
			var wrapper = info.element.querySelector('.line-numbers-rows');

			lineNumberSizer.style.display = 'none';
			lineNumberSizer.innerHTML = '';

			info.lineHeights.forEach(function (height, lineNumber) {
				wrapper.children[lineNumber].style.height = height + 'px';
			});
		});
	}

	/**
	 * Returns style declarations for the element
	 * @param {Element} element
	 */
	var getStyles = function (element) {
		if (!element) {
			return null;
		}

		return window.getComputedStyle ? getComputedStyle(element) : (element.currentStyle || null);
	};

	var lastWidth = undefined;
	window.addEventListener('resize', function () {
		if (config.assumeViewportIndependence && lastWidth === window.innerWidth) {
			return;
		}
		lastWidth = window.innerWidth;

		resizeElements(Array.prototype.slice.call(document.querySelectorAll('pre.' + PLUGIN_NAME)));
	});

	Prism.hooks.add('complete', function (env) {
		if (!env.code) {
			return;
		}

		var code = /** @type {Element} */ (env.element);
		var pre = /** @type {HTMLElement} */ (code.parentNode);

		// works only for <code> wrapped inside <pre> (not inline)
		if (!pre || !/pre/i.test(pre.nodeName)) {
			return;
		}

		// Abort if line numbers already exists
		if (code.querySelector('.line-numbers-rows')) {
			return;
		}

		// only add line numbers if <code> or one of its ancestors has the `line-numbers` class
		if (!Prism.util.isActive(code, PLUGIN_NAME)) {
			return;
		}

		// Remove the class 'line-numbers' from the <code>
		code.classList.remove(PLUGIN_NAME);
		// Add the class 'line-numbers' to the <pre>
		pre.classList.add(PLUGIN_NAME);

		var match = env.code.match(NEW_LINE_EXP);
		var linesNum = match ? match.length + 1 : 1;
		var lineNumbersWrapper;

		var lines = new Array(linesNum + 1).join('<span></span>');

		lineNumbersWrapper = document.createElement('span');
		lineNumbersWrapper.setAttribute('aria-hidden', 'true');
		lineNumbersWrapper.className = 'line-numbers-rows';
		lineNumbersWrapper.innerHTML = lines;

		if (pre.hasAttribute('data-start')) {
			pre.style.counterReset = 'linenumber ' + (parseInt(pre.getAttribute('data-start'), 10) - 1);
		}

		env.element.appendChild(lineNumbersWrapper);

		resizeElements([pre]);

		Prism.hooks.run('line-numbers', env);
	});

	Prism.hooks.add('line-numbers', function (env) {
		env.plugins = env.plugins || {};
		env.plugins.lineNumbers = true;
	});

}());


/***/ }),
/* 188 */
/***/ (function(module, exports) {

(function (Prism) {

	// Allow only one line break
	var inner = /(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?!\n|\r\n?))/.source;

	/**
	 * This function is intended for the creation of the bold or italic pattern.
	 *
	 * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.
	 *
	 * _Note:_ Keep in mind that this adds a capturing group.
	 *
	 * @param {string} pattern
	 * @returns {RegExp}
	 */
	function createInline(pattern) {
		pattern = pattern.replace(/<inner>/g, function () { return inner; });
		return RegExp(/((?:^|[^\\])(?:\\{2})*)/.source + '(?:' + pattern + ')');
	}


	var tableCell = /(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source;
	var tableRow = /\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|$)/.source.replace(/__/g, function () { return tableCell; });
	var tableLine = /\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source;


	Prism.languages.markdown = Prism.languages.extend('markup', {});
	Prism.languages.insertBefore('markdown', 'prolog', {
		'blockquote': {
			// > ...
			pattern: /^>(?:[\t ]*>)*/m,
			alias: 'punctuation'
		},
		'table': {
			pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),
			inside: {
				'table-data-rows': {
					pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),
					lookbehind: true,
					inside: {
						'table-data': {
							pattern: RegExp(tableCell),
							inside: Prism.languages.markdown
						},
						'punctuation': /\|/
					}
				},
				'table-line': {
					pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),
					lookbehind: true,
					inside: {
						'punctuation': /\||:?-{3,}:?/
					}
				},
				'table-header-row': {
					pattern: RegExp('^' + tableRow + '$'),
					inside: {
						'table-header': {
							pattern: RegExp(tableCell),
							alias: 'important',
							inside: Prism.languages.markdown
						},
						'punctuation': /\|/
					}
				}
			}
		},
		'code': [
			{
				// Prefixed by 4 spaces or 1 tab and preceded by an empty line
				pattern: /((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,
				lookbehind: true,
				alias: 'keyword'
			},
			{
				// `code`
				// ``code``
				pattern: /``.+?``|`[^`\r\n]+`/,
				alias: 'keyword'
			},
			{
				// ```optional language
				// code block
				// ```
				pattern: /^```[\s\S]*?^```$/m,
				greedy: true,
				inside: {
					'code-block': {
						pattern: /^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,
						lookbehind: true
					},
					'code-language': {
						pattern: /^(```).+/,
						lookbehind: true
					},
					'punctuation': /```/
				}
			}
		],
		'title': [
			{
				// title 1
				// =======

				// title 2
				// -------
				pattern: /\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,
				alias: 'important',
				inside: {
					punctuation: /==+$|--+$/
				}
			},
			{
				// # title 1
				// ###### title 6
				pattern: /(^\s*)#+.+/m,
				lookbehind: true,
				alias: 'important',
				inside: {
					punctuation: /^#+|#+$/
				}
			}
		],
		'hr': {
			// ***
			// ---
			// * * *
			// -----------
			pattern: /(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,
			lookbehind: true,
			alias: 'punctuation'
		},
		'list': {
			// * item
			// + item
			// - item
			// 1. item
			pattern: /(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,
			lookbehind: true,
			alias: 'punctuation'
		},
		'url-reference': {
			// [id]: http://example.com "Optional title"
			// [id]: http://example.com 'Optional title'
			// [id]: http://example.com (Optional title)
			// [id]: <http://example.com> "Optional title"
			pattern: /!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,
			inside: {
				'variable': {
					pattern: /^(!?\[)[^\]]+/,
					lookbehind: true
				},
				'string': /(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,
				'punctuation': /^[\[\]!:]|[<>]/
			},
			alias: 'url'
		},
		'bold': {
			// **strong**
			// __strong__

			// allow one nested instance of italic text using the same delimiter
			pattern: createInline(/\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source),
			lookbehind: true,
			greedy: true,
			inside: {
				'content': {
					pattern: /(^..)[\s\S]+(?=..$)/,
					lookbehind: true,
					inside: {} // see below
				},
				'punctuation': /\*\*|__/
			}
		},
		'italic': {
			// *em*
			// _em_

			// allow one nested instance of bold text using the same delimiter
			pattern: createInline(/\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source),
			lookbehind: true,
			greedy: true,
			inside: {
				'content': {
					pattern: /(^.)[\s\S]+(?=.$)/,
					lookbehind: true,
					inside: {} // see below
				},
				'punctuation': /[*_]/
			}
		},
		'strike': {
			// ~~strike through~~
			// ~strike~
			pattern: createInline(/(~~?)(?:(?!~)<inner>)+?\2/.source),
			lookbehind: true,
			greedy: true,
			inside: {
				'content': {
					pattern: /(^~~?)[\s\S]+(?=\1$)/,
					lookbehind: true,
					inside: {} // see below
				},
				'punctuation': /~~?/
			}
		},
		'url': {
			// [example](http://example.com "Optional title")
			// [example][id]
			// [example] [id]
			pattern: createInline(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)| ?\[(?:(?!\])<inner>)+\])/.source),
			lookbehind: true,
			greedy: true,
			inside: {
				'variable': {
					pattern: /(\[)[^\]]+(?=\]$)/,
					lookbehind: true
				},
				'content': {
					pattern: /(^!?\[)[^\]]+(?=\])/,
					lookbehind: true,
					inside: {} // see below
				},
				'string': {
					pattern: /"(?:\\.|[^"\\])*"(?=\)$)/
				}
			}
		}
	});

	['url', 'bold', 'italic', 'strike'].forEach(function (token) {
		['url', 'bold', 'italic', 'strike'].forEach(function (inside) {
			if (token !== inside) {
				Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];
			}
		});
	});

	Prism.hooks.add('after-tokenize', function (env) {
		if (env.language !== 'markdown' && env.language !== 'md') {
			return;
		}

		function walkTokens(tokens) {
			if (!tokens || typeof tokens === 'string') {
				return;
			}

			for (var i = 0, l = tokens.length; i < l; i++) {
				var token = tokens[i];

				if (token.type !== 'code') {
					walkTokens(token.content);
					continue;
				}

				/*
				 * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token
				 * is optional. But the grammar is defined so that there is only one case we have to handle:
				 *
				 * token.content = [
				 *     <span class="punctuation">```</span>,
				 *     <span class="code-language">xxxx</span>,
				 *     '\n', // exactly one new lines (\r or \n or \r\n)
				 *     <span class="code-block">...</span>,
				 *     '\n', // exactly one new lines again
				 *     <span class="punctuation">```</span>
				 * ];
				 */

				var codeLang = token.content[1];
				var codeBlock = token.content[3];

				if (codeLang && codeBlock &&
					codeLang.type === 'code-language' && codeBlock.type === 'code-block' &&
					typeof codeLang.content === 'string') {

					// this might be a language that Prism does not support

					// do some replacements to support C++, C#, and F#
					var lang = codeLang.content.replace(/\b#/g, 'sharp').replace(/\b\+\+/g, 'pp')
					// only use the first word
					lang = (/[a-z][\w-]*/i.exec(lang) || [''])[0].toLowerCase();
					var alias = 'language-' + lang;

					// add alias
					if (!codeBlock.alias) {
						codeBlock.alias = [alias];
					} else if (typeof codeBlock.alias === 'string') {
						codeBlock.alias = [codeBlock.alias, alias];
					} else {
						codeBlock.alias.push(alias);
					}
				}
			}
		}

		walkTokens(env.tokens);
	});

	Prism.hooks.add('wrap', function (env) {
		if (env.type !== 'code-block') {
			return;
		}

		var codeLang = '';
		for (var i = 0, l = env.classes.length; i < l; i++) {
			var cls = env.classes[i];
			var match = /language-(.+)/.exec(cls);
			if (match) {
				codeLang = match[1];
				break;
			}
		}

		var grammar = Prism.languages[codeLang];

		if (!grammar) {
			if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {
				var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);
				env.attributes['id'] = id;

				Prism.plugins.autoloader.loadLanguages(codeLang, function () {
					var ele = document.getElementById(id);
					if (ele) {
						ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);
					}
				});
			}
		} else {
			// reverse Prism.util.encode
			var code = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');

			env.content = Prism.highlight(code, grammar, codeLang);
		}
	});

	Prism.languages.md = Prism.languages.markdown;

}(Prism));


/***/ }),
/* 189 */
/***/ (function(module, exports) {

(function(Prism) {

var javascript = Prism.util.clone(Prism.languages.javascript);

Prism.languages.jsx = Prism.languages.extend('markup', javascript);
Prism.languages.jsx.tag.pattern= /<\/?(?:[\w.:-]+\s*(?:\s+(?:[\w.:$-]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s{'">=]+|\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}))?|\{\s*\.{3}\s*[a-z_$][\w$]*(?:\.[a-z_$][\w$]*)*\s*\}))*\s*\/?)?>/i;

Prism.languages.jsx.tag.inside['tag'].pattern = /^<\/?[^\s>\/]*/i;
Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\{)(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">]+)/i;
Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\w*(?:\.[A-Z]\w*)*$/;

Prism.languages.insertBefore('inside', 'attr-name', {
	'spread': {
		pattern: /\{\s*\.{3}\s*[a-z_$][\w$]*(?:\.[a-z_$][\w$]*)*\s*\}/,
		inside: {
			'punctuation': /\.{3}|[{}.]/,
			'attr-value': /\w+/
		}
	}
}, Prism.languages.jsx.tag);

Prism.languages.insertBefore('inside', 'attr-value',{
	'script': {
		// Allow for two levels of nesting
		pattern: /=(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\})/i,
		inside: {
			'script-punctuation': {
				pattern: /^=(?={)/,
				alias: 'punctuation'
			},
			rest: Prism.languages.jsx
		},
		'alias': 'language-javascript'
	}
}, Prism.languages.jsx.tag);

// The following will handle plain text inside tags
var stringifyToken = function (token) {
	if (!token) {
		return '';
	}
	if (typeof token === 'string') {
		return token;
	}
	if (typeof token.content === 'string') {
		return token.content;
	}
	return token.content.map(stringifyToken).join('');
};

var walkTokens = function (tokens) {
	var openedTags = [];
	for (var i = 0; i < tokens.length; i++) {
		var token = tokens[i];
		var notTagNorBrace = false;

		if (typeof token !== 'string') {
			if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {
				// We found a tag, now find its kind

				if (token.content[0].content[0].content === '</') {
					// Closing tag
					if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {
						// Pop matching opening tag
						openedTags.pop();
					}
				} else {
					if (token.content[token.content.length - 1].content === '/>') {
						// Autoclosed tag, ignore
					} else {
						// Opening tag
						openedTags.push({
							tagName: stringifyToken(token.content[0].content[1]),
							openedBraces: 0
						});
					}
				}
			} else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {

				// Here we might have entered a JSX context inside a tag
				openedTags[openedTags.length - 1].openedBraces++;

			} else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {

				// Here we might have left a JSX context inside a tag
				openedTags[openedTags.length - 1].openedBraces--;

			} else {
				notTagNorBrace = true
			}
		}
		if (notTagNorBrace || typeof token === 'string') {
			if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {
				// Here we are inside a tag, and not inside a JSX context.
				// That's plain text: drop any tokens matched.
				var plainText = stringifyToken(token);

				// And merge text with adjacent text
				if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {
					plainText += stringifyToken(tokens[i + 1]);
					tokens.splice(i + 1, 1);
				}
				if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {
					plainText = stringifyToken(tokens[i - 1]) + plainText;
					tokens.splice(i - 1, 1);
					i--;
				}

				tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);
			}
		}

		if (token.content && typeof token.content !== 'string') {
			walkTokens(token.content);
		}
	}
};

Prism.hooks.add('after-tokenize', function (env) {
	if (env.language !== 'jsx' && env.language !== 'tsx') {
		return;
	}
	walkTokens(env.tokens);
});

}(Prism));


/***/ }),
/* 190 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function isAbsolute(pathname) {
  return pathname.charAt(0) === '/';
}

// About 1.5x faster than the two-arg version of Array#splice()
function spliceOne(list, index) {
  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {
    list[i] = list[k];
  }

  list.pop();
}

// This implementation is based heavily on node's url.parse
function resolvePathname(to, from) {
  if (from === undefined) from = '';

  var toParts = (to && to.split('/')) || [];
  var fromParts = (from && from.split('/')) || [];

  var isToAbs = to && isAbsolute(to);
  var isFromAbs = from && isAbsolute(from);
  var mustEndAbs = isToAbs || isFromAbs;

  if (to && isAbsolute(to)) {
    // to is absolute
    fromParts = toParts;
  } else if (toParts.length) {
    // to is relative, drop the filename
    fromParts.pop();
    fromParts = fromParts.concat(toParts);
  }

  if (!fromParts.length) return '/';

  var hasTrailingSlash;
  if (fromParts.length) {
    var last = fromParts[fromParts.length - 1];
    hasTrailingSlash = last === '.' || last === '..' || last === '';
  } else {
    hasTrailingSlash = false;
  }

  var up = 0;
  for (var i = fromParts.length; i >= 0; i--) {
    var part = fromParts[i];

    if (part === '.') {
      spliceOne(fromParts, i);
    } else if (part === '..') {
      spliceOne(fromParts, i);
      up++;
    } else if (up) {
      spliceOne(fromParts, i);
      up--;
    }
  }

  if (!mustEndAbs) for (; up--; up) fromParts.unshift('..');

  if (
    mustEndAbs &&
    fromParts[0] !== '' &&
    (!fromParts[0] || !isAbsolute(fromParts[0]))
  )
    fromParts.unshift('');

  var result = fromParts.join('/');

  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';

  return result;
}

/* harmony default export */ __webpack_exports__["a"] = (resolvePathname);


/***/ }),
/* 191 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function valueOf(obj) {
  return obj.valueOf ? obj.valueOf() : Object.prototype.valueOf.call(obj);
}

function valueEqual(a, b) {
  // Test for strict equality first.
  if (a === b) return true;

  // Otherwise, if either of them == null they are not equal.
  if (a == null || b == null) return false;

  if (Array.isArray(a)) {
    return (
      Array.isArray(b) &&
      a.length === b.length &&
      a.every(function(item, index) {
        return valueEqual(item, b[index]);
      })
    );
  }

  if (typeof a === 'object' || typeof b === 'object') {
    var aValue = valueOf(a);
    var bValue = valueOf(b);

    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);

    return Object.keys(Object.assign({}, a, b)).every(function(key) {
      return valueEqual(a[key], b[key]);
    });
  }

  return false;
}

/* harmony default export */ __webpack_exports__["a"] = (valueEqual);


/***/ }),
/* 192 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, process) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_esm_inheritsLoose__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_tiny_warning__ = __webpack_require__(53);





var MAX_SIGNED_31_BIT_INT = 1073741823;
var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};

function getUniqueId() {
  var key = '__global_unique_id__';
  return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;
}

function objectIs(x, y) {
  if (x === y) {
    return x !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function createEventEmitter(value) {
  var handlers = [];
  return {
    on: function on(handler) {
      handlers.push(handler);
    },
    off: function off(handler) {
      handlers = handlers.filter(function (h) {
        return h !== handler;
      });
    },
    get: function get() {
      return value;
    },
    set: function set(newValue, changedBits) {
      value = newValue;
      handlers.forEach(function (handler) {
        return handler(value, changedBits);
      });
    }
  };
}

function onlyChild(children) {
  return Array.isArray(children) ? children[0] : children;
}

function createReactContext(defaultValue, calculateChangedBits) {
  var _Provider$childContex, _Consumer$contextType;

  var contextProp = '__create-react-context-' + getUniqueId() + '__';

  var Provider = /*#__PURE__*/function (_Component) {
    Object(__WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(Provider, _Component);

    function Provider() {
      var _this;

      _this = _Component.apply(this, arguments) || this;
      _this.emitter = createEventEmitter(_this.props.value);
      return _this;
    }

    var _proto = Provider.prototype;

    _proto.getChildContext = function getChildContext() {
      var _ref;

      return _ref = {}, _ref[contextProp] = this.emitter, _ref;
    };

    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      if (this.props.value !== nextProps.value) {
        var oldValue = this.props.value;
        var newValue = nextProps.value;
        var changedBits;

        if (objectIs(oldValue, newValue)) {
          changedBits = 0;
        } else {
          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;

          if (process.env.NODE_ENV !== 'production') {
            Object(__WEBPACK_IMPORTED_MODULE_3_tiny_warning__["a" /* default */])((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: ' + changedBits);
          }

          changedBits |= 0;

          if (changedBits !== 0) {
            this.emitter.set(nextProps.value, changedBits);
          }
        }
      }
    };

    _proto.render = function render() {
      return this.props.children;
    };

    return Provider;
  }(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]);

  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object.isRequired, _Provider$childContex);

  var Consumer = /*#__PURE__*/function (_Component2) {
    Object(__WEBPACK_IMPORTED_MODULE_1__babel_runtime_helpers_esm_inheritsLoose__["a" /* default */])(Consumer, _Component2);

    function Consumer() {
      var _this2;

      _this2 = _Component2.apply(this, arguments) || this;
      _this2.state = {
        value: _this2.getValue()
      };

      _this2.onUpdate = function (newValue, changedBits) {
        var observedBits = _this2.observedBits | 0;

        if ((observedBits & changedBits) !== 0) {
          _this2.setState({
            value: _this2.getValue()
          });
        }
      };

      return _this2;
    }

    var _proto2 = Consumer.prototype;

    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      var observedBits = nextProps.observedBits;
      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
    };

    _proto2.componentDidMount = function componentDidMount() {
      if (this.context[contextProp]) {
        this.context[contextProp].on(this.onUpdate);
      }

      var observedBits = this.props.observedBits;
      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
    };

    _proto2.componentWillUnmount = function componentWillUnmount() {
      if (this.context[contextProp]) {
        this.context[contextProp].off(this.onUpdate);
      }
    };

    _proto2.getValue = function getValue() {
      if (this.context[contextProp]) {
        return this.context[contextProp].get();
      } else {
        return defaultValue;
      }
    };

    _proto2.render = function render() {
      return onlyChild(this.props.children)(this.state.value);
    };

    return Consumer;
  }(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]);

  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object, _Consumer$contextType);
  return {
    Provider: Provider,
    Consumer: Consumer
  };
}

var index = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createContext || createReactContext;

/* harmony default export */ __webpack_exports__["a"] = (index);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(26), __webpack_require__(5)))

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

var isarray = __webpack_require__(194)

/**
 * Expose `pathToRegexp`.
 */
module.exports = pathToRegexp
module.exports.parse = parse
module.exports.compile = compile
module.exports.tokensToFunction = tokensToFunction
module.exports.tokensToRegExp = tokensToRegExp

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */
var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
].join('|'), 'g')

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */
function parse (str, options) {
  var tokens = []
  var key = 0
  var index = 0
  var path = ''
  var defaultDelimiter = options && options.delimiter || '/'
  var res

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0]
    var escaped = res[1]
    var offset = res.index
    path += str.slice(index, offset)
    index = offset + m.length

    // Ignore already escaped sequences.
    if (escaped) {
      path += escaped[1]
      continue
    }

    var next = str[index]
    var prefix = res[2]
    var name = res[3]
    var capture = res[4]
    var group = res[5]
    var modifier = res[6]
    var asterisk = res[7]

    // Push the current path onto the tokens.
    if (path) {
      tokens.push(path)
      path = ''
    }

    var partial = prefix != null && next != null && next !== prefix
    var repeat = modifier === '+' || modifier === '*'
    var optional = modifier === '?' || modifier === '*'
    var delimiter = res[2] || defaultDelimiter
    var pattern = capture || group

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
    })
  }

  // Match any characters still remaining.
  if (index < str.length) {
    path += str.substr(index)
  }

  // If the path exists, push it onto the end.
  if (path) {
    tokens.push(path)
  }

  return tokens
}

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */
function compile (str, options) {
  return tokensToFunction(parse(str, options), options)
}

/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */
function encodeURIComponentPretty (str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */
function encodeAsterisk (str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction (tokens, options) {
  // Compile all the tokens into regexps.
  var matches = new Array(tokens.length)

  // Compile all the patterns before compilation.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))
    }
  }

  return function (obj, opts) {
    var path = ''
    var data = obj || {}
    var options = opts || {}
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i]

      if (typeof token === 'string') {
        path += token

        continue
      }

      var value = data[token.name]
      var segment

      if (value == null) {
        if (token.optional) {
          // Prepend partial segment prefixes.
          if (token.partial) {
            path += token.prefix
          }

          continue
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined')
        }
      }

      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
        }

        if (value.length === 0) {
          if (token.optional) {
            continue
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty')
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j])

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment
        }

        continue
      }

      segment = token.asterisk ? encodeAsterisk(value) : encode(value)

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
      }

      path += token.prefix + segment
    }

    return path
  }
}

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */
function escapeString (str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
}

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */
function escapeGroup (group) {
  return group.replace(/([=!:$\/()])/g, '\\$1')
}

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */
function attachKeys (re, keys) {
  re.keys = keys
  return re
}

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */
function flags (options) {
  return options && options.sensitive ? '' : 'i'
}

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */
function regexpToRegexp (path, keys) {
  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g)

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      })
    }
  }

  return attachKeys(path, keys)
}

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function arrayToRegexp (path, keys, options) {
  var parts = []

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source)
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))

  return attachKeys(regexp, keys)
}

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function stringToRegexp (path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options)
}

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */
function tokensToRegExp (tokens, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options)
    keys = []
  }

  options = options || {}

  var strict = options.strict
  var end = options.end !== false
  var route = ''

  // Iterate over the tokens and create our regexp string.
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i]

    if (typeof token === 'string') {
      route += escapeString(token)
    } else {
      var prefix = escapeString(token.prefix)
      var capture = '(?:' + token.pattern + ')'

      keys.push(token)

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*'
      }

      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?'
        } else {
          capture = prefix + '(' + capture + ')?'
        }
      } else {
        capture = prefix + '(' + capture + ')'
      }

      route += capture
    }
  }

  var delimiter = escapeString(options.delimiter || '/')
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter

  // In non-strict mode we allow a slash at the end of match. If the path to
  // match already ends with a slash, we remove it for consistency. The slash
  // is valid at the end of a path match, not in the middle. This is important
  // in non-ending mode, where "/test/" shouldn't match "/test//route".
  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'
  }

  if (end) {
    route += '$'
  } else {
    // In non-ending mode, we need the capturing groups to match as much as
    // possible by using a positive lookahead to the end or next path segment.
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys)
}

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */
function pathToRegexp (path, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options)
    keys = []
  }

  options = options || {}

  if (path instanceof RegExp) {
    return regexpToRegexp(path, /** @type {!Array} */ (keys))
  }

  if (isarray(path)) {
    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
  }

  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
}


/***/ }),
/* 194 */
/***/ (function(module, exports) {

module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var reactIs = __webpack_require__(27);

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above


  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);

      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }

    var keys = getOwnPropertyNames(sourceComponent);

    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }

    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }

  return targetComponent;
}

module.exports = hoistNonReactStatics;


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var InputsDoc = /** @class */ (function (_super) {
    __extends(InputsDoc, _super);
    function InputsDoc(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            inlineLabel: false,
            required: true,
            disabled: false,
            invalid: false
        };
        return _this;
    }
    InputsDoc.prototype.render = function () {
        var _this = this;
        return (React.createElement("section", { className: 'docs-page__container' },
            React.createElement("h2", { className: 'docs-page__h2' }, "Input"),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <Input value={value} maxLength={30} required={true} />\n                "),
            React.createElement("p", { className: 'docs-page__paragraph' }),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: 'docs-page__content-row docs-page__content-row--no-margin' },
                        React.createElement("div", { className: 'form__row' },
                            React.createElement(app_typescript_1.CheckGroup, null,
                                React.createElement(app_typescript_1.Checkbox, { checked: this.state.required, label: { text: 'Required input' }, onChange: function (value) { _this.setState({ required: value }); } }),
                                React.createElement(app_typescript_1.Checkbox, { checked: this.state.disabled, label: { text: 'Disabled input' }, onChange: function (value) { _this.setState({ disabled: value }); } }),
                                React.createElement(app_typescript_1.Checkbox, { checked: this.state.invalid, label: { text: 'Invalid input' }, onChange: function (value) { _this.setState({ invalid: value }); } }),
                                React.createElement(app_typescript_1.Checkbox, { checked: this.state.inlineLabel, label: { text: 'Label positioned inline' }, onChange: function (value) { _this.setState({ inlineLabel: value }); } }))),
                        React.createElement("div", { className: 'form__row' },
                            React.createElement(app_typescript_1.Input, { label: 'Input label', value: 'This is some value', maxLength: 30, error: 'This is error message', info: 'This is some hint message', inlineLabel: this.state.inlineLabel, required: this.state.required, disabled: this.state.disabled, invalid: this.state.invalid, onChange: function (value) { } })))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <Input label='Input label'\n                            value='This is some value'\n                            maxLength={30}\n                            error='This is error message'\n                            info='This is some hint message'\n                            inlineLabel={false}\n                            required={true}\n                            disabled={false}\n                            invalid={false}\n                            onChange={(value) => {}} />\n                    ")),
            React.createElement("h3", { className: 'docs-page__h3' }, "Props"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'value', isRequered: false, type: 'string', default: '/', description: 'Item value' }),
                React.createElement(app_typescript_1.Prop, { name: 'label', isRequered: false, type: 'string', default: '/', description: 'Input label' }),
                React.createElement(app_typescript_1.Prop, { name: 'maxLength', isRequered: false, type: 'number', default: '/', description: 'Sets max length for input text' }),
                React.createElement(app_typescript_1.Prop, { name: 'info', isRequered: false, type: 'string', default: '/', description: 'Hint text' }),
                React.createElement(app_typescript_1.Prop, { name: 'error', isRequered: false, type: 'string', default: '/', description: 'Error text' }),
                React.createElement(app_typescript_1.Prop, { name: 'inlineLabel', isRequered: false, type: 'boolean', default: 'false', description: 'Position labels as inline' }),
                React.createElement(app_typescript_1.Prop, { name: 'required', isRequered: false, type: 'boolean', default: 'false', description: 'Mark field as required' }),
                React.createElement(app_typescript_1.Prop, { name: 'disabled', isRequered: false, type: 'boolean', default: 'false', description: 'Mark field as disabled' }),
                React.createElement(app_typescript_1.Prop, { name: 'invalid', isRequered: false, type: 'boolean', default: 'false', description: 'Mark field as invalid' }))));
    };
    return InputsDoc;
}(React.Component));
exports.default = InputsDoc;


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var InputsDoc = /** @class */ (function (_super) {
    __extends(InputsDoc, _super);
    function InputsDoc(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            inlineLabel: false,
            required: true,
            disabled: false,
            invalid: false
        };
        return _this;
    }
    InputsDoc.prototype.render = function () {
        var _this = this;
        return (React.createElement("section", { className: 'docs-page__container' },
            React.createElement("h2", { className: 'docs-page__h2' }, "Select"),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <Select value={value} required={true}>\n                        <Option>Option 1</Option>\n                        <Option>Option 2</Option>\n                    </Select>\n                "),
            React.createElement("p", { className: 'docs-page__paragraph' }),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: 'docs-page__content-row docs-page__content-row--no-margin' },
                        React.createElement("div", { className: 'form__row' },
                            React.createElement(app_typescript_1.CheckGroup, null,
                                React.createElement(app_typescript_1.Checkbox, { checked: this.state.required, label: { text: 'Required input' }, onChange: function (value) { _this.setState({ required: value }); } }),
                                React.createElement(app_typescript_1.Checkbox, { checked: this.state.disabled, label: { text: 'Disabled input' }, onChange: function (value) { _this.setState({ disabled: value }); } }),
                                React.createElement(app_typescript_1.Checkbox, { checked: this.state.invalid, label: { text: 'Invalid input' }, onChange: function (value) { _this.setState({ invalid: value }); } }),
                                React.createElement(app_typescript_1.Checkbox, { checked: this.state.inlineLabel, label: { text: 'Label positioned inline' }, onChange: function (value) { _this.setState({ inlineLabel: value }); } }))),
                        React.createElement("div", { className: 'form__row' },
                            React.createElement(app_typescript_1.Select, { label: 'Select label', value: 'Option 2', error: 'This is error message', info: 'This is some hint message', inlineLabel: this.state.inlineLabel, required: this.state.required, disabled: this.state.disabled, invalid: this.state.invalid, onChange: function (value) { console.log(value); } },
                                React.createElement(app_typescript_1.Option, null, "Option 1"),
                                React.createElement(app_typescript_1.Option, null, "Option 2"))))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <Select label='Select label'\n                            value='Option 2'\n                            error='This is error message'\n                            info='This is some hint message'\n                            inlineLabel={false}\n                            required={true}\n                            disabled={false}\n                            invalid={false}\n                            onChange={(value) => {}}>\n                            <Option value=\"option-1\">Option 1</option>\n                            <Option value=\"option-2\">Option 2</option>\n                        </Select>\n                    ")),
            React.createElement("h3", { className: 'docs-page__h3' }, "Props"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'value', isRequered: false, type: 'string', default: '/', description: 'Item value' }),
                React.createElement(app_typescript_1.Prop, { name: 'label', isRequered: false, type: 'string', default: '/', description: 'Input label' }),
                React.createElement(app_typescript_1.Prop, { name: 'info', isRequered: false, type: 'string', default: '/', description: 'Hint text' }),
                React.createElement(app_typescript_1.Prop, { name: 'error', isRequered: false, type: 'string', default: '/', description: 'Error text' }),
                React.createElement(app_typescript_1.Prop, { name: 'inlineLabel', isRequered: false, type: 'boolean', default: 'false', description: 'Position labels as inline' }),
                React.createElement(app_typescript_1.Prop, { name: 'required', isRequered: false, type: 'boolean', default: 'false', description: 'Mark field as required' }),
                React.createElement(app_typescript_1.Prop, { name: 'disabled', isRequered: false, type: 'boolean', default: 'false', description: 'Mark field as disabled' }),
                React.createElement(app_typescript_1.Prop, { name: 'invalid', isRequered: false, type: 'boolean', default: 'false', description: 'Mark field as invalid' }))));
    };
    return InputsDoc;
}(React.Component));
exports.default = InputsDoc;


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var Components = __importStar(__webpack_require__(39));
var ButtonsDoc = /** @class */ (function (_super) {
    __extends(ButtonsDoc, _super);
    function ButtonsDoc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ButtonsDoc.prototype.render = function () {
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2" }, "Buttons"),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <Button text=\"button default\" onClick={()=> false} />\n                "),
            React.createElement("h3", { className: "docs-page__h3 docs-page__h3--small-top-m" }, "Coloring"),
            React.createElement("p", { className: "docs-page__paragraph" },
                "For Superdesk only ",
                React.createElement("em", null, "Default"),
                " and ",
                React.createElement("em", null, "Primary"),
                " buttons should be used in most cases. Other semantic colour options are allowed but should be used only in cases where a clear distinction between similarly important actions is needed (e.g. ",
                React.createElement("em", null, "Send To"),
                " versus ",
                React.createElement("em", null, "Publish"),
                " action)."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { text: "default", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "primary", type: "primary", onClick: function () { return false; } })),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Other colour options"),
                    React.createElement("div", { className: "docs-page__content-row docs-page__content-row--no-margin" },
                        React.createElement(app_typescript_1.Button, { text: "success", type: "success", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "warning", type: "warning", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "alert", type: "alert", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "highlight", type: "highlight", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "sd-green", type: "sd-green", onClick: function () { return false; } }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <Button text=\"default\" onClick={()=> false} />\n                        <Button text=\"primary\" type=\"primary\" onClick={()=> false} />\n                        // Other colour options\n                        <Button text=\"success\" type=\"success\" onClick={()=> false} />\n                        <Button text=\"warning\" type=\"warning\" onClick={()=> false} />\n                        <Button text=\"alert\" type=\"alert\" onClick={()=> false} />\n                        <Button text=\"highlight\" type=\"highlight\" onClick={()=> false} />\n                        <Button text=\"sd-green\" type=\"sd-green\" onClick={()=> false} />\n                    ")),
            React.createElement(Components.GraphicButtonsGroup, null,
                React.createElement(Components.GraphicButton, { graphic: 'design', text: 'View design guidelines', smallText: 'Design guidelines', link: '#/design/buttons' })),
            React.createElement("h3", { className: "docs-page__h3" }, "Hollow style"),
            React.createElement("p", { className: "docs-page__paragraph" },
                "Define prop ",
                React.createElement("code", null, "style=\"hollow\""),
                " to create a hollow buttons."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { text: "default", style: "hollow", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "primary", type: "primary", style: "hollow", onClick: function () { return false; } })),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Other colour options"),
                    React.createElement("div", { className: "docs-page__content-row docs-page__content-row--no-margin" },
                        React.createElement(app_typescript_1.Button, { text: "success", type: "success", style: "hollow", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "warning", type: "warning", style: "hollow", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "alert", type: "alert", style: "hollow", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "highlight", type: "highlight", style: "hollow", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "sd-green", type: "sd-green", style: "hollow", onClick: function () { return false; } }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <Button text=\"default\" style=\"hollow\" onClick={()=> false} />\n                        <Button text=\"primary\" type=\"primary\" style=\"hollow\" onClick={()=> false} />\n                        // Other colour options\n                        <Button text=\"success\" type=\"success\" style=\"hollow\" onClick={()=> false} />\n                        <Button text=\"warning\" type=\"warning\" style=\"hollow\" onClick={()=> false} />\n                        <Button text=\"alert\" type=\"alert\" style=\"hollow\" onClick={()=> false} />\n                        <Button text=\"highlight\" type=\"highlight\" style=\"hollow\" onClick={()=> false} />\n                        <Button text=\"sd-green\" type=\"sd-green\" style=\"hollow\" onClick={()=> false} />\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Text only (without background)"),
            React.createElement("p", { className: "docs-page__paragraph" },
                "Define prop ",
                React.createElement("code", null, "style=\"text-only\""),
                " for buttons without a background."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: "docs-page__content-row docs-page__content-row--no-margin" },
                        React.createElement(app_typescript_1.Button, { text: "default", style: "text-only", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "primary", type: "primary", style: "text-only", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "success", type: "success", style: "text-only", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "warning", type: "warning", style: "text-only", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "alert", type: "alert", style: "text-only", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "highlight", type: "highlight", style: "text-only", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "sd-green", type: "sd-green", style: "text-only", onClick: function () { return false; } }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <Button text=\"default\" style=\"text-only\" onClick={()=> false} />\n                        <Button text=\"primary\" type=\"primary\" style=\"text-only\" onClick={()=> false} />\n                        <Button text=\"success\" type=\"success\" style=\"text-only\" onClick={()=> false} />\n                        <Button text=\"warning\" type=\"warning\" style=\"text-only\" onClick={()=> false} />\n                        <Button text=\"alert\" type=\"alert\" style=\"text-only\" onClick={()=> false} />\n                        <Button text=\"highlight\" type=\"highlight\" style=\"text-only\" onClick={()=> false} />\n                        <Button text=\"sd-green\" type=\"sd-green\" style=\"text-only\" onClick={()=> false} />\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Sizing"),
            React.createElement("p", { className: "docs-page__paragraph" },
                "For the default button, no size has to be specified. To change the default size set the ",
                React.createElement("code", null, "size"),
                " value either to ",
                React.createElement("code", null, "small"),
                " or ",
                React.createElement("code", null, "large"),
                ". For the button to take the full width of the container add ",
                React.createElement("code", null,
                    "expand=",
                    '{true}'),
                "."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { text: "button small", size: "small", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "button default", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "button large", size: "large", onClick: function () { return false; } })),
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { text: "small expanded button", expand: true, size: "small", onClick: function () { return false; } })),
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { text: "default expanded button", expand: true, onClick: function () { return false; } })),
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { text: "large expanded button", expand: true, size: "large", onClick: function () { return false; } }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <Button text=\"button default\" size=\"default\" />\n                        <Button text=\"button expanded\" expand={true} />\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Disabled"),
            React.createElement("p", { className: "docs-page__paragraph" },
                React.createElement("code", null,
                    "disabled=",
                    '{true}')),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { text: "default", disabled: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "primary", type: "primary", disabled: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "success", type: "success", disabled: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "warning", type: "warning", disabled: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "alert", type: "alert", disabled: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "highlight", type: "highlight", disabled: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "sd-green", type: "sd-green", disabled: true, onClick: function () { return false; } })),
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { text: "default", style: "hollow", disabled: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "primary", type: "primary", style: "hollow", disabled: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "success", type: "success", style: "hollow", disabled: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "warning", type: "warning", style: "hollow", disabled: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "alert", type: "alert", style: "hollow", disabled: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "highlight", type: "highlight", style: "hollow", disabled: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "sd-green", type: "sd-green", style: "hollow", disabled: true, onClick: function () { return false; } })),
                    React.createElement("div", { className: "docs-page__content-row docs-page__content-row--no-margin" },
                        React.createElement(app_typescript_1.Button, { text: "default", style: "text-only", disabled: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "primary", type: "primary", style: "text-only", disabled: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "success", type: "success", style: "text-only", disabled: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "warning", type: "warning", style: "text-only", disabled: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "alert", type: "alert", style: "text-only", disabled: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "highlight", type: "highlight", style: "text-only", disabled: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "sd-green", type: "sd-green", style: "text-only", disabled: true, onClick: function () { return false; } }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <Button text=\"default\" disabled={true} onClick={()=> false} />\n                        <Button text=\"primary\" type=\"primary\" disabled={true} onClick={()=> false} />\n                        <Button text=\"success\" type=\"success\" disabled={true} onClick={()=> false} />\n                        <Button text=\"warning\" type=\"warning\" disabled={true} onClick={()=> false} />\n                        <Button text=\"alert\" type=\"alert\" disabled={true} onClick={()=> false} />\n                        <Button text=\"highlight\" type=\"highlight\" disabled={true} onClick={()=> false} />\n                        <Button text=\"sd-green\" type=\"sd-green\" disabled={true} onClick={()=> false} />\n\n                        <Button text=\"default\" style=\"hollow\" disabled={true} onClick={()=> false} />\n                        <Button text=\"primary\" type=\"primary\" style=\"hollow\" disabled={true} onClick={()=> false} />\n                        <Button text=\"success\" type=\"success\" style=\"hollow\" disabled={true} onClick={()=> false} />\n                        <Button text=\"warning\" type=\"warning\" style=\"hollow\" disabled={true} onClick={()=> false} />\n                        <Button text=\"alert\" type=\"alert\" style=\"hollow\" disabled={true} onClick={()=> false} />\n                        <Button text=\"highlight\" type=\"highlight\" style=\"hollow\" disabled={true} onClick={()=> false} />\n                        <Button text=\"sd-green\" type=\"sd-green\" style=\"hollow\" disabled={true} onClick={()=> false} />\n\n                        <Button text=\"default\" style=\"text-only\" disabled={true} onClick={()=> false} />\n                        <Button text=\"primary\" type=\"primary\" style=\"text-only\" disabled={true} onClick={()=> false} />\n                        <Button text=\"success\" type=\"success\" style=\"text-only\" disabled={true} onClick={()=> false} />\n                        <Button text=\"warning\" type=\"warning\" style=\"text-only\" disabled={true} onClick={()=> false} />\n                        <Button text=\"alert\" type=\"alert\" style=\"text-only\" disabled={true} onClick={()=> false} />\n                        <Button text=\"highlight\" type=\"highlight\" style=\"text-only\" disabled={true} onClick={()=> false} />\n                        <Button text=\"sd-green\" type=\"sd-green\" style=\"text-only\" disabled={true} onClick={()=> false} />\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Buttons with icon and text"),
            React.createElement("p", { className: "docs-page__paragraph" },
                "Buttons can be combined with icons from the icon font. Just add any of the available classes from the Icon font as a value of the ",
                React.createElement("code", null, "icon"),
                " prop."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Default size"),
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { text: "default", icon: "info-sign", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "primary", type: "primary", icon: "plus-sign", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "success", type: "success", icon: "ok", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "alert", type: "alert", icon: "warning-sign", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "default", icon: "info-sign", style: "hollow", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "primary", type: "primary", icon: "plus-sign", style: "hollow", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "success", type: "success", icon: "ok", style: "hollow", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "warning", type: "warning", icon: "warning-sign", style: "hollow", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "default", icon: "info-sign", disabled: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "primary", type: "primary", icon: "plus-sign", disabled: true, onClick: function () { return false; } })),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Large size"),
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { text: "default", icon: "info-sign", size: "large", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "primary", type: "primary", icon: "plus-sign", size: "large", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "success", type: "success", icon: "ok", size: "large", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "default", icon: "info-sign", style: "hollow", size: "large", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "primary", type: "primary", icon: "plus-sign", style: "hollow", size: "large", onClick: function () { return false; } })),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Small size"),
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { text: "default", icon: "info-sign", size: "small", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "primary", type: "primary", icon: "plus-sign", size: "small", onClick: function () { return false; } }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        // Default size\n                        <Button text=\"default\" icon=\"info-sign\" onClick={()=> false} />\n                        <Button text=\"primary\" type=\"primary\" icon=\"plus-sign\" onClick={()=> false} />\n                        <Button text=\"success\" type=\"success\" icon=\"ok\" onClick={()=> false} />\n                        <Button text=\"alert\" type=\"alert\" icon=\"warning-sign\" onClick={()=> false} />\n                        <Button text=\"default\" icon=\"info-sign\" style=\"hollow\" onClick={()=> false} />\n                        <Button text=\"primary\" type=\"primary\" icon=\"plus-sign\" style=\"hollow\" onClick={()=> false} />\n                        <Button text=\"success\" type=\"success\" icon=\"ok\" style=\"hollow\" onClick={()=> false} />\n                        <Button text=\"warning\" type=\"warning\" icon=\"warning-sign\" style=\"hollow\" onClick={()=> false} />\n                        <Button text=\"default\" icon=\"info-sign\" disabled={true} onClick={()=> false} />\n                        <Button text=\"primary\" type=\"primary\" icon=\"plus-sign\" disabled={true} onClick={()=> false} />\n\n                        // Large size\n                        <Button text=\"default\" icon=\"info-sign\" size=\"large\" onClick={()=> false} />\n                        <Button text=\"primary\" type=\"primary\" icon=\"plus-sign\" size=\"large\" onClick={()=> false} />\n                        <Button text=\"success\" type=\"success\" icon=\"ok\" size=\"large\" onClick={()=> false} />\n                        <Button text=\"default\" icon=\"info-sign\" style=\"hollow\" size=\"large\" onClick={()=> false} />\n                        <Button text=\"primary\" type=\"primary\" icon=\"plus-sign\" style=\"hollow\" size=\"large\" onClick={()=> false} />\n\n                        // Small size\n                        <Button text=\"default\" icon=\"info-sign\" size=\"small\" onClick={()=> false} />\n                        <Button text=\"primary\" type=\"primary\" icon=\"plus-sign\" size=\"small\" onClick={()=> false} />\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Buttons with icon font only"),
            React.createElement("p", { className: "docs-page__paragraph" },
                "Buttons can also contain only an icon, without any visible text. To achieve this specify the ",
                React.createElement("code", null, "icon"),
                " value and set ",
                React.createElement("code", null,
                    "iconOnly=",
                    true),
                ". The specified text value will be used for the ",
                React.createElement("code", null, "aria-label"),
                "."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Default"),
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { icon: "info-sign", text: "info-sign", iconOnly: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { type: "primary", icon: "plus-sign", text: "plus-sign", iconOnly: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { type: "success", icon: "ok", text: "ok", iconOnly: true, onClick: function () { return false; } })),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Large"),
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { type: "warning", icon: "exclamation-sign", text: "exclamation-sign", size: "large", iconOnly: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { type: "primary", icon: "plus-sign", text: "plus-sign", style: "hollow", size: "large", iconOnly: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { type: "highlight", icon: "bell", text: "bell", size: "large", iconOnly: true, onClick: function () { return false; } })),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Small"),
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { type: "alert", style: "hollow", icon: "kill", text: "kill", size: "small", iconOnly: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { icon: "calendar", size: "small", text: "calendar", iconOnly: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { type: "primary", style: "hollow", icon: "refresh", text: "refresh", size: "small", iconOnly: true, onClick: function () { return false; } })),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Circle default"),
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { size: "normal", icon: "info-sign", text: "info-sign", shape: "round", iconOnly: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { type: "primary", icon: "plus-large", text: "plus-large", shape: "round", iconOnly: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { type: "success", icon: "ok", text: "ok", shape: "round", iconOnly: true, onClick: function () { return false; } })),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Circle large"),
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { type: "warning", icon: "exclamation-sign", text: "exclamation-sign", size: "large", shape: "round", iconOnly: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { type: "primary", icon: "plus-large", text: "plus-large", style: "hollow", size: "large", shape: "round", iconOnly: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { type: "highlight", icon: "bell", text: "bell", size: "large", shape: "round", iconOnly: true, onClick: function () { return false; } })),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Circle small"),
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { type: "alert", icon: "close-small", text: "close-small", size: "small", shape: "round", iconOnly: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { type: "primary", icon: "plus-large", text: "plus-large", size: "small", shape: "round", iconOnly: true, onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { type: "sd-green", icon: "star", text: "star", size: "small", shape: "round", iconOnly: true, onClick: function () { return false; } }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        // Default\n                        <Button icon=\"info-sign\" text=\"info-sign\" iconOnly={true} onClick={()=> false} />\n                        <Button type=\"primary\" icon=\"plus-sign\" text=\"plus-sign\" iconOnly={true} onClick={()=> false} />\n                        <Button type=\"success\" icon=\"ok\" text=\"ok\" iconOnly={true} onClick={()=> false} />\n\n                        // Large\n                        <Button type=\"warning\" icon=\"exclamation-sign\" text=\"exclamation-sign\" size=\"large\" iconOnly={true} onClick={()=> false} />\n                        <Button type=\"primary\" icon=\"plus-sign\" text=\"plus-sign\" style=\"hollow\" size=\"large\" iconOnly={true} onClick={()=> false} />\n                        <Button type=\"highlight\" icon=\"bell\" text=\"bell\" size=\"large\" iconOnly={true} onClick={()=> false} />\n\n                        // Small\n                        <Button type=\"alert\" style=\"hollow\" icon=\"kill\" text=\"kill\" size=\"small\" iconOnly={true} onClick={()=> false} />\n                        <Button icon=\"calendar\" size=\"small\" text=\"calendar\" iconOnly={true} onClick={()=> false} />\n                        <Button type=\"primary\" style=\"hollow\" icon=\"refresh\" text=\"refresh\" size=\"small\" iconOnly={true} onClick={()=> false} />\n\n                        // Circle default\n                        <Button size=\"normal\" icon=\"info-sign\" text=\"info-sign\" shape=\"round\" iconOnly={true} onClick={()=> false} />\n                        <Button type=\"primary\" icon=\"plus-large\" text=\"plus-large\" shape=\"round\" iconOnly={true} onClick={()=> false} />\n                        <Button type=\"success\" icon=\"ok\" text=\"ok\" shape=\"round\" iconOnly={true} onClick={()=> false} />\n\n                        // Circle large\n                        <Button type=\"warning\" icon=\"exclamation-sign\" text=\"exclamation-sign\" size=\"large\" shape=\"round\" iconOnly={true} onClick={()=> false} />\n                        <Button type=\"primary\" icon=\"plus-large\" text=\"plus-large\" style=\"hollow\" size=\"large\" shape=\"round\" iconOnly={true} onClick={()=> false} />\n                        <Button type=\"highlight\" icon=\"bell\" text=\"bell\" size=\"large\" shape=\"round\" iconOnly={true} onClick={()=> false} />\n\n                        // Circle small\n                        <Button type=\"alert\" icon=\"close-small\" text=\"close-small\" size=\"small\" shape=\"round\" iconOnly={true} onClick={()=> false} />\n                        <Button type=\"primary\" icon=\"plus-large\" text=\"plus-large\" size=\"small\" shape=\"round\" iconOnly={true} onClick={()=> false} />\n                        <Button type=\"sd-green\" icon=\"star\" text=\"star\" size=\"small\" shape=\"round\" iconOnly={true} onClick={()=> false} />\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Dark UI"),
            React.createElement("p", { className: "docs-page__paragraph" },
                "To directly modify the button styles for a dark background set the prop ",
                React.createElement("code", null, "theme"),
                " to ",
                React.createElement("code", null, "\"dark\""),
                "."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Default style"),
                    React.createElement("div", { className: "docs-page__content-row docs-page__content-row--ui-dark" },
                        React.createElement(app_typescript_1.Button, { text: "default", theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "primary", type: "primary", theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "success", type: "success", theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "warning", type: "warning", theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "alert", type: "alert", theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "highlight", type: "highlight", theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "sd-green", type: "sd-green", theme: "dark", onClick: function () { return false; } })),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Hollow style"),
                    React.createElement("div", { className: "docs-page__content-row docs-page__content-row--ui-dark" },
                        React.createElement(app_typescript_1.Button, { text: "default", style: "hollow", theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "primary", type: "primary", style: "hollow", theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "success", type: "success", style: "hollow", theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "warning", type: "warning", style: "hollow", theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "alert", type: "alert", style: "hollow", theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "highlight", type: "highlight", style: "hollow", theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "sd-green", type: "sd-green", style: "hollow", theme: "dark", onClick: function () { return false; } })),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Text only style"),
                    React.createElement("div", { className: "docs-page__content-row docs-page__content-row--ui-dark" },
                        React.createElement(app_typescript_1.Button, { text: "default", theme: "dark", style: "text-only", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "primary", type: "primary", style: "text-only", theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "success", type: "success", style: "text-only", theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "warning", type: "warning", style: "text-only", theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "alert", type: "alert", style: "text-only", theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "highlight", type: "highlight", style: "text-only", theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "sd-green", type: "sd-green", style: "text-only", theme: "dark", onClick: function () { return false; } })),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Disabled"),
                    React.createElement("div", { className: "docs-page__content-row docs-page__content-row--ui-dark" },
                        React.createElement(app_typescript_1.Button, { text: "default", disabled: true, theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "primary", type: "primary", disabled: true, theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "success", type: "success", disabled: true, theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "warning", type: "warning", disabled: true, theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "alert", type: "alert", disabled: true, theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "highlight", type: "highlight", disabled: true, theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "sd-green", type: "sd-green", disabled: true, theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "default", style: "hollow", disabled: true, theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "primary", type: "primary", style: "hollow", disabled: true, theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "success", type: "success", style: "hollow", disabled: true, theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "warning", type: "warning", style: "hollow", disabled: true, theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "alert", type: "alert", style: "hollow", disabled: true, theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "highlight", type: "highlight", style: "hollow", disabled: true, theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "sd-green", type: "sd-green", style: "hollow", disabled: true, theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "default", disabled: true, style: "text-only", theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "primary", type: "primary", style: "text-only", disabled: true, theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "success", type: "success", style: "text-only", disabled: true, theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "warning", type: "warning", style: "text-only", disabled: true, theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "alert", type: "alert", style: "text-only", disabled: true, theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "highlight", type: "highlight", style: "text-only", disabled: true, theme: "dark", onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Button, { text: "sd-green", type: "sd-green", style: "text-only", disabled: true, theme: "dark", onClick: function () { return false; } }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        // Defaut size\n                        <Button text=\"default\" theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"primary\" type=\"primary\" theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"success\" type=\"success\" theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"warning\" type=\"warning\" theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"alert\" type=\"alert\" theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"highlight\" type=\"highlight\" theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"sd-green\" type=\"sd-green\" theme=\"dark\" onClick={()=> false} />\n\n                        // Hollow style\n                        <Button text=\"default\" style=\"hollow\" theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"primary\" type=\"primary\" style=\"hollow\" theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"success\" type=\"success\" style=\"hollow\" theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"warning\" type=\"warning\" style=\"hollow\" theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"alert\" type=\"alert\" style=\"hollow\" theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"highlight\" type=\"highlight\" style=\"hollow\" theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"sd-green\" type=\"sd-green\" style=\"hollow\" theme=\"dark\" onClick={()=> false} />\n\n                        // Text only style\n                        <Button text=\"default\" theme=\"dark\" style=\"text-only\" onClick={()=> false} />\n                        <Button text=\"primary\" type=\"primary\" style=\"text-only\" theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"success\" type=\"success\" style=\"text-only\" theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"warning\" type=\"warning\" style=\"text-only\" theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"alert\" type=\"alert\" style=\"text-only\" theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"highlight\" type=\"highlight\" style=\"text-only\" theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"sd-green\" type=\"sd-green\" style=\"text-only\" theme=\"dark\" onClick={()=> false} />\n\n                        // Disabled\n                        <Button text=\"default\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"primary\" type=\"primary\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"success\" type=\"success\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"warning\" type=\"warning\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"alert\" type=\"alert\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"highlight\" type=\"highlight\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"sd-green\" type=\"sd-green\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"default\" style=\"hollow\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"primary\" type=\"primary\" style=\"hollow\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"success\" type=\"success\" style=\"hollow\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"warning\" type=\"warning\" style=\"hollow\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"alert\" type=\"alert\" style=\"hollow\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"highlight\" type=\"highlight\" style=\"hollow\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"sd-green\" type=\"sd-green\" style=\"hollow\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"default\" disabled={true} style=\"text-only\" theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"primary\" type=\"primary\" style=\"text-only\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"success\" type=\"success\" style=\"text-only\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"warning\" type=\"warning\" style=\"text-only\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"alert\" type=\"alert\" style=\"text-only\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"highlight\" type=\"highlight\" style=\"text-only\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                        <Button text=\"sd-green\" type=\"sd-green\" style=\"text-only\" disabled={true} theme=\"dark\" onClick={()=> false} />\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Props"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'text', isRequered: true, type: 'string', default: '/', description: 'Text value of the Button. In the case of iconOnly buttons the value will be set to the aria-label.' }),
                React.createElement(app_typescript_1.Prop, { name: 'iconOnly', isRequered: false, type: 'boolean', default: 'false', description: 'This prop is used for Buttons with icons only. It set to true, it will visually hide the text and use the value for the aria-label.' }),
                React.createElement(app_typescript_1.Prop, { name: 'expand', isRequered: false, type: 'boolean', default: 'false', description: 'Spans the full width of the Button parent.' }),
                React.createElement(app_typescript_1.Prop, { name: 'style', isRequered: false, type: 'filled | hollow | text-only', default: 'filled', description: 'Buttons may be one of styles such as hollow buttons, buttons without background (text-only) or filled (default).' }),
                React.createElement(app_typescript_1.Prop, { name: 'shape', isRequered: false, type: 'square | round', default: 'square', description: 'Make shape of button round or default square.' }),
                React.createElement(app_typescript_1.Prop, { name: 'type', isRequered: false, type: 'default | primary | success | warning | alert | highlight | sd-green', default: 'default', description: 'Default + semantic colour variations (e.g. primary, success etc.).' }),
                React.createElement(app_typescript_1.Prop, { name: 'theme', isRequered: false, type: 'light | dark', default: 'light', description: 'Styles button for diffrent background.' }),
                React.createElement(app_typescript_1.Prop, { name: 'size', isRequered: false, type: 'small | normal | large', default: 'normal', description: 'Specifies a small, normal or large button.' }),
                React.createElement(app_typescript_1.Prop, { name: 'icon', isRequered: false, type: 'string', default: '/', description: 'Icon class name without the icon- part.' }),
                React.createElement(app_typescript_1.Prop, { name: 'disabled', isRequered: false, type: 'boolean', default: 'false', description: 'Disables the Button, preventing mouse events.' }),
                React.createElement(app_typescript_1.Prop, { name: 'onClick', isRequered: true, type: 'function', default: 'false', description: 'Callback fired when a button is pressed.' }))));
    };
    return ButtonsDoc;
}(React.Component));
exports.default = ButtonsDoc;


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Layout = void 0;
var React = __importStar(__webpack_require__(0));
exports.Layout = function (_a) {
    var header = _a.header, children = _a.children, theme = _a.theme;
    return (React.createElement("div", { className: 'sd-page-grid--test docs-page__full-width-helper', "data-theme": theme === 'dark' ? 'dark-ui' : null },
        React.createElement("div", { className: 'sd-main-menu' },
            React.createElement("div", { className: 'sd-main-menu__inner' })),
        React.createElement("header", { className: 'sd-top-menu' },
            React.createElement("a", { className: 'sd-top-menu__collapse-nav' },
                React.createElement("i", { className: 'icon-collapse icon--white' })),
            React.createElement("p", { className: 'sd-top-menu__header' }, header)),
        React.createElement("section", { id: '1', className: 'sd-content sd-content-wrapper' }, children),
        React.createElement("footer", { className: 'bottom-bar' }, "This is the footer.")));
};


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HeaderPanel = void 0;
var React = __importStar(__webpack_require__(0));
var HeaderPanel = /** @class */ (function (_super) {
    __extends(HeaderPanel, _super);
    function HeaderPanel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HeaderPanel.prototype.render = function () {
        return (React.createElement("div", { className: 'sd-main-content-grid__header' }, this.props.children));
    };
    return HeaderPanel;
}(React.PureComponent));
exports.HeaderPanel = HeaderPanel;


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MainPanel = void 0;
var React = __importStar(__webpack_require__(0));
var MainPanel = /** @class */ (function (_super) {
    __extends(MainPanel, _super);
    function MainPanel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MainPanel.prototype.render = function () {
        return (React.createElement("div", { className: 'sd-main-content-grid__content sd-padding--2' }, this.props.children));
    };
    return MainPanel;
}(React.PureComponent));
exports.MainPanel = MainPanel;


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OverlayPanel = void 0;
var React = __importStar(__webpack_require__(0));
var OverlayPanel = /** @class */ (function (_super) {
    __extends(OverlayPanel, _super);
    function OverlayPanel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OverlayPanel.prototype.render = function () {
        return (React.createElement("div", { className: 'sd-main-content-grid__overlay' },
            React.createElement("div", { className: 'sd-overlay-panel sd-overlay-panel--dark-ui' },
                React.createElement("div", { className: 'side-panel side-panel--shadow-right side-panel--dark-ui' }, this.props.children))));
    };
    return OverlayPanel;
}(React.PureComponent));
exports.OverlayPanel = OverlayPanel;


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RightPanel = void 0;
var React = __importStar(__webpack_require__(0));
var RightPanel = /** @class */ (function (_super) {
    __extends(RightPanel, _super);
    function RightPanel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RightPanel.prototype.render = function () {
        return (React.createElement("div", { className: 'sd-main-content-grid__preview' + (this.props.open ? ' open-preview' : '') }, this.props.children));
    };
    return RightPanel;
}(React.PureComponent));
exports.RightPanel = RightPanel;


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LeftPanel = void 0;
var React = __importStar(__webpack_require__(0));
var LeftPanel = /** @class */ (function (_super) {
    __extends(LeftPanel, _super);
    function LeftPanel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LeftPanel.prototype.render = function () {
        return (React.createElement("div", { className: 'sd-main-content-grid__filter' + (this.props.open ? ' open-filters' : '') }, this.props.children));
    };
    return LeftPanel;
}(React.PureComponent));
exports.LeftPanel = LeftPanel;


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubNav = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var SubNav = /** @class */ (function (_super) {
    __extends(SubNav, _super);
    function SubNav() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SubNav.prototype.render = function () {
        var classes = classnames_1.default('subnav', {
            'subnav-darker': this.props.theme,
        });
        return (React.createElement("div", { className: classes }, this.props.children));
    };
    return SubNav;
}(React.PureComponent));
exports.SubNav = SubNav;


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GraphicButtonsGroup = void 0;
var React = __importStar(__webpack_require__(0));
var GraphicButtonsGroup = /** @class */ (function (_super) {
    __extends(GraphicButtonsGroup, _super);
    function GraphicButtonsGroup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GraphicButtonsGroup.prototype.render = function () {
        return (React.createElement("div", { className: 'docs-page__button-grid' }, this.props.children));
    };
    return GraphicButtonsGroup;
}(React.PureComponent));
exports.GraphicButtonsGroup = GraphicButtonsGroup;


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GraphicButton = void 0;
var React = __importStar(__webpack_require__(0));
var GraphicButton = /** @class */ (function (_super) {
    __extends(GraphicButton, _super);
    function GraphicButton(props) {
        var _this = _super.call(this, props) || this;
        _this.onSubmit = function () {
            window.location.href = _this.props.link;
        };
        _this.onSubmit = _this.onSubmit.bind(_this);
        return _this;
    }
    GraphicButton.prototype.render = function () {
        return (React.createElement("a", { className: 'docs-page__graphic-btn', onClick: this.onSubmit },
            React.createElement("figure", { className: 'docs-page__graphic-btn-graphic' },
                React.createElement("img", { src: '/illustration-small--' + this.props.graphic + '.svg' })),
            React.createElement("label", { className: 'docs-page__graphic-btn-label' },
                React.createElement("span", { className: 'docs-page__text' }, this.props.text),
                React.createElement("span", { className: 'docs-page__small-text' }, this.props.smallText))));
    };
    return GraphicButton;
}(React.PureComponent));
exports.GraphicButton = GraphicButton;


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Panel = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var Panel = /** @class */ (function (_super) {
    __extends(Panel, _super);
    function Panel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Panel.prototype.render = function () {
        var _a;
        var classes = classnames_1.default('side-panel', (_a = {},
            _a["side-panel--" + this.props.side] = this.props.side,
            _a["side-panel--" + this.props.background] = this.props.background !== 'light' && this.props.background !== undefined,
            _a));
        return (React.createElement("div", { className: 'side-panel__container' },
            React.createElement("div", { className: classes }, this.props.children)));
    };
    return Panel;
}(React.PureComponent));
exports.Panel = Panel;


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PanelContent = void 0;
var React = __importStar(__webpack_require__(0));
var PanelContent = /** @class */ (function (_super) {
    __extends(PanelContent, _super);
    function PanelContent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PanelContent.prototype.render = function () {
        return (React.createElement("div", { className: "side-panel__content" }, this.props.children));
    };
    return PanelContent;
}(React.PureComponent));
exports.PanelContent = PanelContent;


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PanelContentBlock = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var PanelContentBlock = /** @class */ (function (_super) {
    __extends(PanelContentBlock, _super);
    function PanelContentBlock() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PanelContentBlock.prototype.render = function () {
        var _a;
        var classes = classnames_1.default('side-panel__content-block', this.props.className, (_a = {
                'side-panel__content-block--flex': this.props.flex
            },
            _a["side-panel__content-block--padding-" + this.props.padding] = this.props.padding,
            _a));
        return (React.createElement("div", { className: classes }, this.props.children));
    };
    return PanelContentBlock;
}(React.PureComponent));
exports.PanelContentBlock = PanelContentBlock;


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PanelHeader = void 0;
var React = __importStar(__webpack_require__(0));
var index_1 = __webpack_require__(2);
var PanelHeader = /** @class */ (function (_super) {
    __extends(PanelHeader, _super);
    function PanelHeader(props) {
        var _this = _super.call(this, props) || this;
        _this.handleFilter = _this.handleFilter.bind(_this);
        return _this;
    }
    PanelHeader.prototype.handleFilter = function () {
        this.props.handleFilterParent();
    };
    PanelHeader.prototype.render = function () {
        return (React.createElement("div", { className: "side-panel__header side-panel__header--border-b" },
            React.createElement("a", { className: "icn-btn side-panel__close", onClick: this.handleFilter },
                React.createElement(index_1.Icon, { name: 'close-small' })),
            React.createElement("h3", { className: "side-panel__heading" }, this.props.title),
            this.props.children));
    };
    return PanelHeader;
}(React.PureComponent));
exports.PanelHeader = PanelHeader;


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PanelFooter = void 0;
var React = __importStar(__webpack_require__(0));
var PanelFooter = /** @class */ (function (_super) {
    __extends(PanelFooter, _super);
    function PanelFooter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PanelFooter.prototype.render = function () {
        return (React.createElement("div", { className: "side-panel__footer side-panel__footer--button-box" },
            React.createElement("div", { className: "flex-grid flex-grid--boxed-small flex-grid--wrap-items flex-grid--small-2" }, this.props.children)));
    };
    return PanelFooter;
}(React.PureComponent));
exports.PanelFooter = PanelFooter;


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchBar = void 0;
var React = __importStar(__webpack_require__(0));
var classnames_1 = __importDefault(__webpack_require__(1));
var index_1 = __webpack_require__(2);
var SearchBar = /** @class */ (function (_super) {
    __extends(SearchBar, _super);
    function SearchBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SearchBar.prototype.render = function () {
        var _a;
        var classes = classnames_1.default('sd-searchbar', (_a = {},
            _a["sd-searchbar--" + this.props.type] = this.props.type,
            _a["sd-searchbar--" + this.props.type] = this.props.type !== 'expanded' && this.props.type !== undefined,
            _a));
        return (React.createElement("div", { className: "sd-searchbar" },
            React.createElement("label", { className: "sd-searchbar__icon" }),
            React.createElement("input", { id: "search-input", className: "sd-searchbar__input", type: "text", placeholder: this.props.placeholder }),
            React.createElement("button", { className: "sd-searchbar__cancel" },
                React.createElement(index_1.Icon, { name: 'remove-sign' })),
            React.createElement("button", { id: "sd-searchbar__search-btn", className: "sd-searchbar__search-btn" },
                React.createElement(index_1.Icon, { size: 'big', name: 'chevron-right' }))));
    };
    return SearchBar;
}(React.PureComponent));
exports.SearchBar = SearchBar;


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SidebarMenu = void 0;
var React = __importStar(__webpack_require__(0));
var Icon_1 = __webpack_require__(16);
var SidebarMenu = /** @class */ (function (_super) {
    __extends(SidebarMenu, _super);
    function SidebarMenu(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            index: -1,
            closeIndex: -1,
        };
        _this.handleClick = _this.handleClick.bind(_this);
        return _this;
    }
    SidebarMenu.prototype.handleClick = function (indexNumber) {
        this.setState({
            index: indexNumber,
        });
        if (this.state.index === indexNumber) {
            this.setState({
                closeIndex: indexNumber,
            });
        }
    };
    SidebarMenu.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", { className: 'sd-sidebar-menu sd-content-wrapper__left-tabs' },
            React.createElement("ul", { className: 'authoring-active' }, this.props.items.map(function (item, index) {
                if (item === 'divider') {
                    return (React.createElement("li", { key: index, className: 'sd-sidebar-menu__spacer' }));
                }
                else {
                    return (React.createElement("li", { key: index, "data-sd-tooltip": item['tooltip'], "data-flow": 'right' },
                        React.createElement("a", { className: 'sd-sidebar-menu__btn' + (index === _this.state.closeIndex ? ' sd-sidebar-menu__btn--closed ' : '') + (item['active'] ? ' sd-sidebar-menu__btn--active' : (index === _this.state.index ? ' sd-sidebar-menu__btn--active' : '')), onClick: function () { return _this.handleClick(index); } },
                            React.createElement("span", { className: 'sd-sidebar-menu__main-icon ' },
                                React.createElement(Icon_1.Icon, { size: item['size'], name: item['icon'] })),
                            React.createElement("i", { className: 'sd-sidebar-menu__helper-icon big-icon--chevron-left' }))));
                }
            }))));
    };
    return SidebarMenu;
}(React.PureComponent));
exports.SidebarMenu = SidebarMenu;


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LayoutContainer = void 0;
var React = __importStar(__webpack_require__(0));
var LayoutContainer = /** @class */ (function (_super) {
    __extends(LayoutContainer, _super);
    function LayoutContainer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LayoutContainer.prototype.render = function () {
        return (React.createElement("div", { className: 'sd-content-wrapper__main-content-area sd-main-content-grid comfort' }, this.props.children));
    };
    return LayoutContainer;
}(React.PureComponent));
exports.LayoutContainer = LayoutContainer;


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var LabelsDoc = /** @class */ (function (_super) {
    __extends(LabelsDoc, _super);
    function LabelsDoc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LabelsDoc.prototype.render = function () {
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2" }, "Labels"),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <Label text='default label'/>\n                "),
            React.createElement("p", { className: "docs-page__paragraph" }, "Labels are inline styles that can be dropped into body text. For example, labels are used to show the state of items in Superdesk."),
            React.createElement("h3", { className: "docs-page__h3 docs-page__h3--small-top-m" }, "Sizing"),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement(app_typescript_1.Label, { text: 'default label' }),
                        React.createElement(app_typescript_1.Label, { text: 'large label', size: 'large' })),
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement("p", { className: "docs-page__paragraph" }, "// No text transformation"),
                        React.createElement("p", { className: "docs-page__paragraph--small" },
                            "This version should be used only in combination with ",
                            React.createElement("code", null, "label--large"))),
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement(app_typescript_1.Label, { text: 'No text transform here', size: 'large', noTransform: true, type: 'primary' }),
                        React.createElement(app_typescript_1.Label, { text: 'No text transform', size: 'large', noTransform: true, type: 'success' })),
                    React.createElement("div", { className: 'docs-page__content-row' })),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <Label text='default label'/>\n                        <Label text='large label' size='large'/>\n                        \n                        // No text transformation\n                        <Label text='No text transform here' size='large' noTransform={true} type='primary'/>\n                        <Label text='No text transform' size='large' noTransform={true} type='success'/>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Colors"),
            React.createElement("p", { className: "docs-page__paragraph" },
                "By default, labels use the standard semantic colour palette (e.g. primary, success, warning etc.). Due to the substantial use of the label component in Superdesk this standard palette is often very limiting. In such cases, the colours can be extended by adding the ",
                React.createElement("code", null, "color"),
                " prop with a value of any of the colours from the ",
                React.createElement("a", { className: 'link', href: 'https://ui-framework.superdesk.org/#/components/colors', target: 'blank' }, "extended colour palette"),
                "."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Basic colour palette"),
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement(app_typescript_1.Label, { text: 'default label' }),
                        React.createElement(app_typescript_1.Label, { text: 'primary label', type: 'primary' }),
                        React.createElement(app_typescript_1.Label, { text: 'success label', type: 'success' }),
                        React.createElement(app_typescript_1.Label, { text: 'warning label', type: 'warning' }),
                        React.createElement(app_typescript_1.Label, { text: 'alert label', type: 'alert' }),
                        React.createElement(app_typescript_1.Label, { text: 'highlight label', type: 'highlight' }),
                        React.createElement(app_typescript_1.Label, { text: 'sd-green label', type: 'sd-green' })),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Extended colour examples"),
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement(app_typescript_1.Label, { text: 'indigo--700', color: 'indigo--700' }),
                        React.createElement(app_typescript_1.Label, { text: 'pink--400', color: 'pink--400' }),
                        React.createElement(app_typescript_1.Label, { text: 'cyan--600', color: 'cyan--600' }),
                        React.createElement(app_typescript_1.Label, { text: 'light-green--700', color: 'light-green--700' }),
                        React.createElement(app_typescript_1.Label, { text: 'deep-orange--700', color: 'deep-orange--700' }),
                        React.createElement(app_typescript_1.Label, { text: 'lime--700', color: 'lime--700' }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <Label text='default label'/>\n                        <Label text='primary label' type='primary'/>\n                        <Label text='success label' type='success'/>\n                        <Label text='warning label' type='warning'/>\n                        <Label text='alert label' type='alert'/>\n                        <Label text='highlight label' type='highlight'/>\n                        <Label text='sd-green label' type='sd-green'/>\n                        // Extended colour examples\n                        <Label text='indigo--700' color='indigo--700'/>\n                        <Label text='pink--400' color='pink--400'/>\n                        <Label text='cyan--600' color='cyan--600'/>\n                        <Label text='light-green--700' color='light-green--700'/>\n                        <Label text='deep-orange--700' color='deep-orange--700'/>\n                        <Label text='lime--700' color='lime--700'/>  \n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Hollow style"),
            React.createElement("p", { className: "docs-page__paragraph" },
                "Add prop",
                React.createElement("code", null, "style='hollow'"),
                "."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement(app_typescript_1.Label, { text: 'default label', style: 'hollow' }),
                        React.createElement(app_typescript_1.Label, { text: 'primary label', type: 'primary', style: 'hollow' }),
                        React.createElement(app_typescript_1.Label, { text: 'success label', type: 'success', style: 'hollow' }),
                        React.createElement(app_typescript_1.Label, { text: 'warning label', type: 'warning', style: 'hollow' }),
                        React.createElement(app_typescript_1.Label, { text: 'alert label', type: 'alert', style: 'hollow' }),
                        React.createElement(app_typescript_1.Label, { text: 'highlight label', type: 'highlight', style: 'hollow' }),
                        React.createElement(app_typescript_1.Label, { text: 'sd-gren label', type: 'sd-green', style: 'hollow' })),
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement(app_typescript_1.Label, { text: 'hollow large', size: 'large', style: 'hollow' }),
                        React.createElement(app_typescript_1.Label, { text: 'hollow large', size: 'large', type: 'primary', style: 'hollow' }),
                        React.createElement(app_typescript_1.Label, { text: 'Hollow, large & no text transformation', type: 'highlight', size: 'large', style: 'hollow', noTransform: true })),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Hollow style with extended colour palette"),
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement(app_typescript_1.Label, { text: 'blue--800 label', style: 'hollow', color: 'blue--800' }),
                        React.createElement(app_typescript_1.Label, { text: 'purple--400 label', style: 'hollow', color: 'purple--400' }),
                        React.createElement(app_typescript_1.Label, { text: 'blue-grey--600 label', style: 'hollow', color: 'blue-grey--600' }),
                        React.createElement(app_typescript_1.Label, { text: 'light-green--700 label', style: 'hollow', color: 'light-green--700' }),
                        React.createElement(app_typescript_1.Label, { text: 'deep-purple--600 label', style: 'hollow', color: 'deep-purple--600' }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <Label text='default label' style='hollow'/>\n                        <Label text='primary label' type='primary' style='hollow'/>\n                        <Label text='success label' type='success' style='hollow'/>\n                        <Label text='warning label' type='warning' style='hollow'/>\n                        <Label text='alert label' type='alert' style='hollow'/>\n                        <Label text='highlight label' type='highlight' style='hollow'/>\n                        <Label text='sd-gren label' type='sd-green' style='hollow'/>\n\n                        <Label text='hollow large' size='large' style='hollow'/>\n                        <Label text='hollow large' size='large' type='primary' style='hollow'/>\n                        <Label text='Hollow, large & no text transformation' type='highlight' size='large' style='hollow' noTransform={true}/>\n\n                        // Hollow style with extended colour palette\n                        <Label text='blue--800 label' style='hollow' color='blue--800'/>\n                        <Label text='purple--400 label' style='hollow' color='purple--400'/>\n                        <Label text='blue-grey--600 label' style='hollow' color='blue-grey--600'/>\n                        <Label text='light-green--700 label' style='hollow' color='light-green--700'/>\n                        <Label text='deep-purple--600 label' style='hollow' color='deep-purple--600'/>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Link label"),
            React.createElement("p", { className: "docs-page__paragraph" }, "This type of label should be used only in highly specific cases (for instance inline with other regular labels inside a list item). For most other scenarios, use of the button component is strongly suggested."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement(app_typescript_1.Label, { text: 'default label', onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Label, { text: 'primary label', type: 'primary', onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Label, { text: 'success label', type: 'success', onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Label, { text: 'alert label', type: 'alert', onClick: function () { return false; } })),
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement(app_typescript_1.Label, { text: 'default label', style: 'hollow', onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Label, { text: 'primary label', type: 'primary', style: 'hollow', onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Label, { text: 'success label', type: 'success', style: 'hollow', onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Label, { text: 'alert label', type: 'alert', style: 'hollow', onClick: function () { return false; } }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <Label text='default label' onClick={()=> false}/>\n                        <Label text='primary label' type='primary' onClick={()=> false}/>\n                        <Label text='success label' type='success' onClick={()=> false}/>\n                        <Label text='alert label' type='alert'/>\n\n                        <Label text='default label' style='hollow' onClick={()=> false}/>\n                        <Label text='primary label' type='primary' style='hollow' onClick={()=> false}/>\n                        <Label text='success label' type='success' style='hollow' onClick={()=> false}/>\n                        <Label text='alert label' type='alert' style='hollow' onClick={()=> false}/>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Props"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'text', isRequered: true, type: 'string', default: '/', description: 'Label text value' }),
                React.createElement(app_typescript_1.Prop, { name: 'type', isRequered: false, type: 'default | primary | success | warning | alert | highlight | sd-green', default: 'default', description: 'Default + semantic colour variations (e.g. primary, success etc.).' }),
                React.createElement(app_typescript_1.Prop, { name: 'color', isRequered: false, type: 'string', default: '/', description: 'Extended color palette from the framework (e.g. red--500);  NOTE: The label can have either a Type or Color defined, not both at the same time.' }),
                React.createElement(app_typescript_1.Prop, { name: 'size', isRequered: false, type: 'small | normal | large', default: 'normal', description: 'Specifies a small, normal or large label.' }),
                React.createElement(app_typescript_1.Prop, { name: 'noTransform', isRequered: false, type: 'boolean', default: 'false', description: 'Transforms text to uppercase.' }),
                React.createElement(app_typescript_1.Prop, { name: 'style', isRequered: false, type: 'filled | hollow', default: 'filled', description: 'Label may be one of styles hollow label or default filled.' }))));
    };
    return LabelsDoc;
}(React.Component));
exports.default = LabelsDoc;


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var ButtonGroupsDoc = /** @class */ (function (_super) {
    __extends(ButtonGroupsDoc, _super);
    function ButtonGroupsDoc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ButtonGroupsDoc.prototype.render = function () {
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2" }, "Button group"),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <ButtonGroup align='left'>\n                        <Button text='one' style='hollow' onClick={()=> false} />\n                        <Button text='two' style='hollow' onClick={()=> false} />\n                    </ButtonGroup>\n                "),
            React.createElement("p", { className: "docs-page__paragraph" },
                React.createElement("code", null, "ButtonGroup"),
                " is a wrapper component used to group different button components. It supports ",
                React.createElement("code", null, "Button"),
                ", ",
                React.createElement("code", null, "IconButton"),
                " and ",
                React.createElement("code", null, "NavButton"),
                " as children."),
            React.createElement("p", { className: "docs-page__paragraph" },
                "By default the buttons components are grouped horizontally, to group them vertical add ",
                React.createElement("code", null, "orientation='vertical'"),
                ". Note that vertical alignment will stretch the buttons to the full width of the container, as it is intended for use in narrower layout modules."),
            React.createElement("p", { className: "docs-page__paragraph" }, "Other available options are alignment (left, right and center) and compact mode (less space between buttons)."),
            React.createElement("h3", { className: "docs-page__h3 docs-page__h3--small-top-m " }, "Horizontal"),
            React.createElement(app_typescript_1.Alert, { style: 'hollow', size: 'small', type: 'primary' }, "NOTE: Alignment will work only in parent elements with display: flex;"),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Left"),
                    React.createElement("div", { className: "form__row form__row--flex docs-page__test-helper-2" },
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'left' },
                            React.createElement(app_typescript_1.Button, { text: 'one', style: 'hollow', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'two', style: 'hollow', onClick: function () { return false; } }))),
                    React.createElement("div", { className: "form__row form__row--flex docs-page__test-helper-2 sd-margin-t--2" },
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'left' },
                            React.createElement(app_typescript_1.IconButton, { icon: 'home', tooltip: { text: 'Home' }, onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.IconButton, { icon: 'bell', tooltip: { text: 'Notifications' }, onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.IconButton, { icon: 'heart', tooltip: { text: 'Favorites' }, onClick: function () { return false; } }))),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Right"),
                    React.createElement("div", { className: "form__row form__row--flex docs-page__test-helper-2" },
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'right' },
                            React.createElement(app_typescript_1.Button, { text: 'Cancel', style: 'hollow', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'Save', type: 'primary', onClick: function () { return false; } }))),
                    React.createElement("div", { className: "form__row form__row--flex docs-page__test-helper-2 sd-margin-t--2" },
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'right' },
                            React.createElement(app_typescript_1.IconButton, { icon: 'trash', tooltip: { text: 'Delete' }, onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.IconButton, { icon: 'pencil', tooltip: { text: 'Edit' }, onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.IconButton, { icon: 'close-small', tooltip: { text: 'Close' }, onClick: function () { return false; } }))),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Center"),
                    React.createElement("div", { className: "form__row form__row--flex docs-page__test-helper-2" },
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'center' },
                            React.createElement(app_typescript_1.Button, { text: 'one', style: 'hollow', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'two', style: 'hollow', onClick: function () { return false; } }))),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Left + Center + Right"),
                    React.createElement("div", { className: "form__row form__row--flex docs-page__test-helper-2" },
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'left' },
                            React.createElement(app_typescript_1.Button, { text: 'one', style: 'hollow', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'two', style: 'hollow', onClick: function () { return false; } })),
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'center' },
                            React.createElement(app_typescript_1.Button, { text: 'three', style: 'hollow', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'four', style: 'hollow', onClick: function () { return false; } })),
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'right' },
                            React.createElement(app_typescript_1.Button, { text: 'Cancel', style: 'hollow', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'Save', type: 'primary', onClick: function () { return false; } })))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        // Left\n                        <ButtonGroup align='left'>\n                            <Button text='one' style='hollow' onClick={()=> false} />\n                            <Button text='two' style='hollow' onClick={()=> false} />\n                        </ButtonGroup>\n                        <ButtonGroup align='left'>\n                            <IconButton icon='home' tooltip={{text:'Home'}} onClick={()=> false} />\n                            <IconButton icon='bell' tooltip={{text:'Notifications'}} onClick={()=> false} />\n                            <IconButton icon='heart' tooltip={{text:'Favorites'}} onClick={()=> false} />\n                        </ButtonGroup>\n\n                        // Right\n                        <ButtonGroup align='right'>\n                            <Button text='Cancel' style='hollow' onClick={()=> false} />\n                            <Button text='Save' type='primary' onClick={()=> false} />\n                        </ButtonGroup>\n\n                        <ButtonGroup align='right'>\n                            <IconButton icon='trash' tooltip={{text:'Delete'}} onClick={()=> false} />\n                            <IconButton icon='pencil' tooltip={{text:'Edit'}} onClick={()=> false} />\n                            <IconButton icon='close-small' tooltip={{text:'Close'}} onClick={()=> false} />\n                        </ButtonGroup>\n\n                        // Left + Center + Right\n                        <ButtonGroup align='left'>\n                            <Button text='one' style='hollow' onClick={()=> false} />\n                            <Button text='two' style='hollow' onClick={()=> false} />\n                        </ButtonGroup>\n                        <ButtonGroup align='center'>\n                            <Button text='three' style='hollow' onClick={()=> false} />\n                            <Button text='four' style='hollow' onClick={()=> false} />\n                        </ButtonGroup>\n                        <ButtonGroup align='right'>\n                            <Button text='Cancel' style='hollow' onClick={()=> false} />\n                            <Button text='Save' type='primary' onClick={()=> false} />\n                        </ButtonGroup>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Vertical"),
            React.createElement("p", { className: "docs-page__paragraph" },
                "Note that the ",
                React.createElement("code", null, "align"),
                " prop doesn't work in combination with ",
                React.createElement("code", null, "orientation='vertical'"),
                ". The vertical orientation will stretch buttons to take the full width of the container. Limit this option only to the ",
                React.createElement("code", null, "Button"),
                " component in narrow layout modules."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: "form__row form__row--flex docs-page__test-helper-2" },
                        React.createElement(app_typescript_1.ButtonGroup, { orientation: 'vertical' },
                            React.createElement(app_typescript_1.Button, { text: 'one', style: 'hollow', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'two', style: 'hollow', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'three', style: 'hollow', onClick: function () { return false; } })))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <ButtonGroup orientation='vertical'>\n                            <Button text='one' style='hollow' onClick={()=> false} />\n                            <Button text='two' style='hollow' onClick={()=> false} />\n                            <Button text='three' style='hollow' onClick={()=> false} />\n                        </ButtonGroup>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Props"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'orientation', isRequered: false, type: 'horizontal | vertical', default: 'horizontal', description: 'Specifies orientation for child components of ButtonGroup' }),
                React.createElement(app_typescript_1.Prop, { name: 'spaces', isRequered: false, type: 'comfort | compact', default: 'comfort', description: 'Space between buttons: comfort (default) or compact.' }),
                React.createElement(app_typescript_1.Prop, { name: 'align', isRequered: false, type: 'left | right | center | inline', default: 'left', description: 'Alignment in relation to the parent element. Inline value renders the ButtonGroup without pushing surrounding elements.' }),
                React.createElement(app_typescript_1.Prop, { name: 'padded', isRequered: false, type: 'boolean', default: 'false', description: 'Adds predefined space to the side based on alignment and orientation.' })),
            React.createElement("h2", { className: "docs-page__h2 sd-margin-t--5" }, "Button divider"),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <Divider size=\"large\" border={true} />\n                "),
            React.createElement("p", { className: "docs-page__paragraph" },
                React.createElement("code", null, "Divider"),
                " is a small helper component used to add additional space between ",
                React.createElement("code", null, "Button"),
                " or ",
                React.createElement("code", null, "IconButton"),
                " items inside a single ",
                React.createElement("code", null, "ButtonGroup"),
                "."),
            React.createElement("p", { className: "docs-page__paragraph" },
                "By default the divider will add only a space specified through the ",
                React.createElement("code", null, "size"),
                " prop value. For more visual sepparation between items a dotted border can be added \u2013 just append ",
                React.createElement("code", null,
                    "border=",
                    '{true}'),
                " to the component."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Default (small)"),
                    React.createElement("div", { className: "form__row form__row--flex docs-page__test-helper-2" },
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'left' },
                            React.createElement(app_typescript_1.Button, { text: 'one', style: 'hollow', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'two', style: 'hollow', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Divider, null),
                            React.createElement(app_typescript_1.Button, { text: 'three', style: 'hollow', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'four', style: 'hollow', onClick: function () { return false; } }))),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Small with border"),
                    React.createElement("div", { className: "form__row form__row--flex docs-page__test-helper-2" },
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'right' },
                            React.createElement(app_typescript_1.Button, { text: 'one', style: 'hollow', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'two', style: 'hollow', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Divider, { border: true }),
                            React.createElement(app_typescript_1.Button, { text: 'Cancel', style: 'hollow', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'Save', type: 'primary', onClick: function () { return false; } }))),
                    React.createElement("div", { className: "form__row form__row--flex docs-page__test-helper-2 sd-margin-t--2" },
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'center' },
                            React.createElement(app_typescript_1.IconButton, { icon: 'undo', tooltip: { text: 'Undo' }, onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.IconButton, { icon: 'redo', tooltip: { text: 'Redo' }, onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.IconButton, { icon: 'print', tooltip: { text: 'Print' }, onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Divider, { border: true }),
                            React.createElement(app_typescript_1.IconButton, { icon: 'bold', tooltip: { text: 'Bold' }, onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.IconButton, { icon: 'italic', tooltip: { text: 'Italic' }, onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.IconButton, { icon: 'underline', tooltip: { text: 'Underline' }, onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.IconButton, { icon: 'strikethrough', tooltip: { text: 'Strikethrough' }, onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Divider, { border: true }),
                            React.createElement(app_typescript_1.IconButton, { icon: 'align-left', tooltip: { text: 'Align left' }, onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.IconButton, { icon: 'align-center', tooltip: { text: 'Align center' }, onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.IconButton, { icon: 'align-right', tooltip: { text: 'Align right' }, onClick: function () { return false; } }))),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Medium"),
                    React.createElement("div", { className: "form__row form__row--flex docs-page__test-helper-2 sd-margin-t--2" },
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'left' },
                            React.createElement(app_typescript_1.IconButton, { icon: 'home', tooltip: { text: 'Home' }, onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.IconButton, { icon: 'slideshow', tooltip: { text: 'Gallery' }, onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Divider, { size: 'medium' }),
                            React.createElement(app_typescript_1.IconButton, { icon: 'bell', tooltip: { text: 'Notifications' }, onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.IconButton, { icon: 'heart', tooltip: { text: 'Favorites' }, onClick: function () { return false; } })))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        // // Default (small)\n                        <ButtonGroup align='left'>\n                            <Button text='one' style='hollow' onClick={()=> false} />\n                            <Button text='two' style='hollow' onClick={()=> false} />\n                            <Divider />\n                            <Button text='three' style='hollow' onClick={()=> false} />\n                            <Button text='four' style='hollow' onClick={()=> false} />\n                        </ButtonGroup>\n\n                        // Small with border\n                        <ButtonGroup align='right'>\n                            <Button text='one' style='hollow' onClick={()=> false} />\n                            <Button text='two' style='hollow' onClick={()=> false} />\n                            <Divider border={true} />\n                            <Button text='Cancel' style='hollow' onClick={()=> false} />\n                            <Button text='Save' type='primary' onClick={()=> false} />\n                        </ButtonGroup>\n\n                        <ButtonGroup align='center'>\n                            <IconButton icon='undo' tooltip={{text:'Undo'}} onClick={()=> false} />\n                            <IconButton icon='redo' tooltip={{text:'Redo'}} onClick={()=> false} />\n                            <IconButton icon='print' tooltip={{text:'Print'}} onClick={()=> false} />\n                            <Divider border={true} />\n                            <IconButton icon='bold' tooltip={{text:'Bold'}} onClick={()=> false} />\n                            <IconButton icon='italic' tooltip={{text:'Italic'}} onClick={()=> false} />\n                            <IconButton icon='underline' tooltip={{text:'Underline'}} onClick={()=> false} />\n                            <IconButton icon='strikethrough' tooltip={{text:'Strikethrough'}} onClick={()=> false} />\n                            <Divider border={true} />\n                            <IconButton icon='align-left' tooltip={{text:'Align left'}} onClick={()=> false} />\n                            <IconButton icon='align-center' tooltip={{text:'Align center'}} onClick={()=> false} />\n                            <IconButton icon='align-right' tooltip={{text:'Align right'}} onClick={()=> false} />\n                        </ButtonGroup>\n\n                        // Medium\n                        <ButtonGroup align='left'>\n                            <IconButton icon='home' tooltip={{text:'Home'}} onClick={()=> false} />\n                            <IconButton icon='slideshow' tooltip={{text:'Gallery'}} onClick={()=> false} />\n                            <Divider size='medium' />\n                            <IconButton icon='bell' tooltip={{text:'Notifications'}} onClick={()=> false} />\n                            <IconButton icon='heart' tooltip={{text:'Favorites'}} onClick={()=> false} />\n                        </ButtonGroup>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Vertical"),
            React.createElement("p", { className: "docs-page__paragraph" }, "No additional adjustments are needed for Dividers inside a vertically oriented ButtonGroup, they will adapt automatically."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: "form__row form__row--flex docs-page__test-helper-2" },
                        React.createElement(app_typescript_1.ButtonGroup, { orientation: 'vertical' },
                            React.createElement(app_typescript_1.Button, { text: 'one', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'two', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Divider, { size: "medium", border: true }),
                            React.createElement(app_typescript_1.Button, { text: 'three', type: 'primary', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'four', type: 'primary', onClick: function () { return false; } })))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <ButtonGroup orientation='vertical'>\n                            <Button text='one' onClick={()=> false} />\n                            <Button text='two' onClick={()=> false} />\n                            <Divider size=\"medium\" border={true} />\n                            <Button text='three' type='primary' onClick={()=> false} />\n                            <Button text='four' type='primary' onClick={()=> false} />\n                        </ButtonGroup>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Props"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'size', isRequered: false, type: 'mini | small | medium | large', default: 'small', description: 'Specifies the size of the divider (spacing between buttons).' }),
                React.createElement(app_typescript_1.Prop, { name: 'border', isRequered: false, type: 'boolean', default: 'false', description: 'Adds a dotted border in the middle of the divider.' }))));
    };
    return ButtonGroupsDoc;
}(React.Component));
exports.default = ButtonGroupsDoc;


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var BadgeDoc = /** @class */ (function (_super) {
    __extends(BadgeDoc, _super);
    function BadgeDoc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BadgeDoc.prototype.render = function () {
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2" }, "Badge"),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                   <Badge text='2' type='primary' />\n                "),
            React.createElement("p", { className: "docs-page__paragraph" }, "Badges are inline styles that can be dropped into a text. They are usualy used for displaying digits or single uppercase letters. For full words the Label component should be used."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Circle (default)"),
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement(app_typescript_1.Badge, { text: '1' }),
                        React.createElement(app_typescript_1.Badge, { text: '2', type: 'primary' }),
                        React.createElement(app_typescript_1.Badge, { text: 'a', type: 'success' }),
                        React.createElement(app_typescript_1.Badge, { text: 'b', type: 'warning' }),
                        React.createElement(app_typescript_1.Badge, { text: '6', type: 'alert' }),
                        React.createElement(app_typescript_1.Badge, { text: '2318', type: 'highlight' }),
                        React.createElement(app_typescript_1.Badge, { text: '76', type: 'light' })),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Square"),
                    React.createElement("p", { className: "docs-page__paragraph--small" },
                        "Use this version only for single digits or numbers. For longer text use the ",
                        React.createElement("code", null, ".label"),
                        " class."),
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement(app_typescript_1.Badge, { text: '1' }),
                        React.createElement(app_typescript_1.Badge, { text: '2', type: 'primary', shape: 'square' }),
                        React.createElement(app_typescript_1.Badge, { text: 'a', type: 'success', shape: 'square' }),
                        React.createElement(app_typescript_1.Badge, { text: 'b', type: 'warning', shape: 'square' }),
                        React.createElement(app_typescript_1.Badge, { text: '6', type: 'alert', shape: 'square' }),
                        React.createElement(app_typescript_1.Badge, { text: 'd', type: 'highlight', shape: 'square' }),
                        React.createElement(app_typescript_1.Badge, { text: '9', type: 'light', shape: 'square' }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        // Circle (default)\n                        <Badge text='1'/>\n                        <Badge text='2' type='primary' />\n                        <Badge text='a' type='success' />\n                        <Badge text='b' type='warning' />\n                        <Badge text='6' type='alert' />\n                        <Badge text='2318' type='highlight' />\n                        <Badge text='76' type='light' />\n\n                        // Square\n                        <Badge text='1'/>\n                        <Badge text='2' type='primary' shape='square' />\n                        <Badge text='a' type='success' shape='square' />\n                        <Badge text='b' type='warning' shape='square' />\n                        <Badge text='6' type='alert' shape='square' />\n                        <Badge text='d' type='highlight' shape='square' />\n                        <Badge text='9' type='light' shape='square' />\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Colours"),
            React.createElement("p", { className: "docs-page__paragraph" },
                "By default, badges use the standard semantic colour palette (e.g. primary, success, warning etc.). Due to the considerable use of the badge component in Superdesk the standard palette is often not enough. In such cases, the colours can be extended by adding the ",
                React.createElement("code", null, "color"),
                " prop with a value of any of the colours from the ",
                React.createElement("a", { className: 'link', href: '#/components/colors', target: 'blank' }, "extended colour palette"),
                "."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Basic colour palette"),
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement(app_typescript_1.Badge, { text: '1', shape: 'square' }),
                        React.createElement(app_typescript_1.Badge, { text: 'A', type: 'primary', shape: 'square' }),
                        React.createElement(app_typescript_1.Badge, { text: '2', type: 'success', shape: 'square' }),
                        React.createElement(app_typescript_1.Badge, { text: 'B', type: 'warning', shape: 'square' }),
                        React.createElement(app_typescript_1.Badge, { text: '3', type: 'alert' }),
                        React.createElement(app_typescript_1.Badge, { text: 'C', type: 'highlight' }),
                        React.createElement(app_typescript_1.Badge, { text: '4', type: 'light' })),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Extended colour palette examples"),
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement(app_typescript_1.Badge, { text: '1', color: 'indigo--300' }),
                        React.createElement(app_typescript_1.Badge, { text: '2', color: 'indigo--400' }),
                        React.createElement(app_typescript_1.Badge, { text: '3', color: 'indigo--500' }),
                        React.createElement(app_typescript_1.Badge, { text: 'A', color: 'deep-orange--400', shape: 'square' }),
                        React.createElement(app_typescript_1.Badge, { text: 'B', color: 'deep-orange--500', shape: 'square' }),
                        React.createElement(app_typescript_1.Badge, { text: 'C', color: 'deep-orange--600', shape: 'square' }),
                        React.createElement(app_typescript_1.Badge, { text: '4', color: 'light-green--500' }),
                        React.createElement(app_typescript_1.Badge, { text: '5', color: 'light-green--600' }),
                        React.createElement(app_typescript_1.Badge, { text: '6', color: 'light-green--700' }),
                        React.createElement(app_typescript_1.Badge, { text: 'D', color: 'purple--300', shape: 'square' }),
                        React.createElement(app_typescript_1.Badge, { text: 'E', color: 'purple--400', shape: 'square' }),
                        React.createElement(app_typescript_1.Badge, { text: 'F', color: 'purple--500', shape: 'square' }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        // Basic colour palette\n                        <Badge text='1' shape='square'/>\n                        <Badge text='A' type='primary' shape='square'/>\n                        <Badge text='2' type='success' shape='square'/>\n                        <Badge text='B' type='warning' shape='square'/>\n                        <Badge text='3' type='alert'/>\n                        <Badge text='C' type='highlight'/>\n                        <Badge text='4' type='light'/>\n                        // Extended colour palette examples\n                        <Badge text='1' color='indigo--300'/>\n                        <Badge text='2' color='indigo--400'/>\n                        <Badge text='3' color='indigo--500'/>\n                        <Badge text='A' color='deep-orange--400' shape='square'/>\n                        <Badge text='B' color='deep-orange--500' shape='square'/>\n                        <Badge text='C' color='deep-orange--600' shape='square'/>\n                        <Badge text='4' color='light-green--500'/>\n                        <Badge text='5' color='light-green--600'/>\n                        <Badge text='6' color='light-green--700'/>\n                        <Badge text='D' color='purple--300' shape='square'/>\n                        <Badge text='E' color='purple--400' shape='square'/>\n                        <Badge text='F' color='purple--500' shape='square'/>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Element with badge"),
            React.createElement("p", { className: "docs-page__paragraph" }, "Wrap another component with the Badge component, so that badge is applied to its children."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement(app_typescript_1.Badge, { text: '8', type: 'primary' },
                            React.createElement(app_typescript_1.Button, { text: 'default', onClick: function () { return false; } })),
                        React.createElement(app_typescript_1.Badge, { text: '6' },
                            React.createElement(app_typescript_1.Button, { text: 'primary', type: 'primary', onClick: function () { return false; } })),
                        React.createElement(app_typescript_1.Badge, { text: '4', type: 'highlight' },
                            React.createElement(app_typescript_1.Button, { text: 'hollow', style: 'hollow', onClick: function () { return false; } })))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <Badge text='8' type='primary'>\n                            <Button text='default' onClick={()=> false} />\n                        </Badge>\n                        <Badge text='6'>\n                            <Button text='primary' type='primary' onClick={()=> false} />\n                        </Badge>\n                        <Badge text='4' type='highlight'>\n                            <Button text='hollow' style='hollow' onClick={()=> false} />\n                        </Badge>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Props"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'text', isRequered: false, type: 'string', default: '/', description: 'Badge text value.' }),
                React.createElement(app_typescript_1.Prop, { name: 'type', isRequered: false, type: 'default | primary | success | warning | alert | highlight | sd-green', default: 'default', description: 'Default + semantic colour variations (e.g. primary, success etc.)' }),
                React.createElement(app_typescript_1.Prop, { name: 'color', isRequered: false, type: 'string', default: '/', description: 'Extended color palette from the framework (e.g. red--500);  NOTE: The badge can have either a Type or Color defined, not both at the same time.' }),
                React.createElement(app_typescript_1.Prop, { name: 'shape', isRequered: false, type: 'round | square', default: 'round', description: 'Make shape of badge square or default round.' }))));
    };
    return BadgeDoc;
}(React.Component));
exports.default = BadgeDoc;


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var AlertDoc = /** @class */ (function (_super) {
    __extends(AlertDoc, _super);
    function AlertDoc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AlertDoc.prototype.render = function () {
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2" }, "Alerts"),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                   <Alert style='hollow' size='normal' type='primary' restoreIcon='info'>\n                        This is an info text example.\n                   </Alert>\n                "),
            React.createElement("p", { className: "docs-page__paragraph" }, "Provide contextual feedback or info messages for user actions with the handful of available alert box options."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Hollow style (preferred usage)"),
                    React.createElement(app_typescript_1.Alert, { style: 'hollow', size: 'normal', restoreIcon: 'info' }, "Fusce nec ex et dolor rhoncus iaculis maximus sit amet lorem. Nunc posuere, ligula quis dictum tempor, lectus diam pharetra est, id fringilla leo urna vel arcu."),
                    React.createElement(app_typescript_1.Alert, { style: 'hollow', size: 'normal', type: 'alert', restoreIcon: 'info' }, "Sed tincidunt ipsum metus, consectetur vestibulum turpis luctus in. Vestibulum ut ex vulputate, lacinia mauris vel, accumsan libero. Morbi dapibus non felis et convallis. Sed at dolor vel nisl aliquam vehicula."),
                    React.createElement(app_typescript_1.Alert, { style: 'hollow', size: 'normal', type: 'sd-green', restoreIcon: 'help' }, "In mattis tellus odio, quis dictum sapien pellentesque in. Phasellus dignissim tempus ante at congue. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis maximus bibendum lacinia."),
                    React.createElement(app_typescript_1.Alert, { style: 'hollow', size: 'normal', type: 'primary', restoreIcon: 'info' }, "Integer elementum vestibulum ipsum a rhoncus. Cras et tortor tempus, imperdiet neque sit amet, imperdiet elit. Nunc eleifend sollicitudin molestie. Aliquam nec enim orci."),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Filled"),
                    React.createElement(app_typescript_1.Alert, { style: 'filled', size: 'normal', type: 'sd-green', restoreIcon: 'info' }, "Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis. Praesent vulputate eros nisi, et porta magna eleifend et."),
                    React.createElement(app_typescript_1.Alert, { style: 'filled', size: 'normal', type: 'warning', restoreIcon: 'info' }, "Praesent vulputate eros nisi, et porta magna eleifend et. Duis non sagittis erat. Nulla facilisi. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas."),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Small"),
                    React.createElement(app_typescript_1.Alert, { style: 'hollow', size: 'small', type: 'primary', restoreIcon: 'info' }, "Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus."),
                    React.createElement(app_typescript_1.Alert, { style: 'filled', size: 'small', type: 'highlight', restoreIcon: 'info' }, "Maecenas sed diam eget risus varius blandit sit amet non magna. Curabitur blandit tempus porttitor. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec ullamcorper nulla non metus auctor fringilla. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.")),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        // Hollow style (preferred usage)\n                        <Alert style='hollow' size='normal' restoreIcon='info'>\n                            Fusce nec ex et dolor rhoncus iaculis maximus sit amet lorem. Nunc posuere, ligula quis dictum tempor, lectus diam pharetra est, id fringilla leo urna vel arcu.\n                        </Alert>\n                        <Alert style='hollow' size='normal' type='alert' restoreIcon='info'>\n                            Sed tincidunt ipsum metus, consectetur vestibulum turpis luctus in. Vestibulum ut ex vulputate, lacinia mauris vel, accumsan libero. Morbi dapibus non felis et convallis. Sed at dolor vel nisl aliquam vehicula.\n                        </Alert>\n                        <Alert style='hollow' size='normal' type='sd-green' restoreIcon='help'>\n                            In mattis tellus odio, quis dictum sapien pellentesque in. Phasellus dignissim tempus ante at congue. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis maximus bibendum lacinia.\n                        </Alert>\n                        <Alert style='hollow' size='normal' type='primary' restoreIcon='info'>\n                            Integer elementum vestibulum ipsum a rhoncus. Cras et tortor tempus, imperdiet neque sit amet, imperdiet elit. Nunc eleifend sollicitudin molestie. Aliquam nec enim orci.\n                        </Alert>\n\n                        // Filled\n                        <Alert style='filled' size='normal' type='sd-green' restoreIcon='info'>\n                            Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis. Praesent vulputate eros nisi, et porta magna eleifend et.\n                        </Alert>\n                        <Alert style='filled' size='normal' type='warning' restoreIcon='info'>\n                            Praesent vulputate eros nisi, et porta magna eleifend et. Duis non sagittis erat. Nulla facilisi. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.\n                        </Alert>\n\n                        // Small\n                        <Alert style='hollow' size='small' type='primary' restoreIcon='info'>\n                            Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.\n                        </Alert>\n                        <Alert style='filled' size='small' type='highlight' restoreIcon='info'>\n                            Maecenas sed diam eget risus varius blandit sit amet non magna. Curabitur blandit tempus porttitor. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec ullamcorper nulla non metus auctor fringilla. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.\n                        </Alert>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Props"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'type', isRequered: false, type: 'default | primary | success | warning | alert | highlight | sd-green', default: 'default', description: 'Default + semantic colour variations (e.g. primary, success etc.)' }),
                React.createElement(app_typescript_1.Prop, { name: 'style', isRequered: false, type: 'filled | hollow', default: 'filled', description: 'Alerts may be one of styles such as hollow alerts, alerts without background (text-only) or default filled.' }),
                React.createElement(app_typescript_1.Prop, { name: 'size', isRequered: false, type: 'normal | small', default: 'normal', description: 'Specifies a small or normal alert.' }),
                React.createElement(app_typescript_1.Prop, { name: 'restoreIcon', isRequered: false, type: 'info | help', default: 'info', description: '' }))));
    };
    return AlertDoc;
}(React.Component));
exports.default = AlertDoc;


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var AvatarDoc = /** @class */ (function (_super) {
    __extends(AvatarDoc, _super);
    function AvatarDoc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AvatarDoc.prototype.render = function () {
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2" }, "Avatar"),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement(app_typescript_1.AvatarWrapper, { size: "small", statusIndicator: { status: 'online', tooltipText: "Online" }, administratorIndicator: { enabled: true, tooltipText: "Administrator" } },
                        React.createElement(app_typescript_1.AvatarContentText, { text: "ABC", tooltipText: "John Doe" })),
                    React.createElement("br", null),
                    React.createElement(app_typescript_1.AvatarWrapper, { size: "medium", statusIndicator: { status: 'offline', tooltipText: "Offline" }, administratorIndicator: { enabled: true, tooltipText: "Administrator" } },
                        React.createElement(app_typescript_1.AvatarContentText, { text: "ABC", tooltipText: "John Doe" })),
                    React.createElement("br", null),
                    React.createElement(app_typescript_1.AvatarWrapper, { size: "large", statusIndicator: { status: 'online', tooltipText: "Online" }, administratorIndicator: { enabled: true, tooltipText: "Administrator" } },
                        React.createElement(app_typescript_1.AvatarContentText, { text: "ABC", tooltipText: "John Doe" })),
                    React.createElement("br", null),
                    React.createElement(app_typescript_1.AvatarWrapper, { size: "small", statusIndicator: { status: 'online', tooltipText: "Online" }, administratorIndicator: { enabled: true, tooltipText: "Administrator" } },
                        React.createElement(app_typescript_1.AvatarContentImage, { imageUrl: "/avatar.jpg", tooltipText: "John Doe" })),
                    React.createElement("br", null),
                    React.createElement(app_typescript_1.AvatarWrapper, { size: "medium", statusIndicator: { status: 'offline', tooltipText: "Offline" }, administratorIndicator: { enabled: true, tooltipText: "Administrator" } },
                        React.createElement(app_typescript_1.AvatarContentImage, { imageUrl: "/avatar.jpg", tooltipText: "John Doe" })),
                    React.createElement("br", null),
                    React.createElement(app_typescript_1.AvatarWrapper, { size: "large", statusIndicator: { status: 'online', tooltipText: "Online" }, administratorIndicator: { enabled: true, tooltipText: "Administrator" } },
                        React.createElement(app_typescript_1.AvatarContentImage, { imageUrl: "/avatar.jpg", tooltipText: "John Doe" })),
                    React.createElement("br", null),
                    React.createElement(app_typescript_1.AvatarWrapper, { size: "small", statusIndicator: { status: 'online', tooltipText: "Online" }, administratorIndicator: { enabled: true, tooltipText: "Administrator" } },
                        React.createElement(app_typescript_1.AvatarContentImage, { tooltipText: "John Doe" })),
                    React.createElement("br", null),
                    React.createElement(app_typescript_1.AvatarWrapper, { size: "medium", statusIndicator: { status: 'offline', tooltipText: "Offline" }, administratorIndicator: { enabled: true, tooltipText: "Administrator" } },
                        React.createElement(app_typescript_1.AvatarContentImage, { tooltipText: "John Doe" })),
                    React.createElement("br", null),
                    React.createElement(app_typescript_1.AvatarWrapper, { size: "large", statusIndicator: { status: 'online', tooltipText: "Online" }, administratorIndicator: { enabled: true, tooltipText: "Administrator" } },
                        React.createElement(app_typescript_1.AvatarContentImage, { tooltipText: "John Doe" }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <AvatarWrapper\n                            size=\"small\"\n                            statusIndicator={{status: 'online', tooltipText: \"Online\"}}\n                            administratorIndicator={{enabled: true, tooltipText: \"Administrator\"}}\n                        >\n                            <AvatarContentText text=\"ABC\" tooltipText=\"John Doe\" />\n                        </AvatarWrapper>\n\n                        <br />\n\n                        <AvatarWrapper\n                            size=\"medium\"\n                            statusIndicator={{status: 'offline', tooltipText: \"Offline\"}}\n                            administratorIndicator={{enabled: true, tooltipText: \"Administrator\"}}\n                        >\n                            <AvatarContentText text=\"ABC\" tooltipText=\"John Doe\" />\n                        </AvatarWrapper>\n\n                        <br />\n\n                        <AvatarWrapper\n                            size=\"large\"\n                            statusIndicator={{status: 'online', tooltipText: \"Online\"}}\n                            administratorIndicator={{enabled: true, tooltipText: \"Administrator\"}}\n                        >\n                            <AvatarContentText text=\"ABC\" tooltipText=\"John Doe\" />\n                        </AvatarWrapper>\n\n                        <br />\n\n                        <AvatarWrapper\n                            size=\"small\"\n                            statusIndicator={{status: 'online', tooltipText: \"Online\"}}\n                            administratorIndicator={{enabled: true, tooltipText: \"Administrator\"}}\n                        >\n                            <AvatarContentImage imageUrl=\"/avatar.jpg\" tooltipText=\"John Doe\" />\n                        </AvatarWrapper>\n\n                        <br />\n\n                        <AvatarWrapper\n                            size=\"medium\"\n                            statusIndicator={{status: 'offline', tooltipText: \"Offline\"}}\n                            administratorIndicator={{enabled: true, tooltipText: \"Administrator\"}}\n                        >\n                            <AvatarContentImage imageUrl=\"/avatar.jpg\" tooltipText=\"John Doe\" />\n                        </AvatarWrapper>\n\n                        <br />\n\n                        <AvatarWrapper\n                            size=\"large\"\n                            statusIndicator={{status: 'online', tooltipText: \"Online\"}}\n                            administratorIndicator={{enabled: true, tooltipText: \"Administrator\"}}\n                        >\n                            <AvatarContentImage imageUrl=\"/avatar.jpg\" tooltipText=\"John Doe\" />\n                        </AvatarWrapper>\n\n                        <br />\n\n                        <AvatarWrapper\n                            size=\"small\"\n                            statusIndicator={{status: 'online', tooltipText: \"Online\"}}\n                            administratorIndicator={{enabled: true, tooltipText: \"Administrator\"}}\n                        >\n                            <AvatarContentImage tooltipText=\"John Doe\" />\n                        </AvatarWrapper>\n\n                        <br />\n\n                        <AvatarWrapper\n                            size=\"medium\"\n                            statusIndicator={{status: 'offline', tooltipText: \"Offline\"}}\n                            administratorIndicator={{enabled: true, tooltipText: \"Administrator\"}}\n                        >\n                            <AvatarContentImage tooltipText=\"John Doe\" />\n                        </AvatarWrapper>\n\n                        <br />\n\n                        <AvatarWrapper\n                            size=\"large\"\n                            statusIndicator={{status: 'online', tooltipText: \"Online\"}}\n                            administratorIndicator={{enabled: true, tooltipText: \"Administrator\"}}\n                        >\n                            <AvatarContentImage tooltipText=\"John Doe\" />\n                        </AvatarWrapper>\n                    "))));
    };
    return AvatarDoc;
}(React.PureComponent));
exports.default = AvatarDoc;


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var IconButtonDoc = /** @class */ (function (_super) {
    __extends(IconButtonDoc, _super);
    function IconButtonDoc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IconButtonDoc.prototype.render = function () {
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2" }, "Plain icon button"),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <IconButton icon=\"close-small\" ariaValue=\"aria-value\" onClick={()=> false} />\n                "),
            React.createElement("p", { className: "docs-page__paragraph" }, "Plain icon button are mostly used for toolbars inside other UI components. They have a built in support for custom tooltips."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Default look"),
                    React.createElement("p", { className: "docs-page__paragraph--small" }, "Hover buttons to see tooltips."),
                    React.createElement("div", { className: "docs-page__content-row docs-page__content-row--white" },
                        React.createElement(app_typescript_1.Tooltip, { text: 'I support tooltips!' },
                            React.createElement(app_typescript_1.IconButton, { icon: 'close-small', ariaValue: 'close', onClick: function () { return false; } })),
                        React.createElement(app_typescript_1.IconButton, { icon: 'plus-large', ariaValue: 'plus', onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.IconButton, { icon: 'dots-vertical', ariaValue: 'dots', onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.IconButton, { icon: 'trash', ariaValue: 'trash', onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Tooltip, { text: 'My tooltip is on right.', flow: 'right' },
                            React.createElement(app_typescript_1.IconButton, { icon: 'close-small', ariaValue: 'close', onClick: function () { return false; } }))),
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Dark UI"),
                    React.createElement("div", { className: "docs-page__content-row docs-page__content-row--ui-dark", style: { color: 'white' } },
                        React.createElement(app_typescript_1.Tooltip, { text: 'I support tooltips!' },
                            React.createElement(app_typescript_1.IconButton, { icon: 'close-small', ariaValue: 'close', onClick: function () { return false; } })),
                        React.createElement(app_typescript_1.IconButton, { icon: 'plus-large', ariaValue: 'plus', onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.IconButton, { icon: 'dots-vertical', ariaValue: 'dots', onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.IconButton, { icon: 'trash', ariaValue: 'trash', onClick: function () { return false; } }),
                        React.createElement(app_typescript_1.Tooltip, { text: 'My tooltip is on right.', flow: 'right' },
                            React.createElement(app_typescript_1.IconButton, { icon: 'close-small', ariaValue: 'close', onClick: function () { return false; } })))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <Tooltip text='I support tooltips!'>\n                            <IconButton icon='close-small' ariaValue='close' onClick={()=> false} />\n                        </Tooltip>\n                        <IconButton icon='plus-large' ariaValue='plus' onClick ={()=> false} />\n                        <IconButton icon='dots-vertical' ariaValue='dots' onClick={()=> false} />\n                        <IconButton icon='trash' ariaValue='trash' onClick={()=> false} />\n                        <Tooltip text='My tooltip is on right.' flow='right'>\n                            <IconButton icon='close-small' ariaValue='close' onClick={()=> false} />\n                        </Tooltip>\n\n                        //Dark UI\n                        <Tooltip text='I support tooltips!'>\n                            <IconButton icon='close-small' ariaValue='close' onClick={()=> false} />\n                        </Tooltip>\n                        <IconButton icon='plus-large' ariaValue='plus' onClick={()=> false} />\n                        <IconButton icon='dots-vertical' ariaValue='dots' onClick={()=> false} />\n                        <IconButton icon='trash' ariaValue='trash' onClick={()=> false} />\n                        <Tooltip text='My tooltip is on right.' flow='right'>\n                            <IconButton icon='close-small' ariaValue='close' onClick={()=> false} />\n                        </Tooltip>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Props"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'icon', isRequered: false, type: 'string', default: '/', description: 'Icon class name without the icon- part.' }),
                React.createElement(app_typescript_1.Prop, { name: 'ariaValue', isRequered: true, type: 'string', default: '/', description: 'Description for screen readers' }))));
    };
    return IconButtonDoc;
}(React.Component));
exports.default = IconButtonDoc;


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var IconLabelDoc = /** @class */ (function (_super) {
    __extends(IconLabelDoc, _super);
    function IconLabelDoc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IconLabelDoc.prototype.render = function () {
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2" }, "Icon Labels"),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <IconLabel text='Label primary' icon='facebook' type='primary' />\n                "),
            React.createElement("p", { className: "docs-page__paragraph" },
                "Icon labels are inline styles for displaying a combination of icons from the icon font with a text label. Use the ",
                React.createElement("code", null, "type"),
                " prop to change semantic colour values based on the intended purpose."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: 'docs-page__content-row docs-page__content-row--no-margin' },
                        React.createElement(app_typescript_1.IconLabel, { text: 'Default label', icon: 'photo' }),
                        React.createElement(app_typescript_1.IconLabel, { text: 'Label primary', icon: 'facebook', type: 'primary' }),
                        React.createElement(app_typescript_1.IconLabel, { text: 'Label success', icon: 'text', type: 'success' }),
                        React.createElement(app_typescript_1.IconLabel, { text: 'Label warning', icon: 'paywall', type: 'warning' }),
                        React.createElement(app_typescript_1.IconLabel, { text: 'Label alert', icon: 'trash', type: 'alert' }),
                        React.createElement(app_typescript_1.IconLabel, { text: 'Label highlight', icon: 'composite', type: 'highlight' }),
                        React.createElement(app_typescript_1.IconLabel, { text: 'Label sd-green', icon: 'video', type: 'sd-green' }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <IconLabel text='Default label' icon='photo' />\n                        <IconLabel text='Label primary' icon='facebook' type='primary' />\n                        <IconLabel text='Label success' icon='text' type='success' />\n                        <IconLabel text='Label warning' icon='paywall' type='warning' />\n                        <IconLabel text='Label alert' icon='trash' type='alert' />\n                        <IconLabel text='Label highlight' icon='composite' type='highlight' />\n                        <IconLabel text='Label sd-green' icon='video' type='sd-green' />\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Props"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'text', isRequered: true, type: 'string', default: '/', description: 'IconLabel text value.' }),
                React.createElement(app_typescript_1.Prop, { name: 'type', isRequered: false, type: 'default | primary | success | warning | alert | highlight | sd-green', default: 'default', description: 'Default + semantic colour variations (e.g. primary, success etc.).' }),
                React.createElement(app_typescript_1.Prop, { name: 'icon', isRequered: false, type: 'string', default: '/', description: 'Icon class name without the icon- part.' }))));
    };
    return IconLabelDoc;
}(React.Component));
exports.default = IconLabelDoc;


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var TooltipDoc = /** @class */ (function (_super) {
    __extends(TooltipDoc, _super);
    function TooltipDoc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TooltipDoc.prototype.render = function () {
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2" }, "Tooltips"),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <Tooltip text=\"I'm on top\" >\n                        <Button text='top' onClick={() => false} />\n                    </Tooltip>\n                "),
            React.createElement("p", { className: "docs-page__paragraph" },
                "Chose one of 4 placement options (",
                React.createElement("code", null, "\u2019left\u2019"),
                ", ",
                React.createElement("code", null, "\u2019right\u2019"),
                ", ",
                React.createElement("code", null, "\u2019bottom\u2019"),
                ", and ",
                React.createElement("code", null, "\u2019top\u2019"),
                "). The default value is ",
                React.createElement("code", null, "\u2019top\u2019"),
                " and will be rendered so without explicitly specifying it."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: "docs-page__content-row docs-page__content-row--no-margin" },
                        React.createElement(app_typescript_1.Tooltip, { text: "I'm on top" },
                            React.createElement(app_typescript_1.Button, { text: 'top', onClick: function () { return false; } })),
                        React.createElement(app_typescript_1.Tooltip, { text: "I'm at the bottom", flow: 'down' },
                            React.createElement(app_typescript_1.Button, { text: 'bottom', onClick: function () { return false; } })),
                        React.createElement(app_typescript_1.Tooltip, { text: "I open on the left", flow: 'left' },
                            React.createElement(app_typescript_1.Button, { text: 'left', onClick: function () { return false; } })),
                        React.createElement(app_typescript_1.Tooltip, { text: "Right on!", flow: 'right' },
                            React.createElement(app_typescript_1.Button, { text: 'right', onClick: function () { return false; } })))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <Tooltip text=\"I'm on top\" >\n                            <Button text='top' onClick={() => false} />\n                        </Tooltip>\n                        <Tooltip text=\"I'm at the bottom\" flow='down'>\n                            <Button text='bottom' onClick={() => false} />\n                        </Tooltip>\n                        <Tooltip text=\"I open on the left\" flow='left'>\n                            <Button text='left' onClick={() => false} />\n                        </Tooltip>\n                        <Tooltip text=\"Right on!\" flow='right'>\n                            <Button text='right' onClick={() => false} />\n                        </Tooltip>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Props"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'text', isRequered: true, type: 'string', default: '/', description: 'Tooltip text value.' }),
                React.createElement(app_typescript_1.Prop, { name: 'flow', isRequered: false, type: 'top | left | right | down', default: 'top', description: 'Position of tooltip text.' }))));
    };
    return TooltipDoc;
}(React.Component));
exports.default = TooltipDoc;


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var TimePicker_1 = __webpack_require__(54);
var DatePickerExample = /** @class */ (function (_super) {
    __extends(DatePickerExample, _super);
    function DatePickerExample(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            date: new Date(),
        };
        return _this;
    }
    DatePickerExample.prototype.render = function () {
        var _this = this;
        return (React.createElement(app_typescript_1.DatePicker, { value: this.state.date, dateFormat: "YYYY-MM-DD", onChange: function (date) {
                _this.setState({ date: date });
            } }));
    };
    return DatePickerExample;
}(React.PureComponent));
var TimePickerExample = /** @class */ (function (_super) {
    __extends(TimePickerExample, _super);
    function TimePickerExample(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            time: '',
        };
        return _this;
    }
    TimePickerExample.prototype.render = function () {
        var _this = this;
        return (React.createElement(TimePicker_1.TimePicker, { value: this.state.time, onChange: function (time) {
                _this.setState({ time: time });
            } }));
    };
    return TimePickerExample;
}(React.PureComponent));
var DatePickerDoc = /** @class */ (function (_super) {
    __extends(DatePickerDoc, _super);
    function DatePickerDoc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DatePickerDoc.prototype.render = function () {
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2" }, "Date picker"),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement(DatePickerExample, null))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                         <DatePickerExample />\n                    ")),
            React.createElement("h2", { className: "docs-page__h2" }, "Time picker"),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement(TimePickerExample, null))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <TimePickerExample />\n                    "))));
    };
    return DatePickerDoc;
}(React.Component));
exports.default = DatePickerDoc;


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var Components = __importStar(__webpack_require__(39));
var app_typescript_1 = __webpack_require__(2);
var SwitchDoc = /** @class */ (function (_super) {
    __extends(SwitchDoc, _super);
    function SwitchDoc(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            value1: false,
            value2: true,
            value3: false,
        };
        return _this;
    }
    SwitchDoc.prototype.render = function () {
        var _this = this;
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2" }, "Switch"),
            React.createElement("p", null),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <Switch value={value1} onChange={(value) => this.setState(() => ({ value1: value }))} />\n                "),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Label on the right (default)"),
                    React.createElement("div", { className: "form__row" },
                        React.createElement(app_typescript_1.Switch, { value: this.state.value1, onChange: function (value) { return _this.setState(function () { return ({ value1: value }); }); } }),
                        React.createElement("label", null,
                            "Label on right ",
                            this.state.value1)),
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Labels on the left"),
                    React.createElement("p", { className: "docs-page__paragraph--small" }, "This option should be used only in cases when the switch is aligned to the right."),
                    React.createElement("div", { className: "form__row" },
                        React.createElement("label", null,
                            "Label on left ",
                            this.state.value2),
                        React.createElement(app_typescript_1.Switch, { value: this.state.value2, onChange: function (value) { return _this.setState(function () { return ({ value2: value }); }); } })),
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Disabled"),
                    React.createElement("div", { className: "form__row" },
                        React.createElement(app_typescript_1.Switch, { value: this.state.value3, onChange: function (value) { return _this.setState(function () { return ({ value3: value }); }); }, disabled: true }),
                        React.createElement("label", null, "Label on right with disabled state"))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        // Label on the right (default)\n                            <Switch value={value1} onChange={(value) => this.setState(() => ({ value1: value }))}/>\n                            \n                        // Labels on the left\n                            <Switch value={value2} onChange={(value) => this.setState(() => ({ value2: value }))}/>\n\n                        // Disabled\n                            <Switch value={value3} onChange={(value) => this.setState(() => ({ value3: value }))} disabled={true}/>\n                    ")),
            React.createElement(Components.GraphicButtonsGroup, null,
                React.createElement(Components.GraphicButton, { graphic: 'design', text: 'Switch usage guidelines', smallText: 'Design guidelines', link: '#/design/switch' }))));
    };
    return SwitchDoc;
}(React.Component));
exports.default = SwitchDoc;


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var Components = __importStar(__webpack_require__(39));
var app_typescript_1 = __webpack_require__(2);
var RadiosDoc = /** @class */ (function (_super) {
    __extends(RadiosDoc, _super);
    function RadiosDoc(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            value1: true,
            value2: true,
            value3: true,
            value4: true,
            value5: true,
            value6: true,
            value7: true,
            value8: true,
        };
        return _this;
    }
    RadiosDoc.prototype.render = function () {
        var _this = this;
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2" }, "Radio button"),
            React.createElement("p", { className: "docs-page__paragraph" }),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <Radio value={value1} \n                           options={[{value:'test1', label:'Default label'}, {value:'test2', label:'Default label'}]} />\n                "),
            React.createElement("h3", { className: "docs-page__h3" }, "Basic Radio button"),
            React.createElement("p", { className: "docs-page__paragraph" },
                "The label of the Radio button is by default always on the right. Although it's not in line with Superdesk design standards the label can also be placed to the left, by addind the prop ",
                React.createElement("code", null, "labelSide='left'"),
                "."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Label on the right (default)"),
                    React.createElement("div", { className: 'form__group' },
                        React.createElement(app_typescript_1.CheckGroup, null,
                            React.createElement(app_typescript_1.Radio, { value: this.state.value1, options: [{ value: 'test1', label: 'Default label' }, { value: 'test2', label: 'Default label' }, { value: 'test3', label: 'Default label' }, { value: 'test4', label: 'Disabled state', disabled: true }], onChange: function (value) { return _this.setState(function () { return ({ value1: value }); }); } }))),
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Labels on the left"),
                    React.createElement("p", { className: "docs-page__paragraph--small" }, "This option should be avoided in general use."),
                    React.createElement("div", { className: 'form__group' },
                        React.createElement(app_typescript_1.CheckGroup, null,
                            React.createElement(app_typescript_1.Radio, { value: this.state.value2, options: [{ value: 'test5', label: 'Label on the left' }, { value: 'test6', label: 'Label on the left' }, { value: 'test7', label: 'Label on the left' }], labelSide: 'left', onChange: function (value) { return _this.setState(function () { return ({ value2: value }); }); } })))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        // Label on the right (default)\n                        <CheckGroup>\n                            <Radio value={value1} \n                                   options={[{value:'test1', label:'Default label'}, {value:'test2', label:'Default label'}, {value:'test3', label:'Default label'}, {value:'test4', label:'Disabled state', disabled: true}]} />\n                        </CheckGroup>\n\n                        // Labels on the left\n                        <CheckGroup>\n                            <Radio value={value2} \n                                   options={[{value:'test5', label:'Label on the left'}, {value:'test6', label:'Label on the left'}, {value:'test7', label:'Label on the left'}]} labelSide='left' />\n                        </CheckGroup>\n                    ")),
            React.createElement(Components.GraphicButtonsGroup, null,
                React.createElement(Components.GraphicButton, { graphic: 'design', text: 'Radio usage guidelines', smallText: 'Design guidelines', link: '#/design/checkbox-and-radio' })),
            React.createElement("h3", { className: "docs-page__h3" }, "Radio groups"),
            React.createElement("p", { className: "docs-page__paragraph" },
                React.createElement("code", null, "CheckGroup"),
                " is a helpful wrapper component used to group ",
                React.createElement("code", null, "Radio"),
                " components. By default the radio buttons are grouped horizontaly. To group them verticaly \u2013 in a list-like view \u2013 add the prop ",
                React.createElement("code", null, "orientation='vertical'"),
                " to the ",
                React.createElement("code", null, "CheckGroup"),
                " component."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Horizontal group (default)"),
                    React.createElement("div", { className: 'form__group' },
                        React.createElement(app_typescript_1.CheckGroup, null,
                            React.createElement(app_typescript_1.Radio, { value: this.state.value1, options: [{ value: 'test101', label: 'Radio one' }, { value: 'test102', label: 'Radio two' }, { value: 'test103', label: 'Radio three' }, { value: 'test104', label: 'Radio four' }], onChange: function (value) { return _this.setState(function () { return ({ value1: value }); }); } }))),
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Vertical group"),
                    React.createElement("div", { className: 'form__group' },
                        React.createElement(app_typescript_1.CheckGroup, { orientation: 'vertical' },
                            React.createElement(app_typescript_1.Radio, { value: this.state.value2, options: [{ value: 'test105', label: 'Radio vertical one' }, { value: 'test106', label: 'Radio vertical two' }, { value: 'test107', label: 'Radio vertical three' }], onChange: function (value) { return _this.setState(function () { return ({ value2: value }); }); } })))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        // Horizontal group (default)\n                        <CheckGroup>\n                            <Radio value={value1}\n                                options={[{value:'test101', label:'Radio one'}, {value:'test102', label:'Radio two'}, {value:'test103', label:'Radio three'}, {value:'test104', label:'Radio four'}]} />\n                        </CheckGroup>\n\n                        // Vertical group\n                        <CheckGroup orientation='vertical'>\n                            <Radio value={value2} \n                                options={[{value:'test105', label:'Radio vertical one'}, {value:'test106', label:'Radio vertical two'}, {value:'test107', label:'Radio vertical three'}]} />\n                        </CheckGroup>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Button style radio"),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <CheckGroup>\n                        <RadioButton value={value1} \n                            options={[{value:'test1', label:'Button style radio one'}, {value:'test2', label:'Button style radio two'}]} />\n                    </CheckGroup>\n                "),
            React.createElement("p", { className: "docs-page__paragraph" },
                "The ",
                React.createElement("code", null, "RadioButton"),
                " component shares the same functionality as the Radio component but has a different visual appearance. Any icon from the ",
                React.createElement("a", { className: 'link', href: '#/components/icons', target: 'blank' }, "icon font"),
                " can be added to the component by specifying a value (icon name without the ",
                React.createElement("code", null, "icon-"),
                " prefix) for the optional ",
                React.createElement("code", null, "icon"),
                " prop."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Button styled radio buttons"),
                    React.createElement("div", { className: 'form__group' },
                        React.createElement(app_typescript_1.CheckButtonGroup, null,
                            React.createElement(app_typescript_1.RadioButton, { value: this.state.value3, options: [{ value: 'test6', label: 'Button style radio' }, { value: 'test7', label: 'Button style' }, { value: 'test8', label: 'Button style' }, { value: 'test9', label: 'Button style disabled', disabled: true }], onChange: function (value) { return _this.setState(function () { return ({ value3: value }); }); } }))),
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Button style radio with icon"),
                    React.createElement("div", { className: 'form__group' },
                        React.createElement(app_typescript_1.CheckButtonGroup, null,
                            React.createElement(app_typescript_1.RadioButton, { value: this.state.value4, options: [{ value: 'test10', label: 'Radio button with icon', icon: 'list-view' }, { value: 'test11', label: 'I have an icon!', icon: 'grid-view' }, { value: 'test12', label: 'Yeah, me too!', icon: 'kanban-view' }], onChange: function (value) { return _this.setState(function () { return ({ value4: value }); }); } })))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        // Button styled radio buttons\n                        <CheckButtonGroup>\n                            <RadioButton value={value3} \n                                options={[{value:'test6', label:'Button style radio'}, {value:'test7', label:'Button style'}, {value:'test8', label:'Button style'}, {value:'test9', label:'Button style disabled', disabled:true}]} />\n                        </CheckButtonGroup>\n\n                        // Button styled radio with icon\n                        <CheckButtonGroup>\n                            <RadioButton value={value4} \n                                options={[{value:'test10', label:'Radio button with icon', icon:'list-view'}, {value:'test11', label:'I have an icon!', icon:'grid-view'}, {value:'test12', label:'Yeah, me too!', icon:'kanban-view'}]} />\n                        </CheckButtonGroup>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Button style radio Groups"),
            React.createElement("p", { className: "docs-page__paragraph" },
                React.createElement("code", null, "CheckButtonGroup"),
                " is a helpful wrapper component used to group ",
                React.createElement("code", null, "RadioButton"),
                " components. By default the RadioButton components are grouped horizontaly. A few more options are available compared to the ",
                React.createElement("code", null, "CheckGroup"),
                " component \u2013 alignment (left, right and center) and grid layout. "),
            React.createElement(app_typescript_1.Alert, { style: 'hollow', size: 'small', type: 'primary' }, "NOTE: Alignment will work only in parent elements with display: flex;"),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Left (default)"),
                    React.createElement("div", { className: 'form__row form__row--flex docs-page__test-helper-2' },
                        React.createElement(app_typescript_1.CheckButtonGroup, null,
                            React.createElement(app_typescript_1.RadioButton, { value: this.state.value3, options: [{ value: 'test301', label: 'Option one' }, { value: 'test302', label: 'Option two' }, { value: 'test303', label: 'Option three' }], onChange: function (value) { return _this.setState(function () { return ({ value3: value }); }); } }))),
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Right"),
                    React.createElement("div", { className: 'form__row form__row--flex docs-page__test-helper-2' },
                        React.createElement(app_typescript_1.CheckButtonGroup, { align: 'right' },
                            React.createElement(app_typescript_1.RadioButton, { value: this.state.value4, options: [{ value: 'test304', label: 'Option one' }, { value: 'test305', label: 'Option two' }, { value: 'test306', label: 'Option three' }], onChange: function (value) { return _this.setState(function () { return ({ value4: value }); }); } }))),
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Center"),
                    React.createElement("div", { className: 'form__row form__row--flex docs-page__test-helper-2' },
                        React.createElement(app_typescript_1.CheckButtonGroup, { align: 'center' },
                            React.createElement(app_typescript_1.RadioButton, { value: this.state.value5, options: [{ value: 'test307', label: 'Option one' }, { value: 'test308', label: 'Option two' }, { value: 'test309', label: 'Option three' }], onChange: function (value) { return _this.setState(function () { return ({ value5: value }); }); } }))),
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Left + Center + Right"),
                    React.createElement("div", { className: 'form__row form__row--flex docs-page__test-helper-2' },
                        React.createElement(app_typescript_1.CheckButtonGroup, null,
                            React.createElement(app_typescript_1.RadioButton, { value: this.state.value6, options: [{ value: 'test310', label: 'One' }, { value: 'test311', label: 'Two' }], onChange: function (value) { return _this.setState(function () { return ({ value6: value }); }); } })),
                        React.createElement(app_typescript_1.CheckButtonGroup, { align: 'center' },
                            React.createElement(app_typescript_1.RadioButton, { value: this.state.value6, options: [{ value: 'test312', label: 'Three' }, { value: 'test313', label: 'Four' }], onChange: function (value) { return _this.setState(function () { return ({ value6: value }); }); } })),
                        React.createElement(app_typescript_1.CheckButtonGroup, { align: 'right' },
                            React.createElement(app_typescript_1.RadioButton, { value: this.state.value6, options: [{ value: 'test314', label: 'Five' }, { value: 'test315', label: 'Six' }], onChange: function (value) { return _this.setState(function () { return ({ value6: value }); }); } }))),
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Grid"),
                    React.createElement("div", { className: 'form__row form__row--flex docs-page__test-helper-2', style: { width: 500 } },
                        React.createElement(app_typescript_1.CheckButtonGroup, { grid: true },
                            React.createElement(app_typescript_1.RadioButton, { value: this.state.value7, options: [{ value: 'test316', label: 'One' }, { value: 'test317', label: 'Two' }, { value: 'test318', label: 'Three' }, { value: 'test319', label: 'Four' }, { value: 'test320', label: 'Five' }, { value: 'test321', label: 'Six' }], onChange: function (value) { return _this.setState(function () { return ({ value7: value }); }); } })))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        // Left (default)\n                        <CheckButtonGroup>\n                            <RadioButton value={value3}\n                                         options={[{value:'test301', label:'Option one'}, {value:'test302', label:'Option two'}, {value:'test303', label:'Option three'}]} />\n                        </CheckButtonGroup>\n\n                        // Right\n                        <CheckButtonGroup align='right'>\n                            <RadioButton value={value4}\n                                         options={[{value:'test304', label:'Option one'}, {value:'test305', label:'Option two'}, {value:'test306', label:'Option three'}]} />\n                        </CheckButtonGroup>\n                        \n                        // Center\n                        <CheckButtonGroup align='center'>\n                            <RadioButton value={value5}\n                                         options={[{value:'test307', label:'Option one'}, {value:'test308', label:'Option two'}, {value:'test309', label:'Option three'}]} />\n                        </CheckButtonGroup>\n\n                        // Left + Center + Right\n                        <div className='form__row form__row--flex'>\n                            <CheckButtonGroup>\n                                <RadioButton value={value6}\n                                             options={[{value:'test310', label:'One'}, {value:'test311', label:'Two'}]} />\n                            </CheckButtonGroup>\n\n                            <CheckButtonGroup align='center'>\n                                <RadioButton value={value6}\n                                             options={[{value:'test312', label:'Three'}, {value:'test313', label:'Four'}]} />\n                            </CheckButtonGroup>\n\n                            <CheckButtonGroup align='right'>\n                                <RadioButton value={value6}\n                                             options={[{value:'test314', label:'Five'}, {value:'test315', label:'Six'}]} />\n                            </CheckButtonGroup>\n                        </div>\n                        \n                        // Grid\n                        <CheckButtonGroup grid={true}>\n                            <RadioButton value={value7}\n                                         options={[{value:'test316', label:'One'}, {value:'test317', label:'Two'}, {value:'test318', label:'Three'}, {value:'test319', label:'Four'}, {value:'test320', label:'Five'}, {value:'test321', label:'Six'}]} />\n                        </CheckButtonGroup>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Props"),
            React.createElement("p", { className: "docs-page__paragraph" }, "Radio"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'value', isRequered: true, type: 'T', default: '/', description: 'The value of the checked button.' }),
                React.createElement(app_typescript_1.Prop, { name: 'options', isRequered: true, type: 'Array', default: '/', description: 'Array of Radio options.' }),
                React.createElement(app_typescript_1.Prop, { name: 'options label', isRequered: true, type: 'string', default: '/', description: 'Label text value for Radio.' }),
                React.createElement(app_typescript_1.Prop, { name: 'options value', isRequered: true, type: 'T', default: '/', description: '' }),
                React.createElement(app_typescript_1.Prop, { name: 'options disabled', isRequered: true, type: 'boolean', default: 'false', description: 'Disables the Radio, preventing mouse events.' }),
                React.createElement(app_typescript_1.Prop, { name: 'labelSide', isRequered: false, type: 'left | right', default: 'right', description: 'Position of label relative to the button.' })),
            React.createElement("p", { className: "docs-page__paragraph" }, "Radio Button"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'value', isRequered: true, type: 'any', default: '/', description: 'The value of the checked button.' }),
                React.createElement(app_typescript_1.Prop, { name: 'options', isRequered: true, type: 'Array<option>', default: '/', description: 'Array of RadioButton options.' }),
                React.createElement(app_typescript_1.Prop, { name: 'option label', isRequered: true, type: 'string', default: '/', description: 'Label text value for RadioButton.' }),
                React.createElement(app_typescript_1.Prop, { name: 'option value', isRequered: true, type: 'any', default: '/', description: 'Value of the Radio.' }),
                React.createElement(app_typescript_1.Prop, { name: 'option disabled', isRequered: true, type: 'boolean', default: 'false', description: 'Disables the Radio, preventing mouse events.' }),
                React.createElement(app_typescript_1.Prop, { name: 'option icon', isRequered: true, type: 'string', default: '/', description: 'Icon class name without the icon- part.' }),
                React.createElement(app_typescript_1.Prop, { name: 'labelSide', isRequered: false, type: 'left | right', default: 'right', description: 'Position of label relative to the button.' }))));
    };
    return RadiosDoc;
}(React.Component));
exports.default = RadiosDoc;


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var Components = __importStar(__webpack_require__(39));
var app_typescript_1 = __webpack_require__(2);
var CheckboxsDoc = /** @class */ (function (_super) {
    __extends(CheckboxsDoc, _super);
    function CheckboxsDoc(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            value1: false,
            value2: false,
            value3: false,
            value4: false,
            value5: true,
            value6: false,
            value7: false,
            value8: false,
            value9: false,
            value10: false,
            value11: false,
            value12: false,
            value13: false,
            value14: false,
            value15: false,
            value16: false,
            value17: false,
            value18: false,
            value19: false,
            value20: false,
            value21: false,
            value22: false,
            value23: false,
            value24: false,
            value25: false,
            value26: false,
            value27: false,
            value28: false,
            value29: false,
            value30: false,
            value31: false,
            value32: false,
            value33: false,
            value34: false,
            value35: false,
            value36: false,
            value37: false,
        };
        return _this;
    }
    CheckboxsDoc.prototype.render = function () {
        var _this = this;
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2" }, "Checkbox"),
            React.createElement("p", { className: "docs-page__paragraph" }),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <Checkbox checked={value1} label={{text:'Checkbox label right'}} \n                              onChange={(value) => this.setState(() => ({ value1: value }))} />\n                "),
            React.createElement("h3", { className: "docs-page__h3" }, "Basic Checkbox"),
            React.createElement("p", { className: "docs-page__paragraph" },
                "The label of the checkbox is by default always on the right. Although it's not in line with Superdesk design standards the label can also be placed to the left, by addind the prop ",
                React.createElement("code", null, "labelSide='left'"),
                "."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Label on the right (default)"),
                    React.createElement("div", { className: 'form__row' },
                        React.createElement(app_typescript_1.CheckGroup, null,
                            React.createElement(app_typescript_1.Checkbox, { checked: this.state.value1, label: { text: 'Checkbox label right' }, onChange: function (value) { return _this.setState(function () { return ({ value1: value }); }); } }),
                            React.createElement(app_typescript_1.Checkbox, { checked: this.state.value2, label: { text: 'Check me!' }, onChange: function (value) { return _this.setState(function () { return ({ value2: value }); }); } }),
                            React.createElement(app_typescript_1.Checkbox, { checked: this.state.value3, label: { text: 'Check me too!' }, onChange: function (value) { return _this.setState(function () { return ({ value3: value }); }); } }),
                            React.createElement(app_typescript_1.Checkbox, { checked: this.state.value4, label: { text: 'I"m disabled:(' }, disabled: true, onChange: function (value) { return _this.setState(function () { return ({ value4: value }); }); } }),
                            React.createElement(app_typescript_1.Checkbox, { checked: this.state.value5, label: { text: "I'm disabled and checked :(" }, disabled: true, onChange: function (value) { return _this.setState(function () { return ({ value5: value }); }); } }))),
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Label on the left"),
                    React.createElement("p", { className: "docs-page__paragraph--small" }, "This option should be avoided in Superdesk."),
                    React.createElement("div", { className: 'form__row' },
                        React.createElement(app_typescript_1.CheckGroup, null,
                            React.createElement(app_typescript_1.Checkbox, { checked: this.state.value6, label: { text: 'Checkbox label left', side: 'left' }, onChange: function (value) { return _this.setState(function () { return ({ value6: value }); }); } }))),
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Checkbox with custom values"),
                    React.createElement("div", { className: 'form__row' },
                        React.createElement(app_typescript_1.CheckGroup, null,
                            React.createElement(app_typescript_1.Checkbox, { checked: this.state.value7, label: { text: 'Checkbox with custom values' }, onChange: function (value) { return _this.setState(function () { return ({ value7: value }); }); } })))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        // Label on the right (default)\n                        <CheckGroup>\n                            <Checkbox checked={value1} label={{text:'Checkbox label right'}}\n                                      onChange={(value) => this.setState(() => ({ value1: value }))} />\n                            <Checkbox checked={value2} label={{text:'Check me!'}}\n                                      onChange={(value) => this.setState(() => ({ value2: value }))} />\n                            <Checkbox checked={value3} label={{text:'Check me too!'}}\n                                      onChange={(value) => this.setState(() => ({ value3: value }))} />\n                            <Checkbox checked={value4} label={{text:\"I'm disabled:(\"}} disabled={true}\n                                      onChange={(value) => this.setState(() => ({ value4: value }))} />\n                            <Checkbox checked={value5} label={{text:\"I'm disabled and checked :(\"}} disabled={true}\n                                      onChange={(value) => this.setState(() => ({ value5: value }))} />\n                        </CheckGroup>\n\n                        // Label on the left\n                        <CheckGroup>\n                            <Checkbox checked={value6} label={{text:'Checkbox label left', side:'left'}}\n                                      onChange={(value) => this.setState(() => ({ value6: value }))} />\n                        </CheckGroup>\n\n                        // Checkbox with custom values\n                        <CheckGroup>\n                            <Checkbox checked={value7} label={{text:'Checkbox with custom values'}}\n                                      onChange={(value) => this.setState(() => ({ value7: value }))} />\n                        </CheckGroup>\n                    ")),
            React.createElement(Components.GraphicButtonsGroup, null,
                React.createElement(Components.GraphicButton, { graphic: 'design', text: 'Checkbox usage guidelines', smallText: 'Design guidelines', link: '#/design/checkbox-and-radio' })),
            React.createElement("h3", { className: "docs-page__h3" }, "Checkbox groups"),
            React.createElement("p", { className: "docs-page__paragraph" },
                React.createElement("code", null, "CheckGroup"),
                " is a helpful wrapper component used to group ",
                React.createElement("code", null, "Checkbox"),
                " components. By default the checkboxes are grouped horizontaly. To group them verticaly \u2013 in a list-like view \u2013 add the prop ",
                React.createElement("code", null, "orientation='vertical'"),
                " to the ",
                React.createElement("code", null, "CheckGroup"),
                " component."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Horizontal group (default)"),
                    React.createElement("div", { className: 'form__group' },
                        React.createElement(app_typescript_1.CheckGroup, null,
                            React.createElement(app_typescript_1.Checkbox, { checked: this.state.value16, label: { text: 'Checkbox one' }, onChange: function (value) { return _this.setState(function () { return ({ value16: value }); }); } }),
                            React.createElement(app_typescript_1.Checkbox, { checked: this.state.value17, label: { text: 'Checkbox two' }, onChange: function (value) { return _this.setState(function () { return ({ value17: value }); }); } }),
                            React.createElement(app_typescript_1.Checkbox, { checked: this.state.value18, label: { text: 'Checkbox three' }, onChange: function (value) { return _this.setState(function () { return ({ value18: value }); }); } }))),
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Vertical group"),
                    React.createElement("div", { className: 'form__group' },
                        React.createElement(app_typescript_1.CheckGroup, { orientation: 'vertical' },
                            React.createElement(app_typescript_1.Checkbox, { checked: this.state.value19, label: { text: 'Checkbox one' }, onChange: function (value) { return _this.setState(function () { return ({ value19: value }); }); } }),
                            React.createElement(app_typescript_1.Checkbox, { checked: this.state.value20, label: { text: 'Checkbox two' }, onChange: function (value) { return _this.setState(function () { return ({ value20: value }); }); } }),
                            React.createElement(app_typescript_1.Checkbox, { checked: this.state.value21, label: { text: 'Checkbox three' }, onChange: function (value) { return _this.setState(function () { return ({ value21: value }); }); } })))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        // Horizontal group (default)\n                        <CheckGroup>\n                            <Checkbox checked={value16} label={{text:'Checkbox one'}}\n                                      onChange={(value) => this.setState(() => ({ value16: value }))} />\n                            <Checkbox checked={value17} label={{text:'Checkbox two'}}\n                                      onChange={(value) => this.setState(() => ({ value17: value }))} />\n                            <Checkbox checked={value18} label={{text:'Checkbox three'}}\n                                      onChange={(value) => this.setState(() => ({ value18: value }))} />\n                        </CheckGroup>\n\n                        // Vertical group\n                        <CheckGroup orientation='vertical'>\n                            <Checkbox checked={value19} label={{text:'Checkbox one'}}\n                                      onChange={(value) => this.setState(() => ({ value19: value }))} />\n                            <Checkbox checked={value20} label={{text:'Checkbox two'}}\n                                      onChange={(value) => this.setState(() => ({ value20: value }))} />\n                            <Checkbox checked={value21} label={{text:'Checkbox three'}}\n                                      onChange={(value) => this.setState(() => ({ value21: value }))} />\n                        </CheckGroup>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Button style checkbox"),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <CheckButtonGroup>\n                        <CheckboxButton checked={value1} label={{text:'Button Checkbox one'}} \n                                        onChange={(value) => this.setState(() => ({ value1: value }))} />\n                        <CheckboxButton checked={value2} label={{text:'Button Checkbox two'}} \n                                        onChange={(value) => this.setState(() => ({ value2: value }))} />\n                    </CheckButtonGroup>\n                "),
            React.createElement("p", { className: "docs-page__paragraph" },
                "The ",
                React.createElement("code", null, "CheckboxButton"),
                " component shares the same functionality as the Checkbox component but has a different visual appearance. Any icon from the ",
                React.createElement("a", { className: 'link', href: '#/components/icons', target: 'blank' }, "icon font"),
                " can be added to the component by specifying a value (icon name without the ",
                React.createElement("code", null, "icon-"),
                " prefix) for the optional ",
                React.createElement("code", null, "icon"),
                " prop."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Button style checkbox"),
                    React.createElement("div", { className: 'form__group' },
                        React.createElement(app_typescript_1.CheckButtonGroup, null,
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value8, label: { text: 'Button style checkbox' }, onChange: function (value) { return _this.setState(function () { return ({ value8: value }); }); } }),
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value9, label: { text: 'Check this out' }, onChange: function (value) { return _this.setState(function () { return ({ value9: value }); }); } }),
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value10, label: { text: 'Check this too!' }, onChange: function (value) { return _this.setState(function () { return ({ value10: value }); }); } }),
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value11, label: { text: "U can't touch this" }, disabled: true, onChange: function (value) { return _this.setState(function () { return ({ value11: value }); }); } }))),
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Button style with icon"),
                    React.createElement("div", { className: 'form__group' },
                        React.createElement(app_typescript_1.CheckButtonGroup, null,
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value12, label: { text: 'Button style with icon' }, icon: 'th-list', onChange: function (value) { return _this.setState(function () { return ({ value12: value }); }); } }),
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value13, label: { text: 'I have an icon!' }, icon: 'th', onChange: function (value) { return _this.setState(function () { return ({ value13: value }); }); } }),
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value14, label: { text: 'Yeah, me too!' }, icon: 'th-large', onChange: function (value) { return _this.setState(function () { return ({ value14: value }); }); } }),
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value15, label: { text: 'I have an icon :)' }, icon: 'star', onChange: function (value) { return _this.setState(function () { return ({ value15: value }); }); } })))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        // Button style checkbox\n                        <CheckButtonGroup>\n                            <CheckboxButton checked={value8} label={{text:'Button style checkbox'}}\n                                            onChange={(value) => this.setState(() => ({ value8: value }))} />\n                            <CheckboxButton checked={value9} label={{text:'Check this out'}}\n                                            onChange={(value) => this.setState(() => ({ value9: value }))} />\n                            <CheckboxButton checked={value10} label={{text:'Check this too!'}}\n                                            onChange={(value) => this.setState(() => ({ value10: value }))} />\n                            <CheckboxButton checked={value11} label={{text:\"U can't touch this\"}}\n                                            onChange={(value) => this.setState(() => ({ value11: value }))} />\n                        </CheckButtonGroup>\n\n                        // Button style with icon\n                        <CheckButtonGroup>\n                            <CheckboxButton checked={value12} label={{text:'Button style with icon'}} icon='th-list'\n                                            onChange={(value) => this.setState(() => ({ value12: value }))} />\n                            <CheckboxButton checked={value13} label={{text:'I have an icon!'}} icon='th'\n                                            onChange={(value) => this.setState(() => ({ value13: value }))} />\n                            <CheckboxButton checked={value14} label={{text:'Yeah, me too!'}} icon='th-large'\n                                            onChange={(value) => this.setState(() => ({ value14: value }))} />\n                            <CheckboxButton checked={value15} label={{text:'I have an icon :)'}} icon='star'\n                                            onChange={(value) => this.setState(() => ({ value15: value }))} />\n                        </CheckButtonGroup>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Button style checkbox Groups"),
            React.createElement("p", { className: "docs-page__paragraph" },
                React.createElement("code", null, "CheckButtonGroup"),
                " is a helpful wrapper component used to group ",
                React.createElement("code", null, "CheckboxButton"),
                " components. By default the CheckboxButton components are grouped horizontaly. A few more options are available compared to the ",
                React.createElement("code", null, "CheckGroup"),
                " component \u2013 alignment (left, right and center) and grid layout. "),
            React.createElement(app_typescript_1.Alert, { style: 'hollow', size: 'small', type: 'primary' }, "NOTE: Alignment will work only in parent elements with display: flex;"),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Left (default)"),
                    React.createElement("div", { className: 'form__row form__row--flex docs-page__test-helper-2' },
                        React.createElement(app_typescript_1.CheckButtonGroup, null,
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value22, label: { text: 'Option one' }, onChange: function (value) { return _this.setState(function () { return ({ value22: value }); }); } }),
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value23, label: { text: 'Option two' }, onChange: function (value) { return _this.setState(function () { return ({ value23: value }); }); } }))),
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Right"),
                    React.createElement("div", { className: 'form__row form__row--flex docs-page__test-helper-2' },
                        React.createElement(app_typescript_1.CheckButtonGroup, { align: 'right' },
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value24, label: { text: 'Option one' }, onChange: function (value) { return _this.setState(function () { return ({ value24: value }); }); } }),
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value25, label: { text: 'Option two' }, onChange: function (value) { return _this.setState(function () { return ({ value25: value }); }); } }))),
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Center"),
                    React.createElement("div", { className: 'form__row form__row--flex docs-page__test-helper-2' },
                        React.createElement(app_typescript_1.CheckButtonGroup, { align: 'center' },
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value26, label: { text: 'Option one' }, onChange: function (value) { return _this.setState(function () { return ({ value26: value }); }); } }),
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value27, label: { text: 'Option two' }, onChange: function (value) { return _this.setState(function () { return ({ value27: value }); }); } }))),
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Left + Center + Right"),
                    React.createElement("div", { className: 'form__row form__row--flex docs-page__test-helper-2' },
                        React.createElement(app_typescript_1.CheckButtonGroup, null,
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value28, label: { text: 'One' }, onChange: function (value) { return _this.setState(function () { return ({ value28: value }); }); } }),
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value29, label: { text: 'Two' }, onChange: function (value) { return _this.setState(function () { return ({ value29: value }); }); } })),
                        React.createElement(app_typescript_1.CheckButtonGroup, { align: 'center' },
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value30, label: { text: 'Three' }, onChange: function (value) { return _this.setState(function () { return ({ value30: value }); }); } }),
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value31, label: { text: 'Four' }, onChange: function (value) { return _this.setState(function () { return ({ value31: value }); }); } })),
                        React.createElement(app_typescript_1.CheckButtonGroup, { align: 'right' },
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value32, label: { text: 'Five' }, onChange: function (value) { return _this.setState(function () { return ({ value32: value }); }); } }),
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value33, label: { text: 'Six' }, onChange: function (value) { return _this.setState(function () { return ({ value33: value }); }); } }))),
                    React.createElement("p", { className: "docs-page__paragraph docs-page__paragraph--topMarginL" }, "// Grid"),
                    React.createElement("div", { className: 'form__row form__row--flex docs-page__test-helper-2', style: { width: 400 } },
                        React.createElement(app_typescript_1.CheckButtonGroup, { grid: true },
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value34, label: { text: 'Option one' }, onChange: function (value) { return _this.setState(function () { return ({ value34: value }); }); } }),
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value35, label: { text: 'Option two' }, onChange: function (value) { return _this.setState(function () { return ({ value35: value }); }); } }),
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value36, label: { text: 'Option three' }, onChange: function (value) { return _this.setState(function () { return ({ value36: value }); }); } }),
                            React.createElement(app_typescript_1.CheckboxButton, { checked: this.state.value37, label: { text: 'Option four' }, onChange: function (value) { return _this.setState(function () { return ({ value37: value }); }); } })))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        // Left (default)\n                        <CheckButtonGroup>\n                            <CheckboxButton checked={value22} label={{text:'Option one'}}\n                                            onChange={(value) => this.setState(() => ({ value22: value }))} />\n                            <CheckboxButton checked={value23} label={{text:'Option two'}}\n                                            onChange={(value) => this.setState(() => ({ value23: value }))} />\n                        </CheckButtonGroup>\n\n                        // Right\n                        <CheckButtonGroup align='right'>\n                            <CheckboxButton checked={value24} label={{text:'Option one'}}\n                                            onChange={(value) => this.setState(() => ({ value24: value }))} />\n                            <CheckboxButton checked={value25} label={{text:'Option two'}}\n                                            onChange={(value) => this.setState(() => ({ value25: value }))} />\n                        </CheckButtonGroup>\n                        \n                        // Center\n                        <CheckButtonGroup align='center'>\n                            <CheckboxButton checked={value26} label={{text:'Option one'}}\n                                            onChange={(value) => this.setState(() => ({ value26: value }))} />\n                            <CheckboxButton checked={value27} label={{text:'Option two'}}\n                                            onChange={(value) => this.setState(() => ({ value27: value }))} />\n                        </CheckButtonGroup>\n\n                        // Left + Center + Right\n                        <div className='form__row form__row--flex'>\n                            <CheckButtonGroup>\n                                <CheckboxButton checked={value28} label={{text:'One'}}\n                                                onChange={(value) => this.setState(() => ({ value28: value }))} />\n                                <CheckboxButton checked={value29} label={{text:'Two'}}\n                                                onChange={(value) => this.setState(() => ({ value29: value }))} />\n                            </CheckButtonGroup>\n\n                            <CheckButtonGroup align='center'>\n                                <CheckboxButton checked={value30} label={{text:'Three'}}\n                                                onChange={(value) => this.setState(() => ({ value30: value }))} />\n                                <CheckboxButton checked={value31} label={{text:'Four'}}\n                                                onChange={(value) => this.setState(() => ({ value31: value }))} />\n                            </CheckButtonGroup>\n\n                            <CheckButtonGroup align='right'>\n                                <CheckboxButton checked={value32} label={{text:'Five'}}\n                                                onChange={(value) => this.setState(() => ({ value32: value }))} />\n                                <CheckboxButton checked={value33} label={{text:'Six'}}\n                                                onChange={(value) => this.setState(() => ({ value33: value }))} />\n                            </CheckButtonGroup>\n                        </div>\n                        \n                        // Grid\n                        <CheckButtonGroup grid={true}>\n                            <CheckboxButton checked={value34} label={{text:'Option one'}}\n                                            onChange={(value) => this.setState(() => ({ value34: value }))} />\n                            <CheckboxButton checked={value35} label={{text:'Option two'}}\n                                            onChange={(value) => this.setState(() => ({ value35: value }))} />\n                            <CheckboxButton checked={value36} label={{text:'Option three'}}\n                                            onChange={(value) => this.setState(() => ({ value36: value }))} />\n                            <CheckboxButton checked={value37} label={{text:'Option four'}}\n                                            onChange={(value) => this.setState(() => ({ value37: value }))} />\n                        </CheckButtonGroup>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Props"),
            React.createElement("p", { className: "docs-page__paragraph" }, "Checkbox"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'checked', isRequered: true, type: 'boolean', default: 'false', description: 'The checked state of the input.' }),
                React.createElement(app_typescript_1.Prop, { name: 'label text', isRequered: true, type: 'string', default: '/', description: 'Label text value.' }),
                React.createElement(app_typescript_1.Prop, { name: 'label side', isRequered: false, type: 'left | right', default: 'right', description: 'Position of label relative to the button.' }),
                React.createElement(app_typescript_1.Prop, { name: 'disabled', isRequered: true, type: 'boolean', default: 'false', description: 'The disabled state of Checkbox.' })),
            React.createElement("p", { className: "docs-page__paragraph" }, "Checkbox Button"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'checked', isRequered: true, type: 'boolean', default: '/', description: 'The checked state of the input' }),
                React.createElement(app_typescript_1.Prop, { name: 'label text', isRequered: true, type: 'string', default: '/', description: 'Label text value.' }),
                React.createElement(app_typescript_1.Prop, { name: 'option label', isRequered: true, type: 'string', default: '/', description: 'Option label value.' }),
                React.createElement(app_typescript_1.Prop, { name: 'icon', isRequered: false, type: 'string', default: '/', description: 'Icon class name without the icon- part.' }),
                React.createElement(app_typescript_1.Prop, { name: 'disabled', isRequered: true, type: 'boolean', default: 'false', description: 'The disabled state of CheckboxButton' }))));
    };
    return CheckboxsDoc;
}(React.Component));
exports.default = CheckboxsDoc;


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var app_typescript_2 = __webpack_require__(2);
var TabsDoc = /** @class */ (function (_super) {
    __extends(TabsDoc, _super);
    function TabsDoc(props) {
        var _this = _super.call(this, props) || this;
        _this.handleClick = function (number) {
            _this.setState({
                indexValue: number,
            });
        };
        _this.state = {
            indexValue: 0
        };
        _this.handleClick = _this.handleClick.bind(_this);
        return _this;
    }
    TabsDoc.prototype.componentDidMount = function () {
        this.tabs.goTo('Content');
    };
    TabsDoc.prototype.render = function () {
        var _this = this;
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2" }, "Tabs"),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <TabList>\n                        <Tab label='Content'>Content here.</Tab>\n                        <Tab label='Metadata'>Metadata here.</Tab>\n                        <Tab label='Duplicates'>Duplicates here.</Tab>\n                    </TabList>\n                "),
            React.createElement("h3", { className: "docs-page__h3" }, "Default tabs"),
            React.createElement("p", { className: "docs-page__paragraph" },
                "To have a tab-like navigation add the ",
                React.createElement("code", null, "TabList"),
                " component and multiple ",
                React.createElement("code", null, "Tab"),
                " components inside of it."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement(app_typescript_1.TabList, { ref: function (tabs) {
                                _this.tabs = tabs;
                            } },
                            React.createElement(app_typescript_1.Tab, { label: 'Content' }, "Content here."),
                            React.createElement(app_typescript_1.Tab, { label: 'Metadata' }, "Metadata here."),
                            React.createElement(app_typescript_1.Tab, { label: 'Duplicates' }, "Duplicates here.")))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <TabList>\n                            <Tab label='Content'>Content here.</Tab>\n                            <Tab label='Metadata'>Metadata here.</Tab>\n                            <Tab label='Duplicates'>Duplicates here.</Tab>\n                        </TabList>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Sizes"),
            React.createElement("p", { className: "docs-page__paragraph" },
                "Tabs come in three different sizes \u2013 normal, small and large. Add prop ",
                React.createElement("code", null, "size='large'"),
                " to the ",
                React.createElement("code", null, "TabList"),
                " component to create large tabs or ",
                React.createElement("code", null, "size='small'"),
                " for small ones. The default (normal) size doesn't need the ",
                React.createElement("code", null, "size"),
                " prop to be specified."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement("p", { className: "docs-page__paragraph" }, "// Normal tabs (default)"),
                        React.createElement(app_typescript_1.TabList, null,
                            React.createElement(app_typescript_1.Tab, { label: 'Content' }, "Content here."),
                            React.createElement(app_typescript_1.Tab, { label: 'Metadata' }, "Metadata here."),
                            React.createElement(app_typescript_1.Tab, { label: 'Duplicates' }, "Duplicates here."))),
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement("p", { className: "docs-page__paragraph" }, "// Small tabs"),
                        React.createElement(app_typescript_1.TabList, { size: 'small' },
                            React.createElement(app_typescript_1.Tab, { label: 'Content' }, "Content here."),
                            React.createElement(app_typescript_1.Tab, { label: 'Metadata' }, "Metadata here."),
                            React.createElement(app_typescript_1.Tab, { label: 'Duplicates' }, "Duplicates here."))),
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement("p", { className: "docs-page__paragraph" }, "// Large tabs"),
                        React.createElement(app_typescript_1.TabList, { size: 'large' },
                            React.createElement(app_typescript_1.Tab, { label: 'Content' }, "Content here."),
                            React.createElement(app_typescript_1.Tab, { label: 'Metadata' }, "Metadata here."),
                            React.createElement(app_typescript_1.Tab, { label: 'Duplicates' }, "Duplicates here.")))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        // Normal tabs (default)\n                        <TabList>\n                            <Tab label='Content'>Content here.</Tab>\n                            <Tab label='Metadata'>Metadata here.</Tab>\n                            <Tab label='Duplicates'>Duplicates here.</Tab>\n                        </TabList>\n                        // Large tabs\n                        <TabList size='large'>\n                            <Tab label='Content'>Content here.</Tab>\n                            <Tab label='Metadata'>Metadata here.</Tab>\n                            <Tab label='Duplicates'>Duplicates here.</Tab>\n                        </TabList>\n                        // Small tabs\n                        <TabList size='small'>\n                            <Tab label='Content'>Content here.</Tab>\n                            <Tab label='Metadata'>Metadata here.</Tab>\n                            <Tab label='Duplicates'>Duplicates here.</Tab>\n                        </TabList>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Dark tab variation"),
            React.createElement("p", { className: "docs-page__paragraph" },
                "Add prop ",
                React.createElement("code", null, "theme='dark'"),
                " to the ",
                React.createElement("code", null, "TabList"),
                " component. The Dark theme also works in combination with different size values."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: 'docs-page__content-row docs-page__content-row--ui-dark' },
                        React.createElement(app_typescript_1.TabList, { theme: 'dark' },
                            React.createElement(app_typescript_1.Tab, { label: 'Content' }, "Content here."),
                            React.createElement(app_typescript_1.Tab, { label: 'Metadata' }, "Metadata here."),
                            React.createElement(app_typescript_1.Tab, { label: 'Duplicates' }, "Duplicates here.")))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <TabList theme='dark'>\n                            <Tab label='Content'>Content here.</Tab>\n                            <Tab label='Metadata'>Metadata here.</Tab>\n                            <Tab label='Duplicates'>Duplicates here.</Tab>\n                        </TabList>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" },
                "Tabs with two components ( ",
                React.createElement("code", null, "Tabs"),
                " and ",
                React.createElement("code", null, " TabContent"),
                " ) "),
            React.createElement("p", { className: "docs-page__paragraph" },
                "If you want to use on one place list of tabs and on another place content of tabs, wrap all ",
                React.createElement("code", null, "TabLabel"),
                " with ",
                React.createElement("code", null, "Tabs"),
                " component and all ",
                React.createElement("code", null, "TabPanel"),
                " components with ",
                React.createElement("code", null, "TabContent.")),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement(app_typescript_2.Tabs, { onClick: this.handleClick },
                            React.createElement(app_typescript_2.TabLabel, { label: 'Content', indexValue: 0 }),
                            React.createElement(app_typescript_2.TabLabel, { label: 'Metadata', indexValue: 1 }),
                            React.createElement(app_typescript_2.TabLabel, { label: 'Duplicates', indexValue: 2 })),
                        React.createElement(app_typescript_2.TabContent, { activePanel: this.state.indexValue },
                            React.createElement(app_typescript_2.TabPanel, { indexValue: 0 }, "Content here."),
                            React.createElement(app_typescript_2.TabPanel, { indexValue: 1 }, "Metadata here."),
                            React.createElement(app_typescript_2.TabPanel, { indexValue: 2 }, "Duplicates here.")))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                    const [activeIndex, setActiveIndex] = React.useState(0);\n                    const handleClick = (index: number) => {\n                        setActiveIndex(index);\n                    }\n\n                       <Tabs onClick={handleClick}>\n                            <TabLabel label='Content' indexValue={0}/>\n                            <TabLabel label='Metadata' indexValue={1}/>\n                            <TabLabel label='Duplicates' indexValue={2}/>\n                        </Tabs>\n                        <TabContent activePanel={activeIndex}>\n                            <TabPanel indexValue={0}>\n                                Content here.\n                            </TabPanel>\n                            <TabPanel indexValue={1}>\n                                Metadata here.\n                            </TabPanel>\n                            <TabPanel indexValue={2}>\n                                Duplicates here.\n                            </TabPanel>\n                        </TabContent>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Props"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'tablist size', isRequered: false, type: 'small | normal | large', default: 'normal', description: 'Specifies a small, normal or large button.' }),
                React.createElement(app_typescript_1.Prop, { name: 'tablist theme', isRequered: false, type: 'light | dark', default: 'light', description: 'Styles tablist for diffrent background.' }),
                React.createElement(app_typescript_1.Prop, { name: 'tab label', isRequered: false, type: 'string', default: '/', description: 'Text value of Tab label' })),
            React.createElement("br", null),
            React.createElement("h4", { className: "docs-page__h4" }, "Tabs Custom"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'tabs size', isRequered: false, type: 'small | normal | large', default: 'normal', description: 'Specifies a small, normal or large button.' }),
                React.createElement(app_typescript_1.Prop, { name: 'tabs theme', isRequered: false, type: 'light | dark', default: 'light', description: 'Styles tablist for diffrent background.' }),
                React.createElement(app_typescript_1.Prop, { name: 'tabs ariaLabel', isRequered: false, type: 'string', default: '/', description: 'Text value of aria-label' }),
                React.createElement(app_typescript_1.Prop, { name: 'tabs onClick', isRequered: true, type: 'function', default: '/', description: 'Use to return value of clicked label' }),
                React.createElement(app_typescript_1.Prop, { name: 'tablabel indexValue', isRequered: true, type: 'number', default: '/', description: 'Index value of label' }),
                React.createElement(app_typescript_1.Prop, { name: 'tablabel label', isRequered: true, type: 'string', default: '/', description: 'Text value of Tab label' }),
                React.createElement(app_typescript_1.Prop, { name: 'tabcontent theme', isRequered: false, type: 'light | dark', default: 'light', description: 'Styles tablist for diffrent background.' }),
                React.createElement(app_typescript_1.Prop, { name: 'tabcontent activePanel', isRequered: true, type: 'number', default: '/', description: 'Index value of active Tab' }),
                React.createElement(app_typescript_1.Prop, { name: 'tabpanel indexValue', isRequered: true, type: 'number', default: '/', description: 'Index value of Tab Panel' }))));
    };
    return TabsDoc;
}(React.Component));
exports.default = TabsDoc;


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var LeftNavigationsDoc = /** @class */ (function (_super) {
    __extends(LeftNavigationsDoc, _super);
    function LeftNavigationsDoc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LeftNavigationsDoc.prototype.render = function () {
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2" }, "Left navigation"),
            React.createElement("p", { className: "docs-page__paragraph" }, "..."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: 'docs-page__content-row' },
                        React.createElement("div", { className: 'docs-page__grid-page-example' },
                            React.createElement("div", { className: 'docs-page__grid-page-example__top' },
                                React.createElement("div", { className: "sd-top-menu" },
                                    React.createElement("a", { className: "sd-top-menu__collapse-nav" },
                                        React.createElement("i", { className: "icon-collapse icon--white" })),
                                    React.createElement("p", { className: "sd-top-menu__header" }, "Top menu"))),
                            React.createElement(app_typescript_1.LeftMenu, { ariaLabel: 'Left navigation', navClass: 'docs-page__grid-page-example__side', activeItemId: '1', groups: [{ label: 'SYSTEM SETTINGS', items: [{ id: '1', label: 'General' }, { id: '2', label: 'Email settings' }, { id: '3', label: 'Spell checking' }] },
                                    { label: 'WORKFLOW', items: [{ id: '4', label: 'Desk' }, { id: '5', label: 'User Roles & Privileges' }] },
                                    { label: 'CONTENT CONFIG', items: [{ id: '6', label: 'Image renditions' }, { id: '7', label: 'Controlled Vocabularies' }] }], onSelect: function () { return false; } }),
                            React.createElement("div", { className: 'docs-page__grid-page-example__main' })))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <LeftMenu ariaLabel={'Left navigation'} navClass={'some-optional-class'} activeItemId='1' groups={[{ label: 'SYSTEM SETTINGS', items: [{ id: '1', label: 'General' }, { id: '2', label: 'Email settings' }, { id: '3', label: 'Spell checking' }] },\n                            { label: 'WORKFLOW', items: [{ id: '4', label: 'Desk' }, { id: '5', label: 'User Roles & Privileges' }] },\n                            { label: 'CONTENT CONFIG', items: [{ id: '6', label: 'Image renditions' }, { id: '7', label: 'Controlled Vocabularies' }] }]}\n                            onSelect={() => false} />\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Props"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'groups', isRequered: true, type: 'Array<menugroup>', default: '/', description: 'Array of groups' }),
                React.createElement(app_typescript_1.Prop, { name: 'activeItemId', isRequered: true, type: 'string', default: '/', description: 'Id of active item' }),
                React.createElement(app_typescript_1.Prop, { name: 'menugroup label', isRequered: true, type: 'string', default: '/', description: 'Menugroup label text value.' }),
                React.createElement(app_typescript_1.Prop, { name: 'menugroup items', isRequered: true, type: 'Array<menuitem>', default: '/', description: 'Array of items' }),
                React.createElement(app_typescript_1.Prop, { name: 'menuitem id', isRequered: true, type: 'string', default: '/', description: 'Menugroup id value' }),
                React.createElement(app_typescript_1.Prop, { name: 'menuitem label', isRequered: true, type: 'string', default: '/', description: 'Menugroup label text value.' }))));
    };
    return LeftNavigationsDoc;
}(React.Component));
exports.default = LeftNavigationsDoc;


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var NavButtonsDoc = /** @class */ (function (_super) {
    __extends(NavButtonsDoc, _super);
    function NavButtonsDoc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NavButtonsDoc.prototype.render = function () {
        return (React.createElement("section", { className: 'docs-page__container' },
            React.createElement("h2", { className: 'docs-page__h2' }, "Navigation button"),
            React.createElement("p", null),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <NavButton type='default' icon='home' onClick={()=> false} />\n                "),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement(app_typescript_1.SubNav, { zIndex: 2 },
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'left' },
                            React.createElement(app_typescript_1.Tooltip, { text: 'Filters', flow: 'right' },
                                React.createElement(app_typescript_1.NavButton, { icon: 'filter-large', type: 'darker', onClick: function () { return false; } })),
                            React.createElement(app_typescript_1.NavButton, { icon: 'search', onClick: function () { return false; } })),
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'right' },
                            React.createElement(app_typescript_1.NavButton, { icon: 'list-plus', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Tooltip, { text: 'More actions', flow: 'down' },
                                React.createElement(app_typescript_1.NavButton, { icon: 'dots-vertical', onClick: function () { return false; } })),
                            React.createElement(app_typescript_1.Tooltip, { text: 'Send to / Publish', flow: 'left' },
                                React.createElement(app_typescript_1.NavButton, { icon: 'expand-thin', type: 'highlight', onClick: function () { return false; } }))))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <SubNav zIndex={2}>\n                            <ButtonGroup align='left'>\n                                <Tooltip text='Filters' flow='right'>\n                                    <NavButton icon='filter-large' type='darker' onClick={() => false} />\n                                </Tooltip>\n                                <NavButton icon='search' onClick={() => false} />\n                            </ButtonGroup>\n                            <ButtonGroup align='right'>\n                                <NavButton icon='list-plus' onClick={() => false} />\n                                <Tooltip text='More actions' flow='down'>\n                                    <NavButton icon='dots-vertical' onClick={() => false} />\n                                </Tooltip>\n                                <Tooltip text='Send to / Publish' flow='left'>\n                                    <NavButton icon='expand-thin' type='highlight' onClick={() => false} />\n                                </Tooltip>\n                            </ButtonGroup>\n                        </SubNav>        \n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Props"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'icon', isRequered: false, type: 'string', default: '/', description: 'Icon class name without the icon- part.' }),
                React.createElement(app_typescript_1.Prop, { name: 'iconSize', isRequered: false, type: 'small | big', default: 'small', description: 'Specifies a small or big button' }),
                React.createElement(app_typescript_1.Prop, { name: 'type', isRequered: false, type: 'default | primary | success | warning | alert | highlight | sd-green', default: 'default', description: 'Default + semantic colour variations (e.g. primary, success etc.).' }),
                React.createElement(app_typescript_1.Prop, { name: 'theme', isRequered: false, type: 'light | dark', default: 'light', description: 'Styles nav button for diffrent background.' }),
                React.createElement(app_typescript_1.Prop, { name: 'value', isRequered: false, type: 'button | submit | reset', default: 'button', description: 'Specifies a value of nav button' }))));
    };
    return NavButtonsDoc;
}(React.Component));
exports.default = NavButtonsDoc;


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var iconFont = __importStar(__webpack_require__(232));
var IconFontDoc = /** @class */ (function (_super) {
    __extends(IconFontDoc, _super);
    function IconFontDoc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IconFontDoc.prototype.render = function () {
        var array = iconFont.icon.split(', ');
        var icons = array.map(function (icon, index) {
            return React.createElement("li", { key: index },
                React.createElement(app_typescript_1.Icon, { name: icon }),
                React.createElement("span", null, icon));
        });
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2 docs-page__text-align--center" }, "Icon font"),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <Icon name=\"photo\" />\n                "),
            React.createElement("ul", { className: 'docs-page__icon-font-list' }, icons),
            React.createElement("h3", { className: "docs-page__h3" }, "Props"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'name', isRequered: false, type: 'string', default: '/', description: 'Icon name value.' }),
                React.createElement(app_typescript_1.Prop, { name: 'type', isRequered: false, type: 'default | primary | success | warning | alert | highlight | sd-green', default: 'default', description: 'Default + semantic colour variations (e.g. primary, success etc.)' }),
                React.createElement(app_typescript_1.Prop, { name: 'size', isRequered: false, type: 'small | big', default: 'small', description: 'Specifies a small or big size of Icon.' }))));
    };
    return IconFontDoc;
}(React.PureComponent));
exports.default = IconFontDoc;


/***/ }),
/* 232 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"icon":"photo, video, map-marker, slideshow, text, file, calendar, composite, audio, stream, ingest, archive, time, pin, expand, ascending, descending, th, grid-view, th-list, list-view, pencil, lock, retweet, unspike, fullscreen, fetch-as, search, star, star-empty, multi-star, th-large, grid-view-large, ok, zoom-in, zoom-out, signal, filter-large, trash, user, download, upload, repeat, refresh, list-alt, plus-large, picture, question-sign, info-sign, plus-sign, minus-sign, remove-sign, share-alt, exclamation-sign, eye-open, copy, comment, warning-sign, adjust, folder-close, folder-open, download-alt, tasks, globe, link, expand-thin, assign, dots, dots-vertical, backward-thin, forward-thin, chevron-left-thin, chevron-right-thin, switches, plus-small, minus-small, close-small, post, external, chevron-up-thin, chevron-down-thin, pick, revert, package-plus, list-plus, envelope, heart, home, print, font, bold, italic, underline, strikethrough, align-left, align-center, align-right, align-justify, unordered-list, indent-left, indent-right, ban-circle, bell, random, settings, package-create, list-menu, new-doc, edit-line, calendar-list, collapse, broadcast, broadcast-create, kill, graphic, close-thick, move, takes-package, highlight-package, preview-mode, unlocked, code, cut, paste, arrow-left, arrow-right, info-large, help-large, attachment, attachment-large, table, ordered-list, heading-1, heading-2, heading-3, heading-4, heading-5, heading-6, quote, multiedit, phone, mobile, twitter, facebook, linked-in, twitter-circle, facebook-circle, linked-in-circle, recurring, paragraph, suggestion, event, kanban-view, subscript, superscript, clear-format, preformatted, crop, flip-horizontal, flip-vertical, rotate-right, rotate-left, business, paywall, analytics, amp, undo, redo, instagram, play, stop, pause, fast_rewind, fast_forward, skip_previous, skip_next, add-image, add-gallery, text-format, to-uppercase, to-lowercase, arrow-small"};

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var bigIconFont = __importStar(__webpack_require__(234));
var BigIconFontDoc = /** @class */ (function (_super) {
    __extends(BigIconFontDoc, _super);
    function BigIconFontDoc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BigIconFontDoc.prototype.render = function () {
        var array = bigIconFont.icon.split(', ');
        var icons = array.map(function (icon, index) {
            return React.createElement("li", { key: index },
                React.createElement(app_typescript_1.Icon, { name: icon, size: 'big' }),
                React.createElement("span", null, icon));
        });
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2 docs-page__text-align--center" }, "Big icon font"),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <Icon name=\"dashboard\" size=\"big\" />\n                "),
            React.createElement("ul", { className: 'docs-page__icon-font-list' }, icons),
            React.createElement("h3", { className: "docs-page__h3" }, "Props"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'name', isRequered: false, type: 'string', default: '/', description: 'Icon name value.' }),
                React.createElement(app_typescript_1.Prop, { name: 'type', isRequered: false, type: 'default | primary | success | warning | alert | highlight | sd-green', default: 'default', description: 'Default + semantic colour variations (e.g. primary, success etc.)' }),
                React.createElement(app_typescript_1.Prop, { name: 'size', isRequered: false, type: 'small | big', default: 'small', description: 'Specifies a small or big size of Icon.' }))));
    };
    return BigIconFontDoc;
}(React.PureComponent));
exports.default = BigIconFontDoc;


/***/ }),
/* 234 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin
module.exports = {"icon":"dashboard, view, tasks, calendar, marked-star, archive, spike, unspike, personal, global-search, analytics, web, cog, send-to, info, find-replace, comments, history, package, create-package, add-to-package, fetch, fetch-as, macro, related, minimize, settings, multiedit, export, create-list, add-to-list, text, desk, chevron-left, chevron-right, dashboard-alt, master, attachment, upload-alt, document-default, document-pdf, document-doc, semantics, picture, manage-package, live, live-alt, meta-search, chat, annotation, suggestion, publisher"};

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var SubNavDoc = /** @class */ (function (_super) {
    __extends(SubNavDoc, _super);
    function SubNavDoc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SubNavDoc.prototype.render = function () {
        return (React.createElement("section", { className: 'docs-page__container' },
            React.createElement("h2", { className: 'docs-page__h2' }, "Sub Navigation bar"),
            React.createElement("p", null),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <SubNav zIndex={2}>\n                        <ButtonGroup align='left'>\n                            <NavButton icon='search' onClick={()=> false} />\n                        </ButtonGroup>\n                        <ButtonGroup align='right'>\n                            <NavButton icon='dots-vertical' onClick={()=> false} />\n                        </ButtonGroup>\n                    </SubNav>\n                "),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement(app_typescript_1.SubNav, { zIndex: 4 },
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'left' },
                            React.createElement(app_typescript_1.NavButton, { icon: 'search', onClick: function () { return false; } })),
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'right' },
                            React.createElement(app_typescript_1.NavButton, { icon: 'expand-thin', type: 'highlight', onClick: function () { return false; } }))),
                    React.createElement(app_typescript_1.SubNav, { color: 'darker', zIndex: 3 },
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'left' },
                            React.createElement(app_typescript_1.NavButton, { icon: 'filter-large', type: 'darker', onClick: function () { return false; } })),
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'right' },
                            React.createElement(app_typescript_1.Button, { text: 'Something', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'Else', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Divider, { border: true }),
                            React.createElement(app_typescript_1.Button, { text: 'Cancel', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'Save', type: 'primary', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Divider, { size: "mini" }),
                            React.createElement(app_typescript_1.NavButton, { icon: 'list-plus', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.NavButton, { icon: 'dots-vertical', onClick: function () { return false; } }))),
                    React.createElement("br", null),
                    React.createElement(app_typescript_1.SubNav, { color: 'darker', zIndex: 2 },
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'left', padded: true },
                            React.createElement(app_typescript_1.Button, { text: 'Something', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'Else', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Divider, { border: true }),
                            React.createElement(app_typescript_1.Button, { text: 'Cancel', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'Save', type: 'primary', onClick: function () { return false; } }))),
                    React.createElement("br", null),
                    React.createElement(app_typescript_1.SubNav, { color: 'darker', zIndex: 1 },
                        React.createElement(app_typescript_1.ButtonGroup, { align: 'center' },
                            React.createElement(app_typescript_1.Button, { text: 'One', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'Two', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Divider, { border: true }),
                            React.createElement(app_typescript_1.Button, { text: 'Three', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'Four', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Divider, { border: true }),
                            React.createElement(app_typescript_1.Button, { text: 'Five', onClick: function () { return false; } }),
                            React.createElement(app_typescript_1.Button, { text: 'Six', onClick: function () { return false; } })))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <SubNav zIndex={2}>\n                            <ButtonGroup align='left'>\n                                <NavButton icon='filter-large' type='darker' onClick={()=> false} />\n                                <NavButton icon='search' onClick={()=> false} />\n                            </ButtonGroup>\n                            <ButtonGroup align='right'>\n                                <NavButton icon='list-plus' onClick={()=> false} />\n                                <NavButton icon='dots-vertical' onClick={()=> false} />\n                                <NavButton icon='expand-thin' type='highlight' onClick={()=> false} />\n                            </ButtonGroup>\n                        </SubNav>        \n                    "))));
    };
    return SubNavDoc;
}(React.Component));
exports.default = SubNavDoc;


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var DropdownDoc = /** @class */ (function (_super) {
    __extends(DropdownDoc, _super);
    function DropdownDoc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DropdownDoc.prototype.render = function () {
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2" }, "Dropdown"),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                    <Dropdown\n                        items={[\n                            { label: 'Action 1', onSelect: () => 1 },\n                            { label: 'Action 2', onSelect: () => 1 },\n                            { label: 'Action 3', onSelect: () => 1 },\n                        ]}>\n                       Toogle button\n                    </Dropdown>\n                    \n                "),
            React.createElement("p", { className: 'docs-page__paragraph' },
                "By default dropdown menu is positioned left comparing to dropdown toggle button element. For right positioned menu (second example) add prop value ",
                React.createElement("code", null, "align = 'right'")),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement(app_typescript_1.Dropdown, { items: [
                            { label: 'Action 1', onSelect: function () { return 1; } },
                            { label: 'Action 2', onSelect: function () { return 1; } },
                            { label: 'Action 3', onSelect: function () { return 1; } },
                        ] }, "Left aligned (default)"),
                    React.createElement(app_typescript_1.Dropdown, { align: 'right', items: [
                            { label: 'Action 1', onSelect: function () { return 1; } },
                            { label: 'Action 2', onSelect: function () { return 1; } },
                            { label: 'Action 3', onSelect: function () { return 1; } },
                        ] }, "Right aligned")),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <Dropdown\n                            items={[\n                                { label: 'Action 1', onSelect: () => 1 },\n                                { label: 'Action 2', onSelect: () => 1 },\n                                { label: 'Action 3', onSelect: () => 1 },\n                            ]}>\n                            Left aligned (default)\n                        </Dropdown>\n                        <Dropdown\n                            align='right'\n                            items={[\n                                { label: 'Action 1', onSelect: () => 1 },\n                                { label: 'Action 2', onSelect: () => 1 },\n                                { label: 'Action 3', onSelect: () => 1 },\n                            ]}>\n                            Right aligned\n                        </Dropdown>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Dropdown Append To Body"),
            React.createElement("p", { className: 'docs-page__paragraph' },
                "Add prop value ",
                React.createElement("code", null, "append = true"),
                " to the dropdown element to append to the inner dropdown menu to the body. This is useful when the dropdown button is inside a div with overflow: hidden, and the menu would otherwise be hidden."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement(app_typescript_1.Dropdown, { append: true, items: [
                            {
                                type: 'group', label: 'actions',
                                items: [
                                    'divider',
                                    { label: 'Edit', icon: 'pencil', onSelect: function () { return 1; } },
                                    { label: 'Copy', icon: 'copy', onSelect: function () { return 1; } },
                                    { label: 'Delete', icon: 'trash', onSelect: function () { return 1; } },
                                    'divider',
                                ]
                            },
                            {
                                type: 'group', label: 'actions 2',
                                items: [
                                    { label: 'Download', icon: 'download', onSelect: function () { return 1; } },
                                    { label: 'Print', icon: 'print', onSelect: function () { return 1; } },
                                ]
                            }
                        ] }, "Drop append to body")),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <Dropdown\n                            items={[\n                                { label: 'Action 1', onSelect: () => 1 },\n                                { label: 'Action 2', onSelect: () => 1 },\n                                { label: 'Action 3', onSelect: () => 1 },\n                                { label: 'Action 4', onSelect: () => 1 },\n                                { label: 'Action 5', onSelect: () => 1 },\n                                { label: 'Action 6', onSelect: () => 1 },\n                            ]}>\n                            Drop append to body\n                        </Dropdown>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Multilevel dropdown"),
            React.createElement("p", { className: 'docs-page__paragraph' },
                "To create a second level in the dropdown menu add item with props ",
                React.createElement("code", null, "type = 'submenu'"),
                " and ",
                React.createElement("code", null, "item"),
                ". The submenu opens by default on the right side of the parent menu."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement(app_typescript_1.Dropdown, { items: [
                            {
                                type: 'group', label: 'actions',
                                items: [
                                    'divider',
                                    { label: 'Edit', icon: 'pencil', onSelect: function () { return 1; } },
                                    { label: 'Copy', icon: 'copy', onSelect: function () { return 1; } },
                                    { label: 'Delete', icon: 'trash', onSelect: function () { return 1; } },
                                    'divider',
                                ]
                            },
                            {
                                type: 'submenu', label: 'Second level actions', icon: 'star',
                                items: [
                                    { label: 'Action 1', onSelect: function () { return 1; } },
                                    { label: 'Action 2', onSelect: function () { return 1; } },
                                    { label: 'Action 3', onSelect: function () { return 1; } },
                                    { label: 'Action 4', onSelect: function () { return 1; } },
                                ]
                            }
                        ] }, "Multilevel dropdown"),
                    React.createElement(app_typescript_1.Dropdown, { items: [
                            {
                                type: 'group', label: 'actions',
                                items: [
                                    'divider',
                                    { label: 'Edit', icon: 'pencil', onSelect: function () { return 1; } },
                                    { label: 'Copy', icon: 'copy', onSelect: function () { return 1; } },
                                    { label: 'Delete', icon: 'trash', onSelect: function () { return 1; } },
                                    'divider',
                                ]
                            },
                            {
                                type: 'submenu', label: 'Second level actions', icon: 'star',
                                items: [
                                    { label: 'Action 1', onSelect: function () { return 1; } },
                                    { label: 'Action 2', onSelect: function () { return 1; } },
                                    { label: 'Action 3', onSelect: function () { return 1; } },
                                    { label: 'Action 4', onSelect: function () { return 1; } },
                                ]
                            }
                        ] }, "Submenu on the left")),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <Dropdown\n                            items={[\n                                {\n                                    type: 'group', label: 'actions', items: [\n                                        'divider',\n                                        { label: 'Edit', icon: 'pencil', onSelect: () => 1 },\n                                        { label: 'Copy', icon: 'copy', onSelect: () => 1 },\n                                        { label: 'Delete', icon: 'trash', onSelect: () => 1 },\n                                        'divider',\n                                    ]\n                                },\n                                {\n                                    type: 'submenu', label: 'Second level actions', icon: 'star', items: [\n                                        { label: 'Action 1', onSelect: () => 1 },\n                                        { label: 'Action 2', onSelect: () => 1 },\n                                        { label: 'Action 3', onSelect: () => 1 },\n                                        { label: 'Action 4', onSelect: () => 1 },\n                                    ]\n                                }]}>\n                            Multilevel dropdown\n                        </Dropdown>\n                        <Dropdown\n                            items={[\n                                {\n                                    type: 'group', label: 'actions', items: [\n                                        'divider',\n                                        { label: 'Edit', icon: 'pencil', onSelect: () => 1 },\n                                        { label: 'Copy', icon: 'copy', onSelect: () => 1 },\n                                        { label: 'Delete', icon: 'trash', onSelect: () => 1 },\n                                        'divider',\n                                    ]\n                                },\n                                {\n                                    type: 'submenu', label: 'Second level actions', icon: 'star', items: [\n                                        { label: 'Action 1', onSelect: () => 1 },\n                                        { label: 'Action 2', onSelect: () => 1 },\n                                        { label: 'Action 3', onSelect: () => 1 },\n                                        { label: 'Action 4', onSelect: () => 1 },\n                                    ]\n                                }]}>\n                            Submenu on the left\n                        </Dropdown>    \n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Navigation dropdown"),
            React.createElement("p", { className: 'docs-page__paragraph' }, "Example of a dropdown inside a subnavigation element."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement(app_typescript_1.SubNav, { zIndex: 1, color: 'darker' },
                        React.createElement("h3", { className: "subnav__page-title" }, "Subnav title"),
                        React.createElement(app_typescript_1.Dropdown, { align: 'right', items: [
                                {
                                    type: 'group', label: 'actions',
                                    items: [
                                        'divider',
                                        { label: 'Edit', icon: 'pencil', onSelect: function () { return 1; } },
                                        { label: 'Copy', icon: 'copy', onSelect: function () { return 1; } },
                                        { label: 'Delete', icon: 'trash', onSelect: function () { return 1; } },
                                        'divider',
                                    ]
                                },
                                {
                                    type: 'submenu', label: 'Second level actions', icon: 'star',
                                    items: [
                                        { label: 'Action 1', onSelect: function () { return 1; } },
                                        { label: 'Action 2', onSelect: function () { return 1; } },
                                        { label: 'Action 3', onSelect: function () { return 1; } },
                                        { label: 'Action 4', onSelect: function () { return 1; } },
                                    ]
                                }
                            ] },
                            React.createElement("button", { className: 'sd-navbtn' },
                                React.createElement("i", { className: "icon-dots-vertical" }))))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <SubNav zIndex={1} color='darker'>\n                            <h3 className=\"subnav__page-title\">Subnav title</h3>\n                            <Dropdown\n                                items={[\n                                    {\n                                        type: 'group', label: 'actions', items: [\n                                            'divider',\n                                            { label: 'Edit', icon: 'pencil', onSelect: () => 1 },\n                                            { label: 'Copy', icon: 'copy', onSelect: () => 1 },\n                                            { label: 'Delete', icon: 'trash', onSelect: () => 1 },\n                                            'divider',\n                                        ]\n                                    },\n                                    {\n                                        type: 'submenu', label: 'Second level actions', icon: 'star', items: [\n                                            { label: 'Action 1', onSelect: () => 1 },\n                                            { label: 'Action 2', onSelect: () => 1 },\n                                            { label: 'Action 3', onSelect: () => 1 },\n                                            { label: 'Action 4', onSelect: () => 1 },\n                                        ]\n                                    }]}>\n                                <button className='sd-navbtn'>\n                                    <i className=\"icon-dots-vertical\"></i>\n                                </button>\n                            </Dropdown>\n                        </SubNav>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Navigation dropdown with fixed header and footer"),
            React.createElement("p", { className: 'docs-page__paragraph' }),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement(app_typescript_1.SubNav, { zIndex: 1, color: 'darker' },
                        React.createElement("h3", { className: "subnav__page-title" }, "Subnav title"),
                        React.createElement(app_typescript_1.Dropdown, { align: 'right', header: [
                                {
                                    type: 'group', label: 'header actions',
                                    items: [
                                        { label: 'Header action one', icon: 'download', onSelect: function () { return 1; } },
                                        { label: 'Header action two', icon: 'trash', onSelect: function () { return 1; } },
                                    ]
                                },
                            ], items: [
                                {
                                    type: 'group', label: 'body actions',
                                    items: [
                                        { label: 'Edit', icon: 'pencil', onSelect: function () { return 1; } },
                                        { label: 'Copy', icon: 'copy', onSelect: function () { return 1; } },
                                        { label: 'Action 2', icon: 'envelope', onSelect: function () { return 1; } },
                                        { label: 'Action 3', icon: 'heart', onSelect: function () { return 1; } },
                                        { label: 'Action 4', icon: 'print', onSelect: function () { return 1; } },
                                        { label: 'Action 5', icon: 'plus-sign', onSelect: function () { return 1; } },
                                        { label: 'Action 6', icon: 'minus-sign', onSelect: function () { return 1; } },
                                        { label: 'Action 7', icon: 'refresh', onSelect: function () { return 1; } },
                                        { label: 'Action 8', icon: 'pick', onSelect: function () { return 1; } },
                                        { label: 'Action 9', icon: 'bell', onSelect: function () { return 1; } },
                                        { label: 'Action 10', icon: 'kill', onSelect: function () { return 1; } },
                                        { label: 'Action 11', icon: 'settings', onSelect: function () { return 1; } },
                                        { label: 'Action 12', icon: 'cut', onSelect: function () { return 1; } },
                                    ]
                                },
                            ], footer: [
                                {
                                    type: 'group', label: 'footer actions',
                                    items: [
                                        { label: 'Create gallery', icon: 'slideshow', onSelect: function () { return 1; } },
                                        { label: 'Create package', icon: 'composite', onSelect: function () { return 1; } },
                                    ]
                                },
                            ] },
                            React.createElement("button", { className: 'sd-navbtn' },
                                React.createElement("i", { className: "icon-dots-vertical" }))))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        <SubNav zIndex={1} color='darker'>\n                            <h3 className=\"subnav__page-title\">Subnav title</h3>\n                            <Dropdown\n                                header={[\n                                    {\n                                        type: 'group', label: 'header actions', items: [\n                                            { label: 'Header action one', icon: 'download', onSelect: () => 1 },\n                                            { label: 'Header action two', icon: 'trash', onSelect: () => 1 },\n                                        ]\n                                    },\n                                ]}\n                                items={[\n                                    {\n                                        type: 'group', label: 'body actions', items: [\n                                            { label: 'Edit', icon: 'pencil', onSelect: () => 1 },\n                                            { label: 'Copy', icon: 'copy', onSelect: () => 1 },\n                                            { label: 'Action 2', icon: 'envelope', onSelect: () => 1 },\n                                            { label: 'Action 3', icon: 'heart', onSelect: () => 1 },\n                                            { label: 'Action 4', icon: 'print', onSelect: () => 1 },\n                                            { label: 'Action 5', icon: 'plus-sign', onSelect: () => 1 },\n                                            { label: 'Action 6', icon: 'minus-sign', onSelect: () => 1 },\n                                            { label: 'Action 7', icon: 'refresh', onSelect: () => 1 },\n                                            { label: 'Action 8', icon: 'pick', onSelect: () => 1 },\n                                            { label: 'Action 9', icon: 'bell', onSelect: () => 1 },\n                                            { label: 'Action 10', icon: 'kill', onSelect: () => 1 },\n                                            { label: 'Action 11', icon: 'settings', onSelect: () => 1 },\n                                            { label: 'Action 12', icon: 'cut', onSelect: () => 1 },\n                                        ]\n                                    },\n                                ]}\n                                footer={[\n                                    {\n                                        type: 'group', label: 'footer actions', items: [\n                                            { label: 'Create gallery', icon: 'slideshow', onSelect: () => 1 },\n                                            { label: 'Create package', icon: 'composite', onSelect: () => 1 },\n                                        ]\n                                    },\n                                ]}>\n                                <button className='sd-navbtn'>\n                                    <i className=\"icon-dots-vertical\"></i>\n                                </button>\n                            </Dropdown>\n                        </SubNav>\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Props"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'label', isRequered: false, type: 'string', default: '/', description: 'Text value of label.' }),
                React.createElement(app_typescript_1.Prop, { name: 'align', isRequered: false, type: 'left | right', default: 'left', description: 'Position of dropdown menu based on button' }),
                React.createElement(app_typescript_1.Prop, { name: 'append', isRequered: false, type: 'boolean', default: 'false', description: 'Append inner dropdown menu to the body' }),
                React.createElement(app_typescript_1.Prop, { name: 'items', isRequered: true, type: 'Array<menuitem | submenu | menugroup | "divider">', default: '/', description: 'Items, divider, groups or submenu of dropdown menu' }),
                React.createElement(app_typescript_1.Prop, { name: 'children', isRequered: true, type: 'React.ReactNode', default: '/', description: 'If children is "string" type than button have default style with arrow, also children can be custom styled buttons' })),
            React.createElement("p", { className: 'docs-page__paragraph' }, "Items: Menu item"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'label', isRequered: true, type: 'string', default: '/', description: 'Text value of label.' }),
                React.createElement(app_typescript_1.Prop, { name: 'icon', isRequered: false, type: 'string', default: '/', description: 'Icon class name without the icon- part.' }),
                React.createElement(app_typescript_1.Prop, { name: 'onSelect', isRequered: false, type: 'function', default: 'false', description: 'Callback fired when a item is select.' })),
            React.createElement("p", { className: 'docs-page__paragraph' }, "Items: Menu group"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'label', isRequered: false, type: 'string', default: '/', description: 'Text value of label.' }),
                React.createElement(app_typescript_1.Prop, { name: 'type', isRequered: true, type: 'group', default: 'group', description: '/' }),
                React.createElement(app_typescript_1.Prop, { name: 'items', isRequered: true, type: 'Array<menuitem | submenu | menugroup | "divider">', default: '/', description: 'Items, divider, groups or submenu of group in dropdown menu' })),
            React.createElement("p", { className: 'docs-page__paragraph' }, "Items: Submenu"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'label', isRequered: true, type: 'string', default: '/', description: 'Text value of label.' }),
                React.createElement(app_typescript_1.Prop, { name: 'icon', isRequered: false, type: 'string', default: '/', description: 'Icon class name without the icon- part.' }),
                React.createElement(app_typescript_1.Prop, { name: 'type', isRequered: true, type: 'submenu', default: 'submenu', description: '/' }),
                React.createElement(app_typescript_1.Prop, { name: 'items', isRequered: true, type: 'Array<menuitem | submenu | menugroup | "divider">', default: '/', description: 'Items, divider, groups or submenu of submenu in dropdown menu' }))));
    };
    return DropdownDoc;
}(React.Component));
exports.default = DropdownDoc;


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var app_typescript_1 = __webpack_require__(2);
var Toast_1 = __importDefault(__webpack_require__(238));
var ToastsDoc = /** @class */ (function (_super) {
    __extends(ToastsDoc, _super);
    function ToastsDoc() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // default
        _this.showDefault = function () {
            Toast_1.default.notify("I'm a tasty default Toast message!", {});
        };
        // all positions
        _this.showAll = function () {
            Toast_1.default.notify('Position top', { position: 'top' });
            Toast_1.default.notify('Position top-left', { position: 'top-left' });
            Toast_1.default.notify('Position top-right', { position: 'top-right' });
            Toast_1.default.notify('Position bottom', { position: 'bottom' });
            Toast_1.default.notify('Position bottom-left', { position: 'bottom-left' });
            Toast_1.default.notify('Position bottom-right', { position: 'bottom-right' });
        };
        // duration
        _this.showDuration = function () {
            Toast_1.default.notify("Curabitur blandit tempus porttitor.", { duration: 3000 });
        };
        _this.showNull = function () {
            Toast_1.default.notify("Curabitur blandit tempus porttitor.", {});
        };
        // coloring and icon
        _this.showSuccess = function () {
            Toast_1.default.notify("I'm a tasty default Toast message!", { type: 'success', icon: 'ok' });
        };
        _this.showAlert = function () {
            Toast_1.default.notify("Danger! Condimentum ridiculus ultricies ornare mollis.", { type: 'alert', icon: 'exclamation-sign', position: 'bottom' });
        };
        // size
        _this.showSizeS = function () {
            Toast_1.default.notify("Et harum quidem rerum facilis est et expedita distinctio.", { position: 'top-left', size: 'fixed-s' });
        };
        _this.showSizeM = function () {
            Toast_1.default.notify("Et harum quidem rerum facilis est et expedita distinctio.", { position: 'top-left', size: 'fixed-m' });
        };
        _this.showSizeL = function () {
            Toast_1.default.notify("Et harum quidem rerum facilis est et expedita distinctio.", { position: 'top-left', size: 'fixed-l' });
        };
        _this.showSizeXL = function () {
            Toast_1.default.notify("Et harum quidem rerum facilis est et expedita distinctio.", { position: 'top-left', size: 'fixed-xl' });
        };
        // custom element
        _this.showCustomHeading = function () {
            Toast_1.default.notify(React.createElement(app_typescript_1.HeadingText, { heading: 'I have Toaster heading!', text: 'Nulla vitae elit libero, a pharetra augue. Nullam id dolor id nibh ultricies vehicula ut id elit. Donec id elit non mi porta gravida at eget metus.' }), { type: 'primary', icon: 'info-sign', position: 'bottom' });
        };
        _this.showAnotherCustomElement = function () {
            Toast_1.default.notify(React.createElement(React.Fragment, null,
                React.createElement("div", { className: "sd-toast__icon" }),
                React.createElement("figure", { className: "sd-toast__avatar avatar" }, "sd"),
                React.createElement("div", { className: "sd-toast__message" },
                    React.createElement("div", { className: "sd-toast__message-header" },
                        React.createElement("h4", { className: "sd-toast__heading" }, "Martin Mustermann"),
                        React.createElement("time", { title: "March 22, 2017 11:08 AM" }, "16:50, 16.03.2019")),
                    React.createElement("p", null, "Nulla vitae elit libero, a pharetra augue. Nullam id dolor id nibh ultricies vehicula ut id elit."))), { position: 'bottom-right', size: 'fixed-l' });
        };
        return _this;
    }
    ToastsDoc.prototype.render = function () {
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2" }, "Toasts"),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n                   toast.notify(\"I'm a tasty default Toast message!\", {});\n                "),
            React.createElement("h3", { className: "docs-page__h3" }, "Position"),
            React.createElement("p", { className: "docs-page__paragraph" },
                "Chose one of 6 placement options (",
                React.createElement("code", null, "'top'"),
                ", ",
                React.createElement("code", null, "'top-right'"),
                ", ",
                React.createElement("code", null, "'top-left'"),
                ", ",
                React.createElement("code", null, "'bottom'"),
                ", ",
                React.createElement("code", null, "'bottom-right'"),
                ", ",
                React.createElement("code", null, "'bottom-left'"),
                "). The default value is \u2019top\u2019 and will be rendered so without explicitly specifying it."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { text: 'default', onClick: this.showDefault }),
                        React.createElement(app_typescript_1.Button, { text: 'all positions', onClick: this.showAll }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        toast.notify(\"I'm a tasty default Toast message!\", {});\n\n                        toast.notify('Position top', { position: 'top' });\n                        toast.notify('Position top-left', { position: 'top-left' });\n                        toast.notify('Position top-right', { position: 'top-right' });\n                        toast.notify('Position bottom', { position: 'bottom' });\n                        toast.notify('Position bottom-left', { position: 'bottom-left' });\n                        toast.notify('Position bottom-right', { position: 'bottom-right' });\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Duration"),
            React.createElement("p", { className: "docs-page__paragraph" },
                "It can be set duration time off notification when is set ",
                React.createElement("code", null, "duration"),
                " option, otherwise the notification will appear indefinitely until manually closed by the user."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("p", { className: "docs-page__paragraph" }, "// Duration time 3000ms and NULL"),
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { text: '3000', onClick: this.showDuration }),
                        React.createElement(app_typescript_1.Button, { text: 'null', onClick: this.showNull }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        toast.notify(\"Curabitur blandit tempus porttitor.\", { duration: 3000 });\n                        toast.notify(\"Curabitur blandit tempus porttitor.\", {});\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Coloring and Icon"),
            React.createElement("p", { className: "docs-page__paragraph" }, "For Superdesk only Default and Primary buttons should be used in most cases. Other semantic colour options are allowed but should be used only in cases where a clear distinction between similarly important actions is needed (e.g. Send To versus Publish action). Also it can be set icons for toast. Just add any of the available classes from the Icon font as a value of the icon prop"),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { type: 'success', text: 'success', onClick: this.showSuccess }),
                        React.createElement(app_typescript_1.Button, { type: 'alert', text: 'alert', onClick: this.showAlert }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        toast.notify(\"I'm a tasty default Toast message!\", { type: 'success', icon: 'ok'});\n                        toast.notify(\"Danger! Condimentum ridiculus ultricies ornare mollis.\", { type: 'alert', icon: 'exclamation-sign', position: 'bottom'});\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Size"),
            React.createElement("p", { className: "docs-page__paragraph" },
                "To change the default size set the size value either to ",
                React.createElement("code", null, "'fixed-s'"),
                ", ",
                React.createElement("code", null, "'fixed-m'"),
                ", ",
                React.createElement("code", null, "'fixed-l'"),
                " or ",
                React.createElement("code", null, "'fixed-xl'"),
                "."),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { text: 'fixed-s', onClick: this.showSizeS }),
                        React.createElement(app_typescript_1.Button, { text: 'fixed-m', onClick: this.showSizeM }),
                        React.createElement(app_typescript_1.Button, { text: 'fixed-l', onClick: this.showSizeL }),
                        React.createElement(app_typescript_1.Button, { text: 'fixed-xl', onClick: this.showSizeXL }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                       toast.notify(\"Et harum quidem rerum facilis est et expedita distinctio.\", { position: 'top-left', size: 'fixed-s' });\n                       toast.notify(\"Et harum quidem rerum facilis est et expedita distinctio.\", { position: 'top-left', size: 'fixed-m' });\n                       toast.notify(\"Et harum quidem rerum facilis est et expedita distinctio.\", { position: 'top-left', size: 'fixed-l' });\n                       toast.notify(\"Et harum quidem rerum facilis est et expedita distinctio.\", { position: 'top-left', size: 'fixed-xl' });\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Custom"),
            React.createElement("p", { className: "docs-page__paragraph" }),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: "docs-page__content-row" },
                        React.createElement(app_typescript_1.Button, { text: 'heading', type: 'primary', onClick: this.showCustomHeading }),
                        React.createElement(app_typescript_1.Button, { text: 'element', onClick: this.showAnotherCustomElement }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                        toast.notify(<HeadingText heading='I have Toaster heading!' text='Nulla vitae elit libero, a pharetra augue. Nullam id dolor id nibh ultricies vehicula ut id elit. Donec id elit non mi porta gravida at eget metus.' />, { type: 'primary', icon: 'info-sign', position: 'bottom' });\n                        toast.notify(\n                        <React.Fragment>\n                            <div className=\"sd-toast__icon\"></div>\n                            <figure className=\"sd-toast__avatar avatar\">sd</figure>\n                            <div className=\"sd-toast__message\">\n                                <div className=\"sd-toast__message-header\">\n                                    <h4 className=\"sd-toast__heading\">Martin Mustermann</h4>\n                                    <time title=\"March 22, 2017 11:08 AM\">16:50, 16.03.2019</time>\n                                </div>\n                                <p>Nulla vitae elit libero, a pharetra augue. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n                            </div>\n                        </React.Fragment>\n                        , { position: 'bottom-right', size: 'fixed-l' });\n                    ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Props"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'message', isRequered: true, type: 'string | React.ReactNode', default: 'normal', description: 'Message value or custom message element' }),
                React.createElement(app_typescript_1.Prop, { name: 'icon', isRequered: false, type: 'string', default: '', description: 'Icon class name without the icon- part.' }),
                React.createElement(app_typescript_1.Prop, { name: 'type', isRequered: false, type: 'default | primary | success | warning | alert | highlight | light', default: 'default', description: 'Default + semantic colour variations (e.g. primary, success etc.).' }),
                React.createElement(app_typescript_1.Prop, { name: 'position', isRequered: false, type: 'top | bottom | top-right | top-left | bottom-right | bottom-left', default: 'top', description: 'Position of the toast' }),
                React.createElement(app_typescript_1.Prop, { name: 'size', isRequered: false, type: 'fixed-s | fixed-m | fixed-l | fixed-xl', default: 'normal', description: 'Specifies a different sizes of toast.' }),
                React.createElement(app_typescript_1.Prop, { name: 'duration', isRequered: false, type: 'number | null', default: 'null', description: 'Specifies a duration time of toast.' }))));
    };
    return ToastsDoc;
}(React.Component));
exports.default = ToastsDoc;


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var ReactDOM = __importStar(__webpack_require__(15));
var ToastWrapper_1 = __importDefault(__webpack_require__(239));
var TOAST_ID = "react-toast";
var Toasted = /** @class */ (function () {
    function Toasted() {
        var _this = this;
        this.componentRef = null;
        var element = null;
        var existingElement = document.getElementById(TOAST_ID);
        if (existingElement) {
            element = existingElement;
        }
        else {
            var el = document.createElement("div");
            el.id = TOAST_ID;
            el.className = "sd-toast__container sd-toast__container--top ng-scope";
            document.body.appendChild(el);
            element = el;
        }
        ReactDOM.render(React.createElement(ToastWrapper_1.default, { ref: function (ref) {
                _this.componentRef = ref;
            } }), element);
    }
    Toasted.prototype.notify = function (message, options) {
        if (this.componentRef != null) {
            this.componentRef.notify(message, options);
        }
    };
    return Toasted;
}());
var toast = new Toasted();
exports.default = toast;


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var ToastMessage_1 = __webpack_require__(240);
var firstState = {
    top: [],
    bottom: [],
    'top-right': [],
    'top-left': [],
    'bottom-right': [],
    'bottom-left': [],
};
var ToastWrapper = /** @class */ (function (_super) {
    __extends(ToastWrapper, _super);
    function ToastWrapper(props) {
        var _this = _super.call(this, props) || this;
        _this.state = firstState;
        _this.notify = function (message, options) {
            var toast = _this.createToastState(message, options);
            var position = toast.position;
            var isTop = position === 'top';
            _this.setState(function (prev) {
                var _a;
                return __assign(__assign({}, prev), (_a = {}, _a[position] = isTop
                    ? __spreadArrays([toast], prev[position]) : __spreadArrays(prev[position], [toast]), _a));
            });
            return { id: toast.id, position: toast.position };
        };
        _this.createToastState = function (message, options) {
            var _a;
            var id = ++ToastWrapper.idCounter;
            var position = (_a = options.position) !== null && _a !== void 0 ? _a : 'top';
            return {
                id: id,
                message: message,
                icon: options.icon,
                position: position,
                duration: options.duration,
                type: options.type,
                size: options.size,
            };
        };
        _this.requestClose = function (id, position) {
            _this.setState(function (prev) {
                var _a;
                return __assign(__assign({}, prev), (_a = {}, _a[position] = prev[position].filter(function (toast) { return toast.id !== id; }), _a));
            });
        };
        _this.notify = _this.notify.bind(_this);
        return _this;
    }
    ToastWrapper.prototype.render = function () {
        var _this = this;
        return Object.keys(this.state).map(function (position) {
            var pos = position;
            var toasts = _this.state[pos];
            return (React.createElement("div", { key: position, className: "sd-toast__container sd-toast__container--" + pos }, (pos === 'top' ?
                toasts : __spreadArrays(toasts).reverse()).map(function (toast) {
                return React.createElement(ToastMessage_1.ToastMessage, { position: pos, type: toast.type, icon: toast.icon, closeElement: _this.requestClose, duration: toast.duration, key: toast.id, id: toast.id, message: toast.message, size: toast.size });
            })));
        });
    };
    ToastWrapper.idCounter = 0;
    return ToastWrapper;
}(React.PureComponent));
exports.default = ToastWrapper;


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ToastMessage = void 0;
var React = __importStar(__webpack_require__(0));
var ToastText_1 = __importDefault(__webpack_require__(241));
var classnames_1 = __importDefault(__webpack_require__(1));
exports.ToastMessage = function (_a) {
    var _b;
    var id = _a.id, message = _a.message, type = _a.type, icon = _a.icon, size = _a.size, duration = _a.duration, position = _a.position, closeElement = _a.closeElement;
    var _c = React.useState(false), show = _c[0], setShow = _c[1];
    var _d = React.useState(false), enter = _d[0], setEnter = _d[1];
    var _e = React.useState(0), height = _e[0], setHeight = _e[1];
    var timer = null;
    React.useEffect(function () { return setShow(true); }, []);
    React.useEffect(function () {
        if (typeof duration === "number") {
            setEnter(true);
            timer = setTimeout(function () {
                close(id, position);
            }, duration);
            return function () { return clearTimeout(timer); };
        }
    }, [enter]);
    function onMouseEnter() {
        clearTimeout(timer);
    }
    function onMouseLeave() {
        setEnter(false);
    }
    function close(element, elementPosition) {
        setShow(false);
        setTimeout(function () {
            closeElement(element, elementPosition);
        }, 100);
    }
    var classes = classnames_1.default('sd-toast', (_b = {},
        _b["sd-toast--" + type] = type,
        _b["sd-toast--" + size] = size,
        _b['sd-toast--enter'] = !show && !enter,
        _b['sd-toast--enter-active'] = show,
        _b['sd-toast--exit'] = enter && !show,
        _b['sd-toast--exit-active'] = !show,
        _b));
    function addHeight(textHeight) {
        setHeight(textHeight + 25);
    }
    return (React.createElement("div", { className: classes, onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave, style: { height: height }, "aria-live": "assertive", "aria-atomic": "true" },
        React.createElement(ToastText_1.default, { id: id, title: message, icon: icon, onClose: function () { return close(id, position); }, textHeight: addHeight })));
};


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Icon_1 = __webpack_require__(16);
var ToastText = function (_a) {
    var id = _a.id, title = _a.title, icon = _a.icon, onClose = _a.onClose, textHeight = _a.textHeight;
    var ref = React.useRef(null);
    React.useEffect(function () { return textHeight(ref.current.clientHeight); }, []);
    return (React.createElement(React.Fragment, null,
        icon ?
            React.createElement("div", { className: 'sd-toast__icon' },
                React.createElement(Icon_1.Icon, { name: icon })) : null,
        typeof title === 'string' ?
            (React.createElement("span", { style: { width: '100%' }, ref: ref, id: id },
                React.createElement("div", { className: 'sd-toast__message' }, title))) :
            React.createElement("span", { style: { width: '100%', display: 'inherit' }, ref: ref, id: id }, title),
        onClose && React.createElement(Close, { onClose: onClose })));
};
var Close = function (_a) {
    var onClose = _a.onClose;
    return (React.createElement("button", { className: "icn-btn sd-toast__actions", type: "button", "aria-label": "Close", onClick: onClose },
        React.createElement(Icon_1.Icon, { name: 'close-small' })));
};
exports.default = ToastText;


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(__webpack_require__(0));
var Markup = __importStar(__webpack_require__(4));
var lodash_1 = __webpack_require__(38);
var app_typescript_1 = __webpack_require__(2);
var TagDoc = /** @class */ (function (_super) {
    __extends(TagDoc, _super);
    function TagDoc(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            tags: [{ text: 'This is a tag' }, { text: 'This is another tag', shade: 'darker' }, { text: 'Lorem ipsum', shade: 'highlight1' }, { text: 'Dolor amet', shade: 'highlight2', shape: 'square' }],
        };
        _this.handleClick = _this.handleClick.bind(_this);
        return _this;
    }
    TagDoc.prototype.handleClick = function (i) {
        var newTags = lodash_1.clone(this.state.tags);
        newTags.splice(i, 1);
        this.setState({
            tags: newTags
        });
    };
    TagDoc.prototype.render = function () {
        var _this = this;
        return (React.createElement("section", { className: "docs-page__container" },
            React.createElement("h2", { className: "docs-page__h2" }, "Tag"),
            React.createElement(Markup.ReactMarkupCodePreview, null, "\n               <Tag text='This is a tag' onClick={()=>false}/>\n            "),
            React.createElement(Markup.ReactMarkup, null,
                React.createElement(Markup.ReactMarkupPreview, null,
                    React.createElement("div", { className: 'docs-page__content-row' }, this.state.tags.map(function (tag, index) {
                        return (React.createElement(React.Fragment, { key: index },
                            React.createElement(app_typescript_1.Tag, { keyValue: index, text: tag.text, shade: tag.shade, shape: tag.shape, onClick: function () { return _this.handleClick(index); } })));
                    }))),
                React.createElement(Markup.ReactMarkupCode, null, "\n                    <Tag text='This is a tag' onClick={()=>false}/>\n                    <Tag text='This is a another tag' shade='darker' onClick={()=>false}/>\n                    <Tag text='Lorem ipsum' shade='highlight1' onClick={()=>false}/>\n                    <Tag text='Dolor amet' shade='highlight2' shape='square' onClick={()=>false}/>\n                    \n                ")),
            React.createElement("h3", { className: "docs-page__h3" }, "Props"),
            React.createElement(app_typescript_1.PropsList, null,
                React.createElement(app_typescript_1.Prop, { name: 'text', isRequered: true, type: 'string', default: '/', description: 'Tag text value.' }),
                React.createElement(app_typescript_1.Prop, { name: 'shade', isRequered: false, type: 'light | darker | highlight1 | highlight2', default: 'light', description: 'Shade colour of tag' }),
                React.createElement(app_typescript_1.Prop, { name: 'shape', isRequered: false, type: 'round | square', default: 'round', description: 'Make shape of tag square or default round.' }),
                React.createElement(app_typescript_1.Prop, { name: 'keyValue', isRequered: false, type: 'number', default: '/', description: 'Value of tag key' }))));
    };
    return TagDoc;
}(React.Component));
exports.default = TagDoc;


/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var FirstPlayground_1 = __webpack_require__(244);
Object.defineProperty(exports, "FirstPlayground", { enumerable: true, get: function () { return FirstPlayground_1.FirstPlayground; } });
var SamsPlayground_1 = __webpack_require__(245);
Object.defineProperty(exports, "SamsPlayground", { enumerable: true, get: function () { return SamsPlayground_1.SamsPlayground; } });


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FirstPlayground = void 0;
var React = __importStar(__webpack_require__(0));
var Components = __importStar(__webpack_require__(39));
var index_1 = __webpack_require__(2);
var FirstPlayground = /** @class */ (function (_super) {
    __extends(FirstPlayground, _super);
    function FirstPlayground(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            theme: 'light',
            itemType: 'itemtype01',
            dropDownState: '',
            openPreview: false,
            openFilter: false,
        };
        _this.handleFilter = _this.handleFilter.bind(_this);
        _this.handlePreview = _this.handlePreview.bind(_this);
        _this.handleTheme = _this.handleTheme.bind(_this);
        return _this;
    }
    FirstPlayground.prototype.handleFilter = function () {
        this.setState(function (state) { return ({
            openFilter: !state.openFilter,
        }); });
    };
    FirstPlayground.prototype.handlePreview = function () {
        this.setState(function (state) { return ({
            openPreview: !state.openPreview,
        }); });
    };
    FirstPlayground.prototype.handleTheme = function () {
        if (this.state.theme === 'light') {
            this.setState({
                theme: 'dark'
            });
        }
        else {
            this.setState({
                theme: 'light'
            });
        }
    };
    FirstPlayground.prototype.render = function () {
        var _this = this;
        return (React.createElement(Components.Layout, { header: 'First playground', theme: this.state.theme },
            React.createElement(Components.SidebarMenu, { items: [
                    { icon: 'dashboard', size: 'big', tooltip: 'Dashboard' },
                    { icon: 'view', size: 'big' },
                    { icon: 'marked-star', size: 'big' },
                    { icon: 'spike', size: 'big' },
                    'divider',
                    { icon: 'personal', size: 'big' },
                    { icon: 'global-search', size: 'big' },
                    { icon: 'picture', size: 'big' }
                ] }),
            React.createElement("div", { className: 'sd-content-wrapper__main-content-area sd-main-content-grid comfort' },
                React.createElement(Components.HeaderPanel, null,
                    React.createElement(index_1.SubNav, { theme: this.state.theme },
                        React.createElement(index_1.ButtonGroup, { align: 'inline' },
                            React.createElement(index_1.Dropdown, { items: [
                                    {
                                        type: 'group', label: 'Archives',
                                        items: [
                                            'divider',
                                            { label: 'All archives', onSelect: function () { return _this.setState({ dropDownState: 'All archives' }); } },
                                            { label: 'Media archive', onSelect: function () { return _this.setState({ dropDownState: 'Media archive' }); } },
                                            { label: 'File archive', onSelect: function () { return _this.setState({ dropDownState: 'File archive' }); } },
                                            { label: 'AP images', onSelect: function () { return _this.setState({ dropDownState: 'AP archive' }); } },
                                        ]
                                    }
                                ] },
                                React.createElement(index_1.NavButton, { onClick: function () { return false; } }))),
                        React.createElement(index_1.ButtonGroup, { align: 'right' },
                            React.createElement(index_1.NavButton, { icon: 'dots-vertical', onClick: function () { return false; } }))),
                    React.createElement(index_1.SubNav, { theme: this.state.theme },
                        React.createElement(index_1.ButtonGroup, null,
                            React.createElement(index_1.NavButton, { icon: 'filter-large', onClick: this.handleFilter })),
                        React.createElement(index_1.CheckButtonGroup, null,
                            React.createElement(index_1.RadioButton, { value: this.state.itemType, onChange: function (value) { return _this.setState({ itemType: value }); }, options: [
                                    { value: 'itemtype01', label: 'All item types' },
                                    { value: 'itemtype02', label: 'Images only' },
                                    { value: 'itemtype03', label: 'Videos only' },
                                    { value: 'itemtype04', label: 'Documents only' }
                                ] })),
                        React.createElement(index_1.ButtonGroup, { align: 'right' },
                            React.createElement(index_1.NavButton, { icon: 'adjust', onClick: this.handleTheme }),
                            React.createElement(index_1.NavButton, { icon: 'th-list', onClick: function () { return false; } })))),
                React.createElement(Components.LeftPanel, { open: this.state.openFilter },
                    React.createElement(Components.Panel, null,
                        React.createElement(Components.PanelHeader, { handleFilterParent: this.handleFilter, title: 'Advanced filters' }),
                        React.createElement(Components.PanelContent, null,
                            React.createElement(Components.PanelContentBlock, null,
                                React.createElement("div", { className: "form__group" },
                                    React.createElement("div", { className: "form__item" },
                                        React.createElement(index_1.Input, { label: 'TITLE', error: 'This is error message', inlineLabel: false, disabled: false, invalid: false, onChange: function (value) { } }))),
                                React.createElement("div", { className: "form__group" },
                                    React.createElement("div", { className: "form__item" },
                                        React.createElement(index_1.Select, { label: 'Source', value: 'Select ingest source...', error: 'This is error message', inlineLabel: false, disabled: false, invalid: false, onChange: function (value) { } },
                                            React.createElement(index_1.Option, { value: "option-1" }, "Select ingest source..."),
                                            React.createElement(index_1.Option, { value: "option-2" }, "Associated Press"),
                                            React.createElement(index_1.Option, { value: "option-3" }, "Reuters")))),
                                React.createElement("div", { className: "form__group" },
                                    React.createElement("div", { className: "form__item" },
                                        React.createElement(index_1.Input, { label: 'LOCATION', error: 'This is error message', inlineLabel: false, disabled: false, invalid: false, onChange: function (value) { } }))),
                                React.createElement("div", { className: "form__group" },
                                    React.createElement("div", { className: "form__item" },
                                        React.createElement(index_1.Input, { label: 'CATEGORY', error: 'This is error message', inlineLabel: false, disabled: false, invalid: false, onChange: function (value) { } }))),
                                React.createElement("div", { className: "form__group" },
                                    React.createElement("div", { className: "form__item" },
                                        React.createElement(index_1.Input, { label: 'SUBJECT', error: 'This is error message', inlineLabel: false, disabled: false, invalid: false, onChange: function (value) { } }))),
                                React.createElement("div", { className: "form__group" },
                                    React.createElement("div", { className: "form__item" },
                                        React.createElement(index_1.Select, { label: 'Usage right', value: '--- Not selected ---', error: 'This is error message', info: 'Dolor in hendrerit.', inlineLabel: false, disabled: false, invalid: false, onChange: function (value) { } },
                                            React.createElement(index_1.Option, { value: "" }, "--- Not selected ---"),
                                            React.createElement(index_1.Option, { value: "single" }, "Single usage"),
                                            React.createElement(index_1.Option, { value: "time" }, "Time restricted"),
                                            React.createElement(index_1.Option, { value: "bananas" }, "Indefinite usage"),
                                            React.createElement(index_1.Option, { value: "indefinite" }, "Pears")))))),
                        React.createElement(Components.PanelFooter, null,
                            React.createElement(index_1.Button, { text: 'Clear', style: 'hollow', onClick: function () { return false; } }),
                            React.createElement(index_1.Button, { text: 'Submit', type: 'primary', onClick: function () { return false; } })))),
                React.createElement(Components.MainPanel, null),
                React.createElement(Components.RightPanel, { open: this.state.openPreview }),
                React.createElement(Components.OverlayPanel, null))));
    };
    return FirstPlayground;
}(React.Component));
exports.FirstPlayground = FirstPlayground;


/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SamsPlayground = void 0;
var React = __importStar(__webpack_require__(0));
var Components = __importStar(__webpack_require__(39));
var index_1 = __webpack_require__(2);
var SamsPlayground = /** @class */ (function (_super) {
    __extends(SamsPlayground, _super);
    function SamsPlayground(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            theme: 'light',
            itemType: 'itemtype01',
            dropDownState: '',
            openPreview: false,
            openFilter: false,
            itemSelected1: false,
            itemSelected2: false,
            itemSelected3: false,
        };
        _this.handleFilter = _this.handleFilter.bind(_this);
        _this.handlePreview = _this.handlePreview.bind(_this);
        _this.handleTheme = _this.handleTheme.bind(_this);
        return _this;
    }
    SamsPlayground.prototype.handleFilter = function () {
        this.setState(function (state) { return ({
            openFilter: !state.openFilter,
        }); });
    };
    SamsPlayground.prototype.handlePreview = function () {
        this.setState(function (state) { return ({
            openPreview: !state.openPreview,
        }); });
    };
    SamsPlayground.prototype.handleTheme = function () {
        if (this.state.theme === 'light') {
            this.setState({
                theme: 'dark'
            });
        }
        else {
            this.setState({
                theme: 'light'
            });
        }
    };
    SamsPlayground.prototype.render = function () {
        var _this = this;
        return (React.createElement(Components.Layout, { header: 'SAMS playground', theme: this.state.theme },
            React.createElement(Components.SidebarMenu, { items: [
                    { icon: 'dashboard', size: 'big' },
                    { icon: 'view', size: 'big' },
                    { icon: 'marked-star', size: 'big' },
                    { icon: 'spike', size: 'big' },
                    { icon: 'personal', size: 'big' },
                    { icon: 'global-search', size: 'big' },
                    { icon: 'picture', size: 'big', active: true }
                ] }),
            React.createElement(Components.LayoutContainer, null,
                React.createElement(Components.HeaderPanel, null,
                    React.createElement(index_1.SubNav, { theme: this.state.theme, zIndex: 2 },
                        React.createElement(index_1.ButtonGroup, { align: 'inline' },
                            React.createElement(index_1.Dropdown, { items: [
                                    {
                                        type: 'group', label: 'Archives',
                                        items: [
                                            'divider',
                                            { label: 'All archives', onSelect: function () { return _this.setState({ dropDownState: 'All archives' }); } },
                                            { label: 'Media archive', onSelect: function () { return _this.setState({ dropDownState: 'Media archive' }); } },
                                            { label: 'File archive', onSelect: function () { return _this.setState({ dropDownState: 'File archive' }); } },
                                            { label: 'AP images', onSelect: function () { return _this.setState({ dropDownState: 'AP archive' }); } },
                                        ]
                                    }
                                ] },
                                React.createElement(index_1.NavButton, { text: this.state.dropDownState ? this.state.dropDownState : 'All Archives', onClick: function () { return false; } }))),
                        React.createElement(Components.SearchBar, { placeholder: 'Search media' }),
                        React.createElement(index_1.ButtonGroup, { align: 'right' },
                            React.createElement(index_1.NavButton, { icon: 'dots-vertical', onClick: function () { return false; } }))),
                    React.createElement(index_1.SubNav, { theme: this.state.theme, zIndex: 1 },
                        React.createElement(index_1.ButtonGroup, { align: 'inline' },
                            React.createElement(index_1.NavButton, { icon: 'filter-large', onClick: this.handleFilter })),
                        React.createElement(index_1.CheckButtonGroup, { padded: true },
                            React.createElement(index_1.RadioButton, { value: this.state.itemType, onChange: function (value) { return _this.setState({ itemType: value }); }, options: [
                                    { value: 'itemtype01', label: 'All item types' },
                                    { value: 'itemtype02', label: 'Images only' },
                                    { value: 'itemtype03', label: 'Videos only' },
                                    { value: 'itemtype04', label: 'Documents only' }
                                ] })),
                        React.createElement(index_1.ButtonGroup, { align: 'right' },
                            React.createElement(index_1.NavButton, { icon: 'adjust', onClick: this.handleTheme }),
                            React.createElement(index_1.NavButton, { icon: 'th-list', onClick: function () { return false; } })))),
                React.createElement(Components.LeftPanel, { open: this.state.openFilter },
                    React.createElement(Components.Panel, { side: 'left', background: 'grey' },
                        React.createElement(Components.PanelHeader, { handleFilterParent: this.handleFilter, title: 'Advanced filters' }),
                        React.createElement(Components.PanelContent, null,
                            React.createElement(Components.PanelContentBlock, null,
                                React.createElement("div", { className: "form__group" },
                                    React.createElement("div", { className: "form__item" },
                                        React.createElement(index_1.Input, { label: 'Title', error: 'This is error message', inlineLabel: false, disabled: false, invalid: false, onChange: function (value) { } }))),
                                React.createElement("div", { className: "form__group" },
                                    React.createElement("div", { className: "form__item" },
                                        React.createElement(index_1.Select, { label: 'Source', value: 'Select ingest source...', error: 'This is error message', inlineLabel: false, disabled: false, invalid: false, onChange: function (value) { } },
                                            React.createElement(index_1.Option, { value: "option-1" }, "Select ingest source..."),
                                            React.createElement(index_1.Option, { value: "option-2" }, "Associated Press"),
                                            React.createElement(index_1.Option, { value: "option-3" }, "Reuters")))),
                                React.createElement("div", { className: "form__group" },
                                    React.createElement("div", { className: "form__item" },
                                        React.createElement(index_1.Input, { label: 'Keyword', error: 'This is error message', inlineLabel: false, disabled: false, invalid: false, onChange: function (value) { } }))),
                                React.createElement("div", { className: "form__group" },
                                    React.createElement("div", { className: "form__item" },
                                        React.createElement(index_1.Select, { label: 'Usage right', value: '--- Not selected ---', error: 'This is error message', info: 'Dolor in hendrerit.', inlineLabel: false, disabled: false, invalid: false, onChange: function (value) { } },
                                            React.createElement(index_1.Option, { value: "" }, "--- Not selected ---"),
                                            React.createElement(index_1.Option, { value: "single" }, "Single usage"),
                                            React.createElement(index_1.Option, { value: "time" }, "Time restricted"),
                                            React.createElement(index_1.Option, { value: "bananas" }, "Indefinite usage"),
                                            React.createElement(index_1.Option, { value: "indefinite" }, "Pears")))))),
                        React.createElement(Components.PanelFooter, null,
                            React.createElement(index_1.Button, { text: 'Clear', style: 'hollow', onClick: function () { return false; } }),
                            React.createElement(index_1.Button, { text: 'Submit', type: 'primary', onClick: function () { return false; } })))),
                React.createElement(Components.MainPanel, null,
                    React.createElement("div", { className: "sd-grid-list sd-margin--1" },
                        React.createElement("div", { className: "sd-grid-item sd-grid-item--with-click", onClick: this.handlePreview },
                            React.createElement("div", { className: "sd-grid-item__thumb" },
                                React.createElement("div", { className: "sd-grid-item__checkbox" },
                                    React.createElement(index_1.Checkbox, { checked: this.state.itemSelected1, label: { text: '' }, onChange: function (value) { return _this.setState(function () { return ({ itemSelected1: value }); }); } })),
                                React.createElement("img", { src: "/d_trump.jpg", alt: "Moron" })),
                            React.createElement("div", { className: "sd-grid-item__content" },
                                React.createElement("time", { title: "20.11.2017" }, "19.06.2020"),
                                React.createElement("span", { className: "sd-grid-item__title" }, "Cursus Aenean"),
                                React.createElement("p", { className: "sd-grid-item--element-grow" }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi leo risus, porta ac consectetur, vestibulum eros.")),
                            React.createElement("div", { className: "sd-grid-item__footer" },
                                React.createElement("div", { className: "sd-grid-item__footer-block sd-grid-item__footer-block--multi-l" },
                                    React.createElement(index_1.Icon, { name: "photo", className: 'sd-grid-item__type-icn sd-grid-item__footer-block-item' }),
                                    React.createElement(index_1.Label, { text: 'Public', type: 'success', style: 'hollow' })),
                                React.createElement("div", { className: "sd-grid-item__footer-block sd-grid-item__footer-block--single-r" },
                                    React.createElement("div", { className: "sd-grid-item__actions" },
                                        React.createElement(index_1.Dropdown, { align: 'right', append: true, items: [
                                                {
                                                    type: 'group', label: 'Actions',
                                                    items: [
                                                        'divider',
                                                        { label: 'Edit', icon: 'pencil', onSelect: function () { return _this.setState({ dropDownState: 'Edit ' }); } },
                                                        { label: 'Download', icon: 'download', onSelect: function () { return _this.setState({ dropDownState: 'Download' }); } },
                                                        { label: 'Delete', icon: 'trash', onSelect: function () { return _this.setState({ dropDownState: 'Delete' }); } },
                                                    ]
                                                }
                                            ] },
                                            React.createElement(index_1.IconButton, { ariaValue: 'dropdown-more-options', icon: 'dots-vertical', onClick: function () { return false; } }))))),
                            React.createElement("div", { className: "sd-grid-item__state-border" })),
                        React.createElement("div", { className: "sd-grid-item sd-grid-item--with-click locked" },
                            React.createElement("div", { className: "sd-grid-item__thumb" },
                                React.createElement("div", { className: "sd-grid-item__checkbox" },
                                    React.createElement(index_1.Checkbox, { checked: this.state.itemSelected2, label: { text: '' }, onChange: function (value) { return _this.setState(function () { return ({ itemSelected2: value }); }); } })),
                                React.createElement("img", { src: "/bush_2.jpg", alt: "Moron" })),
                            React.createElement("div", { className: "sd-grid-item__content" },
                                React.createElement("time", { title: "20.11.2017" }, "20.06.2020"),
                                React.createElement("span", { className: "sd-grid-item__title" }, "Egestas Magna Tristique"),
                                React.createElement("p", { className: "sd-grid-item--element-grow" }, "Donec sed odio dui. Maecenas sed diam eget risus varius blandit sit amet non magna.")),
                            React.createElement("div", { className: "sd-grid-item__footer" },
                                React.createElement("div", { className: "sd-grid-item__footer-block sd-grid-item__footer-block--multi-l" },
                                    React.createElement(index_1.Icon, { name: "photo", className: 'sd-grid-item__type-icn sd-grid-item__footer-block-item' }),
                                    React.createElement(index_1.Label, { text: 'Public', type: 'success', style: 'hollow' })),
                                React.createElement("div", { className: "sd-grid-item__footer-block sd-grid-item__footer-block--single-r" },
                                    React.createElement("div", { className: "icn-btn sd-grid-item__actions" },
                                        React.createElement(index_1.Dropdown, { align: 'right', append: true, items: [
                                                {
                                                    type: 'group', label: 'Actions',
                                                    items: [
                                                        'divider',
                                                        { label: 'Edit', icon: 'pencil', onSelect: function () { return _this.setState({ dropDownState: 'Edit ' }); } },
                                                        { label: 'Download', icon: 'download', onSelect: function () { return _this.setState({ dropDownState: 'Download' }); } },
                                                        { label: 'Delete', icon: 'trash', onSelect: function () { return _this.setState({ dropDownState: 'Delete' }); } },
                                                    ]
                                                }
                                            ] },
                                            React.createElement(index_1.IconButton, { ariaValue: 'dropdown-more-options', icon: 'dots-vertical', onClick: function () { return false; } }))))),
                            React.createElement("div", { className: "sd-grid-item__state-border" })),
                        React.createElement("div", { className: "sd-grid-item sd-grid-item--with-click" },
                            React.createElement("div", { className: "sd-grid-item__thumb" },
                                React.createElement("div", { className: "sd-grid-item__checkbox" },
                                    React.createElement(index_1.Checkbox, { checked: this.state.itemSelected3, label: { text: '' }, onChange: function (value) { return _this.setState(function () { return ({ itemSelected3: value }); }); } })),
                                React.createElement("img", { src: "/obama_2.jpg", alt: "Obama" })),
                            React.createElement("div", { className: "sd-grid-item__content" },
                                React.createElement("time", { title: "20.11.2017" }, "19.06.2020"),
                                React.createElement("span", { className: "sd-grid-item__title" }, "Cras justo odio"),
                                React.createElement("p", { className: "sd-grid-item--element-grow" }, "Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.")),
                            React.createElement("div", { className: "sd-grid-item__footer" },
                                React.createElement("div", { className: "sd-grid-item__footer-block sd-grid-item__footer-block--multi-l" },
                                    React.createElement(index_1.Icon, { name: "photo", className: 'sd-grid-item__type-icn sd-grid-item__footer-block-item' }),
                                    React.createElement(index_1.Label, { text: 'Private', style: 'hollow', color: 'red--800' })),
                                React.createElement("div", { className: "sd-grid-item__footer-block sd-grid-item__footer-block--single-r" },
                                    React.createElement("div", { className: "sd-grid-item__actions" },
                                        React.createElement(index_1.Dropdown, { align: 'right', append: true, items: [
                                                {
                                                    type: 'group', label: 'Actions',
                                                    items: [
                                                        'divider',
                                                        { label: 'Edit', icon: 'pencil', onSelect: function () { return _this.setState({ dropDownState: 'Edit ' }); } },
                                                        { label: 'Download', icon: 'download', onSelect: function () { return _this.setState({ dropDownState: 'Download' }); } },
                                                        { label: 'Delete', icon: 'trash', onSelect: function () { return _this.setState({ dropDownState: 'Delete' }); } },
                                                    ]
                                                }
                                            ] },
                                            React.createElement(index_1.IconButton, { ariaValue: 'dropdown-more-options', icon: 'dots-vertical', onClick: function () { return false; } }))))),
                            React.createElement("div", { className: "sd-grid-item__state-border" })))),
                React.createElement(Components.RightPanel, { open: this.state.openPreview },
                    React.createElement(Components.Panel, { side: 'right' },
                        React.createElement(Components.PanelHeader, { title: 'Item details', handleFilterParent: this.handlePreview }),
                        React.createElement(Components.PanelContent, null,
                            React.createElement(Components.PanelContentBlock, { flex: true },
                                React.createElement("div", { className: "side-panel__content-block-inner side-panel__content-block-inner--grow" },
                                    React.createElement("p", { className: "sd-text__date-and-author" },
                                        React.createElement("time", null, "Created 19.06.2020 by "),
                                        " ",
                                        React.createElement("span", { className: "sd-text__author" }, "Mika Karapet")),
                                    React.createElement("p", { className: "sd-text__date-and-author" },
                                        React.createElement("time", null, "Updated 3 hours ago by"),
                                        " ",
                                        React.createElement("span", { className: "sd-text__author" }, "John Doe"))),
                                React.createElement("div", { className: "side-panel__content-block-inner side-panel__content-block-inner--right" },
                                    React.createElement(index_1.Dropdown, { align: 'right', append: true, items: [
                                            {
                                                type: 'group', label: 'Actions',
                                                items: [
                                                    'divider',
                                                    { label: 'Edit', icon: 'pencil', onSelect: function () { return _this.setState({ dropDownState: 'Edit ' }); } },
                                                    { label: 'Download', icon: 'download', onSelect: function () { return _this.setState({ dropDownState: 'Download' }); } },
                                                    { label: 'Delete', icon: 'trash', onSelect: function () { return _this.setState({ dropDownState: 'Delete' }); } },
                                                ]
                                            }
                                        ] },
                                        React.createElement(index_1.IconButton, { ariaValue: 'dropdown-more-options', icon: 'dots-vertical', onClick: function () { return false; } })))),
                            React.createElement(Components.PanelContentBlock, { padding: '0', className: 'side-panel__content-block--image' },
                                React.createElement("span", { className: "side-panel__image-actions" },
                                    React.createElement(index_1.IconButton, { ariaValue: 'button-fullscreen', icon: 'fullscreen', onClick: function () { return false; } })),
                                React.createElement("img", { src: "/d_trump.jpg", alt: "test" })),
                            React.createElement(Components.PanelContentBlock, null,
                                React.createElement("div", { className: "form__row" },
                                    React.createElement("label", { className: "form-label form-label--light" }, "Title"),
                                    React.createElement("p", { className: "sd-text__title" }, "Cursus Aenean")),
                                React.createElement("div", { className: "form__row" },
                                    React.createElement("label", { className: "form-label form-label--light" }, "Description"),
                                    React.createElement("p", { className: "sd-text sd-text--medium" }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi leo risus, porta ac consectetur, vestibulum eros.")),
                                React.createElement("div", { className: "form__row" },
                                    React.createElement(index_1.Label, { text: 'Public', type: 'success', style: 'hollow', size: 'large' })))))),
                React.createElement(Components.OverlayPanel, null))));
    };
    return SamsPlayground;
}(React.Component));
exports.SamsPlayground = SamsPlayground;


/***/ }),
/* 246 */
/***/ (function(module, exports) {

module.exports = {"name":"superdesk-ui-framework","version":"2.2.5","license":"AGPL-3.0","repository":{"type":"git","url":"https://github.com/superdesk/superdesk-ui-framework.git"},"main":"dist/superdesk-ui.bundle.js","types":"react/index.d.ts","contributors":["Nemanja Pavlovic","Vladimir Stefanovic","Darko Tomic","Aleksandar Jelicic","Tomas Kikutis","Dragana Zivkovic"],"scripts":{"start":"webpack-dev-server --config tasks/webpack.dev.js","server":"webpack --watch","build":"webpack && tsc && npm run lint","lint":"eslint app && tslint -c tslint.json 'app-typescript/**/*.{ts,tsx}'","prepublishOnly":"npm run build","prepublish":"patch-package"},"devDependencies":{"@types/classnames":"^2.2.9","@types/lodash":"4.14.149","@types/react":"16.8.23","@types/react-dom":"16.8.0","@types/react-router-dom":"^5.1.2","angular":"^1.7.9","angular-animate":"^1.7.9","angular-route":"^1.7.9","babel-core":"^6.26.0","babel-loader":"^7.1.2","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-es2015":"^6.24.1","babel-preset-react":"^6.24.1","classnames":"^2.2.5","clean-webpack-plugin":"^1.0.0","code-prettify":"^0.1.0","copy-webpack-plugin":"^4.6.0","css-loader":"^2.1.1","eslint":"^4.6.1","eslint-loader":"^1.9.0","eslint-plugin-angular":"^3.1.1","eslint-plugin-react":"^7.3.0","extract-text-webpack-plugin":"^3.0.2","file-loader":"^0.11.2","html-loader":"^0.5.1","html-webpack-plugin":"^2.30.1","jquery":"^3.1.1","jquery-ui":"^1.12.1","lodash":"4.17.15","node-sass":"^4.5.3","patch-package":"6.2.0","prismjs":"^1.17.1","prop-types":"^15.6.0","react":"16.8.6","react-bootstrap":"^0.31.2","react-dom":"16.8.6","react-redux":"^5.0.6","react-router-dom":"^5.1.2","redux":"^3.7.2","redux-form":"^7.0.4","sass-loader":"^6.0.6","style-loader":"^0.18.2","superdesk-code-style":"^1.1.2","ts-loader":"^6.0.2","tslint":"^5.18.0","typescript":"^3.5.1","url-loader":"^1.1.2","webpack":"^3.5.5","webpack-cli":"3.3.10","webpack-dev-server":"2.11.1","webpack-merge":"^4.2.1"},"dependencies":{"@popperjs/core":"^2.4.0","date-fns":"2.7.0","popper.js":"1.14.4","primeicons":"2.0.0","primereact":"3.3.2","react-id-generator":"^3.0.0","react-popper":"^2.2.3"}}

/***/ }),
/* 247 */
/***/ (function(module, exports) {

module.exports = "<div class=\"modal__header modal__header--flex\">\n    <h3 class=\"modal__heading\">Modal Fill</h3>\n    <button class=\"icn-btn\" ng-click=\"$close($event)\"><i class=\"icon-close-small\"></i></button>\n</div>\n<div class=\"modal__body\">\n    <p>This is sample message inside modal!</p>\n    <p>{{data}}</p>\n    <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. </p>\n</div>\n<div class=\"modal__footer\">\n    <button class=\"btn\" ng-click=\"$close($event)\">Cancel</button>\n    <button class=\"btn btn--primary\" ng-click=\"$close($event)\">Ok</button>\n</div>";

/***/ }),
/* 248 */
/***/ (function(module, exports) {

module.exports = "<header class=\"docs-page__header\">\n    <a href=\"#/\" class=\"docs-page__header-logo\"></a>\n    <h1 class=\"docs-page__h1\">Superdesk UI</h1>\n    <ul class=\"docs-page__header-nav\">\n        <li class=\"docs-page__header-nav-item docs-page__header-nav-item--active\"><a class=\"docs-page__header-nav-link\" href=\"#/\">Home</a></li>\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/design\">Design guidelines</a></li>\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/components\">Components</a></li>\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/react\">React</a></li>\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/playgrounds\">Playground</a></li>\n    </ul>\n</header>\n\n<main class=\"docs-page__content\">\n    <div class=\"docs-page__masthead\">\n        <hgroup class=\"docs-page__masthead-hgroup\">\n            <h2 class=\"docs-page__masthead-heading\">Superdesk Design System</h2>\n            <h4 class=\"docs-page__masthead-subheading\">v{{version}}</h4>\n        </hgroup>\n    </div>\n    <div class=\"docs-page__container docs-page__container--medium\">\n        <div class=\"flex-grid flex-grid--boxed flex-grid--wrap-items flex-grid--small-4\">\n\n            <a class=\"sd-card sd-card--with-click sd-card--blank sd-card--rounded flex-grid__item\" href=\"#/design\">\n                <div class=\"sd-card__header sd-card__header--with-thumb sd-card__header--blank\">\n                    <div class=\"sd-card__thumbnail sd-padding-x--1\">\n                        <img src=\"/illustration--design.svg\" alt=\"Design guidelines\">\n                    </div>\n                </div>\n                <div class=\"sd-card__content\">\n                    <h4 class=\"sd-card__content-heading sd-text__serif sd-text__center docs-page__color--primary\">Design guidelines</h4>\n                    <p class=\"docs-page__paragraph--light sd-text__center\">What to do and what not while creating user interfaces in Superdesk.</p>\n                </div>\n            </a>\n\n            <a class=\"sd-card sd-card--with-click sd-card--blank sd-card--rounded flex-grid__item\" href=\"#/components\">\n                <div class=\"sd-card__header sd-card__header--with-thumb sd-card__header--blank\">\n                    <div class=\"sd-card__thumbnail sd-padding-x--1\">\n                        <img src=\"/illustration--components.svg\" alt=\"Superdesk UI Components\">\n                    </div>\n                </div>\n                <div class=\"sd-card__content sd-padding-x--1\">\n                    <h4 class=\"sd-card__content-heading sd-text__serif sd-text__center docs-page__color--primary\">Components</h4>\n                    <p class=\"docs-page__paragraph--light sd-text__center\">Superdesk HTML/CSS and Angular UI components.</p>\n                </div>\n            </a>\n\n            <a class=\"sd-card sd-card--with-click sd-card--blank sd-card--rounded flex-grid__item\" href=\"#/react\">\n                <div class=\"sd-card__header sd-card__header--with-thumb sd-card__header--blank\">\n                    <div class=\"sd-card__thumbnail sd-padding-x--1\">\n                        <img src=\"/illustration--react.svg\" alt=\"React\">\n                    </div>\n                </div>\n                <div class=\"sd-card__content\">\n                    <h4 class=\"sd-card__content-heading sd-text__serif sd-text__center docs-page__color--primary\">React</h4>\n                    <p class=\"docs-page__paragraph--light sd-text__center\">React UI components. Still in early stages, but will hopefully grow quickly.</p> \n                </div>\n            </a>\n\n            <a class=\"sd-card sd-card--with-click sd-card--blank sd-card--rounded flex-grid__item\" href=\"#/playgrounds\">\n                <div class=\"sd-card__header sd-card__header--with-thumb sd-card__header--blank\">\n                    <div class=\"sd-card__thumbnail sd-padding-x--1\">\n                        <img src=\"/illustration--playground.svg\" alt=\"Playgrounds\">\n                    </div>\n                </div>\n                <div class=\"sd-card__content\">\n                    <h4 class=\"sd-card__content-heading sd-text__serif sd-text__center docs-page__color--primary\">Playground</h4>\n                    <p class=\"docs-page__paragraph--light sd-text__center\">Examples and drafts for more complex modules and full-page layouts.</p>\n                </div>\n            </a>\n\n        </div>\n    </div>\n</main>";

/***/ }),
/* 249 */
/***/ (function(module, exports) {

module.exports = "<header class=\"docs-page__header\">\n    <a href=\"#/\" class=\"docs-page__header-logo\"></a>\n    <h1 class=\"docs-page__h1\">Superdesk UI</h1>\n    <ul class=\"docs-page__header-nav\">\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/\">Home</a></li>\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/design\">Design guidelines</a></li>\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/components\">Components</a></li>\n        <li class=\"docs-page__header-nav-item\"><a class=\"docs-page__header-nav-link\" href=\"#/react\">React</a></li>\n        <li class=\"docs-page__header-nav-item docs-page__header-nav-item--active\"><a class=\"docs-page__header-nav-link\" href=\"#/playgrounds\">Playground</a></li>\n    </ul>\n</header>\n<main class=\"docs-page__content\">\n    <div class=\"docs-page__hero sd-margin-b--0\">\n        <figure class=\"docs-page__hero-image\">\n            <img src=\"/illustration--playground.svg\" alt=\"React\">\n        </figure>\n        <h2 class=\"docs-page__hero-h2 docs-page__color--primary\">UI Playgrounds</h2>\n        <p class=\"docs-page__hero-text\">Examples and drafts for more complex modules<br>\n            and full-page layouts.</p>\n    </div>\n    <section class=\"docs-page__container sd-margin-t--0\">\n        <div class=\"flex-grid flex-grid--boxed flex-grid--wrap-items flex-grid--small-3\">\n\n            <div class=\"sd-card flex-grid__item\" ng-repeat=\"(group, content) in playgrounds\">\n                <div class=\"sd-card__header sd-card__header--with-thumb sd-card__header--gradient-1\">\n                    <div class=\"sd-card__thumbnail sd-card__thumbnail--size-xxs\">\n                        <h4 class=\"sd-card__thumbnail-heading\" style=\"text-transform: capitalize;\">{{group}}</h4>\n                    </div>\n                </div>\n                <div class=\"sd-card__content\">\n                    <ul class=\"text-link__group\">\n                        <li class=\"text-link__item\" ng-repeat=\"(route, page) in content\">\n                            <a class=\"text-link\" href=\"#/playgrounds/{{route}}\" target=\"_blank\" ng-if=\"!page.component\">{{page.name}}</a>\n                            <a class=\"text-link\" href=\"#/playgrounds/react/{{route}}\" target=\"_blank\" ng-if=\"page.component\">{{page.name}}</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n\n        </div>\n    </section>\n</main>";

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./accessible-theme-test.html": 251,
	"./boxed-list.html": 252,
	"./cards.html": 253,
	"./circular-progress.html": 254,
	"./form-layout.html": 255,
	"./layout-grid.html": 256,
	"./layout-snippets/edit-article.html": 257,
	"./layout-test-2.html": 258,
	"./list-item-test.html": 259,
	"./main.html": 260,
	"./master-desk.html": 261,
	"./media-carousel.html": 262,
	"./nav-buttons.html": 263,
	"./photo-desk.html": 264,
	"./photo-snippets/edit-photo-metadata.html": 265,
	"./planning-snippets/edit-event.html": 266,
	"./planning-snippets/edit-planning.html": 267,
	"./planning.html": 268,
	"./publish-snippets/edit-article.html": 269,
	"./publish.html": 270,
	"./publisher-content-analytics.html": 271,
	"./publisher-content-list-automatic.html": 272,
	"./publisher-content-list-manual.html": 273,
	"./publisher-content-lists.html": 274,
	"./publisher-dashboard.html": 275,
	"./publisher-output-control.html": 276,
	"./publisher-website-settings-general.html": 277,
	"./publisher-website-settings.html": 278,
	"./settings.html": 279,
	"./side-navigation.html": 280,
	"./swimlane-view.html": 281,
	"./tags-input.html": 282,
	"./toasts.html": 283,
	"./video-editor.html": 284
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 250;

/***/ }),
/* 251 */
/***/ (function(module, exports) {

module.exports = "<div class=\"sd-page-grid--test docs-page__full-width-helper\" doc-modal ng-init=\"openHamburger = false, accessibleUI = false\" data-theme=\"{{accessibleUI ? 'accessible-light-ui' : 'light-ui'}}\">\n    <div class=\"sd-main-menu\" ng-class=\"{'sd-main-menu--open': openHamburger}\">\n        <div class=\"sd-main-menu__inner\">\n\n        </div>\n    </div>\n    <header class=\"sd-top-menu\">\n        <a href=\"\" ng-click=\"openHamburger = !openHamburger\" class=\"sd-top-menu__collapse-nav\">\n            <span class=\"sd-accessibility__btn-text--invisible\">Main menu</span>\n            <i class=\"icon-collapse icon--white\"></i>\n        </a>\n        <h1 class=\"sd-top-menu__header\">National Desk // Layou test 2</h1>\n    </header>\n    <section class=\"sd-content sd-content-wrapper\">\n        <div class=\"sd-sidebar-menu sd-content-wrapper__left-tabs\">\n            <ul class=\"authoring-active\">\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <span class=\"sd-accessibility__btn-text--invisible\">Dashboard</span>\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Monitoring\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\" ng-click=\"menuItemActive1 = !menuItemActive1\" ng-class=\"{'sd-sidebar-menu__btn--closed': menuItemActive1}\">\n                        <span class=\"sd-accessibility__btn-text--invisible\">Monitoring</span>\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--view\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Highlights\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <span class=\"sd-accessibility__btn-text--invisible\">Highlights</span>\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--marked-star\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Spiked\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <span class=\"sd-accessibility__btn-text--invisible\">Spiked</span>\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--spike\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Personal\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <span class=\"sd-accessibility__btn-text--invisible\">Personal</span>\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--personal\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Search\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <span class=\"sd-accessibility__btn-text--invisible\">Search</span>\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--global-search\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Media archive\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <span class=\"sd-accessibility__btn-text--invisible\">Media archive</span>\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--picture\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n            </ul>\n        </div>\n        <div id=\"leftContent\" sd-media-query min-width=\"880\" max-width=\"1100\" ng-init=\"accessibleUI = false; listView = true\" class=\"sd-content-wrapper__main-content-area sd-main-content-grid\" ng-class=\"{'dark-ui': darkUI}\">\n            <!-- TOOLBAR HEADER -->\n            <div class=\"sd-main-content-grid__header\">\n                <div class=\"subnav\" ng-class=\"{'subnav--accessible-light-ui': accessibleUI}\">\n                    <div class=\"subnav__sliding-toolbar\" ng-show=\"select1 || select2 || select3 || select4 || select5 || select6 || select7 || select8 || select9 || select10 || select11 || select12 || select13 || select14 || select15 || select16 || select17 || select18 || select19 || select20 || select21 || select22 || select23 || select24 || select25 || select26 || select27 || select28 || select29 || select30 || select31 || select32 || select33 || select34 || select35 || select36\">\n                        <div class=\"sliding-toolbar__inner\">\n                            <a class=\"btn\" ng-click=\"select1 = false; select2 = false; select3 = false; select4 = false; select5 = false; select6 = false; select7 = false; select8 = false\">Cancel</a>\n                            <span class=\"sliding-toolbar__info-text\">1 item selected</span>\n                        </div>\n                        <a class=\"btn btn--primary\" ng-click=\"openModal('imageModal'); multiEdit = true; select1 = false; select2 = false; select3 = false; select4 = false; select5 = false; select6 = false; select7 = false; select8 = false; select11 = true; select12 = true; select13 = true; select14 = true\">Edit metadata</a>\n                        <a class=\"btn btn--alert\"><i class=\"icon-trash\"></i>Delete</a>\n                    </div>\n                    <div class=\"dropdown\" dropdown=\"\">\n                        <button class=\"dropdown__toggle navbtn navbtn--text-only dropdown-toggle\" dropdown-toggle=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">Monitoring<span class=\"dropdown__caret\"></span></button>\n                        <ul class=\"dropdown__menu scrollable\" style=\"\">\n                            <li><div class=\"dropdown__menu-label ng-binding\">Monitoring</div></li>\n                            <li><button>Incoming stage</button></li>\n                            <li><button>Working stage</button></li>\n                            <li><button>Output stage</button></li>\n                        </ul>\n                    </div>\n                    <div class=\"subnav__spacer subnav__spacer--no-margin\"></div>\n                    <div class=\"sd-searchbar\" ng-class=\"{'sd-searchbar--focused': focused}\" >\n                        <label for=\"search-input\" class=\"sd-searchbar__icon\">\n                            <span class=\"sd-accessibility__btn-text--invisible\">Search</span>\n                        </label>\n                        <input id=\"search-input\"\n                                class=\"sd-searchbar__input\"\n                                type=\"text\"\n                                placeholder=\"Search\"\n                                ng-keyup=\"searchOnEnter($event)\"\n                                ng-model=\"query\"\n                                tabindex=\"1\"\n                                ng-focus=\"focused = true\">\n                        <button class=\"sd-searchbar__cancel\" ng-if=\"query\">\n                            <span class=\"sd-accessibility__btn-text--invisible\">Clear search</span>\n                            <i class=\"icon-remove-sign\"></i>\n                        </button>\n                        <button id=\"sd-searchbar__search-btn\" class=\"sd-searchbar__search-btn\" ng-if=\"focused\" tabindex=\"2\">\n                            <span class=\"sd-accessibility__btn-text--invisible\">Start search</span>\n                            <i class=\"big-icon--chevron-right\"></i>\n                        </button>\n                    </div>\n                    <div class=\"dropdown dropdown--align-right\" dropdown>\n                        <button class=\"dropdown__toggle navbtn sd-create-btn\" dropdown__toggle>\n                            <span class=\"sd-accessibility__btn-text--invisible\">Add / Create</span>\n                            <i class=\"icon-plus-large\"></i>\n                            <span class=\"circle\"></span>\n                        </button>\n                        <ul class=\"dropdown__menu\">\n                            <li>\n                                <div class=\"dropdown__menu-label\">Upload</div>\n                            </li>\n                            <li class=\"dropdown__menu-divider\"></li>\n                            <li>\n                                <button><i class=\"icon-plus-sign icon--blue\"></i>Image</button>\n                            </li>\n                            <li>\n                                <button><i class=\"icon-plus-sign icon--blue\"></i>Video</button>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div class=\"subnav\" ng-class=\"{'subnav--dark-ui': darkUI}\">\n                    <button class=\"navbtn navbtn--left navbtn--darker\" ng-click=\"leftFilterOpen = !leftFilterOpen\" ng-class=\"{'navbtn--active': leftFilterOpen}\" value=\"Advanced Filters\" title=\"Advanced Filters\">\n                        <span class=\"sd-accessibility__btn-text--invisible\">Advanced Filters</span>\n                        <i class=\"icon-filter-large\"></i>\n                    </button>\n                    <div class=\"subnav__stretch-bar\">\n                        <sd-check ng-model=\"planningType\" ng-value=\"all\" label-position=\"inside\" ng-checked=\"true\">all</sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"text\" label-position=\"inside\"><i class=\"icon-text\"></i></sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"photo\" label-position=\"inside\"><i class=\"icon-photo\"></i></sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"graphic\" label-position=\"inside\"><i class=\"icon-graphic\"></i></sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"composite\" label-position=\"inside\"><i class=\"icon-composite\"></i></sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"video\" label-position=\"inside\"><i class=\"icon-video\"></i></sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"audio\" label-position=\"inside\"><i class=\"icon-audio\"></i></sd-check>\n                    </div>\n                    <div class=\"subnav__spacer subnav__spacer--no-margin\"></div>\n                    <div class=\"subnav__content-bar\">\n                        <span>Total:</span> <span class=\"badge\" style=\"margin: 0 10px 0 6px;\">6432</span>\n                        <div class=\"dropdown dropdown--align-right\" dropdown>\n                            <button class=\"dropdown__toggle\" dropdown__toggle>\n                                Updated<span class=\"dropdown__caret\"></span>\n                            </button>\n                            <ul class=\"dropdown__menu\">\n                                <li><button>Updated</button></li>\n                                <li><button>Created</button></li>\n                                <li><button>Urgency</button></li>\n                                <li><button>Category</button></li>\n                                <li><button>Slugline</button></li>\n                                <li><button>Priority</button></li>\n                                <li><button>Genre</button></li>\n                            </ul>\n                        </div>\n                        <a class=\"icn-btn\" sd-tooltip=\"Descending\" flow=\"bottom\" ng-click=\"sortDesc = !sortDesc\" ng-hide=\"!sortDesc\"><i class=\"icon-descending\"></i></a>\n                        <a class=\"icn-btn\" sd-tooltip=\"Ascending\" flow=\"bottom\" ng-click=\"sortDesc = !sortDesc\" ng-show=\"!sortDesc\"><i class=\"icon-ascending\"></i></a>\n    \n                    </div>\n                    <button class=\"navbtn\" ng-click=\"accessibleUI = !accessibleUI\">\n                        <span class=\"sd-accessibility__btn-text--invisible\">Change theme</span>\n                        <i class=\"icon-adjust\"></i>\n                    </button>\n                    <div class=\"dropdown dropdown--align-right\" dropdown>\n                        <button class=\"navbtn\" dropdown__toggle>\n                            <span class=\"sd-accessibility__btn-text--invisible\">Change view</span>\n                            <i class=\"icon-list-view\" ng-show=\"listView\"></i>\n                            <i class=\"icon-kanban-view\" ng-show=\"swimlaneView\"></i>\n                            <i class=\"icon-grid-view\" ng-show=\"gridView\"></i>\n                        </button>\n                        <ul class=\"dropdown__menu\">\n                            <li><button ng-click=\"listView = true; swimlaneView = false; gridView = false;\"><i class=\"icon-list-view\"></i> List View</button></li>\n                            <li><button ng-click=\"swimlaneView = true; listView = false; gridView = false;\"><i class=\"icon-kanban-view\"></i> Swimlane View</button></li>\n                            <li><button ng-click=\"gridView = true; swimlaneView = false; listView = false;\"><i class=\"icon-grid-view\"></i> Photo Grid view</button></li>\n    \n                        </ul>\n                    </div>\n                    <div class=\"dropdown dropdown--align-right\" dropdown>\n                        <button class=\"dropdown__toggle navbtn\" dropdown__toggle>\n                            <span class=\"sd-accessibility__btn-text--invisible\">More options</span>\n                            <i class=\"icon-dots-vertical\"></i>\n                        </button>\n                        <ul class=\"dropdown__menu\">\n                            <li>\n                                <div class=\"dropdown__menu-label\">Actions</div>\n                            </li>\n                            <li class=\"dropdown__menu-divider\"></li>\n                            <li><button>Action 2</button></li>\n                            <li><button>Action 3</button></li>\n                            <li><button ng-click=\"editArticle = !editArticle\">Open editor</button></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <!-- FILTER PANEL -->\n            <div class=\"sd-main-content-grid__filter\" ng-class=\"{'open-filters': leftFilterOpen}\">\n                <div class=\"side-panel__container\">\n                    <div class=\"side-panel side-panel--shadow-left\">\n                        <div class=\"side-panel__header side-panel__header--border-b\">\n                            <a class=\"icn-btn side-panel__close\" sd-tooltip=\"Close filters\" flow=\"left\" ng-click=\"leftFilterOpen = !leftFilterOpen\"><i class=\"icon-close-small\"></i></a>\n                            <h3 class=\"side-panel__heading\">Advanced filters</h3>  \n                        </div>\n                        <div class=\"side-panel__content\">\n                            <div class=\"side-panel__content-block\">\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input\">\n                                            <label for=\"title\" class=\"sd-input__label\">Title</label>\n                                            <input id=\"title\" class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input sd-input--is-select\">\n                                            <label for=\"source\" class=\"sd-input__label\">Source</label>\n                                            <select id=\"source\" class=\"sd-input__select\">\n                                                <option value=\"\">Select ingest source...</option>\n                                                <option value=\"\">Associated Press</option>\n                                                <option value=\"\">Reuters</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input\">\n                                            <label for=\"location\" class=\"sd-input__label\">Location</label>\n                                            <input id=\"location\" class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input sd-input--with-button\">\n                                            <span class=\"sd-input__plus-btn\"></span>\n                                            <label for=\"category\" class=\"sd-input__label\">Category</label>\n                                            <input id=\"category\" class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input sd-input--with-button\">\n                                            <span class=\"sd-input__plus-btn\"></span>\n                                            <label for=\"subject\" class=\"sd-input__label\">Subject</label>\n                                            <input id=\"subject\" class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input sd-input--is-select \">\n                                            <label for=\"usage-right\" class=\"sd-input__label\">Usage right</label>\n                                            <select id=\"usage-right\" class=\"sd-input__select\">\n                                                <option value=\"\">--- Not selected ---</option>\n                                                <option value=\"single\">Single usage</option>\n                                                <option value=\"time\">Time restricted</option>\n                                                <option value=\"bananas\">Indefinite usage</option>\n                                                <option value=\"indefinite\">Pears</option>\n                                            </select>\n                                            <div class=\"sd-input__message-box\">\n                                                <span class=\"sd-input__hint\">Dolor in hendrerit.</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input\">\n                                            <a class=\"icn-btn sd-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                            <label for=\"date-from\" class=\"sd-input__label\">From</label>\n                                            <input id=\"date-from\" class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input\">\n                                            <label for=\"time-from\" class=\"sd-accessibility__btn-text--invisible\">Time from</label>\n                                            <a class=\"icn-btn sd-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                            <input id=\"time-from\" class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input\">\n                                            <a class=\"icn-btn sd-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                            <label for=\"date-to\" class=\"sd-input__label\">To</label>\n                                            <input id=\"date-to\" class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input\">\n                                            <label for=\"time-to\" class=\"sd-accessibility__btn-text--invisible\">Time to</label>\n                                            <a class=\"icn-btn sd-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                            <input id=\"time-to\" class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <sd-check ng-model=\"abc2\">Check me!</sd-check>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer side-panel__footer--button-box\">\n                            <div class=\"flex-grid flex-grid--boxed-small flex-grid--wrap-items flex-grid--small-2\">\n                                <a class=\"btn btn--hollow\">Clear</a>\n                                <a class=\"btn btn--primary\">Submit</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- MAIN CONTENT (Monitoring) -->\n            <div class=\"sd-main-content-grid__content sd-padding--2\">\n                <div class=\"sd-list-header\" ng-hide=\"swimlaneView\">\n                    <span class=\"sd-list-header__name\">Friday September 15, 2017</span>\n                </div>\n                <!-- List item view -->\n                <div class=\"sd-list-item-group sd-shadow--z2\" ng-show=\"listView\" ng-class=\"{'sd-list-item-group--dark-ui' : darkUI}\">\n                    <!-- list item  1 -->\n                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select1, 'sd-list-item--activated' : selectThis1}\">\n                        <div class=\"sd-list-item__border\"></div>\n                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select1}\">\n                            <div class=\"sd-list-item__checkbox-container\">\n                                <sd-check ng-model=\"select1\"></sd-check>\n                            </div>\n                            <span class=\"icn-mix sd-list-item__item-type\">\n                                <i class=\"icon-text\"></i>\n                            </span>\n                        </div>\n                        <div class=\"sd-list-item__column\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"badge badge--success\">1</span>\n                                <span class=\"badge badge--warning badge--square \">3</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</span>\n                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                            <button class=\"icn-btn\" ng-click=\"sendToOpen = !sendToOpen\">\n                                <span class=\"sd-accessibility__btn-text--invisible\">Send to</span>\n                                <i class=\"icon-expand-thin\"></i>\n                            </button>\n                            <button class=\"icn-btn\">\n                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                <i class=\"icon-dots-vertical\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <!-- list item  2 -->\n                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select2}\">\n                        <div class=\"sd-list-item__border\"></div>\n                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select2}\">\n                            <div class=\"sd-list-item__checkbox-container\">\n                                <sd-check ng-model=\"select2\"></sd-check>\n                            </div>\n                            <span class=\"icn-mix sd-list-item__item-type\">\n                                <i class=\"icon-text\"></i>\n                            </span>\n                        </div>\n                        <div class=\"sd-list-item__column\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"badge badge--primary\">2</span>\n                                <span class=\"badge badge--alert badge--square\">4</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>In ac dui quis mi consectetuer lacinia. Aenean tellus metus, bibendum sed, posuere ac, mattis non, nunc.</span>\n                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__action-menu\">\n                            <button class=\"icn-btn\">\n                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                <i class=\"icon-dots-vertical\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <!-- list item  3 -->\n                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select3}\">\n                        <div class=\"sd-list-item__border\"></div>\n                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select3}\">\n                            <div class=\"sd-list-item__checkbox-container\">\n                                <sd-check ng-model=\"select3\"></sd-check>\n                            </div>\n                            <span class=\"icn-mix sd-list-item__item-type\">\n                                <i class=\"icon-text\"></i>\n                            </span>\n                        </div>\n                        <div class=\"sd-list-item__column\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"badge badge--highlight\">3</span>\n                                <span class=\"badge badge--light badge--square\">&nbsp;</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae. Aenean tellus metus, bibendum sed...</span>\n                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__action-menu\">\n                            <button class=\"icn-btn\">\n                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                <i class=\"icon-dots-vertical\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <!-- list item  4 -->\n                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select4}\">\n                        <div class=\"sd-list-item__border\"></div>\n                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select4}\">\n                            <div class=\"sd-list-item__checkbox-container\">\n                                <sd-check ng-model=\"select4\"></sd-check>\n                            </div>\n                            <span class=\"icn-mix sd-list-item__item-type\">\n                                <i class=\"icon-text\"></i>\n                            </span>\n                        </div>\n                        <div class=\"sd-list-item__column\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"badge badge--primary\">2</span>\n                                <span class=\"badge badge--warning badge--square\">3</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero.</span>\n                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__action-menu\">\n                            <button class=\"icn-btn\">\n                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                <i class=\"icon-dots-vertical\"></i>\n                            </button>\n                        </div>\n                    </div>\n\n                    <!-- list item  5 -->\n                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select5}\">\n                        <div class=\"sd-list-item__border\"></div>\n                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select5}\">\n                            <div class=\"sd-list-item__checkbox-container\">\n                                <sd-check ng-model=\"select5\"></sd-check>\n                            </div>\n                            <span class=\"icn-mix sd-list-item__item-type\">\n                                <i class=\"icon-text\"></i>\n                            </span>\n                        </div>\n                        <div class=\"sd-list-item__column\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"badge badge--light\">&nbsp;</span>\n                                <span class=\"badge badge--square\">5</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Pellentesque auctor neque nec urna. Vestibulum turpis sem, aliquet eget lobortis...</span>\n                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__action-menu\">\n                            <button class=\"icn-btn\">\n                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                <i class=\"icon-dots-vertical\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <!-- list item  6 -->\n                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select6}\">\n                        <div class=\"sd-list-item__border\"></div>\n                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select6}\">\n                            <div class=\"sd-list-item__checkbox-container\">\n                                <sd-check ng-model=\"select6\"></sd-check>\n                            </div>\n                            <span class=\"icn-mix sd-list-item__item-type\">\n                                <i class=\"icon-photo\"></i>\n                            </span>\n                        </div>\n                        <div class=\"sd-list-item__column\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"badge badge--highlight\">3</span>\n                                <span class=\"badge badge--light badge--square\">&nbsp;</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Vestibulum turpis sem, aliquet eget lobortis...</span>\n                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__action-menu\">\n                            <button class=\"icn-btn\">\n                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                <i class=\"icon-dots-vertical\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <!-- list item  7 -->\n                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select7}\">\n                        <div class=\"sd-list-item__border\"></div>\n                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select7}\">\n                            <div class=\"sd-list-item__checkbox-container\">\n                                <sd-check ng-model=\"select7\"></sd-check>\n                            </div>\n                            <span class=\"icn-mix sd-list-item__item-type\">\n                                <i class=\"icon-photo\"></i>\n                            </span>\n                        </div>\n                        <div class=\"sd-list-item__column\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"badge badge--success\">1</span>\n                                <span class=\"badge badge--highlight badge--square\">2</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Vivamus in erat ut urna cursus vestibulum. Sed consequat, leo eget bibendum sodales...</span>\n                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__action-menu\">\n                            <button class=\"icn-btn\">\n                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                <i class=\"icon-dots-vertical\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <!-- list item  8 -->\n                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select8}\">\n                        <div class=\"sd-list-item__border\"></div>\n                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select8}\">\n                            <div class=\"sd-list-item__checkbox-container\">\n                                <sd-check ng-model=\"select8\"></sd-check>\n                            </div>\n                            <span class=\"icn-mix sd-list-item__item-type\">\n                                <i class=\"icon-text\"></i>\n                            </span>\n                        </div>\n                        <div class=\"sd-list-item__column\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"badge badge--primary\">2</span>\n                                <span class=\"badge badge--square\">5</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Mauris sollicitudin fermentum libero, vestibulum et, tempor auctor, justo...</span>\n                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__action-menu\">\n                            <button class=\"icn-btn\">\n                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                <i class=\"icon-dots-vertical\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- PREVIEW PANEL -->\n            <div class=\"sd-main-content-grid__preview\"  ng-class=\"{'open-preview': leftPreviewOpen}\">\n                <div class=\"side-panel__container\">\n                    <div class=\"side-panel side-panel--shadow-right\" ng-class=\"{'side-panel--dark-ui' : darkUI}\">\n                        <div class=\"side-panel__header\">\n                            <div class=\"side-panel__tools\">\n                                <!-- <a class=\"icn-btn\" sd-tooltip=\"Edit details\" flow=\"top\" ng-click=\"editorOpen = true; leftPreviewOpen = false\"><i class=\"icon-pencil\"></i></a> -->\n                                <a class=\"icn-btn\" sd-tooltip=\"Close details\" flow=\"top\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\"><i class=\"icon-close-small\"></i></a>\n                            </div>\n                            <ul class=\"nav-tabs\" ng-class=\"{'nav-tabs--ui-dark' : darkUI}\">\n                                <li ng-class=\"{'nav-tabs__tab--active': !tab || tab === 'event-details'}\" class=\"nav-tabs__tab\">\n                                    <button ng-click=\"tab = 'event-details'\" class=\"nav-tabs__link\"><span translate=\"\">Content</span></button>\n                                </li>\n                                <li ng-class=\"{'nav-tabs__tab--active': tab === 'event-history'}\" class=\"nav-tabs__tab\">\n                                    <button ng-click=\"tab = 'event-history'\" class=\"nav-tabs__link\"><span translate=\"\">History</span></button>\n                                </li>\n                            </ul> \n                        </div>\n                        <div class=\"side-panel__content\" ng-if=\"!tab || tab === 'event-details'\">\n                            <div class=\"side-panel__content-block side-panel__content-block--pad-small side-panel__content-block--flex\">\n                                <div class=\"side-panel__content-block-inner side-panel__content-block-inner--grow\">\n                                    <p class=\"sd-text__date-and-author\"><time>Created 23.08.2017 by </time> <span class=\"sd-text__author\">Mika Karapet</span></p> \n                                    <p class=\"sd-text__date-and-author\"><time>Updated 3 hours ago by</time> <span class=\"sd-text__author\">John Doe</span></p>\n                                </div>\n                                <div class=\"side-panel__content-block-inner side-panel__content-block-inner--right\">\n                                    <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                                </div>\n                            </div>\n                            <div class=\"side-panel__content-block side-panel__content-block--image\">\n                                <a class=\"icn-btn side-panel__image-actions\" ng-click=\"openModal('imageModal')\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <img src=\"/d_trump.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"side-panel__content-block\">\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Slugline</label>\n                                    <p class=\"sd-text__slugline\">This is a slugline</p>\n                                </div>\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Description</label>\n                                    <p>Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</p>\n                                </div>\n\n                                <div sd-toggle-box data-title=\"Details\" data-style=\"circle\">\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Usage right</label>\n                                        <p>Single usage</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Category</label>\n                                        <p>Some category</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Subject</label>\n                                        <p>Arts, culture and entertainment, Music</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Long Description</label>\n                                        <p>Nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Internal Note</label>\n                                        <p>Lorem ipsum dolor sit amet, consetetur sadipscing.</p>\n                                    </div>\n                                </div>\n                                <h3 class=\"side-panel__heading side-panel__heading--big\" ng-hide=\"multiEdit\">Related items</h3>\n                                <div class=\"sd-grid-list sd-grid-list--small sd-grid-list--no-rl-margin\" ng-hide=\"multiEdit\">\n                                    <!-- related item 1 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/d_trump_2.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 2 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/bill.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 3 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/hillary.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 4 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/bush_1.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__content\" ng-if=\"tab === 'event-history'\">\n                            <div class=\"side-panel__content-block\">\n                                <ul class=\"simple-list simple-list--dotted simple-list--no-padding\">\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Created by</strong> Mika Karapet</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:10</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Coverage created by</strong> Vince Ryan</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:13</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Updated by</strong> Karel Petrak</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:13</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Coverage updated by</strong> John Doe</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:21</time>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer\">\n\n                        </div>\n                    </div>  \n                </div>\n            </div>\n            <!-- OVERLAY PANEL ( Send To ) -->\n            <div class=\"sd-main-content-grid__overlay\">\n                <div class=\"sd-overlay-panel sd-overlay-panel--dark-ui\" ng-class=\"{'sd-overlay-panel--open' : sendToOpen}\">\n                    <div class=\"side-panel side-panel--dark-ui\">\n                        <div class=\"side-panel__header\">\n                            <div class=\"side-panel__tools\">\n                                <a class=\"icn-btn\" ng-click=\"sendToOpen = !sendToOpen\"><i class=\"icon-close-small\"></i></a>\n                            </div>\n                            <ul class=\"nav-tabs nav-tabs--big nav-tabs--ui-dark\">\n                                <li ng-class=\"{'nav-tabs__tab--active': !tab || tab === 'send-to'}\" class=\"nav-tabs__tab\">\n                                    <button class=\"nav-tabs__link\"><span translate>Send to</span></button>\n                                </li>\n                                <li class=\"nav-tabs__tab\">\n                                    <button class=\"nav-tabs__link\"><span translate>Publish</span></button>\n                                </li>\n                            </ul>\n                        </div>\n                        <!-- Send To Tab -->\n                        <div class=\"side-panel__content\">\n                            <div class=\"side-panel__content-block\">\n                                <div sd-toggle-box data-title=\"Destination\" data-style=\"circle\" data-open=\"true\">\n                                    <div class=\"form__row\">\n                                        <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-label sd-line-input--no-margin\">\n                                            <label for=\"desk\" class=\"sd-accessibility__btn-text--invisible\">Desk</label>\n\n                                            <select id=\"desk\" class=\"sd-line-input__select\">\n                                                <option value=\"single\">Politics desk</option>\n                                                <option value=\"time\">Sports desk</option>\n                                                <option value=\"bananas\">Features desk</option>\n                                                <option value=\"indefinite\">Photo desk</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class=\"form__row form__row--no-padding\">\n                                        <div class=\"flex-grid flex-grid--boxed-small flex-grid--wrap-items flex-grid--small-2\">\n                                            <button class=\"btn__check btn__check--active flex-grid__item\" disabled=\"disabled\">Active disabled</button>\n                                            <button class=\"btn__check flex-grid__item\" disabled=\"disabled\">Disabled</button>\n                                            <button ng-click=\"stageActive0 = !stageActive0\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive0}\">Incoming stage</button>\n                                            <button ng-click=\"stageActive1 = !stageActive1\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive1}\">Working stage</button>\n                                            <button ng-click=\"stageActive2 = !stageActive2\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive2}\">Revise stage</button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div sd-toggle-box data-title=\"Embargo\" data-style=\"circle\" data-open=\"true\">\n                                    <div class=\"form__row form__row--flex  form__row--small-padding\">\n                                        <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                            <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                            <label for=\"embargo\" class=\"sd-line-input__label\">Embargo till</label>\n                                            <input id=\"embargo\" class=\"sd-line-input__input\" type=\"text\">\n                                        </div>\n                                        <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                            <label class=\"sd-accessibility__btn-text--invisible\" for=\"embargo-time\">Embargo till - time</label>\n                                            <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                            <input id=\"embargo-time\" class=\"sd-line-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                    <a class=\"text-link text-link--white\" href=\"\"><i class=\"icon-remove-sign\"> </i> Clear embargo</a>\n                                </div>\n                                <div sd-toggle-box data-title=\"Publish schedule\" data-style=\"circle\" data-open=\"true\">\n                                    <div class=\"form__row form__row--flex  form__row--small-padding\">\n                                        <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                            <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                            <label for=\"publish-on\" class=\"sd-line-input__label\">Publish on</label>\n                                            <input id=\"publish-on\" class=\"sd-line-input__input\" type=\"text\">\n                                        </div>\n                                        <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                            <label for=\"publish-time\" class=\"sd-accessibility__btn-text--invisible\">Publish on - time</label>\n                                            <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                            <input id=\"publish-time\" class=\"sd-line-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                    <a class=\"text-link text-link--white\" href=\"\"><i class=\"icon-remove-sign\"> </i> Clear schedule</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer side-panel__footer--button-box-large\" ng-if=\"!tab || tab === 'send-to'\">\n                            <button class=\"btn btn--large btn--primary btn--expanded\">Send</button>\n                        </div>\n                        <div class=\"side-panel__footer side-panel__footer--button-box-large\" ng-if=\"tab === 'publish'\">\n                            <button class=\"btn btn--large btn--highlight btn--expanded\">Publish</button>\n                        </div>\n                    </div>  \n                </div>\n            </div>\n            <!-- END OVERLAY PANEL -->\n            <!-- END left content -->\n        </div>\n        <div class=\"sd-content-wrapper__content-splitter\" ng-if=\"editArticle\" sd-splitter=\"authoringContent\" splitter-max=\"1000\" splitter-min=\"650\"></div>\n        <div id=\"authoringContent\" class=\"sd-content-wrapper__authoring-content-area\" ng-include=\"'playgrounds/layout-snippets/edit-article.html'\" ng-if=\"editArticle\">\n\n        </div>\n    </section>\n    <footer class=\"bottom-bar\">\n        This is the optional footer.\n    </footer>\n</div>\n";

/***/ }),
/* 252 */
/***/ (function(module, exports) {

module.exports = "<header class=\"sd-top-menu\">\n    <a class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n    <p class=\"sd-top-menu__header\">Boxed list</p>\n</header>\n<main class=\"sd-page\" ng-init=\"darkTheme = false\" data-theme=\"{{darkTheme ? 'dark-ui' : 'light-ui'}}\">\n    <section class=\"sd-page__main-content\" ng-class=\"{'dark-ui': darkTheme == true}\">\n        <div class=\"subnav\" ng-class=\"{'subnav--dark-ui': darkTheme == true}\">\n            <h3 class=\"subnav__page-title\">Boxed list</h3>\n            <span class=\"label label--large label--warning label--no-transform sd-margin-r--2\">Work in progress!</span>\n            <span sd-tooltip=\"Dark mode\" flow=\"left\">\n                <span sd-switch ng-model=\"darkTheme\" class=\"sd-margin-r--2\"></span>\n            </span>\n        </div>\n        <div class=\"sd-page__content\">\n            \n            <div style=\"width: 70%; margin: 100px auto; max-width: 400px; padding: 20px;\" class=\"docs-page__code-window\">\n                <ul class=\"boxed-list\">\n                    <li class=\"boxed-list__item boxed-list__item--clickable\">\n                        <div class=\"boxed-list__item-media\">\n                            <figure class=\"avatar sd-margin--0 deep-orange--600\">vs</figure>\n                        </div>\n                        <div class=\"boxed-list__item-content\">\n                            <div class=\"boxed-list__item-content-row\">\n                                <span>Pellentesque ornare sem lacinia quam venenatis vestibulum. Maecenas faucibus mollis interdum.</span>\n                            </div>\n                        </div>\n                    </li>\n                    <li class=\"boxed-list__item boxed-list__item--success\">\n                        <div class=\"boxed-list__item-content\">\n                            <div class=\"boxed-list__item-content-row\">\n                                <span>Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Maecenas faucibus mollis interdum.</span>\n                            </div>\n                        </div>\n                        <div class=\"boxed-list__static-actions\">\n                            <button class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></button>\n                        </div>\n                    </li>\n                    <li class=\"boxed-list__item\">\n                        <div class=\"boxed-list__item-media\">\n                            <figure class=\"avatar sd-margin--0\">rb</figure>\n                        </div>\n                        <div class=\"boxed-list__item-content\">\n                            <div class=\"boxed-list__item-content-row\">\n                                <span>Pellentesque ornare sem lacinia quam venenatis vestibulum. Maecenas faucibus mollis interdum. Aenean eu leo quam. Donec ullamcorper nulla non metus auctor fringilla</span>\n                            </div>\n                        </div>\n                        <div class=\"boxed-list__item-footer\">\n                            <span>Pellentesque ornare sem lacinia quam venenatis vestibulum. Maecenas faucibus mollis interdum.</span>\n                        </div>\n                        <div class=\"boxed-list__static-actions\">\n                            <button class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></button>\n                        </div>\n                    </li>\n                    <li class=\"boxed-list__item boxed-list__item--warning\">\n                        <div class=\"boxed-list__item-content\">\n                            <div class=\"boxed-list__item-content-row\">\n                                <span>Pellentesque ornare sem lacinia quam venenatis vestibulum. Maecenas faucibus mollis interdum. Aenean eu leo quam.</span>\n                            </div>\n                            <div class=\"boxed-list__item-content-row\">\n                                <span>Maecenas faucibus mollis interdum.</span>\n                            </div>\n                        </div>\n                        <div class=\"boxed-list__slide-in-actions\">\n                            <button class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></button>\n                        </div>\n                    </li>\n                    <li class=\"boxed-list__item\">\n                        <div class=\"boxed-list__item-media\">\n                            <i class=\"icon-slideshow icon--2x\"></i>\n                        </div>\n                        <div class=\"boxed-list__item-content\">\n                            <div class=\"boxed-list__item-content-row\">\n                                <span class=\"sd-text__strong sd-overflow-ellipsis\">Pellentesque ornare lacinia</span>\n                                <span class=\"label label--success ml-auto\">success</span>\n                            </div>\n                            <div class=\"boxed-list__item-content-row\">\n                                <span>Pellentesque ornare sem lacinia quam venenatis vestibulum. Maecenas faucibus mollis interdum. Aenean eu leo quam.</span>\n                            </div>\n                        </div>\n                    </li>\n\n                    <li class=\"boxed-list__item boxed-list__item--selcted boxed-list__item--clickable\">\n                        <div class=\"boxed-list__item-media\">\n                            <figure class=\"avatar sd-margin--0 pink--600\">mm</figure>\n                        </div>\n                        <div class=\"boxed-list__item-content\">\n                            <div class=\"boxed-list__item-content-row boxed-list__item-content-row--fixed\">\n                                <span class=\"sd-text__strong sd-overflow-ellipsis\">Max Mustermann</span>\n                                <time class=\"sd-text__date-time sd-text__date-time--small ml-auto\">25.04.2019</time>\n                            </div>\n                            <div class=\"boxed-list__item-content-row\">\n                                <span>Pellentesque ornare sem lacinia quam venenatis vestibulum. Maecenas faucibus mollis interdum. Aenean eu leo quam.</span>\n                            </div>\n                        </div>\n                        <div class=\"boxed-list__static-actions\">\n                            <button class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></button>\n                        </div>\n                    </li>\n                    <li class=\"boxed-list__item boxed-list__item--clickable\">\n                        <div class=\"boxed-list__item-media\">\n                            <i class=\"icon-composite icon--2x\"></i>\n                        </div>\n                        <div class=\"boxed-list__item-content\">\n                            <div class=\"boxed-list__item-content-row\">\n                                <span class=\"sd-text__strong-s\">Pellentesque ornare sem lacinia quam venenatis vestibulum. Maecenas faucibus mollis interdum.</span>\n                            </div>\n                        </div>\n                        <div class=\"boxed-list__static-actions\">\n                            <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                        </div>\n                    </li>\n                    <li class=\"boxed-list__item\">\n                        <div class=\"boxed-list__item-media\">\n                            <figure class=\"avatar sd-margin--0 light-green--600\">jd</figure>\n                        </div>\n                        <div class=\"boxed-list__item-content\">\n                            <div class=\"boxed-list__item-content-row boxed-list__item-content-row--fixed\">\n                                <span class=\"sd-text__strong sd-overflow-ellipsis\">Jane Doe</span>\n                                <time class=\"sd-text__date-time sd-text__date-time--small ml-auto\">25.04.2019</time>\n                            </div>\n                            <div class=\"boxed-list__item-content-row\">\n                                <span>Pellentesque ornare sem lacinia quam venenatis vestibulum. Maecenas faucibus mollis interdum. Aenean eu leo quam.</span>\n                            </div>\n                        </div>\n                        <div class=\"boxed-list__static-actions\">\n                            <button class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></button>\n                        </div>\n                    </li>\n                    <li class=\"boxed-list__item\">\n                        <div class=\"boxed-list__item-content\">\n                            <div class=\"boxed-list__item-content-row boxed-list__item-content-row--fixed\">\n                                <time class=\"sd-text__date-time sd-text__date-time--small\">25.04.2019</time>\n                                <span class=\"ml-auto\">by Jane Doe</span>\n                            </div>\n                            <div class=\"boxed-list__item-content-row boxed-list__item-content-row--fixed\">\n                                <span class=\"sd-text__strong sd-overflow-ellipsis\">Pellentesque ornare sem lacinia quam venenatis vestibulum. Maecenas faucibus mollis interdum. Aenean eu leo quam.</span>\n                            </div>\n                            <div class=\"boxed-list__item-content-row\">\n                                <span><span class=\"sd-text__italic\">desk:</span> National</span> <span class=\"ml-auto\"><span class=\"sd-text__italic\">stage:</span> Working</span>\n                            </div>\n                        </div>\n                        <div class=\"boxed-list__item-footer\">\n                            <span class=\"sd-text__italic sd-padding-r--1\">version: 25</span> <span class=\"label label--yellow2 label--hollow\">in progress</span> <button class=\"btn btn--small btn--hollow ml-auto\">revert</button>\n                        </div>\n\n                    </li>\n                    <li class=\"boxed-list__item boxed-list__item--blank\">\n                        <div class=\"boxed-list__item-content boxed-list__item-content--centered\">\n                            <div class=\"panel-info\">\n                                <div class=\"panel-info__icon\">\n                                    <i class=\"big-icon--comments\"></i>\n                                </div>\n                                <h3 class=\"panel-info__heading\">No comments so far.</h3>\n                                <p class=\"panel-info__description\">Be the first one...</p>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </section>\n</main>\n\n\n";

/***/ }),
/* 253 */
/***/ (function(module, exports) {

module.exports = "<header class=\"sd-top-menu\">\n    <a class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n    <p class=\"sd-top-menu__header\">Cards</p>\n</header>\n<main class=\"sd-page\">\n    <section class=\"sd-page__main-content\">\n        <div class=\"sd-page__header sd-page__header--white\">\n            <h2 class=\"sd-page__page-heading\">Card options</h2>\n        </div>\n        <div class=\"sd-page__content\">\n\n            <!-- Flex grid -->\n            <div class=\"flex-grid flex-grid--boxed flex-grid--wrap-items flex-grid--small-6\">\n\n                <div class=\"sd-card flex-grid__item\">\n                    <div class=\"sd-card__header\">\n                        <div class=\"sd-card__heading\">Politic Desk</div>\n                        <a class=\"icn-btn sd-card__actions\"><i class=\"icon-dots-vertical\"></i></a>\n                    </div>\n                    <div class=\"sd-card__sub-header\">Working stage</div>\n                    <div class=\"sd-card__content\">\n                        Content here\n                    </div>\n                </div>\n\n                <div class=\"sd-card flex-grid__item\">\n                    <div class=\"sd-card__header\">\n                        <div class=\"sd-card__heading\">Sports Desk</div>\n                        <a class=\"icn-btn sd-card__actions\"><i class=\"icon-pencil\"></i></a>\n                    </div>\n                    <div class=\"sd-card__sub-header sd-card__sub-header--success\">Working stage</div>\n                    <div class=\"sd-card__content\">\n                        Content here\n                    </div>\n                </div>\n\n                <div class=\"sd-card flex-grid__item\">\n                    <div class=\"sd-card__header sd-card__header--white\">\n                        <div class=\"sd-card__heading\">Features Desk</div>\n                        <a class=\"icn-btn sd-card__actions\"><i class=\"icon-pencil\"></i></a>\n                    </div>\n                    <div class=\"sd-card__content\">\n                        Content here\n                    </div>\n                    <div class=\"sd-card__footer sd-card__footer--right-align\">\n                        <a class=\"icn-btn\"><i class=\"icon-pencil\"></i></a>\n                        <a class=\"icn-btn\"><i class=\"icon-trash\"></i></a>\n                        <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                    </div>\n                </div>\n\n                <div class=\"sd-card flex-grid__item\">\n                    <div class=\"sd-card__header sd-card__header--white\">\n                        <div class=\"sd-card__heading\">Finance Desk</div>\n                        <a class=\"icn-btn sd-card__actions\"><i class=\"icon-dots-vertical\"></i></a>\n                    </div>\n                    <div class=\"sd-card__sub-header\">Working stage</div>\n                    <div class=\"sd-card__content\">\n                        Content here\n                    </div>\n                </div>\n\n                <div class=\"sd-card flex-grid__item\">\n                    <div class=\"sd-card__header sd-card__header--white\">\n                        <div class=\"sd-card__heading\">Features Desk</div>\n                        <a class=\"icn-btn sd-card__actions\"><i class=\"icon-pencil\"></i></a>\n                    </div>\n                    <div class=\"sd-card__content\">\n                        Content here\n                    </div>\n                    <div class=\"sd-card__footer sd-card__footer--right-align\">\n                        <a class=\"icn-btn\"><i class=\"icon-pencil\"></i></a>\n                        <a class=\"icn-btn\"><i class=\"icon-trash\"></i></a>\n                        <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                    </div>\n                </div> \n\n                <div class=\"sd-card flex-grid__item\">\n                    <div class=\"sd-card__header\">\n                        <div class=\"sd-card__heading\">Entertainment Desk</div>\n                        <a class=\"icn-btn sd-card__actions\"><i class=\"icon-dots-vertical\"></i></a>\n                    </div>\n                    <div class=\"sd-card__content\">\n                        Content here\n                    </div>\n                    <div class=\"sd-card__footer sd-card__footer--right-align\">\n                        <a class=\"btn btn--primary\">Primary</a>\n                    </div>\n                </div>\n\n                <div class=\"sd-card flex-grid__item\">\n                    <div class=\"sd-card__header sd-card__header--with-thumb\">\n                        <div class=\"sd-card__thumbnail\">\n                            <img src=\"/image_01.jpg\" alt=\"test\">\n                        </div>\n                        <a class=\"icn-btn icn-btn--overlay sd-card__actions\"><i class=\"icon-pencil\"></i></a>\n                    </div>\n                    <div class=\"sd-card__content\">\n                        Content here\n\n                    </div>\n                    <div class=\"sd-card__footer sd-card__footer--spread\">\n                        <a class=\"icn-btn\"><i class=\"icon-pencil\"></i></a>\n                        <a class=\"icn-btn\"><i class=\"icon-trash\"></i></a>\n                        <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                    </div>\n                </div>\n\n                <div class=\"sd-card flex-grid__item\">\n                    <div class=\"sd-card__header sd-card__header--with-thumb\">\n                        <div class=\"sd-card__thumbnail\">\n                            <img src=\"/image_02.jpg\" alt=\"test\">\n                        </div>\n                        <a class=\"icn-btn icn-btn--overlay sd-card__actions\"><i class=\"icon-dots-vertical\"></i></a>\n                    </div>\n                    <div class=\"sd-card__content\">\n                        Content here\n\n                    </div>\n                    <div class=\"sd-card__footer sd-card__footer--spread\">\n                        <a class=\"btn btn--primary btn--hollow\">Previous</a>\n                        <a class=\"btn btn--primary\">Next</a>\n                    </div>\n                </div>\n\n                <div class=\"sd-card flex-grid__item\">\n                    <div class=\"sd-card__header sd-card__header--with-thumb\">\n                        <div class=\"sd-card__thumbnail\">\n                            <img src=\"/image_01.jpg\" alt=\"test\">\n                        </div>\n                        <div class=\"sd-card__heading\">Entertainment Desk</div>\n                        <a class=\"icn-btn icn-btn--overlay sd-card__actions\"><i class=\"icon-dots-vertical\"></i></a>\n                    </div>\n                    <div class=\"sd-card__content\">\n                        Content here\n                    </div>\n                    <div class=\"sd-card__footer sd-card__footer--right-align\">\n                        <a class=\"btn\">Cancel</a>\n                        <a class=\"btn btn--primary\">Save</a>\n                    </div>\n                </div>\n\n                <div class=\"sd-card flex-grid__item\">\n                    <div class=\"sd-card__header sd-card__header--with-thumb\">\n                        <div class=\"sd-card__thumbnail\" ng-hide=\"hideThumb\">\n                            <img src=\"/image_02.jpg\" alt=\"test\">\n                        </div>\n                        <div class=\"sd-card__heading\">Entertainment Desk</div>\n                        <a class=\"icn-btn icn-btn--overlay sd-card__actions\"><i class=\"icon-dots-vertical\"></i></a>\n                    </div>\n                    <div class=\"sd-card__content\">\n                        Content here\n                    </div>\n                    <div class=\"sd-card__footer sd-card__footer--right-align\">\n                        <a class=\"btn btn--primary btn--hollow\" ng-click=\"hideThumb = !hideThumb\">On the right</a>\n                    </div>\n                </div>\n                <div class=\"sd-card flex-grid__item\">\n                    <div class=\"sd-card__header sd-card__header--with-thumb\">\n                        <div class=\"sd-card__thumbnail\">\n                            <i class=\"sd-card__file-type-icn big-icon--document-pdf\"></i>\n                        </div>\n                        <a class=\"icn-btn sd-card__actions\"><i class=\"icon-dots-vertical\"></i></a>\n                    </div>\n                    <div class=\"sd-card__content\">\n                        Content here\n                    </div>\n                    <div class=\"sd-card__footer \">\n                        <a class=\"btn btn--primary btn--hollow\">On the left</a>\n                    </div>\n                </div>\n\n                <div class=\"sd-card flex-grid__item\">\n                    <div class=\"sd-card__header sd-card__header--with-thumb sd-card__header--light\">\n                        <div class=\"sd-card__thumbnail\">\n                            <i class=\"sd-card__file-type-icn big-icon--text\"></i>\n                        </div>\n                        <a class=\"icn-btn sd-card__actions\"><i class=\"icon-dots-vertical\"></i></a>\n                    </div>\n                    <div class=\"sd-card__content\">\n                        Content here\n                    </div>\n                    <div class=\"sd-card__footer sd-card__footer--spread\">\n                        <a class=\"btn btn--primary\">Spread</a>\n                        <a class=\"icn-btn\"><i class=\"icon-pencil\"></i></a>\n                        <a class=\"icn-btn\"><i class=\"icon-trash\"></i></a>\n                        <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <!-- End -->\n            <!-- Flex grid -->\n            <div class=\"flex-grid flex-grid--boxed flex-grid--wrap-items flex-grid--small-4\">\n                <div class=\"sd-card flex-grid__item\">\n                    <div class=\"sd-card__content\">\n                        <div class=\"sd-line-input sd-line-input--label-left-auto\">\n                            <label class=\"sd-line-input__label\">Headline</label>\n                            <input class=\"sd-line-input__input\" type=\"text\">\n                            <div class=\"sd-line-input__char-count\">00/90</div>\n                            <span class=\"sd-line-input__hint\">This is a hint text. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat.</span> \n                        </div>\n                    </div>\n                </div>\n                <div class=\"sd-card flex-grid__item\">\n                    <div class=\"sd-card__content\">\n                        <div class=\"sd-line-input sd-line-input--label-left-auto\">\n                            <label class=\"sd-line-input__label\">Headline</label>\n                            <input class=\"sd-line-input__input\" type=\"text\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"sd-card flex-grid__item\">\n                    <div class=\"sd-card__content\">\n                        <div class=\"form__row\">\n                            <div class=\"sd-line-input sd-line-input--label-left\">\n                                <label class=\"sd-line-input__label\">Headline</label>\n                                <input class=\"sd-line-input__input\" type=\"text\">\n                            </div>\n                        </div>\n                        <div class=\"form__row\">\n                            <div class=\"sd-line-input sd-line-input--label-left\">\n                                <label class=\"sd-line-input__label\">Slugline</label>\n                                <input class=\"sd-line-input__input\" type=\"text\">\n                            </div>\n                        </div>\n                        <div class=\"form__row\">\n                            <div class=\"sd-line-input sd-line-input--label-left\">\n                                <label class=\"sd-line-input__label\">Slugline</label>\n                                <input class=\"sd-line-input__input\" type=\"text\">\n                            </div>\n                        </div> \n                    </div>\n                </div>\n            </div>\n            <!-- End -->\n\n        </div>\n    </section>\n</main>";

/***/ }),
/* 254 */
/***/ (function(module, exports) {

module.exports = "<header class=\"sd-top-menu\">\n    <a class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n    <p class=\"sd-top-menu__header\">Cards</p>\n</header>\n<main class=\"sd-page\">\n    <section class=\"sd-page__main-content\" ng-class=\"{'dark-ui': darkUI}\">\n        <div class=\"subnav\" ng-class=\"{'subnav--dark-ui': darkUI}\">\n            <h3 class=\"subnav__page-title\">Circular Progress</h3>\n            <button class=\"navbtn\" ng-click=\"darkUI = !darkUI\">\n                <i class=\"icon-adjust\"></i>\n            </button>\n        </div>\n        <div class=\"sd-page__content\">\n            <div style=\"width: 450px; margin: 100px auto\">\n                <sd-line-input\n                    ng-model=\"value\"\n                    data-dark=\"dark\"\n                    data-boxed=\"boxed\"\n                    data-required=\"required\"\n                    data-label=\"{{'Title'}}\"\n                    data-disabled=\"disabled\"\n                    data-maxlength=\"26\">\n                </sd-line-input>\n\n                Value: {{value}} <br><br>\n                Disable: <sd-check ng-model=\"disabled\"></sd-check>\n                Dark <sd-check ng-model=\"dark\"></sd-check>\n                Boxed <sd-check ng-model=\"boxed\"></sd-check>\n                Required <sd-check ng-model=\"required\"></sd-check>\n            </div>\n\n            <div class=\"circular-progress-bar flex-grid flex-grid--boxed flex-grid--wrap-items\" style=\"width: 450px; margin: 100px auto\">\n                <div class=\"flex-grid__item\">\n                    <sd-circular-progress value=\"progressValue\" counter=\"progressCounter\" class=\"sd-circular-progress--l\" error=\"progressError\"\b></sd-circular-progress>\n                </div>\n                <div class=\"flex-grid__item\">\n                    <sd-line-input\n                        ng-model=\"progressValue\"\n                        data-label=\"{{'Progress'}}\">\n                    </sd-line-input>\n                    Show progress <sd-check ng-model=\"progressCounter\"></sd-check>\n                    Error <sd-check ng-model=\"progressError\"></sd-check>\n                </div>\n            </div>\n        </div>\n    </section>\n</main>\n\n";

/***/ }),
/* 255 */
/***/ (function(module, exports) {

module.exports = "<header class=\"sd-top-menu\">\n    <a class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n    <p class=\"sd-top-menu__header\">Forms</p>\n</header>\n<main class=\"sd-page\" ng-init=\"darkTheme = false\" data-theme=\"{{darkTheme ? 'dark-ui' : 'light-ui'}}\">\n    <section class=\"sd-page__main-content\" ng-class=\"{'dark-ui': darkTheme == true}\">\n        <div class=\"subnav\" ng-class=\"{'subnav--dark-ui': darkTheme == true}\">\n            <h3 class=\"subnav__page-title\">Form layout</h3>\n            <span class=\"label label--large label--warning label--no-transform sd-margin-r--2\">Work in progress!</span>\n            <span sd-tooltip=\"Dark mode\" flow=\"left\">\n                <span sd-switch ng-model=\"darkTheme\" class=\"sd-margin-r--2\"></span>\n            </span>\n        </div>\n        <div class=\"sd-page__content\">\n            \n            <div style=\"width: 70%; margin: 100px auto; max-width: 900px;\" class=\"docs-page__code-window\">\n\n                <div class=\"sd-form-element\" style=\"padding: 30px;\" data-theme=\"{{darkTheme ? 'dark-ui' : 'ligh-ui'}}\">\n                    <div class=\"form__item\">\n                        <div class=\"sd-input\">\n                            <label class=\"sd-input__label\">input field label 1</label>\n                            <input class=\"sd-input__input\" type=\"text\">\n                            <div class=\"sd-input__char-count\">00/90</div>\n                            <div class=\"sd-input__message-box\">\n                                <div class=\"sd-input__hint\">Hendrerit in vulputate.</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form__group\">\n                        <div class=\"form__item\">\n                            <div class=\"sd-input\">\n                                <label class=\"sd-input__label\">input field label 1</label>\n                                <input class=\"sd-input__input\" type=\"text\">\n                                <div class=\"sd-input__char-count\">00/90</div>\n                                <div class=\"sd-input__message-box\">\n                                    <div class=\"sd-input__hint\">Hendrerit in vulputate.</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form__item\">\n                            <div class=\"sd-input sd-input--invalid\">\n                                <label class=\"sd-input__label\">label 2</label>\n                                <input class=\"sd-input__input\" type=\"text\">\n                                <div class=\"sd-input__message-box\">\n                                    <div class=\"sd-input__message\">Error hendrerit in vulputate.</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form__item\">\n                            <div class=\"sd-input sd-input--disabled\">\n                                <label class=\"sd-input__label\">input label 3</label>\n                                <input class=\"sd-input__input\" type=\"text\" disabled>\n                                <div class=\"sd-input__char-count\">00/90</div>\n                                <div class=\"sd-input__message-box\">\n                                    <div class=\"sd-input__hint\">Hendrerit in vulputate.</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form__group\">\n                        <div class=\"form__item\">\n                            <div class=\"sd-input\">\n                                <label class=\"sd-input__label\">input field label 1</label>\n                                <input class=\"sd-input__input\" type=\"text\">\n                                <div class=\"sd-input__char-count\">00/90</div>\n                                <div class=\"sd-input__message-box\">\n                                    <div class=\"sd-input__hint\">Hendrerit in vulputate.</div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form__item\">\n                            <div class=\"sd-input sd-input--required \">\n                                <label class=\"sd-input__label\">input label 3</label>\n                                <input class=\"sd-input__input\" type=\"text\">\n                                <div class=\"sd-input__char-count\">00/90</div>\n                                <div class=\"sd-input__message-box\">\n                                    <div class=\"sd-input__hint\">Integer posuere erat a ante venenatis.</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form__group\">\n                        <div class=\"form__item form__item--auto-width\">\n                            <div class=\"form__text-block\">\n                                Morbi:\n                            </div>\n                        </div>\n\n                        <div class=\"form__item\">\n                            <div class=\"sd-input\">\n                                <label class=\"sd-input__label\">Label</label>\n                                <input class=\"sd-input__input\" type=\"text\">\n                                <div class=\"sd-input__char-count\">00/90</div>\n                                <div class=\"sd-input__message-box\">\n                                    <div class=\"sd-input__hint\">Nulla vitae elit libero, a pharetra augue.</div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form__item form__item--auto-width\">\n                            <div class=\"form__text-block\">\n                                Risus:\n                            </div>\n                        </div>\n\n                        <div class=\"form__item\">\n                            <div class=\"sd-input\">\n                                <label class=\"sd-input__label\">Label</label>\n                                <input class=\"sd-input__input\" type=\"text\">\n                                <div class=\"sd-input__message-box\">\n                                    <div class=\"sd-input__hint\">Pellentesque ornare sem lacinia quam venenatis vestibulum.</div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form__item form__item--auto-width\">\n                            <a class=\"btn btn--primary\">Primary</a>\n                        </div>\n\n                    </div>\n\n                    <div class=\"form__group\">\n                        <div class=\"form__item\">\n                            <div class=\"sd-input sd-input--is-select \">\n                                <label class=\"sd-input__label\">City</label>\n                                <select class=\"sd-input__select\" type=\"text\">\n                                    <option value=\"\">Select your city</option>\n                                    <option value=\"prague\">Prague</option>\n                                    <option value=\"belgrade\">Belgrade</option>\n                                    <option value=\"berlin\">Berlin</option>\n                                </select>\n                                <div class=\"sd-input__message-box\">\n                                    <div class=\"sd-input__hint\">Nulla vitae elit libero, a pharetra augue.</div>\n                                </div>\n                            </div>\n                        </div>\n\n\n                        <div class=\"form__item\">\n                            <div class=\"sd-input\">\n                                <label class=\"sd-input__label\">Label</label>\n                                <input class=\"sd-input__input\" type=\"text\">\n                                <div class=\"sd-input__message-box\">\n                                    <div class=\"sd-input__hint\">Pellentesque ornare sem lacinia quam venenatis vestibulum.</div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form__item form__item--auto-width\">\n                            <a class=\"btn btn--primary\">Primary</a>\n                        </div>\n                    </div>\n\n                    <div class=\"form__group form__group--inline-label\">\n                        <div class=\"form__item\">\n                            <div class=\"sd-input\">\n                                <label class=\"sd-input__label\">Label</label>\n                                <input class=\"sd-input__input\" type=\"text\">\n                                <div class=\"sd-input__char-count\">00/90</div>\n                                <div class=\"sd-input__message-box\"></div>\n                            </div>\n                        </div>\n\n\n                        <div class=\"form__item\">\n                            <div class=\"sd-input\">\n                                <label class=\"sd-input__label\">Label</label>\n                                <input class=\"sd-input__input\" type=\"text\">\n                                <div class=\"sd-input__message-box\"></div>\n                            </div>\n                        </div>\n\n                        <div class=\"form__item form__item--auto-width\">\n                            <a class=\"btn btn--primary\">Primary</a>\n                        </div>\n                    </div>\n\n                    <div class=\"form__group form__group--inline-label\">\n                        <div class=\"form__item\">\n                            <div class=\"sd-check__group-new \">\n                                <span class=\"sd-check-new__wrapper\">\n                                    <span class=\"sd-check-new\"></span>\n                                    <label>Checkbox label right</label>\n                                </span>\n                                <span class=\"sd-check-new__wrapper\">\n                                    <span class=\"sd-check-new checked\" checked=\"checked\"></span>\n                                    <label class=\"label--active\">Checkbox label right</label>\n                                </span>\n                                <span class=\"sd-check-new__wrapper\">\n                                    <span class=\"sd-check-new\"></span>\n                                    <label>Checkbox label right</label>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form__group form__group--inline-label\">\n                        <div class=\"form__item\">\n                            <div class=\"sd-check__group-new sd-check__group-new--vertical\">\n                                <span class=\"sd-check-new__wrapper\">\n                                    <span class=\"sd-radio-new\"></span>\n                                    <label>Radio label</label>\n                                </span>\n                                <span class=\"sd-check-new__wrapper\">\n                                    <span class=\"sd-radio-new checked\" checked=\"checked\"></span>\n                                    <label class=\"label--active\">Radio label</label>\n                                </span>\n                                <span class=\"sd-check-new__wrapper\">\n                                    <span class=\"sd-radio-new\"></span>\n                                    <label>Radio label</label>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form__group form__group--inline-label\">\n                        <div class=\"form__item\">\n                            <span class=\"sd-check-new__wrapper\" label-position=\"left\">\n                                <label for=\"\">Checkbox label right</label>\n                                <span class=\"sd-check-new\"></span>\n                            </span>\n                        </div>\n                    </div>\n\n                    <div class=\"form__group form__group--inline-label\">\n                        <div class=\"sd-check-button__group sd-check-button__group--left docs-page__test-helper\">\n                            <span class=\"sd-check-button\">\n                                <label class=\"sd-check-button__text-label\">Check Button</label>\n                            </span>\n                            <span class=\"sd-check-button\">\n                                <label class=\"sd-check-button__text-label\">Check Button</label>\n                            </span>\n                        </div>\n\n                        <div class=\"sd-check-button__group sd-check-button__group--center docs-page__test-helper\">\n                            <span class=\"sd-check-button\">\n                                <label class=\"sd-check-button__text-label\">Check</label>\n                            </span>\n                            <span class=\"sd-check-button\">\n                                <label class=\"sd-check-button__text-label\">Button</label>\n                            </span>\n                        </div>\n\n                        <div class=\"sd-check-button__group sd-check-button__group--right docs-page__test-helper\">\n                            <span class=\"sd-check-button\">\n                                <label class=\"sd-check-button__text-label\">Check Button</label>\n                            </span>\n                            <span class=\"sd-check-button\">\n                                <label class=\"sd-check-button__text-label\">Check Button</label>\n                            </span>\n                        </div>\n                    </div>\n\n                    <div class=\"form__group form__group--inline-label sd-margin-y--3\" >\n                        <div class=\"sd-check-button__group sd-check-button__group--grid docs-page__test-helper\" style=\"max-width:400px\">\n                            <span class=\"sd-check-button checked\">\n                                <i class=\"icon-th-list\"></i>\n                                <label class=\"sd-check-button__text-label\">Button one</label>\n                            </span>\n                            <span class=\"sd-check-button\">\n                                <i class=\"icon-th\"></i>\n                                <label class=\"sd-check-button__text-label\">Button two</label>\n                            </span>\n                            <span class=\"sd-check-button checked\">\n                                <i class=\"icon-th-large\"></i>\n                                <label class=\"sd-check-button__text-label\">SD Check Button</label>\n                            </span>\n                            <span class=\"sd-check-button\">\n                                <i class=\"icon-kanban-view\"></i>\n                                <label class=\"sd-check-button__text-label\">Button three</label>\n                            </span>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </section>\n</main>";

/***/ }),
/* 256 */
/***/ (function(module, exports) {

module.exports = "<div style=\"height:100vh; background: #f8f8f8;\">\n    <div class=\"docs-page__code-example\">\n        <h3 class=\"docs-page__h3\">Default Layout grid (not responsive)</h3>\n        <div class=\"grid\">\n            <div class=\"grid__item grid__item--col-6\">col-6</div>\n            <div class=\"grid__item grid__item--col-6\">col-6</div>\n        </div>\n        <div class=\"grid\">\n            <div class=\"grid__item grid__item--col-4\">col-4</div>\n            <div class=\"grid__item grid__item--col-4\">col-4</div>\n            <div class=\"grid__item grid__item--col-4\">col-4</div>\n        </div>\n        <div class=\"grid\">\n            <div class=\"grid__item grid__item--col-2\">col-2</div>\n            <div class=\"grid__item grid__item--col-8\">col-8</div>\n            <div class=\"grid__item grid__item--col-2\">col-2</div>\n        </div>\n        <div class=\"grid\">\n            <div class=\"grid__item grid__item--col-3\">col-3</div>\n            <div class=\"grid__item grid__item--col-6\">col-6</div>\n            <div class=\"grid__item grid__item--col-3\">col-3</div>\n        </div>\n        <div class=\"grid\">\n            <div class=\"grid__item grid__item--col-3\">col-3</div>\n            <div class=\"grid__item grid__item--col-3\">col-3</div>\n            <div class=\"grid__item grid__item--col-3\">col-3</div>\n            <div class=\"grid__item grid__item--col-3\">col-3</div>\n        </div>\n        <div class=\"grid\">\n            <div class=\"grid__item grid__item--col-2\">col-2</div>\n            <div class=\"grid__item grid__item--col-4\">col-4</div>\n            <div class=\"grid__item grid__item--col-4\">col-4</div>\n            <div class=\"grid__item grid__item--col-2\">col-2</div>\n        </div>\n       \n    </div>\n    <div class=\"docs-page__code-example\">\n        <h3 class=\"docs-page__h3\">Responsive Layout grid</h3>\n        <div class=\"grid\">\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n        </div>\n    </div>\n    <div style=\"padding: 20px;\">\n        <h3 class=\"docs-page__h3\">Responsive Layout grid boxed</h3>\n        <div class=\"grid grid--boxed\">\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-4 gi-large-3 gi-xlarge-2 gi-xxlarge-1\">xsmall-12 small-6 medium-4 large-3 xlarge-2 xxlarge-1</div>\n        </div>\n    </div>\n    <div style=\"padding: 20px;\"> \n        <h3 class=\"docs-page__h3\">Responsive Layout grid boxed styled</h3>\n        <div class=\"grid grid--boxed grid--boxed-styled\">\n            <div class=\"grid__item gi-xsmall-12 gi-small-3 gi-medium-4 gi-large-1 gi-xlarge-3 gi-xxlarge-4\">xsmall-12 small-3 medium-4 large-1 xlarge-3 xxlarge-4</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-6 gi-medium-8 gi-large-10 gi-xlarge-3 gi-xxlarge-4\">xsmall-12 small-6 medium-8 large-10 xlarge-3 xxlarge-4</div>\n            <div class=\"grid__item gi-xsmall-12 gi-small-3 gi-medium-4 gi-large-1 gi-xlarge-6 gi-xxlarge-4\">xsmall-12 small-3 medium-4 large-1 xlarge-6 xxlarge-4</div>\n        </div>\n    </div>\n</div>\n";

/***/ }),
/* 257 */
/***/ (function(module, exports) {

module.exports = "<div class=\"sd-authoring-page\">\n    <div class=\"sd-authoring-page__header\">\n        <div class=\"subnav subnav--darker\">\n            <div class=\"subnav__stretch-bar\">\n                <figure class=\"avatar\">VS</figure>\n            </div>\n            <div class=\"subnav__stretch-bar subnav__stretch-bar--right\">\n                <button class=\"btn\" ng-click=\"$parent.editArticle = false\">Cancel</button>\n                <button class=\"btn btn--primary\">Save</button>\n\n            </div>\n            <button class=\"navbtn\" ng-click=\"editorOpen = !editorOpen\">\n                <i class=\"big-icon--minimize\"></i>\n            </button>\n            <button class=\"navbtn\">\n                <i class=\"icon-dots-vertical\"></i>\n            </button>\n            <button class=\"navbtn navbtn--highlighted\" ng-click=\"publishPaneOpen = !publishPaneOpen\">\n                <i class=\"big-icon--send-to\"></i>\n            </button>\n        </div>\n    </div>\n    <div class=\"sd-authoring-page__main-container\">\n        <div class=\"sd-overlay-panel-2 sd-overlay-panel-2--right\" ng-class=\"{'sd-overlay-panel-2--open' : openOverlayPanel}\">\n            <div class=\"side-panel\">\n                <div class=\"side-panel__header side-panel__header--border-b\">\n                    <a class=\"icn-btn side-panel__close\" sd-tooltip=\"Close panel\" flow=\"left\" ng-click=\"openOverlayPanel = false; sidetabItemActive1 = false\"><i class=\"icon-close-small\"></i></a>\n                    <h3 class=\"side-panel__heading\">Metadata</h3>\n                </div>\n                <div class=\"side-panel__content\">\n                    <div class=\"side-panel__content-block\">\n                        <ul class=\"simple-list simple-list--dotted simple-list--no-padding simple-list--no-border-t\">\n                            <li class=\"simple-list__item simple-list__item--flex\">\n                                <label class=\"simple-list__item-label\" translate>Not For Publication</label>\n                                <span class=\"simple-list__item-data\"><span sd-switch ng-model=\"AB\"></span></span>\n                            </li>\n                            <li class=\"simple-list__item simple-list__item--flex\">\n                                <label class=\"simple-list__item-label\" translate>Legal</label>\n                                <span class=\"simple-list__item-data\"><span sd-switch ng-model=\"CD\"></span></span>\n                            </li>\n                            <li class=\"simple-list__item simple-list__item--flex\">\n                                <label class=\"simple-list__item-label\" translate>Usage terms</label>\n                                <span class=\"simple-list__item-data\">Usable</span>\n                            </li>\n                            <li class=\"simple-list__item simple-list__item--flex\">\n                                <label class=\"simple-list__item-label\" translate>Language</label>\n                                <span class=\"simple-list__item-data\">English</span>\n                            </li>\n                            <li class=\"simple-list__item simple-list__item--flex\">\n                                <label class=\"simple-list__item-label\" translate>State</label>\n                                <span class=\"simple-list__item-data\"><span class=\"label label--yellow2 label--hollow\">in progress</span></span>\n                            </li>\n                            <li class=\"simple-list__item simple-list__item--stacked\">\n                                <label class=\"simple-list__item-label\" translate>Original ID</label>\n                                <span class=\"simple-list__item-data\">\n                                    urn:newsml:sd-master.test.superdesk.org:2018-09-11T13:35:11.987809:95622899-45f1-4b7f-9035-b072c8058377\n                                </span>\n                            </li>\n                            <li class=\"simple-list__item simple-list__item--stacked\">\n                                <label class=\"simple-list__item-label\" translate>GUID</label>\n                                <span class=\"simple-list__item-data\">\n                                    urn:newsml:sd-master.test.superdesk.org:2019-01-30T18:13:44.871564:0fc22cc1-3f72-48b8-9228-78cc73b6d606\n                                </span>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <!-- <div class=\"side-panel__footer side-panel__footer--button-box-large\">\n                    <button class=\"btn btn--primary btn--expanded btn--hollow\">Some action</button>\n                </div> -->\n            </div>\n        </div>\n        <div class=\"sd-overlay-panel-2 sd-overlay-panel-2--right\" ng-class=\"{'sd-overlay-panel-2--open' : openOverlayPanel2}\">\n            <div class=\"side-panel\">\n                <div class=\"side-panel__header side-panel__header--border-b\">\n                    <a class=\"icn-btn side-panel__close\" sd-tooltip=\"Close panel\" flow=\"left\" ng-click=\"openOverlayPanel2 = false; sidetabItemActive2 = false\"><i class=\"icon-close-small\"></i></a>\n                    <h3 class=\"side-panel__heading\">Find and Replace</h3>\n                </div>\n                <div class=\"side-panel__content\">\n                    <div class=\"side-panel__content-block\">\n                        test\n\n                    </div>\n                </div>\n                <!-- <div class=\"side-panel__footer side-panel__footer--button-box-large\">\n                    <button class=\"btn btn--primary btn--expanded btn--hollow\">Some action</button>\n                </div> -->\n            </div>\n        </div>\n        <div class=\"sd-overlay-panel-2 sd-overlay-panel-2--right\" ng-class=\"{'sd-overlay-panel-2--open' : openOverlayPanel3}\">\n            <div class=\"side-panel\">\n                <div class=\"side-panel__header side-panel__header--border-b\">\n                    <a class=\"icn-btn side-panel__close\" sd-tooltip=\"Close panel\" flow=\"left\" ng-click=\"openOverlayPanel3 = false; sidetabItemActive3 = false\"><i class=\"icon-close-small\"></i></a>\n                    <h3 class=\"side-panel__heading\">Chat</h3>\n                </div>\n                <div class=\"side-panel__content\">\n                    <div class=\"side-panel__content-block content-state--empty\">\n                        <div class=\"content-state__empty-info\">\n                            <figure class=\"content-state__image-l content-state__image-l--01\">\n                            </figure>\n                            <h3 class=\"content-state__heading\">No comments so far</h3>\n                            <p class=\"content-state__description\">Praesent commodo cursus magna, vel scelerisque nisl consectetur et.</p>\n                            <div class=\"content-state__action\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"sd-authoring-page__side-tabs sd-sidetab-menu sd-sidetab-menu--right sd-sidetab-menu--static\">\n        <ul>\n            <li sd-tooltip=\"Info\" flow=\"left\">\n                <a class=\"sd-sidetab-menu__btn\" ng-click=\"sidetabItemActive1=!sidetabItemActive1; openOverlayPanel=!openOverlayPanel; openOverlayPanel2=false; openOverlayPanel3=false; sidetabItemActive2=false; sidetabItemActive3=false\" ng-class=\"{'sd-sidetab-menu__btn--active': sidetabItemActive1}\">\n                    <i class=\"sd-sidetab-menu__main-icon big-icon--info\"></i>\n                    <i class=\"sd-sidetab-menu__helper-icon icon-close-small\"></i>\n                </a>\n            </li>\n            <li sd-tooltip=\"Find & Replace\" flow=\"left\">\n                <a class=\"sd-sidetab-menu__btn\" ng-click=\"sidetabItemActive2=!sidetabItemActive2; openOverlayPanel2=!openOverlayPanel2; openOverlayPanel=false; openOverlayPanel3=false; sidetabItemActive1=false; sidetabItemActive3=false\" ng-class=\"{'sd-sidetab-menu__btn--active': sidetabItemActive2}\">\n                    <i class=\"sd-sidetab-menu__main-icon big-icon--find-replace\"></i>\n                    <i class=\"sd-sidetab-menu__helper-icon icon-close-small\"></i>\n                </a>\n            </li>\n            <li sd-tooltip=\"Comments\" flow=\"left\">\n                <a class=\"sd-sidetab-menu__btn\" ng-click=\"sidetabItemActive3=!sidetabItemActive3; openOverlayPanel3=!openOverlayPanel3; openOverlayPanel=false; openOverlayPanel2=false; sidetabItemActive1=false; sidetabItemActive2=false\" ng-class=\"{'sd-sidetab-menu__btn--active': sidetabItemActive3}\">\n                    <i class=\"sd-sidetab-menu__main-icon big-icon--chat\"></i>\n                    <i class=\"sd-sidetab-menu__helper-icon icon-close-small\"></i>\n                </a>\n            </li>\n            <li sd-tooltip=\"Versions / History\" flow=\"left\">\n                <a class=\"sd-sidetab-menu__btn\" ng-click=\"sidetabItemActive4=!sidetabItemActive4\" ng-class=\"{'sd-sidetab-menu__btn--active': sidetabItemActive4}\">\n                    <i class=\"sd-sidetab-menu__main-icon big-icon--history\"></i>\n                    <i class=\"sd-sidetab-menu__helper-icon icon-close-small\"></i>\n                </a>\n            </li>\n            <li sd-tooltip=\"Macros\" flow=\"left\">\n                <a class=\"sd-sidetab-menu__btn\" ng-click=\"sidetabItemActive5=!sidetabItemActive5\" ng-class=\"{'sd-sidetab-menu__btn--active': sidetabItemActive5}\">\n                    <i class=\"sd-sidetab-menu__main-icon big-icon--macro\"></i>\n                    <i class=\"sd-sidetab-menu__helper-icon icon-close-small\"></i>\n                </a>\n            </li>\n            <li sd-tooltip=\"Macros\" flow=\"left\">\n                <a class=\"sd-sidetab-menu__btn\" ng-click=\"sidetabItemActive6=!sidetabItemActive6\" ng-class=\"{'sd-sidetab-menu__btn--active': sidetabItemActive6}\">\n                    <span class=\"sd-sidetab-menu__info-label badge badge--success\">3</span>\n                    <i class=\"sd-sidetab-menu__main-icon big-icon--comments\"></i>\n                    <i class=\"sd-sidetab-menu__helper-icon icon-close-small\"></i>\n                </a>\n            </li>\n        </ul>\n    </div>\n    <div class=\"sd-authoring-page__publish-container\">\n        <!-- Publish pane -->\n        <div class=\"sd-overlay-panel sd-overlay-panel--dark-ui\" ng-class=\"{'sd-overlay-panel--open' : publishPaneOpen, 'sd-overlay-panel--large': tab === 'publish'}\">\n            <div class=\"side-panel side-panel--shadow-right side-panel--dark-ui\">\n                <div class=\"side-panel__header\">\n                    <div class=\"side-panel__tools\">\n                        <a class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen\"><i class=\"icon-close-small\"></i></a>\n                    </div>\n                    <ul class=\"nav-tabs nav-tabs--big nav-tabs--ui-dark\">\n                        <li ng-class=\"{'nav-tabs__tab--active': !tab || tab === 'send-to'}\" class=\"nav-tabs__tab\">\n                            <button ng-click=\"tab = 'send-to'\" class=\"nav-tabs__link\"><span translate=\"\">Send to</span></button>\n                        </li>\n                        <li ng-class=\"{'nav-tabs__tab--active': tab === 'publish'}\" class=\"nav-tabs__tab\">\n                            <button ng-click=\"tab = 'publish'\" class=\"nav-tabs__link\"><span translate=\"\">Publish</span></button>\n                        </li>\n                    </ul>\n                </div>\n                <!-- Send To Tab -->\n                <div class=\"side-panel__content\" ng-if=\"!tab || tab === 'send-to'\">\n                    <div class=\"side-panel__content-block\">\n                        <div sd-toggle-box data-title=\"Destination\" data-style=\"circle\" data-open=\"true\">\n                            <div class=\"form__row\">\n                                <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-label sd-line-input--no-margin\">\n                                    <select class=\"sd-line-input__select\">\n                                        <option value=\"single\">Politics desk</option>\n                                        <option value=\"time\">Sports desk</option>\n                                        <option value=\"bananas\">Features desk</option>\n                                        <option value=\"indefinite\">Photo desk</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"form__row form__row--no-padding\">\n                                <div class=\"flex-grid flex-grid--boxed-small flex-grid--wrap-items flex-grid--small-2\">\n                                    <button class=\"btn__check btn__check--active flex-grid__item\" disabled=\"disabled\">Active disabled</button>\n                                    <button class=\"btn__check flex-grid__item\" disabled=\"disabled\">Disabled</button>\n                                    <button ng-click=\"stageActive0 = !stageActive0\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive0}\">Incoming stage</button>\n                                    <button ng-click=\"stageActive1 = !stageActive1\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive1}\">Working stage</button>\n                                    <button ng-click=\"stageActive2 = !stageActive2\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive2}\">Revise stage</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div sd-toggle-box data-title=\"Embargo\" data-style=\"circle\" data-open=\"true\">\n                            <div class=\"form__row form__row--flex  form__row--small-padding\">\n                                <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                    <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                    <label class=\"sd-line-input__label\">Embargo till</label>\n                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                </div>\n                                <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                    <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                </div>\n                            </div>\n                            <a class=\"text-link text-link--white\" href=\"\"><i class=\"icon-remove-sign\"> </i> Clear embargo</a>\n                        </div>\n                        <div sd-toggle-box data-title=\"Publish schedule\" data-style=\"circle\" data-open=\"true\">\n                            <div class=\"form__row form__row--flex  form__row--small-padding\">\n                                <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                    <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                    <label class=\"sd-line-input__label\">Publish on</label>\n                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                </div>\n                                <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                    <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                </div>\n                            </div>\n                            <a class=\"text-link text-link--white\" href=\"\"><i class=\"icon-remove-sign\"> </i> Clear schedule</a>\n                        </div>\n                    </div>\n                </div>\n                <!-- Publish Tab -->\n                <div class=\"side-panel__content side-panel__content--split\" ng-if=\"tab === 'publish'\">\n                    <!-- LEFT pane -->\n                    <div class=\"side-panel__content-block side-panel__content-block--left\">\n                        <div sd-toggle-box data-title=\"Publish from\" data-style=\"circle\" data-open=\"true\">\n                            <div class=\"form__row\">\n                                <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-label sd-line-input--no-margin\">\n                                    <select class=\"sd-line-input__select\">\n                                        <option value=\"single\">Politics desk</option>\n                                        <option value=\"time\">Sports desk</option>\n                                        <option value=\"bananas\">Features desk</option>\n                                        <option value=\"indefinite\">Photo desk</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div sd-toggle-box data-title=\"Embargo\" data-style=\"circle\" data-open=\"true\">\n                                <div class=\"form__row form__row--flex  form__row--small-padding\">\n                                    <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                        <label class=\"sd-line-input__label\">Embargo till</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                    <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <a class=\"text-link text-link--white\" href=\"\"><i class=\"icon-remove-sign\"> </i> Clear embargo</a>\n                            </div>\n                            <div sd-toggle-box data-title=\"Publish schedule\" data-style=\"circle\" data-open=\"true\">\n                                <div class=\"form__row form__row--flex  form__row--small-padding\">\n                                    <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                        <label class=\"sd-line-input__label\">Publish on</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                    <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <a class=\"text-link text-link--white\" href=\"\"><i class=\"icon-remove-sign\"> </i> Clear schedule</a>\n                            </div>\n                    </div>\n                    <!-- RIGHT pane -->\n                    <div class=\"side-panel__content-block side-panel__content-block--right\">\n                        <div sd-toggle-box data-title=\"Web publishing\" data-style=\"circle\" data-open=\"true\">\n                            <!-- website 1 -->\n                            <div class=\"sd-collapse-box sd-shadow--z2\" ng-class=\"{'sd-collapse-box--open' : isOpen0}\">\n                                <div class=\"sd-collapse-box__header\" ng-click=\"isOpen0 = !isOpen0\">\n                                    <!-- list item  -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__text-strong\">www.sourcefabric.org</span></span>\n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-list-item__text-label\">Publish to:</span><span class=\"sd-overflow-ellipsis\">news</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <!-- END list item  -->\n                                </div>\n                                <div class=\"sd-collapse-box__content-wraper\">\n                                    <div class=\"sd-collapse-box__content\">\n                                        <div class=\"sd-collapse-box__sliding-toolbar-wrapper\" ng-show=\"!contentChanged0\">\n                                            <div class=\"sd-collapse-box__sliding-toolbar\">\n                                                <div class=\"sliding-toolbar__inner\"></div>\n                                                <a class=\"btn btn--hollow btn--ui-dark\" ng-click=\"contentChanged0 = true; isOpen0 = false\">Cancel</a>\n                                                <a class=\"btn btn--primary\" ng-click=\"contentChanged0 = true; isOpen0 = false\">Save</a>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-collapse-box__tools sd-collapse-box__tools--flex\">\n                                            <a class=\"sd-collapse-box__collapse-btn\" href=\"\" ng-click=\"isOpen0 = false\">\n                                                <span class=\"icn-btn\"><i class=\"icon-chevron-up-thin\"></i></span>\n                                            </a>\n                                            <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                                        </div>\n                                        <div class=\"sd-collapse-box__content-block sd-collapse-box__content-block--top\">\n                                            <div class=\"sd-list-item sd-list-item--no-bg sd-list-item--no-hover\">\n                                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                    <div class=\"sd-list-item__row\">\n                                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow sd-list-item__text-strong\">www.sourcefabric.org</span>\n                                                        <a class=\"icn-btn\" sd-tooltip=\"Preview\" flow=\"left\"><i class=\"icon-external\"></i></a>\n                                                    </div>\n                                                    <div class=\"sd-list-item__row\">\n                                                        <span class=\"sd-list-item__text-label sd-overflow-ellipsis\">Automatically:</span><span class=\"sd-overflow-ellipsis\">news</span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form__row\">\n                                            <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--no-margin\">\n                                                <label class=\"sd-line-input__label\">Route</label>\n                                                <select class=\"sd-line-input__select\">\n                                                    <option value=\"single\">News</option>\n                                                    <option value=\"time\">Politics</option>\n                                                    <option value=\"bananas\">Lifestyle</option>\n                                                    <option value=\"indefinite\">Culture</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div class=\"form__row\" ng-init=\"contentChanged0 = true\">\n                                            <sd-check ng-model=\"contentChanged0\" ng-checked=\"false\">Publish to facebook</sd-check>\n                                        </div>\n                                        <div class=\"form__row\">\n                                            <sd-check ng-model=\"dnp0\">Do not publish</sd-check>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <!-- website 2 -->\n                            <div class=\"sd-collapse-box sd-shadow--z2\" ng-class=\"{'sd-collapse-box--open' : isOpen1}\">\n                                <div class=\"sd-collapse-box__header\" ng-click=\"isOpen1 = !isOpen1\">\n                                    <!-- list item  -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__text-strong\">www.superdesk.org</span></span>\n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-list-item__text-label\">Publish to:</span><span class=\"sd-overflow-ellipsis\">news, facebook</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <!-- END list item  -->\n                                </div>\n                                <div class=\"sd-collapse-box__content-wraper\">\n                                    <div class=\"sd-collapse-box__content\">\n                                        <div class=\"sd-collapse-box__sliding-toolbar-wrapper\" ng-show=\"!contentChanged1\">\n                                            <div class=\"sd-collapse-box__sliding-toolbar\">\n                                                <div class=\"sliding-toolbar__inner\"></div>\n                                                <a class=\"btn btn--hollow btn--ui-dark\" ng-click=\"contentChanged1 = true; isOpen1 = false\">Cancel</a>\n                                                <a class=\"btn btn--primary\" ng-click=\"contentChanged1 = true; isOpen1 = false\">Save</a>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-collapse-box__tools sd-collapse-box__tools--flex\">\n                                            <a class=\"sd-collapse-box__collapse-btn\" href=\"\" ng-click=\"isOpen1 = false\">\n                                                <span class=\"icn-btn\"><i class=\"icon-chevron-up-thin\"></i></span>\n                                            </a>\n                                            <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                                        </div>\n                                        <div class=\"sd-collapse-box__content-block sd-collapse-box__content-block--top\">\n                                            <div class=\"sd-list-item sd-list-item--no-bg sd-list-item--no-hover\">\n                                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                    <div class=\"sd-list-item__row\">\n                                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow sd-list-item__text-strong\">www.superdesk.org</span>\n                                                        <a class=\"icn-btn\" sd-tooltip=\"Preview\" flow=\"left\"><i class=\"icon-external\"></i></a>\n                                                    </div>\n                                                    <div class=\"sd-list-item__row\">\n                                                        <span class=\"sd-list-item__text-label sd-overflow-ellipsis\">Automatically:</span><span class=\"sd-overflow-ellipsis\">news, facebook</span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form__row\">\n                                            <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--no-margin\">\n                                                <label class=\"sd-line-input__label\">Route</label>\n                                                <select class=\"sd-line-input__select\">\n                                                    <option value=\"single\">News</option>\n                                                    <option value=\"time\">Politics</option>\n                                                    <option value=\"bananas\">Lifestyle</option>\n                                                    <option value=\"indefinite\">Culture</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div class=\"form__row\">\n                                            <sd-check  ng-model=\"contentChanged1\" ng-checked=\"true\">Publish to facebook</sd-check>\n                                        </div>\n                                        <div class=\"form__row\">\n                                            <sd-check ng-model=\"dnp1\">Do not publish</sd-check>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"side-panel__footer side-panel__footer--button-box-large\" ng-if=\"!tab || tab === 'send-to'\">\n                    <button class=\"btn btn--large btn--primary btn--expanded\">Send</button>\n                </div>\n                <div class=\"side-panel__footer side-panel__footer--button-box-large\" ng-if=\"tab === 'publish'\">\n                    <button class=\"btn btn--large btn--highlight btn--expanded\">Publish</button>\n                </div>\n            </div>  \n        </div>\n        <!-- END Publish pane -->\n    </div>\n</div>\n\n\n";

/***/ }),
/* 258 */
/***/ (function(module, exports) {

module.exports = "<div class=\"sd-page-grid--test docs-page__full-width-helper\" doc-modal ng-init=\"openHamburger = false, darkUI = false\" data-theme=\"{{darkUI ? 'dark-ui' : 'light-ui'}}\">\n    <div class=\"sd-main-menu\" ng-class=\"{'sd-main-menu--open': openHamburger}\">\n        <div class=\"sd-main-menu__inner\">\n\n        </div>\n    </div>\n    <header class=\"sd-top-menu\">\n        <a href=\"\" ng-click=\"openHamburger = !openHamburger\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n        <p class=\"sd-top-menu__header\">National Desk // Layou test 2</p>\n    </header>\n    <section class=\"sd-content sd-content-wrapper\">\n        <div class=\"sd-sidebar-menu sd-content-wrapper__left-tabs\">\n            <ul class=\"authoring-active\">\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Monitoring\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\" ng-click=\"menuItemActive1 = !menuItemActive1\" ng-class=\"{'sd-sidebar-menu__btn--closed': menuItemActive1}\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--view\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Highlights\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--marked-star\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Spiked\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--spike\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Personal\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--personal\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Search\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--global-search\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Media archive\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--picture\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n            </ul>\n        </div>\n        <div id=\"leftContent\" sd-media-query min-width=\"880\" max-width=\"1100\" ng-init=\"darkUI = false; listView = true\" class=\"sd-content-wrapper__main-content-area sd-main-content-grid\" ng-class=\"{'dark-ui': darkUI}\">\n            <!-- TOOLBAR HEADER -->\n            <div class=\"sd-main-content-grid__header\">\n                <div class=\"subnav\" ng-class=\"{'subnav--dark-ui': darkUI}\">\n                    <div class=\"subnav__sliding-toolbar\" ng-show=\"select1 || select2 || select3 || select4 || select5 || select6 || select7 || select8 || select9 || select10 || select11 || select12 || select13 || select14 || select15 || select16 || select17 || select18 || select19 || select20 || select21 || select22 || select23 || select24 || select25 || select26 || select27 || select28 || select29 || select30 || select31 || select32 || select33 || select34 || select35 || select36\">\n                        <div class=\"sliding-toolbar__inner\">\n                            <a class=\"btn\" ng-click=\"select1 = false; select2 = false; select3 = false; select4 = false; select5 = false; select6 = false; select7 = false; select8 = false\">Cancel</a>\n                            <span class=\"sliding-toolbar__info-text\">1 item selected</span>\n                        </div>\n                        <a class=\"btn btn--primary\" ng-click=\"openModal('imageModal'); multiEdit = true; select1 = false; select2 = false; select3 = false; select4 = false; select5 = false; select6 = false; select7 = false; select8 = false; select11 = true; select12 = true; select13 = true; select14 = true\">Edit metadata</a>\n                        <a class=\"btn btn--alert\"><i class=\"icon-trash\"></i>Delete</a>\n                    </div>\n                    <div class=\"dropdown\" dropdown=\"\">\n                        <button class=\"dropdown__toggle navbtn navbtn--text-only dropdown-toggle\" dropdown-toggle=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">Monitoring<span class=\"dropdown__caret\"></span></button>\n                        <ul class=\"dropdown__menu scrollable\" style=\"\">\n                            <li><div class=\"dropdown__menu-label ng-binding\">Monitoring</div></li>\n                            <li><button>Incoming stage</button></li>\n                            <li><button>Working stage</button></li>\n                            <li><button>Output stage</button></li>\n                        </ul>\n                    </div>\n                    <div class=\"subnav__spacer subnav__spacer--no-margin\"></div>\n                    <div class=\"sd-searchbar\" ng-class=\"{'sd-searchbar--focused': focused}\" >\n                        <label for=\"search-input\" class=\"sd-searchbar__icon\"></label>\n                        <input id=\"search-input\"\n                                class=\"sd-searchbar__input\"\n                                type=\"text\"\n                                placeholder=\"Search\"\n                                ng-keyup=\"searchOnEnter($event)\"\n                                ng-model=\"query\"\n                                tabindex=\"1\"\n                                ng-focus=\"focused = true\">\n                        <button class=\"sd-searchbar__cancel\" ng-if=\"query\">\n                            <i class=\"icon-remove-sign\"></i>\n                        </button>\n                        <button id=\"sd-searchbar__search-btn\" class=\"sd-searchbar__search-btn\" ng-if=\"focused\" tabindex=\"2\">\n                            <i class=\"big-icon--chevron-right\"></i>\n                        </button>\n                    </div>\n                    <div class=\"dropdown dropdown--align-right\" dropdown>\n                        <button class=\"dropdown__toggle navbtn sd-create-btn\" dropdown__toggle>\n                            <i class=\"icon-plus-large\"></i>\n                            <span class=\"circle\"></span>\n                        </button>\n                        <ul class=\"dropdown__menu\">\n                            <li>\n                                <div class=\"dropdown__menu-label\">Upload</div>\n                            </li>\n                            <li class=\"dropdown__menu-divider\"></li>\n                            <li>\n                                <button><i class=\"icon-plus-sign icon--blue\"></i>Image</button>\n                            </li>\n                            <li>\n                                <button><i class=\"icon-plus-sign icon--blue\"></i>Video</button>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div class=\"subnav\" ng-class=\"{'subnav--dark-ui': darkUI}\">\n                    <button class=\"navbtn navbtn--left navbtn--darker\" ng-click=\"leftFilterOpen = !leftFilterOpen\" ng-class=\"{'navbtn--active': leftFilterOpen}\">\n                        <i class=\"icon-filter-large\"></i>\n                    </button>\n                    <div class=\"subnav__stretch-bar\">\n                        <sd-check ng-model=\"planningType\" ng-value=\"all\" label-position=\"inside\" ng-checked=\"true\">all</sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"text\" label-position=\"inside\"><i class=\"icon-text\"></i></sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"photo\" label-position=\"inside\"><i class=\"icon-photo\"></i></sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"graphic\" label-position=\"inside\"><i class=\"icon-graphic\"></i></sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"composite\" label-position=\"inside\"><i class=\"icon-composite\"></i></sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"video\" label-position=\"inside\"><i class=\"icon-video\"></i></sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"audio\" label-position=\"inside\"><i class=\"icon-audio\"></i></sd-check>\n                    </div>\n                    <div class=\"subnav__spacer subnav__spacer--no-margin\"></div>\n                    <div class=\"subnav__content-bar\">\n                        <span>Total:</span> <span class=\"badge\" style=\"margin: 0 10px 0 6px;\">6432</span>\n                        <div class=\"dropdown dropdown--align-right\" dropdown>\n                            <button class=\"dropdown__toggle\" dropdown__toggle>\n                                Updated<span class=\"dropdown__caret\"></span>\n                            </button>\n                            <ul class=\"dropdown__menu\">\n                                <li><button>Updated</button></li>\n                                <li><button>Created</button></li>\n                                <li><button>Urgency</button></li>\n                                <li><button>Category</button></li>\n                                <li><button>Slugline</button></li>\n                                <li><button>Priority</button></li>\n                                <li><button>Genre</button></li>\n                            </ul>\n                        </div>\n                        <a class=\"icn-btn\" sd-tooltip=\"Descending\" flow=\"bottom\" ng-click=\"sortDesc = !sortDesc\" ng-hide=\"!sortDesc\"><i class=\"icon-descending\"></i></a>\n                        <a class=\"icn-btn\" sd-tooltip=\"Ascending\" flow=\"bottom\" ng-click=\"sortDesc = !sortDesc\" ng-show=\"!sortDesc\"><i class=\"icon-ascending\"></i></a>\n    \n                    </div>\n                    <button class=\"navbtn\" ng-click=\"darkUI = !darkUI\">\n                        <i class=\"icon-adjust\"></i>\n                    </button>\n                    <div class=\"dropdown dropdown--align-right\" dropdown>\n                        <button class=\"navbtn\" dropdown__toggle>\n                            <i class=\"icon-list-view\" ng-show=\"listView\"></i>\n                            <i class=\"icon-kanban-view\" ng-show=\"swimlaneView\"></i>\n                            <i class=\"icon-grid-view\" ng-show=\"gridView\"></i>\n                        </button>\n                        <ul class=\"dropdown__menu\">\n                            <li><button ng-click=\"listView = true; swimlaneView = false; gridView = false;\"><i class=\"icon-list-view\"></i> List View</button></li>\n                            <li><button ng-click=\"swimlaneView = true; listView = false; gridView = false;\"><i class=\"icon-kanban-view\"></i> Swimlane View</button></li>\n                            <li><button ng-click=\"gridView = true; swimlaneView = false; listView = false;\"><i class=\"icon-grid-view\"></i> Photo Grid view</button></li>\n    \n                        </ul>\n                    </div>\n                    <div class=\"dropdown dropdown--align-right\" dropdown>\n                        <button class=\"dropdown__toggle navbtn\" dropdown__toggle>\n                            <i class=\"icon-dots-vertical\"></i>\n                        </button>\n                        <ul class=\"dropdown__menu\">\n                            <li>\n                                <div class=\"dropdown__menu-label\">Actions</div>\n                            </li>\n                            <li class=\"dropdown__menu-divider\"></li>\n                            <li><button>Action 2</button></li>\n                            <li><button>Action 3</button></li>\n                            <li><button ng-click=\"editArticle = !editArticle\">Open editor</button></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <!-- FILTER PANEL -->\n            <div class=\"sd-main-content-grid__filter\" ng-class=\"{'open-filters': leftFilterOpen}\">\n                <div class=\"side-panel__container\">\n                    <div class=\"side-panel side-panel--shadow-left\">\n                        <div class=\"side-panel__header side-panel__header--border-b\">\n                            <a class=\"icn-btn side-panel__close\" sd-tooltip=\"Close filters\" flow=\"left\" ng-click=\"leftFilterOpen = !leftFilterOpen\"><i class=\"icon-close-small\"></i></a>\n                            <h3 class=\"side-panel__heading\">Advanced filters</h3>  \n                        </div>\n                        <div class=\"side-panel__content\">\n                            <div class=\"side-panel__content-block\">\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input\">\n                                            <label class=\"sd-input__label\">Title</label>\n                                            <input class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input sd-input--is-select\">\n                                            <label class=\"sd-input__label\">Source</label>\n                                            <select class=\"sd-input__select\">\n                                                <option value=\"\">Select ingest source...</option>\n                                                <option value=\"\">Associated Press</option>\n                                                <option value=\"\">Reuters</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input\">\n                                            <label class=\"sd-input__label\">Location</label>\n                                            <input class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input sd-input--with-button\">\n                                            <span class=\"sd-input__plus-btn\"></span>\n                                            <label class=\"sd-input__label\">Category</label>\n                                            <input class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input sd-input--with-button\">\n                                            <span class=\"sd-input__plus-btn\"></span>\n                                            <label class=\"sd-input__label\">Subject</label>\n                                            <input class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input sd-input--is-select \">\n                                            <label class=\"sd-input__label\">Usage right</label>\n                                            <select class=\"sd-input__select\">\n                                                <option value=\"\">--- Not selected ---</option>\n                                                <option value=\"single\">Single usage</option>\n                                                <option value=\"time\">Time restricted</option>\n                                                <option value=\"bananas\">Indefinite usage</option>\n                                                <option value=\"indefinite\">Pears</option>\n                                            </select>\n                                            <div class=\"sd-input__message-box\">\n                                                <span class=\"sd-input__hint\">Dolor in hendrerit.</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input\">\n                                            <a class=\"icn-btn sd-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                            <label class=\"sd-input__label\">From</label>\n                                            <input class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input\">\n                                            <a class=\"icn-btn sd-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                            <input class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input\">\n                                            <a class=\"icn-btn sd-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                            <label class=\"sd-input__label\">To</label>\n                                            <input class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input\">\n                                            <a class=\"icn-btn sd-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                            <input class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <sd-check ng-model=\"abc2\">Check me!</sd-check>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer side-panel__footer--button-box\">\n                            <div class=\"flex-grid flex-grid--boxed-small flex-grid--wrap-items flex-grid--small-2\">\n                                <a class=\"btn btn--hollow\">Clear</a>\n                                <a class=\"btn btn--primary\">Submit</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- MAIN CONTENT (Monitoring) -->\n            <div class=\"sd-main-content-grid__content sd-padding--2\">\n                <div class=\"sd-list-header\" ng-hide=\"swimlaneView\">\n                    <span class=\"sd-list-header__name\">Friday September 15, 2017</span>\n                </div>\n                <!-- List item view -->\n                <div class=\"sd-list-item-group sd-shadow--z2\" ng-show=\"listView\" ng-class=\"{'sd-list-item-group--dark-ui' : darkUI}\">\n                    <!-- list item  1 -->\n                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select1, 'sd-list-item--activated' : selectThis1}\">\n                        <div class=\"sd-list-item__border\"></div>\n                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select1}\">\n                            <div class=\"sd-list-item__checkbox-container\">\n                                <sd-check ng-model=\"select1\"></sd-check>\n                            </div>\n                            <span class=\"icn-mix sd-list-item__item-type\">\n                                <i class=\"icon-text\"></i>\n                            </span>\n                        </div>\n                        <div class=\"sd-list-item__column\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"badge badge--success\">1</span>\n                                <span class=\"badge badge--warning badge--square \">3</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</span>\n                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                            <button class=\"icn-btn\" ng-click=\"sendToOpen = !sendToOpen\">\n                                <i class=\"icon-expand-thin\"></i>\n                            </button>\n                            <button class=\"icn-btn\">\n                                <i class=\"icon-dots-vertical\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <!-- list item  2 -->\n                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select2}\">\n                        <div class=\"sd-list-item__border\"></div>\n                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select2}\">\n                            <div class=\"sd-list-item__checkbox-container\">\n                                <sd-check ng-model=\"select2\"></sd-check>\n                            </div>\n                            <span class=\"icn-mix sd-list-item__item-type\">\n                                <i class=\"icon-text\"></i>\n                            </span>\n                        </div>\n                        <div class=\"sd-list-item__column\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"badge badge--primary\">2</span>\n                                <span class=\"badge badge--alert badge--square\">4</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>In ac dui quis mi consectetuer lacinia. Aenean tellus metus, bibendum sed, posuere ac, mattis non, nunc.</span>\n                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__action-menu\">\n                            <button class=\"icn-btn\">\n                                <i class=\"icon-dots-vertical\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <!-- list item  3 -->\n                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select3}\">\n                        <div class=\"sd-list-item__border\"></div>\n                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select3}\">\n                            <div class=\"sd-list-item__checkbox-container\">\n                                <sd-check ng-model=\"select3\"></sd-check>\n                            </div>\n                            <span class=\"icn-mix sd-list-item__item-type\">\n                                <i class=\"icon-text\"></i>\n                            </span>\n                        </div>\n                        <div class=\"sd-list-item__column\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"badge badge--highlight\">3</span>\n                                <span class=\"badge badge--light badge--square\">&nbsp;</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae. Aenean tellus metus, bibendum sed...</span>\n                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__action-menu\">\n                            <button class=\"icn-btn\">\n                                <i class=\"icon-dots-vertical\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <!-- list item  4 -->\n                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select4}\">\n                        <div class=\"sd-list-item__border\"></div>\n                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select4}\">\n                            <div class=\"sd-list-item__checkbox-container\">\n                                <sd-check ng-model=\"select4\"></sd-check>\n                            </div>\n                            <span class=\"icn-mix sd-list-item__item-type\">\n                                <i class=\"icon-text\"></i>\n                            </span>\n                        </div>\n                        <div class=\"sd-list-item__column\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"badge badge--primary\">2</span>\n                                <span class=\"badge badge--warning badge--square\">3</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero.</span>\n                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__action-menu\">\n                            <button class=\"icn-btn\">\n                                <i class=\"icon-dots-vertical\"></i>\n                            </button>\n                        </div>\n                    </div>\n\n                    <!-- list item  5 -->\n                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select5}\">\n                        <div class=\"sd-list-item__border\"></div>\n                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select5}\">\n                            <div class=\"sd-list-item__checkbox-container\">\n                                <sd-check ng-model=\"select5\"></sd-check>\n                            </div>\n                            <span class=\"icn-mix sd-list-item__item-type\">\n                                <i class=\"icon-text\"></i>\n                            </span>\n                        </div>\n                        <div class=\"sd-list-item__column\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"badge badge--light\">&nbsp;</span>\n                                <span class=\"badge badge--square\">5</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Pellentesque auctor neque nec urna. Vestibulum turpis sem, aliquet eget lobortis...</span>\n                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__action-menu\">\n                            <button class=\"icn-btn\">\n                                <i class=\"icon-dots-vertical\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <!-- list item  6 -->\n                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select6}\">\n                        <div class=\"sd-list-item__border\"></div>\n                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select6}\">\n                            <div class=\"sd-list-item__checkbox-container\">\n                                <sd-check ng-model=\"select6\"></sd-check>\n                            </div>\n                            <span class=\"icn-mix sd-list-item__item-type\">\n                                <i class=\"icon-photo\"></i>\n                            </span>\n                        </div>\n                        <div class=\"sd-list-item__column\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"badge badge--highlight\">3</span>\n                                <span class=\"badge badge--light badge--square\">&nbsp;</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Vestibulum turpis sem, aliquet eget lobortis...</span>\n                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__action-menu\">\n                            <button class=\"icn-btn\">\n                                <i class=\"icon-dots-vertical\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <!-- list item  7 -->\n                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select7}\">\n                        <div class=\"sd-list-item__border\"></div>\n                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select7}\">\n                            <div class=\"sd-list-item__checkbox-container\">\n                                <sd-check ng-model=\"select7\"></sd-check>\n                            </div>\n                            <span class=\"icn-mix sd-list-item__item-type\">\n                                <i class=\"icon-photo\"></i>\n                            </span>\n                        </div>\n                        <div class=\"sd-list-item__column\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"badge badge--success\">1</span>\n                                <span class=\"badge badge--highlight badge--square\">2</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Vivamus in erat ut urna cursus vestibulum. Sed consequat, leo eget bibendum sodales...</span>\n                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__action-menu\">\n                            <button class=\"icn-btn\">\n                                <i class=\"icon-dots-vertical\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <!-- list item  8 -->\n                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select8}\">\n                        <div class=\"sd-list-item__border\"></div>\n                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select8}\">\n                            <div class=\"sd-list-item__checkbox-container\">\n                                <sd-check ng-model=\"select8\"></sd-check>\n                            </div>\n                            <span class=\"icn-mix sd-list-item__item-type\">\n                                <i class=\"icon-text\"></i>\n                            </span>\n                        </div>\n                        <div class=\"sd-list-item__column\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"badge badge--primary\">2</span>\n                                <span class=\"badge badge--square\">5</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Mauris sollicitudin fermentum libero, vestibulum et, tempor auctor, justo...</span>\n                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__action-menu\">\n                            <button class=\"icn-btn\">\n                                <i class=\"icon-dots-vertical\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- PREVIEW PANEL -->\n            <div class=\"sd-main-content-grid__preview\"  ng-class=\"{'open-preview': leftPreviewOpen}\">\n                <div class=\"side-panel__container\">\n                    <div class=\"side-panel side-panel--bg-00 side-panel--shadow-right\" ng-class=\"{'side-panel--dark-ui' : darkUI}\">\n                        <div class=\"side-panel__header\">\n                            <div class=\"side-panel__tools\">\n                                <!-- <a class=\"icn-btn\" sd-tooltip=\"Edit details\" flow=\"top\" ng-click=\"editorOpen = true; leftPreviewOpen = false\"><i class=\"icon-pencil\"></i></a> -->\n                                <a class=\"icn-btn\" sd-tooltip=\"Close details\" flow=\"top\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\"><i class=\"icon-close-small\"></i></a>\n                            </div>\n                            <ul class=\"nav-tabs\" ng-class=\"{'nav-tabs--ui-dark' : darkUI}\">\n                                <li ng-class=\"{'nav-tabs__tab--active': !tab || tab === 'event-details'}\" class=\"nav-tabs__tab\">\n                                    <button ng-click=\"tab = 'event-details'\" class=\"nav-tabs__link\"><span translate=\"\">Content</span></button>\n                                </li>\n                                <li ng-class=\"{'nav-tabs__tab--active': tab === 'event-history'}\" class=\"nav-tabs__tab\">\n                                    <button ng-click=\"tab = 'event-history'\" class=\"nav-tabs__link\"><span translate=\"\">History</span></button>\n                                </li>\n                            </ul> \n                        </div>\n                        <div class=\"side-panel__content\" ng-if=\"!tab || tab === 'event-details'\">\n                            <div class=\"side-panel__content-block side-panel__content-block--pad-small side-panel__content-block--flex\">\n                                <div class=\"side-panel__content-block-inner side-panel__content-block-inner--grow\">\n                                    <p class=\"sd-text__date-and-author\"><time>Created 23.08.2017 by </time> <span class=\"sd-text__author\">Mika Karapet</span></p> \n                                    <p class=\"sd-text__date-and-author\"><time>Updated 3 hours ago by</time> <span class=\"sd-text__author\">John Doe</span></p>\n                                </div>\n                                <div class=\"side-panel__content-block-inner side-panel__content-block-inner--right\">\n                                    <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                                </div>\n                            </div>\n                            <div class=\"side-panel__content-block side-panel__content-block--image\">\n                                <a class=\"icn-btn side-panel__image-actions\" ng-click=\"openModal('imageModal')\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <img src=\"/d_trump.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"side-panel__content-block\">\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Slugline</label>\n                                    <p class=\"sd-text__slugline\">This is a slugline</p>\n                                </div>\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Description</label>\n                                    <p>Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</p>\n                                </div>\n\n                                <div sd-toggle-box data-title=\"Details\" data-style=\"circle\">\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Usage right</label>\n                                        <p>Single usage</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Category</label>\n                                        <p>Some category</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Subject</label>\n                                        <p>Arts, culture and entertainment, Music</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Long Description</label>\n                                        <p>Nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Internal Note</label>\n                                        <p>Lorem ipsum dolor sit amet, consetetur sadipscing.</p>\n                                    </div>\n                                </div>\n                                <h3 class=\"side-panel__heading side-panel__heading--big\" ng-hide=\"multiEdit\">Related items</h3>\n                                <div class=\"sd-grid-list sd-grid-list--small sd-grid-list--no-rl-margin\" ng-hide=\"multiEdit\">\n                                    <!-- related item 1 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/d_trump_2.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 2 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/bill.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 3 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/hillary.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 4 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/bush_1.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__content\" ng-if=\"tab === 'event-history'\">\n                            <div class=\"side-panel__content-block\">\n                                <ul class=\"simple-list simple-list--dotted simple-list--no-padding\">\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Created by</strong> Mika Karapet</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:10</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Coverage created by</strong> Vince Ryan</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:13</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Updated by</strong> Karel Petrak</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:13</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Coverage updated by</strong> John Doe</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:21</time>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer\">\n\n                        </div>\n                    </div>  \n                </div>\n            </div>\n            <!-- OVERLAY PANEL ( Send To ) -->\n            <div class=\"sd-main-content-grid__overlay\">\n                <div class=\"sd-overlay-panel sd-overlay-panel--dark-ui\" ng-class=\"{'sd-overlay-panel--open' : sendToOpen}\">\n                    <div class=\"side-panel side-panel--dark-ui\">\n                        <div class=\"side-panel__header\">\n                            <div class=\"side-panel__tools\">\n                                <a class=\"icn-btn\" ng-click=\"sendToOpen = !sendToOpen\"><i class=\"icon-close-small\"></i></a>\n                            </div>\n                            <ul class=\"nav-tabs nav-tabs--big nav-tabs--ui-dark\">\n                                <li ng-class=\"{'nav-tabs__tab--active': !tab || tab === 'send-to'}\" class=\"nav-tabs__tab\">\n                                    <button class=\"nav-tabs__link\"><span translate=\"\">Send to</span></button>\n                                </li>\n                            </ul>\n                        </div>\n                        <!-- Send To Tab -->\n                        <div class=\"side-panel__content\">\n                            <div class=\"side-panel__content-block\">\n                                <div sd-toggle-box data-title=\"Destination\" data-style=\"circle\" data-open=\"true\">\n                                    <div class=\"form__row\">\n                                        <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-label sd-line-input--no-margin\">\n                                            <select class=\"sd-line-input__select\">\n                                                <option value=\"single\">Politics desk</option>\n                                                <option value=\"time\">Sports desk</option>\n                                                <option value=\"bananas\">Features desk</option>\n                                                <option value=\"indefinite\">Photo desk</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class=\"form__row form__row--no-padding\">\n                                        <div class=\"flex-grid flex-grid--boxed-small flex-grid--wrap-items flex-grid--small-2\">\n                                            <button class=\"btn__check btn__check--active flex-grid__item\" disabled=\"disabled\">Active disabled</button>\n                                            <button class=\"btn__check flex-grid__item\" disabled=\"disabled\">Disabled</button>\n                                            <button ng-click=\"stageActive0 = !stageActive0\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive0}\">Incoming stage</button>\n                                            <button ng-click=\"stageActive1 = !stageActive1\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive1}\">Working stage</button>\n                                            <button ng-click=\"stageActive2 = !stageActive2\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive2}\">Revise stage</button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div sd-toggle-box data-title=\"Embargo\" data-style=\"circle\" data-open=\"true\">\n                                    <div class=\"form__row form__row--flex  form__row--small-padding\">\n                                        <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                            <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                            <label class=\"sd-line-input__label\">Embargo till</label>\n                                            <input class=\"sd-line-input__input\" type=\"text\">\n                                        </div>\n                                        <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                            <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                            <input class=\"sd-line-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                    <a class=\"text-link text-link--white\" href=\"\"><i class=\"icon-remove-sign\"> </i> Clear embargo</a>\n                                </div>\n                                <div sd-toggle-box data-title=\"Publish schedule\" data-style=\"circle\" data-open=\"true\">\n                                    <div class=\"form__row form__row--flex  form__row--small-padding\">\n                                        <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                            <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                            <label class=\"sd-line-input__label\">Publish on</label>\n                                            <input class=\"sd-line-input__input\" type=\"text\">\n                                        </div>\n                                        <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                            <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                            <input class=\"sd-line-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                    <a class=\"text-link text-link--white\" href=\"\"><i class=\"icon-remove-sign\"> </i> Clear schedule</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer side-panel__footer--button-box-large\" ng-if=\"!tab || tab === 'send-to'\">\n                            <button class=\"btn btn--large btn--primary btn--expanded\">Send</button>\n                        </div>\n                        <div class=\"side-panel__footer side-panel__footer--button-box-large\" ng-if=\"tab === 'publish'\">\n                            <button class=\"btn btn--large btn--highlight btn--expanded\">Publish</button>\n                        </div>\n                    </div>  \n                </div>\n            </div>\n            <!-- END OVERLAY PANEL -->\n            <!-- END left content -->\n        </div>\n        <div class=\"sd-content-wrapper__content-splitter\" ng-if=\"editArticle\" sd-splitter=\"authoringContent\" splitter-max=\"1000\" splitter-min=\"650\"></div>\n        <div id=\"authoringContent\" class=\"sd-content-wrapper__authoring-content-area\" ng-include=\"'playgrounds/layout-snippets/edit-article.html'\" ng-if=\"editArticle\">\n\n        </div>\n    </section>\n    <footer class=\"bottom-bar\">\n        This is the optional footer.\n    </footer>\n</div>\n";

/***/ }),
/* 259 */
/***/ (function(module, exports) {

module.exports = "<div class=\"sd-page-grid--basic\" doc-modal>\n        <header class=\"sd-top-menu\">\n            <a href=\"\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n            <p class=\"sd-top-menu__header\">List items test</p>\n        </header>\n    \n        <section class=\"sd-content sd-page-content--slide-in\" ng-class=\"{\n                'sd-page-content--slide-in--open' : editorOpen}\">\n    \n            <div class=\"sd-sidebar-menu sd-page-content__left-tabs\">\n                <ul class=\"authoring-active\">\n                    <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                        <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                            <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard\"></i>\n                            <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                        </a>\n                    </li>\n                    <li sd-tooltip=\"Monitoring\" flow=\"right\">\n                        <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\">\n                            <i class=\"sd-sidebar-menu__main-icon big-icon--view\"></i>\n                            <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                        </a>\n                    </li>\n                    <li sd-tooltip=\"Highlights\" flow=\"right\">\n                        <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                            <i class=\"sd-sidebar-menu__main-icon big-icon--marked-star\"></i>\n                            <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                        </a>\n                    </li>\n                    <li sd-tooltip=\"Spiked\" flow=\"right\">\n                        <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                            <i class=\"sd-sidebar-menu__main-icon big-icon--spike\"></i>\n                            <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                        </a>\n                    </li>\n                    <li class=\"sd-sidebar-menu__spacer\">\n                    </li>\n                    <li sd-tooltip=\"Personal\" flow=\"right\">\n                        <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                            <i class=\"sd-sidebar-menu__main-icon big-icon--personal\"></i>\n                            <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                        </a>\n                    </li>\n                    <li sd-tooltip=\"Search\" flow=\"right\">\n                        <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                            <i class=\"sd-sidebar-menu__main-icon big-icon--global-search\"></i>\n                            <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                        </a>\n                    </li>\n                </ul>\n            </div>\n            <div id=\"leftContent\" class=\"sd-page-content__content-block sd-page-content__content-block--main\" ng-class=\"{\n                    'open-filters': leftFilterOpen, 'open-preview': leftPreviewOpen}\">\n                <!-- left content -->\n                <div class=\"subnav\">\n    \n                    <div class=\"subnav__sliding-toolbar\" ng-show=\"editMode\">\n                        <div class=\"sliding-toolbar__inner\">\n                            <a class=\"btn\" ng-click=\"editMode = false\">Cancel</a>\n                            <span class=\"sliding-toolbar__info-text\">1 item selected</span>\n                        </div>\n                        <a class=\"btn btn--primary\">Create Planning item</a>\n                        <a class=\"btn btn--alert\"><i class=\"icon-trash\"></i>Spike</a>\n                    </div>\n                    <div class=\"dropdown\" dropdown=\"\">\n                        <button class=\"dropdown__toggle navbtn navbtn--text-only dropdown-toggle\" dropdown-toggle=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">Monitoring<span class=\"dropdown__caret\"></span></button>\n                        <ul class=\"dropdown__menu scrollable\" style=\"\">\n                            <li><div class=\"dropdown__menu-label ng-binding\">Monitoring</div></li>\n                            <li><button>Incoming stage</button></li>\n                            <li><button>Working stage</button></li>\n                            <li><button>Output stage</button></li>\n                        </ul>\n                    </div>\n                    <div class=\"subnav__spacer subnav__spacer--no-margin\"></div>\n                    <div class=\"sd-searchbar\" ng-class=\"{\n                            'sd-searchbar--focused': focused}\" >\n                        <label for=\"search-input\" class=\"sd-searchbar__icon\"></label>\n                        <input id=\"search-input\"\n                               class=\"sd-searchbar__input\"\n                               type=\"text\"\n                               placeholder=\"Search\"\n                               ng-keyup=\"searchOnEnter($event)\"\n                               ng-model=\"query\"\n                               tabindex=\"1\"\n                               ng-focus=\"focused = true\">\n                        <button class=\"sd-searchbar__cancel\" ng-if=\"query\">\n                            <i class=\"icon-remove-sign\"></i>\n                        </button>\n                        <button id=\"sd-searchbar__search-btn\" class=\"sd-searchbar__search-btn\" ng-if=\"focused\" tabindex=\"2\">\n                            <i class=\"big-icon--chevron-right\"></i>\n                        </button>\n                    </div>\n                    <div class=\"dropdown dropdown--align-right\" dropdown>\n                        <button class=\"dropdown__toggle navbtn sd-create-btn\" dropdown__toggle>\n                            <i class=\"icon-plus-large\"></i>\n                            <span class=\"circle\"></span>\n                        </button>\n                        <ul class=\"dropdown__menu\">\n                            <li>\n                                <div class=\"dropdown__menu-label\">Create New Item</div>\n                            </li>\n                            \n                            <li>\n                                <button><i class=\"icon-plus-sign icon--blue\"></i>Editor 3</button>\n                            </li>\n                            <li class=\"dropdown__menu-divider\"></li>\n                            <li>\n                                <div class=\"dropdown__menu-label\">Recent templates</div>\n                            </li>\n                            <li>\n                                <button><i class=\"icon-plus-sign icon--blue\"></i>Template one</button>\n                            </li>\n                            <li>\n                                <button><i class=\"icon-plus-sign icon--blue\"></i>Template two</button>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div class=\"subnav\">\n                    <div class=\"subnav__stretch-bar\" ng-init=\"planningType = 'events-planning'\">\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"all\" label-position=\"inside\">all</sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"text\" label-position=\"inside\"><i class=\"icon-text\"></i></sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"photo\" label-position=\"inside\"><i class=\"icon-photo\"></i></sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"graphic\" label-position=\"inside\"><i class=\"icon-graphic\"></i></sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"composite\" label-position=\"inside\"><i class=\"icon-composite\"></i></sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"video\" label-position=\"inside\"><i class=\"icon-video\"></i></sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"audio\" label-position=\"inside\"><i class=\"icon-audio\"></i></sd-check>\n                    </div>\n                    <div class=\"subnav__content-bar\">\n                        <div class=\"dropdown dropdown--align-right\" dropdown=\"\">\n                            <button class=\"dropdown__toggle dropdown-toggle\" dropdown__toggle=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                Updated<span class=\"dropdown__caret\"></span>\n                            </button>\n                            <ul class=\"dropdown__menu\">\n                                <li><button>Updated</button></li>\n                                <li><button>Created</button></li>\n                                <li><button>Urgency</button></li>\n                                <li><button>Category</button></li>\n                                <li><button>Slugline</button></li>\n                                <li><button>Priority</button></li>\n                                <li><button>Genre</button></li>\n                            </ul>\n                        </div>\n                        <a class=\"icn-btn ng-hide\" sd-tooltip=\"Descending\" flow=\"bottom\" ng-click=\"sortDesc = !sortDesc\" ng-hide=\"!sortDesc\"><i class=\"icon-descending\"></i></a>\n                        <a class=\"icn-btn\" sd-tooltip=\"Ascending\" flow=\"bottom\" ng-click=\"sortDesc = !sortDesc\" ng-show=\"!sortDesc\"><i class=\"icon-ascending\"></i></a>\n                    </div>\n                    <button class=\"navbtn\" ng-click=\"gridView = !gridView\">\n                        <i class=\"icon-th ng-hide\" ng-hide=\"gridView\"></i>\n                        <i class=\"icon-th-list\" ng-show=\"gridView\"></i>\n                    </button>\n                    <div class=\"dropdown dropdown--align-right\" dropdown>\n                        <button class=\"dropdown__toggle navbtn\" dropdown__toggle>\n                            <i class=\"icon-dots-vertical\"></i>\n                        </button>\n                        <ul class=\"dropdown__menu\">\n                            <li>\n                                <div class=\"dropdown__menu-label\">Actions</div>\n                            </li>\n                            <li class=\"dropdown__menu-divider\"></li>\n                            <li><button>Action 2</button></li>\n                            <li><button>Action 3</button></li>\n                        </ul>\n                    </div>\n                </div>\n                <div class=\"sd-column-box--3\" ng-init=\"editorOpen = true;\">\n                    <div class=\"sd-column-box__main-column\">\n                        <!-- /// OPTION 1 /// -->\n                        <div class=\"sd-list-header\">\n                            <span class=\"sd-list-header__name\"><a href=\"\">List items</a> / <a href=\"\">Option one</a></span>\n                        </div>\n                        <div class=\"sd-list-item-group sd-shadow--z2\" >\n                            <!-- list item  -->\n                            <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--activated':itemActive2}\">\n                                <div class=\"sd-list-item__border\"></div>\n                                <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                                <div class=\"sd-list-item__column\">\n                                    <span class=\"badge badge--primary\">2</span>\n                                    <span class=\"badge badge--warning\">3</span>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--no-border\">\n                                    <figure class=\"avatar avatar--small avatar--no-margin\">vs</figure>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">it's a Slug!</span>Feugiat nulla facilisis at vero eros et luptatum zzril delenit augue duis dolore te feugait nulla facilisi.</span>\n                                        <time title=\"March 22, 2017 11:08 AM\">12:23, 18.01.2019</time>\n                                    </div>\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"label\">article</span><span class=\"label label--primary label--hollow\">fetched</span><span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Politics</span></span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-graphic sd-opacity--40\"></i>2</span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-photo sd-opacity--40\"></i>6</span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-audio sd-opacity--40\"></i>1</span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-video sd-opacity--40\"></i>3</span>\n                                    </div>\n                                </div>\n                                <div class=\"sd-list-item__action-menu\">\n                                    <button class=\"icn-btn\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                            <!-- list item  -->\n                            <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--activated':itemActive2}\">\n                                <div class=\"sd-list-item__border\"></div>\n                                <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                                <div class=\"sd-list-item__column\">\n                                    <span class=\"badge badge--success\">1</span>\n                                    <span class=\"badge badge--highlight\">2</span>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--no-border\">\n                                    <figure class=\"avatar avatar--small avatar--no-margin\">gb</figure>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Slugline lorem</span>Facilisis at vero eros et luptatum zzril delenit augue duis dolore te feugait nulla facilisi.</span>\n                                        <time title=\"March 22, 2017 11:08 AM\">12:18, 18.01.2019</time>\n                                    </div>\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"label\">story</span><span class=\"label label--yellow2 label--hollow\">in progress</span><span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Politics</span></span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-photo sd-opacity--40\"></i>3</span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-video sd-opacity--40\"></i>3</span>\n                                    </div>\n                                </div>\n                                <div class=\"sd-list-item__action-menu\">\n                                    <button class=\"icn-btn\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                            <!-- list item  -->\n                            <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--activated':itemActive2}\">\n                                <div class=\"sd-list-item__border\"></div>\n                                <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                                <div class=\"sd-list-item__column\">\n                                    <span class=\"badge badge--alert\">3</span>\n                                    <span class=\"badge\">5</span>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--no-border\">\n                                    <figure class=\"avatar avatar--small avatar--no-margin\">kk</figure>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Slugipsum lorem</span>Luptatum zzril delenit augue duis dolore te feugait nulla facilisi dolore eu feugiat nulla facilisis.</span>\n                                        <time title=\"March 22, 2017 11:08 AM\">12:15, 18.01.2019</time>\n                                    </div>\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"label\">article</span><span class=\"label label--yellow2 label--hollow\">in progress</span><span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Politics</span></span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-graphic sd-opacity--40\"></i>2</span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-photo sd-opacity--40\"></i>2</span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-video sd-opacity--40\"></i>1</span>\n                                    </div>\n                                </div>\n                                <div class=\"sd-list-item__action-menu\">\n                                    <button class=\"icn-btn\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- /// OPTION 2 /// -->\n                        <div class=\"sd-list-header\">\n                            <span class=\"sd-list-header__name\"><a href=\"\">List items</a> / <a href=\"\">Option two</a></span>\n                        </div>\n                        <div class=\"sd-list-item-group sd-shadow--z2\" >\n                            <!-- list item  -->\n                            <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--activated':itemActive2}\">\n                                <div class=\"sd-list-item__border\"></div>\n                                <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                                <div class=\"sd-list-item__column\">\n                                    <span class=\"badge badge--primary\">2</span>\n                                    <span class=\"badge badge--warning\">3</span>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Some Slugline</span>Dolore eu feugiat nulla facilisis at vero eros et luptatum zzril delenit augue duis dolore te feugait nulla facilisi.</span>\n                                        <time title=\"March 22, 2017 11:08 AM\">12:23, 18.01.2019</time>\n                                    </div>\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"label\">article</span><span class=\"label label--yellow2 label--hollow\">in progress</span><span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Politics</span></span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-photo sd-opacity--40\"></i>5</span>\n                                    </div>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--no-border\">\n                                    <figure class=\"avatar avatar--small avatar--no-margin\">vs</figure>\n                                </div>\n                                <div class=\"sd-list-item__action-menu\">\n                                    <button class=\"icn-btn\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                            <!-- list item  -->\n                            <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--activated':itemActive2}\">\n                                <div class=\"sd-list-item__border\"></div>\n                                <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                                <div class=\"sd-list-item__column\">\n                                    <span class=\"badge badge--success\">1</span>\n                                    <span class=\"badge badge--highlight\">2</span>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Lorem ipsum Slug</span>Luptatum zzril delenit augue duis dolore te feugait nulla facilisi.</span>\n                                        <time title=\"March 22, 2017 11:08 AM\">12:18, 18.01.2019</time>\n                                    </div>\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"label\">article</span><span class=\"label label--hollow\">draft</span><span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Politics</span></span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-video sd-opacity--40\"></i>1</span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-photo sd-opacity--40\"></i>8</span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-audio sd-opacity--40\"></i>2</span>\n                                    </div>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--no-border\">\n                                    <figure class=\"avatar avatar--small avatar--no-margin\">bk</figure>\n                                </div>\n                                <div class=\"sd-list-item__action-menu\">\n                                    <button class=\"icn-btn\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                            <!-- list item  -->\n                            <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--activated':itemActive2}\">\n                                <div class=\"sd-list-item__border\"></div>\n                                <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                                <div class=\"sd-list-item__column\">\n                                    <span class=\"badge badge--alert\">3</span>\n                                    <span class=\"badge\">5</span>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Slugline dolor</span>Nulla facilisis at vero eros et luptatum zzril delenit augue duis dolore te feugait nulla.</span>\n                                        <time title=\"March 22, 2017 11:08 AM\">12:15, 18.01.2019</time>\n                                    </div>\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"label\">article</span><span class=\"label label--yellow2 label--hollow\">in progress</span><span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Politics</span></span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-graphic sd-opacity--40\"></i>2</span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-photo sd-opacity--40\"></i>6</span>\n                                    </div>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--no-border\">\n                                    <figure class=\"avatar avatar--small avatar--no-margin\">ml</figure>\n                                </div>\n                                <div class=\"sd-list-item__action-menu\">\n                                    <button class=\"icn-btn\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- /// OPTION 3 /// -->\n                        <div class=\"sd-list-header\">\n                            <span class=\"sd-list-header__name\"><a href=\"\">List items</a> / <a href=\"\">Option three</a></span>\n                        </div>\n                        <div class=\"sd-list-item-group sd-shadow--z2\">\n                            <!-- list item  -->\n                            <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--activated':itemActive2}\">\n                                <div class=\"sd-list-item__border\"></div>\n                                <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                                <div class=\"sd-list-item__column\">\n                                    <span class=\"badge badge--primary\">2</span>\n                                    <span class=\"badge badge--warning\">3</span>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Lorem Slugline ipsum</span>Dolore vero eros et luptatum zzril delenit augue duis dolore te feugait nulla facilisi.</span>\n                                        <time title=\"March 22, 2017 11:08 AM\">12:21, 18.01.2019</time>\n                                        <figure class=\"avatar avatar--small avatar--on-right\">vs</figure>\n                                    </div>\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"label\">article</span><span class=\"label label--hollow\">draft</span><span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Politics</span></span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-video sd-opacity--40\"></i>1</span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-photo sd-opacity--40\"></i>10</span>\n                                    </div>\n                                </div>\n                                <div class=\"sd-list-item__action-menu\">\n                                    <button class=\"icn-btn\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                            <!-- list item  -->\n                            <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--activated':itemActive2}\">\n                                <div class=\"sd-list-item__border\"></div>\n                                <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                                <div class=\"sd-list-item__column\">\n                                    <span class=\"badge badge--primary\">2</span>\n                                    <span class=\"badge badge--warning\">3</span>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a Slugline</span>Eros et luptatum zzril delenit augue duis dolore te feugait nulla facilisi.</span>\n                                        <time title=\"March 22, 2017 11:08 AM\">12:16, 18.01.2019</time>\n                                        <figure class=\"avatar avatar--small avatar--on-right\">ap</figure>\n                                    </div>\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"label\">story</span><span class=\"label label--primary label--hollow\">fetched</span><span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Politics</span></span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-video sd-opacity--40\"></i>3</span>\n                                    </div>\n                                </div>\n                                <div class=\"sd-list-item__action-menu\">\n                                    <button class=\"icn-btn\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                            <!-- list item  -->\n                            <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--activated':itemActive2}\">\n                                <div class=\"sd-list-item__border\"></div>\n                                <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                                <div class=\"sd-list-item__column\">\n                                    <span class=\"badge badge--primary\">2</span>\n                                    <span class=\"badge badge--warning\">3</span>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Lorem ipsum slug</span>Vero eros et luptatum zzril delenit augue duis dolore te feugait nulla facilisi.</span>\n                                        <time title=\"March 22, 2017 11:08 AM\">12:09, 18.01.2019</time>\n                                        <figure class=\"avatar avatar--small avatar--on-right\">rs</figure>\n                                    </div>\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"label\">article</span><span class=\"label label--yellow2 label--hollow\">in progress</span><span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Politics</span></span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-graphic sd-opacity--40\"></i>3</span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-audio sd-opacity--40\"></i>2</span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-photo sd-opacity--40\"></i>7</span>\n                                    </div>\n                                </div>\n                                <div class=\"sd-list-item__action-menu\">\n                                    <button class=\"icn-btn\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                            <!-- list item  -->\n                            <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--activated':itemActive2}\">\n                                <div class=\"sd-list-item__border\"></div>\n                                <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                                <div class=\"sd-list-item__column\">\n                                    <span class=\"badge badge--primary\">2</span>\n                                    <span class=\"badge badge--warning\">3</span>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a Slugline</span>Dolore eu feugiat nulla facilisis at vero eros et luptatum zzril delenit augue duis dolore te feugait nulla facilisi.</span>\n                                        <time title=\"March 22, 2017 11:08 AM\">11:08, 22.03.2017</time>\n                                        <figure class=\"avatar avatar--small avatar--on-right\">op</figure>\n                                    </div>\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"label\">article</span><span class=\"label label--yellow2 label--hollow\">in progress</span><span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">National</span></span>\n                                        <span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Related:</span> <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-text sd-opacity--40\"></i>3</span><span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-photo sd-opacity--40\"></i>4</span>\n                                    </div>\n                                </div>\n                                <figure class=\"sd-list-item__thumbnail\">\n                                    <img src=\"/bill.jpg\" alt=\"test\">\n                                </figure>\n                                <div class=\"sd-list-item__action-menu\">\n                                    <button class=\"icn-btn\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                            <!-- list item  -->\n                            <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--activated':itemActive2}\">\n                                <div class=\"sd-list-item__border\"></div>\n                                <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                                <div class=\"sd-list-item__column\">\n                                    <span class=\"badge badge--alert\">1</span>\n                                    <span class=\"badge badge--warning\">3</span>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is also a Slugline</span>Delenit augue duis dolore te feugait nulla facilisi dolore eu feugiat nulla facilisis at vero eros et luptatum zzril delenit augue duis.</span>\n                                        <time title=\"March 22, 2017 11:08 AM\">11:12, 21.03.2017</time>\n                                        <figure class=\"avatar avatar--small avatar--on-right\">vs</figure>\n                                    </div>\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"label\">article</span><span class=\"label label--success label--hollow\">published</span><span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Politics</span></span>\n                                        <span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Related:</span> <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-text sd-opacity--40\"></i>4</span><span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-photo sd-opacity--40\"></i>6</span>\n                                    </div>\n                                </div>\n                                <figure class=\"sd-list-item__thumbnail\">\n                                    <img src=\"/d_trump_2.jpg\" alt=\"test\">\n                                </figure>\n                                <div class=\"sd-list-item__action-menu\">\n                                    <button class=\"icn-btn\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- /// OPTION 4 /// -->\n                        <div class=\"sd-list-header\">\n                            <span class=\"sd-list-header__name\"><a href=\"\">List items</a> / <a href=\"\">Option four</a></span>\n                        </div>\n                        <div class=\"sd-list-item-group sd-shadow--z2\">\n                            <!-- list item  -->\n                            <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--activated':itemActive2}\">\n                                <div class=\"sd-list-item__border\"></div>\n                                <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                                <div class=\"sd-list-item__column\">\n                                    <span class=\"badge badge--success\">1</span>\n                                    <span class=\"badge badge--warning\">3</span>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                    <div class=\"sd-list-item__row\">\n                                        <figure class=\"avatar avatar--small\">tr</figure>\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Slugline Lorem</span>Feugiat nulla facilisis at vero eros et luptatum zzril delenit augue duis dolore te feugait.</span>\n                                        <time title=\"March 22, 2017 11:08 AM\">12:23, 18.01.2019</time>\n                                    </div>\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"label\">story</span><span class=\"label label--success label--hollow\">published</span><span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">ANSA</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Politics</span></span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-graphic sd-opacity--40\"></i>1</span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-photo sd-opacity--40\"></i>3</span>\n                                    </div>\n                                </div>\n                                <div class=\"sd-list-item__action-menu\">\n                                    <button class=\"icn-btn\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                            <!-- list item  -->\n                            <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--activated':itemActive2}\">\n                                <div class=\"sd-list-item__border\"></div>\n                                <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                                <div class=\"sd-list-item__column\">\n                                    <span class=\"badge badge--primary\">2</span>\n                                    <span class=\"badge badge--highlight\">2</span>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                    <div class=\"sd-list-item__row\">\n                                        <figure class=\"avatar avatar--small\">bl</figure>\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Lipsum Slugline</span>Nulla facilisis at vero eros delenit augue duis dolore te feugait nulla facilisi.</span>\n                                        <time title=\"March 22, 2017 11:08 AM\">12:17, 18.01.2019</time>\n                                    </div>\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"label\">article</span><span class=\"label label--yellow2 label--hollow\">in progress</span><span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Politics</span></span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-video sd-opacity--40\"></i>2</span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-photo sd-opacity--40\"></i>5</span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-audio sd-opacity--40\"></i>1</span>\n                                    </div>\n                                </div>\n                                <div class=\"sd-list-item__action-menu\">\n                                    <button class=\"icn-btn\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                            <!-- list item  -->\n                            <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--activated':itemActive2}\">\n                                <div class=\"sd-list-item__border\"></div>\n                                <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                                <div class=\"sd-list-item__column\">\n                                    <span class=\"badge badge--primary\">2</span>\n                                    <span class=\"badge\">5</span>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                    <div class=\"sd-list-item__row\">\n                                        <figure class=\"avatar avatar--small\">op</figure>\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">My Slugline</span>Dolore eu feugiat nulla facilisis at vero eros et luptatum zzril delenit augue duis dolore te feugait nulla facilisi.</span>\n                                        <time title=\"March 22, 2017 11:08 AM\">12:11, 18.01.2019</time>\n                                    </div>\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"label\">article</span><span class=\"label label--hollow\">draft</span><span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Politics</span></span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-audio sd-opacity--40\"></i>2</span>\n                                        <span class=\"sd-text-icon sd-text-icon--aligned-r\"><i class=\"icon-photo sd-opacity--40\"></i>2</span>\n                                    </div>\n                                </div>\n                                <div class=\"sd-list-item__action-menu\">\n                                    <button class=\"icn-btn\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                            <!-- list item  -->\n                        </div>\n                    </div>\n                </div>\n                <!-- END left content -->\n            </div>\n    \n            <!-- SPLIT CONTENT -->\n    \n    \n            <div id=\"editPane\" \n                 class=\"sd-edit-panel sd-page-content__content-block sd-page-content__content-block--right sd-page-content__content-block--30-slide\" \n                 ng-class=\"{'open-filters': rightFilterOpen, 'open-preview': rightPreviewOpen}\">\n                <!-- Eitor content -->\n                <div class=\"side-panel side-panel--shadow-right\">\n                    <!-- Article edit panel -->\n                    <div class=\"side-panel__header subnav subnav--darker\" ng-init=\"editorOpen = true\">\n                        <div class=\"subnav__stretch-bar\">\n                            <figure class=\"avatar avatar--empty\" style=\"margin-right:10px;\">VS</figure>\n                        </div>\n                        <div class=\"subnav__stretch-bar subnav__stretch-bar--right\">\n                            <a href=\"\" class=\"btn\">Cancel</a>\n                            <a href=\"\" class=\"btn btn--primary\">Save</a>\n    \n                        </div>\n                        <button class=\"navbtn\" ng-click=\"editorOpen = !editorOpen\">\n                            <i class=\"big-icon--minimize\"></i>\n                        </button>\n                        <button class=\"navbtn\">\n                            <i class=\"icon-dots-vertical\"></i>\n                        </button>\n                        <button class=\"navbtn navbtn--highlighted\" ng-click=\"publishPaneOpen = !publishPaneOpen\">\n                            <i class=\"big-icon--send-to\"></i>\n                        </button>\n                    </div>\n                    <div class=\"side-panel__content side-panel__content--flex\">\n                        <div class=\"side-panel__content-tab-content\">\n    \n                            <div class=\"side-panel__content-block side-panel__content-block--pad-small side-panel__content-block--flex\" style=\"padding-bottom: 16px; box-shadow: 0 1px 2px 0 rgba(0,0,0,0.2)\">\n                                <div class=\"side-panel__content-block-inner side-panel__content-block-inner--grow\">\n                                    <p class=\"sd-text__date-and-author\"><time>Created 01.02.2018 by </time> <span class=\"sd-text__author\">Mika Karapet</span></p> \n                                </div>\n                            </div>\n    \n                            <h3 class=\"side-panel__heading side-panel__heading--big\" style=\"margin-top: 60px; opacity: 0.3; text-align: center;\">EDITOR CONTENT</h3>\n                            <div class=\"side-panel__content-block\">\n    \n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"side-panel__footer\"></div>\n                    <!-- END Article edit panel -->\n                </div>\n                <!-- END Editor content -->\n            </div>\n        </section>\n        <footer class=\"bottom-bar \">\n            This is the optional footer.\n        </footer>\n    </div>\n    \n    <div class=\"sd-overlay-panel sd-overlay-panel--dark-ui\" ng-class=\"{'sd-overlay-panel--open' : publishPaneOpen, 'sd-overlay-panel--large': tab === 'publish'}\">\n        <div class=\"side-panel side-panel--shadow-right side-panel--dark-ui\">\n            <div class=\"side-panel__header\">\n                <div class=\"side-panel__tools\">\n                    <a class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen\"><i class=\"icon-close-small\"></i></a>\n                </div>\n                <ul class=\"nav-tabs nav-tabs--big nav-tabs--ui-dark\">\n                    <li ng-class=\"{'nav-tabs__tab--active': !tab || tab === 'send-to'}\" class=\"nav-tabs__tab\">\n                        <button ng-click=\"tab = 'send-to'\" class=\"nav-tabs__link\"><span translate=\"\">Send to</span></button>\n                    </li>\n                    <li ng-class=\"{'nav-tabs__tab--active': tab === 'publish'}\" class=\"nav-tabs__tab\">\n                        <button ng-click=\"tab = 'publish'\" class=\"nav-tabs__link\"><span translate=\"\">Publish</span></button>\n                    </li>\n                </ul>\n                <!-- <button class=\"navbtn navbtn--highlighted\" ng-click=\"publishPaneOpen = !publishPaneOpen\">\n                    <i class=\"icon-close-small\" style=\"margin-left: -10px;\"></i>\n                </button>  -->\n            </div>\n            <!-- Send To Tab -->\n            <div class=\"side-panel__content\" ng-if=\"!tab || tab === 'send-to'\">\n                <div class=\"side-panel__content-block\">\n                    <div sd-toggle-box data-title=\"Destination\" data-style=\"circle\" data-open=\"true\">\n                        <div class=\"form__row\">\n                            <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-label sd-line-input--no-margin\">\n                                <select class=\"sd-line-input__select\">\n                                    <option value=\"single\">Politics desk</option>\n                                    <option value=\"time\">Sports desk</option>\n                                    <option value=\"bananas\">Features desk</option>\n                                    <option value=\"indefinite\">Photo desk</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"form__row form__row--no-padding\">\n                            <div class=\"flex-grid flex-grid--boxed-small flex-grid--wrap-items flex-grid--small-2\">\n                                <button class=\"btn__check btn__check--active flex-grid__item\" disabled=\"disabled\">Active disabled</button>\n                                <button class=\"btn__check flex-grid__item\" disabled=\"disabled\">Disabled</button>\n                                <button ng-click=\"stageActive0 = !stageActive0\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive0}\">Incoming stage</button>\n                                <button ng-click=\"stageActive1 = !stageActive1\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive1}\">Working stage</button>\n                                <button ng-click=\"stageActive2 = !stageActive2\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive2}\">Revise stage</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div sd-toggle-box data-title=\"Embargo\" data-style=\"circle\" data-open=\"true\">\n                        <div class=\"form__row form__row--flex  form__row--small-padding\">\n                            <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                <label class=\"sd-line-input__label\">Embargo till</label>\n                                <input class=\"sd-line-input__input\" type=\"text\">\n                            </div>\n                            <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                <input class=\"sd-line-input__input\" type=\"text\">\n                            </div>\n                        </div>\n                        <a class=\"text-link text-link--white\" href=\"\"><i class=\"icon-remove-sign\"> </i> Clear embargo</a>\n                    </div>\n                    <div sd-toggle-box data-title=\"Publish schedule\" data-style=\"circle\" data-open=\"true\">\n                        <div class=\"form__row form__row--flex  form__row--small-padding\">\n                            <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                <label class=\"sd-line-input__label\">Publish on</label>\n                                <input class=\"sd-line-input__input\" type=\"text\">\n                            </div>\n                            <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                <input class=\"sd-line-input__input\" type=\"text\">\n                            </div>\n                        </div>\n                        <a class=\"text-link text-link--white\" href=\"\"><i class=\"icon-remove-sign\"> </i> Clear schedule</a>\n                    </div>\n                </div>\n            </div>\n            <!-- Publish Tab -->\n            <div class=\"side-panel__content side-panel__content--split\" ng-if=\"tab === 'publish'\">\n                <!-- LEFT pane -->\n                <div class=\"side-panel__content-block side-panel__content-block--left\">\n                    <div sd-toggle-box data-title=\"Publish from\" data-style=\"circle\" data-open=\"true\">\n                        <div class=\"form__row\">\n                            <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-label sd-line-input--no-margin\">\n                                <select class=\"sd-line-input__select\">\n                                    <option value=\"single\">Politics desk</option>\n                                    <option value=\"time\">Sports desk</option>\n                                    <option value=\"bananas\">Features desk</option>\n                                    <option value=\"indefinite\">Photo desk</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                    <div sd-toggle-box data-title=\"Embargo\" data-style=\"circle\" data-open=\"true\">\n                            <div class=\"form__row form__row--flex  form__row--small-padding\">\n                                <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                    <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                    <label class=\"sd-line-input__label\">Embargo till</label>\n                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                </div>\n                                <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                    <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                </div>\n                            </div>\n                            <a class=\"text-link text-link--white\" href=\"\"><i class=\"icon-remove-sign\"> </i> Clear embargo</a>\n                        </div>\n                        <div sd-toggle-box data-title=\"Publish schedule\" data-style=\"circle\" data-open=\"true\">\n                            <div class=\"form__row form__row--flex  form__row--small-padding\">\n                                <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                    <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                    <label class=\"sd-line-input__label\">Publish on</label>\n                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                </div>\n                                <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                    <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                </div>\n                            </div>\n                            <a class=\"text-link text-link--white\" href=\"\"><i class=\"icon-remove-sign\"> </i> Clear schedule</a>\n                        </div>\n                </div>\n                <!-- RIGHT pane -->\n                <div class=\"side-panel__content-block side-panel__content-block--right\">\n                    <div sd-toggle-box data-title=\"Web publishing\" data-style=\"circle\" data-open=\"true\">\n                        <!-- website 1 -->\n                        <div class=\"sd-collapse-box sd-shadow--z2\" ng-class=\"{'sd-collapse-box--open' : isOpen0}\">\n                            <div class=\"sd-collapse-box__header\" ng-click=\"isOpen0 = !isOpen0\">\n                                <!-- list item  -->\n                                <div class=\"sd-list-item\">\n                                    <div class=\"sd-list-item__border\"></div>\n                                    <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                        <div class=\"sd-list-item__row\">\n                                            <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__text-strong\">www.sourcefabric.org</span></span>\n                                        </div>\n                                        <div class=\"sd-list-item__row\">\n                                            <span class=\"sd-list-item__text-label\">Publish to:</span><span class=\"sd-overflow-ellipsis\">news</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- END list item  -->\n                            </div>\n                            <div class=\"sd-collapse-box__content-wraper\">\n                                <div class=\"sd-collapse-box__content\">\n                                    <div class=\"sd-collapse-box__sliding-toolbar-wrapper\" ng-show=\"!contentChanged0\">\n                                        <div class=\"sd-collapse-box__sliding-toolbar\">\n                                            <div class=\"sliding-toolbar__inner\"></div>\n                                            <a class=\"btn btn--hollow btn--ui-dark\" ng-click=\"contentChanged0 = true; isOpen0 = false\">Cancel</a>\n                                            <a class=\"btn btn--primary\" ng-click=\"contentChanged0 = true; isOpen0 = false\">Save</a>\n                                        </div>\n                                    </div>\n                                    <div class=\"sd-collapse-box__tools sd-collapse-box__tools--flex\">\n                                        <a class=\"sd-collapse-box__collapse-btn\" href=\"\" ng-click=\"isOpen0 = false\">\n                                            <span class=\"icn-btn\"><i class=\"icon-chevron-up-thin\"></i></span>\n                                        </a>\n                                        <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                                    </div>\n                                    <div class=\"sd-collapse-box__content-block sd-collapse-box__content-block--top\">\n                                        <div class=\"sd-list-item sd-list-item--no-bg sd-list-item--no-hover\">\n                                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                <div class=\"sd-list-item__row\">\n                                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow sd-list-item__text-strong\">www.sourcefabric.org</span>\n                                                    <a class=\"icn-btn\" sd-tooltip=\"Preview\" flow=\"left\"><i class=\"icon-external\"></i></a>\n                                                </div>\n                                                <div class=\"sd-list-item__row\">\n                                                    <span class=\"sd-list-item__text-label sd-overflow-ellipsis\">Automatically:</span><span class=\"sd-overflow-ellipsis\">news</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--no-margin\">\n                                            <label class=\"sd-line-input__label\">Route</label>\n                                            <select class=\"sd-line-input__select\">\n                                                <option value=\"single\">News</option>\n                                                <option value=\"time\">Politics</option>\n                                                <option value=\"bananas\">Lifestyle</option>\n                                                <option value=\"indefinite\">Culture</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class=\"form__row\" ng-init=\"contentChanged0 = true\">\n                                        <sd-check ng-model=\"contentChanged0\" ng-checked=\"false\">Publish to facebook</sd-check>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <sd-check ng-model=\"dnp0\">Do not publish</sd-check>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- website 2 -->\n                        <div class=\"sd-collapse-box sd-shadow--z2\" ng-class=\"{'sd-collapse-box--open' : isOpen1}\">\n                            <div class=\"sd-collapse-box__header\" ng-click=\"isOpen1 = !isOpen1\">\n                                <!-- list item  -->\n                                <div class=\"sd-list-item\">\n                                    <div class=\"sd-list-item__border\"></div>\n                                    <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                        <div class=\"sd-list-item__row\">\n                                            <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__text-strong\">www.superdesk.org</span></span>\n                                        </div>\n                                        <div class=\"sd-list-item__row\">\n                                            <span class=\"sd-list-item__text-label\">Publish to:</span><span class=\"sd-overflow-ellipsis\">news, facebook</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- END list item  -->\n                            </div>\n                            <div class=\"sd-collapse-box__content-wraper\">\n                                <div class=\"sd-collapse-box__content\">\n                                    <div class=\"sd-collapse-box__sliding-toolbar-wrapper\" ng-show=\"!contentChanged1\">\n                                        <div class=\"sd-collapse-box__sliding-toolbar\">\n                                            <div class=\"sliding-toolbar__inner\"></div>\n                                            <a class=\"btn btn--hollow btn--ui-dark\" ng-click=\"contentChanged1 = true; isOpen1 = false\">Cancel</a>\n                                            <a class=\"btn btn--primary\" ng-click=\"contentChanged1 = true; isOpen1 = false\">Save</a>\n                                        </div>\n                                    </div>\n                                    <div class=\"sd-collapse-box__tools sd-collapse-box__tools--flex\">\n                                        <a class=\"sd-collapse-box__collapse-btn\" href=\"\" ng-click=\"isOpen1 = false\">\n                                            <span class=\"icn-btn\"><i class=\"icon-chevron-up-thin\"></i></span>\n                                        </a>\n                                        <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                                    </div>\n                                    <div class=\"sd-collapse-box__content-block sd-collapse-box__content-block--top\">\n                                        <div class=\"sd-list-item sd-list-item--no-bg sd-list-item--no-hover\">\n                                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                <div class=\"sd-list-item__row\">\n                                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow sd-list-item__text-strong\">www.superdesk.org</span>\n                                                    <a class=\"icn-btn\" sd-tooltip=\"Preview\" flow=\"left\"><i class=\"icon-external\"></i></a>\n                                                </div>\n                                                <div class=\"sd-list-item__row\">\n                                                    <span class=\"sd-list-item__text-label sd-overflow-ellipsis\">Automatically:</span><span class=\"sd-overflow-ellipsis\">news, facebook</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--no-margin\">\n                                            <label class=\"sd-line-input__label\">Route</label>\n                                            <select class=\"sd-line-input__select\">\n                                                <option value=\"single\">News</option>\n                                                <option value=\"time\">Politics</option>\n                                                <option value=\"bananas\">Lifestyle</option>\n                                                <option value=\"indefinite\">Culture</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <sd-check  ng-model=\"contentChanged1\" ng-checked=\"true\">Publish to facebook</sd-check>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <sd-check ng-model=\"dnp1\">Do not publish</sd-check>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"side-panel__footer side-panel__footer--button-box-large\" ng-if=\"!tab || tab === 'send-to'\">\n                <button class=\"btn btn--large btn--primary btn--expanded\">Send</button>\n            </div>\n            <div class=\"side-panel__footer side-panel__footer--button-box-large\" ng-if=\"tab === 'publish'\">\n                <button class=\"btn btn--large btn--highlight btn--expanded\">Publish</button>\n            </div>\n        </div>  \n    </div>\n    ";

/***/ }),
/* 260 */
/***/ (function(module, exports) {

module.exports = "<aside class=\"docs-page__sidebar\">\n    <ul class=\"docs-page__nav\" doc-nav>\n        <li ng-repeat=\"group in components\">\n            <span class=\"docs-page__nav-title\">{{group.name}}</span>\n            <ul>\n                <li ng-repeat=\"(name, item) in group.items\"><a ng-click=\"navigateTo(name, $event)\" href=\"{{name}}\">{{item.name}}</a></li>\n            </ul>\n        </li>\n    </ul>\n</aside>\n<article class=\"docs-page__content\">\n    <div class=\"docs-page__content-group\" ng-repeat=\"group in components\">\n        <h2 class=\"docs-page__group-heading\">{{group.name}}</h2>                                       \n        <section class=\"docs-page__section\"  ng-repeat=\"(name, item) in group.items\" id=\"{{name}}\" ng-include=\"'../examples/templates/' + item.page\"></section>\n    </div>\n</article>\n";

/***/ }),
/* 261 */
/***/ (function(module, exports) {

module.exports = "<div class=\"sd-page-grid--test docs-page__full-width-helper\" doc-modal ng-init=\"openHamburger = false, darkUI = false\" data-theme=\"{{darkUI ? 'dark-ui' : 'light-ui'}}\">\n    <div class=\"sd-main-menu\" ng-class=\"{'sd-main-menu--open': openHamburger}\">\n        <div class=\"sd-main-menu__inner\">\n\n        </div>\n    </div>\n    <header class=\"sd-top-menu\">\n        <a href=\"\" ng-click=\"openHamburger = !openHamburger\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n        <p class=\"sd-top-menu__header\">Master Desk</p>\n    </header>\n    <section class=\"sd-content sd-content-wrapper\">\n        <div class=\"sd-sidebar-menu sd-content-wrapper__left-tabs\">\n            <ul class=\"authoring-active\">\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Monitoring\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--view\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Highlights\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--marked-star\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Spiked\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--spike\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Personal\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--personal\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Search\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--global-search\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Monitoring\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--master\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n            </ul>\n        </div>\n        <div id=\"leftContent\" sd-media-query min-width=\"880\" max-width=\"1100\" ng-init=\"darkUI = false; listView = true\" class=\"sd-content-wrapper__main-content-area sd-main-content-grid\" ng-class=\"{'dark-ui': darkUI}\">\n            <!-- TOOLBAR HEADER -->\n            <div class=\"sd-main-content-grid__header\" ng-init=\"masterDeskView = 'overview'\">\n                <div class=\"subnav\" ng-class=\"{'subnav--dark-ui': darkUI}\">\n                    <button class=\"sd-navbtn sd-navbtn--left sd-navbtn--darker\" ng-click=\"leftFilterOpen = !leftFilterOpen\" ng-class=\"{'sd-navbtn--active': leftFilterOpen}\">\n                        <i class=\"icon-filter-large\"></i>\n                    </button>\n                    <div class=\"button-group button-group--left button-group--padded\">\n                        <sd-check ng-model=\"masterDeskView\" type=\"radio\" ng-value=\"overview\" label-position=\"inside\">Overview</sd-check>\n                        <sd-check ng-model=\"masterDeskView\" type=\"radio\" ng-value=\"users\" label-position=\"inside\">Users</sd-check>\n                        <sd-check ng-model=\"masterDeskView\" type=\"radio\" ng-value=\"assignments\" label-position=\"inside\">Assignments</sd-check>\n                        <div class=\"button-group__divider button-group__divider--small button-group__divider--border sd-margin-l--2\" ng-show=\"masterDeskView === 'users'\"></div>\n                        <span ng-show=\"masterDeskView === 'users'\">\n                            <span ng-model=\"AB\" sd-switch></span><label>Show only online users</label>\n                        </span>\n                        <div class=\"dropdown dropdown--align-left sd-margin-l--1-5\" dropdown>    \n                            <button class=\"dropdown__toggle sd-navbtn sd-navbtn--textual\" dropdown__toggle>\n                                <i class=\"icon-switches\"></i>\n                                <span class=\"sd-navbtn__text\">Something</span>\n                            </button>\n                            <ul class=\"dropdown__menu\">\n                                <li>\n                                    <div class=\"dropdown__menu-label\">Actions</div>\n                                </li>\n                                <li class=\"dropdown__menu-divider\"></li>\n                                <li><button>Action 2</button></li>\n                                <li><button>Action 3</button></li>\n                                <li><button ng-click=\"editArticle = !editArticle\">Open editor</button></li>\n                            </ul>\n                        </div>\n                    </div>\n\n                    <button class=\"sd-navbtn\" ng-click=\"darkUI = !darkUI\">\n                        <i class=\"icon-adjust\"></i>\n                    </button>\n                    <div class=\"dropdown dropdown--align-right\" dropdown>\n                        <button class=\"dropdown__toggle sd-navbtn\" dropdown__toggle>\n                            <i class=\"icon-switches\"></i>\n                        </button>\n                        <ul class=\"dropdown__menu\">\n                            <li>\n                                <div class=\"dropdown__menu-label\">Actions</div>\n                            </li>\n                            <li class=\"dropdown__menu-divider\"></li>\n                            <li><button>Action 2</button></li>\n                            <li><button>Action 3</button></li>\n                            <li><button ng-click=\"editArticle = !editArticle\">Open editor</button></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <!-- FILTER PANEL -->\n            <div class=\"sd-main-content-grid__filter\" ng-class=\"{'open-filters': leftFilterOpen}\">\n                <div class=\"side-panel__container side-panel__container--small\">\n                    <div class=\"side-panel side-panel--shadow-left side-panel--bg-00\">\n                        <div class=\"side-panel__header side-panel__header--border-b\">\n                            <a class=\"icn-btn side-panel__close\" sd-tooltip=\"Close filters\" flow=\"left\" ng-click=\"leftFilterOpen = !leftFilterOpen\"><i class=\"icon-close-small\"></i></a>\n                            <h3 class=\"side-panel__heading\">Filters</h3>  \n                        </div>\n                        <div class=\"side-panel__content\">\n                            <div class=\"side-panel__content-block\">\n\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-inset-search\" ng-class=\"{'sd-inset-search--focused': focused}\">\n                                            <input id=\"search-input\" class=\"sd-inset-search__input\" type=\"text\" placeholder=\"Search desk\" ng-keyup=\"searchOnEnter($event)\" ng-model=\"query\" tabindex=\"1\" ng-focus=\"focused = true\" aria-label=\"Search desk\">\n                                            <button class=\"sd-inset-search__cancel\" ng-if=\"query\"><i class=\"icon-remove-sign\"></i></button>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input\">\n                                            <label class=\"sd-input__label\">Slugline</label>\n                                            <input class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input\">\n                                            <a class=\"icn-btn sd-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                            <label class=\"sd-input__label\">From</label>\n                                            <input class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input\">\n                                            <a class=\"icn-btn sd-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                            <input class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form__group\">\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input\">\n                                            <a class=\"icn-btn sd-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                            <label class=\"sd-input__label\">To</label>\n                                            <input class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form__item\">\n                                        <div class=\"sd-input\">\n                                            <a class=\"icn-btn sd-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                            <input class=\"sd-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer side-panel__footer--button-box\">\n                            <a class=\"btn btn--primary btn--expanded\">Apply filters</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- MAIN CONTENT -->\n            <!-- (Overview) -->\n            <div class=\"sd-main-content-grid__content sd-main-content-grid__content--with-filters\" ng-show=\"masterDeskView === 'overview'\">\n                <div class=\"sd-main-content-grid__content-filter-bar sd-search-tags__bar\">\n                    <ul class=\"sd-search-tags__tag-list\">\n                        <li class=\"sd-search-tags__tag tag-label tag-label--highlight1\">\n                            Lipsum slugline\n                            <button class=\"tag-label__remove\"><i class=\"icon-close-small\"></i></button>\n                        </li>\n                        <li class=\"sd-search-tags__tag tag-label tag-label--highlight1\">\n                            Lorem slugline\n                            <button class=\"tag-label__remove\"><i class=\"icon-close-small\"></i></button>\n                        </li>\n                    </ul>\n                    <a class=\"text-link sd-margin-l--auto\" href=\"#\">Clear all filters</a>\n                </div>\n                <div class=\"sd-main-content-grid__content-inner\">\n                    <!-- Desk grid view -->\n                    <div class=\"sd-grid-list sd-grid-list--medium sd-grid-list--gap-xl sd-margin-x--5\">\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header sd-board__header--clickable\">\n                                <h3 class=\"sd-board__header-title\">Desk One</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__content-block sd-board__content-block--clickable\">\n                                    <ul class=\"sd-board__list\">\n                                        <li class=\"sd-board__list-item\">\n                                            <span class=\"sd-board__item-count--large\">105</span>\n                                            <p class=\"sd-board__count-label\">items in production</p>\n                                            <div class=\"sd-board__doughnut-chart\">\n                                                <span class=\"sd-board__doughnut-chart-number\">105</span>\n                                            </div>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Incoming</h6><span class=\"badge orange--600 sd-margin-r--0-5\" >25</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Working</h6><span class=\"badge light-blue--600 sd-margin-r--0-5\">22</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Sub-editor</h6><span class=\"badge purple--600 sd-margin-r--0-5\">24</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Routed</h6><span class=\"badge light-green--600 sd-margin-r--0-5\">34</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Two</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__content-block\">\n                                    <ul class=\"sd-board__list\">\n                                        <li class=\"sd-board__list-item\">\n                                            <span class=\"sd-board__item-count--large\">98</span>\n                                            <p class=\"sd-board__count-label\">items in production</p>\n                                            <div class=\"sd-board__doughnut-chart\">\n                                                <span class=\"sd-board__doughnut-chart-number\">98</span>\n                                            </div>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Incoming</h6><span class=\"badge orange--600\">25</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Working</h6><span class=\"badge light-blue--600\">22</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Sub-editor</h6><span class=\"badge purple--600\">24</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Routed</h6><span class=\"badge light-green--600\">24</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Three</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__content-block\">\n                                    <ul class=\"sd-board__list\">\n                                        <li class=\"sd-board__list-item\">\n                                            <span class=\"sd-board__item-count--large\">69</span>\n                                            <p class=\"sd-board__count-label\">items in production</p>\n                                            <div class=\"sd-board__doughnut-chart\">\n                                                <span class=\"sd-board__doughnut-chart-number\">69</span>\n                                            </div>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Incoming</h6><span class=\"badge orange--600 sd-margin-r--0-5\">21</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Working</h6><span class=\"badge light-blue--600 sd-margin-r--0-5\">22</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Routed</h6><span class=\"badge light-green--600 sd-margin-r--0-5\">26</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Four</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__content-block\">\n                                    <ul class=\"sd-board__list\">\n                                        <li class=\"sd-board__list-item\">\n                                            <span class=\"sd-board__item-count--large\">92</span>\n                                            <p class=\"sd-board__count-label\">items in production</p>\n                                            <div class=\"sd-board__doughnut-chart\">\n                                                <span class=\"sd-board__doughnut-chart-number\">92</span>\n                                            </div>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Incoming</h6><span class=\"badge orange--600 sd-margin-r--0-5\">25</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Working</h6><span class=\"badge light-blue--600 sd-margin-r--0-5\">22</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Sub-editor</h6><span class=\"badge purple--600 sd-margin-r--0-5\">24</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Routed</h6><span class=\"badge light-green--600 sd-margin-r--0-5\">24</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Five</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__content-block\">\n                                    <ul class=\"sd-board__list\">\n                                        <li class=\"sd-board__list-item\">\n                                            <span class=\"sd-board__item-count--large\">68</span>\n                                            <p class=\"sd-board__count-label\">items in production</p>\n                                            <div class=\"sd-board__doughnut-chart\">\n                                                <span class=\"sd-board__doughnut-chart-number\">68</span>\n                                            </div>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Incoming</h6><span class=\"badge orange--600 sd-margin-r--0-5\">25</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Working</h6><span class=\"badge light-blue--600 sd-margin-r--0-5\">22</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Sub-editor</h6><span class=\"badge purple--600 sd-margin-r--0-5\">24</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Routed</h6><span class=\"badge light-green--600 sd-margin-r--0-5\">24</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Six</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__content-block\">\n                                    <ul class=\"sd-board__list\">\n                                        <li class=\"sd-board__list-item\">\n                                            <span class=\"sd-board__item-count--large\">74</span>\n                                            <p class=\"sd-board__count-label\">items in production</p>\n                                            <div class=\"sd-board__doughnut-chart\">\n                                                <span class=\"sd-board__doughnut-chart-number\">74</span>\n                                            </div>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Incoming</h6><span class=\"badge orange--600 sd-margin-r--0-5\">25</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Working</h6><span class=\"badge light-blue--600 sd-margin-r--0-5\">22</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Sub-editor</h6><span class=\"badge purple--600 sd-margin-r--0-5\">24</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Routed</h6><span class=\"badge light-green--600 sd-margin-r--0-5\">24</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Seven</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__content-block\">\n                                    <ul class=\"sd-board__list\">\n                                        <li class=\"sd-board__list-item\">\n                                            <span class=\"sd-board__item-count--large\">123</span>\n                                            <p class=\"sd-board__count-label\">items in production</p>\n                                            <div class=\"sd-board__doughnut-chart\">\n                                                <span class=\"sd-board__doughnut-chart-number\">123</span>\n                                            </div>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Incoming</h6><span class=\"badge orange--600 sd-margin-r--0-5\">25</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Working</h6><span class=\"badge light-blue--600 sd-margin-r--0-5\">22</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Sub-editor</h6><span class=\"badge purple--600 sd-margin-r--0-5\">24</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Routed</h6><span class=\"badge light-green--600 sd-margin-r--0-5\">24</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Eight</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__content-block\">\n                                    <ul class=\"sd-board__list\">\n                                        <li class=\"sd-board__list-item\">\n                                            <span class=\"sd-board__item-count--large\">83</span>\n                                            <p class=\"sd-board__count-label\">items in production</p>\n                                            <div class=\"sd-board__doughnut-chart\">\n                                                <span class=\"sd-board__doughnut-chart-number\">83</span>\n                                            </div>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Incoming</h6><span class=\"badge orange--600 sd-margin-r--0-5\">25</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Working</h6><span class=\"badge light-blue--600 sd-margin-r--0-5\">22</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Sub-editor</h6><span class=\"badge purple--600 sd-margin-r--0-5\">24</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title\">Routed</h6><span class=\"badge light-green--600 sd-margin-r--0-5\">24</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- (Users) -->\n            <div class=\"sd-main-content-grid__content sd-main-content-grid__content--with-filters\" ng-show=\"masterDeskView === 'users'\">\n\n                <div class=\"sd-main-content-grid__content-inner\">\n                    <!-- Desk kanban view -->\n                    <div class=\"sd-kanban-list sd-pdding-x--2 sd-padding-t--2\">\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk one</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Editor</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(3) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>CJM</span></span>\n                                                <span class=\"sd-avatar--indicator-status--online\" title=\"Online\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Carla Jean Moss</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>3</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>2</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Journalist</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(6) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>LM</span></span>\n                                                <span class=\"sd-avatar--indicator-status--offline\" title=\"Offline\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Llewelyn Moss</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Sub-Editor</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(3) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>AC</span></span>\n                                                <span class=\"sd-avatar--indicator-status--online\" title=\"Online\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Anton Chigurh</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Two</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Editor</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(4) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>VS</span></span>\n                                                <span class=\"sd-avatar--indicator-status--online\" title=\"Online\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Vladimir Stefanovic</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>3</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>2</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Journalist</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(8) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>CW</span></span>\n                                                <span class=\"sd-avatar--indicator-status--offline\" title=\"Offline\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Carson Wells</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Three</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Editor</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(2) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>BL</span></span>\n                                                <span class=\"sd-avatar--indicator-status--online\" title=\"Online\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Bunny Lebowski</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>3</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>2</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Journalist</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(6) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>WS</span></span>\n                                                <span class=\"sd-avatar--indicator-status--offline\" title=\"Offline\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Walter Sobchak</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Sub-Editor</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(3) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>DK</span></span>\n                                                <span class=\"sd-avatar--indicator-status--online\" title=\"Online\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Donny Kerabatsos</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Producer</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(2) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>JL</span></span>\n                                                <span class=\"sd-avatar--indicator-status--online\" title=\"Online\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Jeff Lebowski</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Four</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Editor</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(2) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>JT</span></span>\n                                                <span class=\"sd-avatar--indicator-status--offline\" title=\"Offline\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Jackie Treehorn</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Journalist</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(5) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>JQ</span></span>\n                                                <span class=\"sd-avatar--indicator-status--online\" title=\"Online\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Jesus Quintana</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Sub-Editor</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(3) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>KH</span></span>\n                                                <span class=\"sd-avatar--indicator-status--online\" title=\"Online\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Karl Hungus</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Five</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Editor</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(3) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>JL</span></span>\n                                                <span class=\"sd-avatar--indicator-status--offline\" title=\"Offline\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Jerry Lundegaard</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Journalist</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(5) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>GG</span></span>\n                                                <span class=\"sd-avatar--indicator-status--online\" title=\"Online\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Gaear Grimsrud</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Sub-Editor</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(3) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>WG</span></span>\n                                                <span class=\"sd-avatar--indicator-status--online\" title=\"Online\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Wade Gustafson</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Six</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Editor</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(3) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>SP</span></span>\n                                                <span class=\"sd-avatar--indicator-status--offline\" title=\"Offline\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Shep Proudfoot</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Journalist</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(7) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>BF</span></span>\n                                                <span class=\"sd-avatar--indicator-status--online\" title=\"Online\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Barton Fink</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Sub-Editor</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(4) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>CM</span></span>\n                                                <span class=\"sd-avatar--indicator-status--online\" title=\"Online\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Charlie Meadows</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Seven</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Editor</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(2) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>LB</span></span>\n                                                <span class=\"sd-avatar--indicator-status--offline\" title=\"Offline\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Lou Breeze</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Journalist</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(5) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>BB</span></span>\n                                                <span class=\"sd-avatar--indicator-status--online\" title=\"Online\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Bernie Bernbaum</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Sub-Editor</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(3) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>CF</span></span>\n                                                <span class=\"sd-avatar--indicator-status--online\" title=\"Online\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Chad Feldheimer</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Eight</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Editor</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(2) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>RC</span></span>\n                                                <span class=\"sd-avatar--indicator-status--offline\" title=\"Offline\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Rooster Cogburn</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Journalist</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(5) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>MR</span></span>\n                                                <span class=\"sd-avatar--indicator-status--online\" title=\"Online\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Mattie Ross</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>Buster Scruggs\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Sub-Editor</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(3) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>TC</span></span>\n                                                <span class=\"sd-avatar--indicator-status--online\" title=\"Online\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Tom Chaney</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <div class=\"sd-board__subheader\">\n                                    <h5 class=\"sd-board__subheader-title\">Producer</h5>\n                                </div>\n                                <ul class=\"sd-list-item-group sd-shadow--z2\">\n                                    <li class=\"sd-list-item\"  ng-repeat=\"i in [].constructor(2) track by $index\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-padding-x--0-5\">\n                                            <span class=\"sd-avatar sd-avatar--small\">\n                                                <span class=\"sd-avatar-content sd-avatar-content--text\" title=\"John Doe\"><span>BS</span></span>\n                                                <span class=\"sd-avatar--indicator-status--offline\" title=\"Offline\"></span>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"\">Buster Scruggs</span></span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--locked\"><i class=\"icon-lock\"></i>6</span>\n                                                <span class=\"sd-text-icon sd-text-icon--aligned-r user-items--assigned\"><i class=\"icon-pick\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <span class=\"sd-accessibility__btn-text--invisible\">More actions</span>\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- (Assignments) -->\n            <div class=\"sd-main-content-grid__content sd-main-content-grid__content--with-filters\" ng-show=\"masterDeskView === 'assignments'\">\n                <div class=\"sd-main-content-grid__content-filter-bar sd-search-tags__bar\">\n                    <ul class=\"sd-search-tags__tag-list\">\n                        <li class=\"sd-search-tags__tag tag-label tag-label--highlight1\">\n                            Lipsum slugline\n                            <button class=\"tag-label__remove\"><i class=\"icon-close-small\"></i></button>\n                        </li>\n                        <li class=\"sd-search-tags__tag tag-label tag-label--highlight1\">\n                            Lorem slugline\n                            <button class=\"tag-label__remove\"><i class=\"icon-close-small\"></i></button>\n                        </li>\n                    </ul>\n                    <a class=\"text-link sd-margin-l--auto\" href=\"#\">Clear all filters</a>\n                </div>\n                <div class=\"sd-main-content-grid__content-inner\">\n                    <!-- Desk grid view -->\n                    <div class=\"sd-grid-list sd-grid-list--medium sd-grid-list--gap-xl sd-margin-x--5\">\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk One</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__content-block\">\n                                    <ul class=\"sd-board__list\">\n                                        <li class=\"sd-board__list-item\">\n                                            <span class=\"sd-board__item-count--large\">34</span>\n                                            <p class=\"sd-board__count-label sd-board__count-label--l\">unassigned items<br> of <strong>105</strong> in production</p>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--to-do\">To Do</h6><span class=\"badge red--700 sd-margin-r--0-5\" >25</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--progress\">In Progress</h6><span class=\"badge orange--600 sd-margin-r--0-5\">22</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--completed\">Completed</h6><span class=\"badge light-green--600 sd-margin-r--0-5\">34</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Two</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__content-block\">\n                                    <ul class=\"sd-board__list\">\n                                        <li class=\"sd-board__list-item\">\n                                            <span class=\"sd-board__item-count--large\">30</span>\n                                            <p class=\"sd-board__count-label sd-board__count-label--l\">unassigned items<br> of <strong>98</strong> in production</p>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--to-do\">To Do</h6><span class=\"badge red--700\">25</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--progress\">In Progress</h6><span class=\"badge orange--600\">22</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--completed\">Completed</h6><span class=\"badge light-green--600\">24</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Three</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__content-block\">\n                                    <ul class=\"sd-board__list\">\n                                        <li class=\"sd-board__list-item\">\n                                            <span class=\"sd-board__item-count--large\">20</span>\n                                            <p class=\"sd-board__count-label sd-board__count-label--l\">unassigned items<br> of <strong>69</strong> in production</p>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--to-do\">To Do</h6><span class=\"badge red--700 sd-margin-r--0-5\">21</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--progress\">In Progress</h6><span class=\"badge orange--600 sd-margin-r--0-5\">22</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--completed\">Completed</h6><span class=\"badge light-green--600 sd-margin-r--0-5\">26</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Four</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__content-block\">\n                                    <ul class=\"sd-board__list\">\n                                        <li class=\"sd-board__list-item\">\n                                            <span class=\"sd-board__item-count--large\">17</span>\n                                            <p class=\"sd-board__count-label sd-board__count-label--l\">unassigned items<br> of <strong>92</strong> in production</p>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--to-do\">To Do</h6><span class=\"badge red--700 sd-margin-r--0-5\">25</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--progress\">In Progress</h6><span class=\"badge orange--600 sd-margin-r--0-5\">22</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--completed\">Completed</h6><span class=\"badge light-green--600 sd-margin-r--0-5\">24</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Five</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__content-block\">\n                                    <ul class=\"sd-board__list\">\n                                        <li class=\"sd-board__list-item\">\n                                            <span class=\"sd-board__item-count--large\">32</span>\n                                            <p class=\"sd-board__count-label sd-board__count-label--l\">unassigned items<br> of <strong>68</strong> in production</p>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--to-do\">To Do</h6><span class=\"badge red--700 sd-margin-r--0-5\">25</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--progress\">In Progress</h6><span class=\"badge orange--600 sd-margin-r--0-5\">22</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--completed\">Completed</h6><span class=\"badge light-green--600 sd-margin-r--0-5\">24</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Six</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__content-block\">\n                                    <ul class=\"sd-board__list\">\n                                        <li class=\"sd-board__list-item\">\n                                            <span class=\"sd-board__item-count--large\">37</span>\n                                            <p class=\"sd-board__count-label sd-board__count-label--l\">unassigned items<br> of <strong>74</strong> in production</p>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--to-do\">To Do</h6><span class=\"badge red--700 sd-margin-r--0-5\">25</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--progress\">In Progress</h6><span class=\"badge orange--600 sd-margin-r--0-5\">22</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--completed\">Completed</h6><span class=\"badge light-green--600 sd-margin-r--0-5\">24</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Seven</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__content-block\">\n                                    <ul class=\"sd-board__list\">\n                                        <li class=\"sd-board__list-item\">\n                                            <span class=\"sd-board__item-count--large\">43</span>\n                                            <p class=\"sd-board__count-label sd-board__count-label--l\">unassigned items<br> of <strong>123</strong> in production</p>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--to-do\">To Do</h6><span class=\"badge red--700 sd-margin-r--0-5\">25</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--progress\">In Progress</h6><span class=\"badge orange--600 sd-margin-r--0-5\">22</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--completed\">Completed</h6><span class=\"badge light-green--600 sd-margin-r--0-5\">24</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"sd-board\">\n                            <div class=\"sd-board__header\">\n                                <h3 class=\"sd-board__header-title\">Desk Eight</h3>\n                            </div>\n                            <div class=\"sd-board__content sd-padding-t--1\">\n                                <div class=\"sd-board__content-block\">\n                                    <ul class=\"sd-board__list\">\n                                        <li class=\"sd-board__list-item\">\n                                            <span class=\"sd-board__item-count--large\">29</span>\n                                            <p class=\"sd-board__count-label sd-board__count-label--l\">unassigned items<br> of <strong>83</strong> in production</p>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--to-do\">To Do</h6><span class=\"badge red--700 sd-margin-r--0-5\">25</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--progress\">In Progress</h6><span class=\"badge orange--600 sd-margin-r--0-5\">22</span>\n                                        </li>\n                                        <li class=\"sd-board__list-item\">\n                                            <h6 class=\"sd-board__list-item-title sd-board__list-item-title--completed\">Completed</h6><span class=\"badge light-green--600 sd-margin-r--0-5\">24</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- PREVIEW PANEL -->\n            <div class=\"sd-main-content-grid__preview\"  ng-class=\"{'open-preview': true}\">\n                <div class=\"side-panel__container\">\n                    <div class=\"side-panel side-panel--bg-00 side-panel--shadow-right\" ng-class=\"{'side-panel--dark-ui' : darkUI}\">\n                        <div class=\"side-panel__header\">\n                            <div class=\"side-panel__tools\">\n                                <!-- <a class=\"icn-btn\" sd-tooltip=\"Edit details\" flow=\"top\" ng-click=\"editorOpen = true; leftPreviewOpen = false\"><i class=\"icon-pencil\"></i></a> -->\n                                <a class=\"icn-btn\" sd-tooltip=\"Close details\" flow=\"top\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\"><i class=\"icon-close-small\"></i></a>\n                            </div>\n                            <div class=\"sd-nav-tabs\" ng-class=\"{'sd-nav-tabs--ui-dark' : darkUI}\">\n                                <button ng-click=\"tab = 'event-details'\" ng-class=\"{'sd-nav-tabs__tab--active': !tab || tab === 'event-details'}\" class=\"sd-nav-tabs__tab\">\n                                    <span translate>Content</span>\n                                </button>\n                                <button ng-click=\"tab = 'event-history'\" ng-class=\"{'sd-nav-tabs__tab--active': tab === 'event-history'}\" class=\"sd-nav-tabs__tab\">\n                                    <span translate>History</span>\n                                </button>\n                            </div> \n                        </div>\n                        <div class=\"side-panel__content\" ng-if=\"!tab || tab === 'event-details'\">\n                            <div class=\"side-panel__content-block side-panel__content-block--pad-small side-panel__content-block--flex\">\n                                <div class=\"side-panel__content-block-inner side-panel__content-block-inner--grow\">\n                                    <p class=\"sd-text__date-and-author\"><time>Created 23.08.2017 by </time> <span class=\"sd-text__author\">Mika Karapet</span></p> \n                                    <p class=\"sd-text__date-and-author\"><time>Updated 3 hours ago by</time> <span class=\"sd-text__author\">John Doe</span></p>\n                                </div>\n                                <div class=\"side-panel__content-block-inner side-panel__content-block-inner--right\">\n                                    <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                                </div>\n                            </div>\n                            <div class=\"side-panel__content-block side-panel__content-block--image\">\n                                <a class=\"icn-btn side-panel__image-actions\" ng-click=\"openModal('imageModal')\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <img src=\"/d_trump.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"side-panel__content-block\">\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Slugline</label>\n                                    <p class=\"sd-text__slugline\">This is a slugline</p>\n                                </div>\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Description</label>\n                                    <p>Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</p>\n                                </div>\n\n                                <div sd-toggle-box data-title=\"Details\" data-style=\"circle\">\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Usage right</label>\n                                        <p>Single usage</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Category</label>\n                                        <p>Some category</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Subject</label>\n                                        <p>Arts, culture and entertainment, Music</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Long Description</label>\n                                        <p>Nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Internal Note</label>\n                                        <p>Lorem ipsum dolor sit amet, consetetur sadipscing.</p>\n                                    </div>\n                                </div>\n                                <h3 class=\"side-panel__heading side-panel__heading--big\" ng-hide=\"multiEdit\">Related items</h3>\n                                <div class=\"sd-grid-list sd-grid-list--small sd-grid-list--no-rl-margin\" ng-hide=\"multiEdit\">\n                                    <!-- related item 1 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/d_trump_2.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 2 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/bill.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 3 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/hillary.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 4 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/bush_1.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__content\" ng-if=\"tab === 'event-history'\">\n                            <div class=\"side-panel__content-block\">\n                                <ul class=\"simple-list simple-list--dotted simple-list--no-padding\">\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Created by</strong> Mika Karapet</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:10</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Coverage created by</strong> Vince Ryan</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:13</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Updated by</strong> Karel Petrak</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:13</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Coverage updated by</strong> John Doe</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:21</time>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer\">\n\n                        </div>\n                    </div>  \n                </div>\n            </div>\n            <!-- OVERLAY PANEL ( Send To ) -->\n            <div class=\"sd-main-content-grid__overlay\">\n                <div class=\"sd-overlay-panel sd-overlay-panel--dark-ui\" ng-class=\"{'sd-overlay-panel--open' : sendToOpen}\">\n                    <div class=\"side-panel side-panel--dark-ui\">\n                        <div class=\"side-panel__header\">\n                            <div class=\"side-panel__tools\">\n                                <a class=\"icn-btn\" ng-click=\"sendToOpen = !sendToOpen\"><i class=\"icon-close-small\"></i></a>\n                            </div>\n                            <ul class=\"nav-tabs nav-tabs--big nav-tabs--ui-dark\">\n                                <li ng-class=\"{'nav-tabs__tab--active': !tab || tab === 'send-to'}\" class=\"nav-tabs__tab\">\n                                    <button class=\"nav-tabs__link\"><span translate=\"\">Send to</span></button>\n                                </li>\n                            </ul>\n                        </div>\n                        <!-- Send To Tab -->\n                        <div class=\"side-panel__content\">\n                            <div class=\"side-panel__content-block\">\n                                <div sd-toggle-box data-title=\"Destination\" data-style=\"circle\" data-open=\"true\">\n                                    <div class=\"form__row\">\n                                        <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-label sd-line-input--no-margin\">\n                                            <select class=\"sd-line-input__select\">\n                                                <option value=\"single\">Politics desk</option>\n                                                <option value=\"time\">Sports desk</option>\n                                                <option value=\"bananas\">Features desk</option>\n                                                <option value=\"indefinite\">Photo desk</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class=\"form__row form__row--no-padding\">\n                                        <div class=\"flex-grid flex-grid--boxed-small flex-grid--wrap-items flex-grid--small-2\">\n                                            <button class=\"btn__check btn__check--active flex-grid__item\" disabled=\"disabled\">Active disabled</button>\n                                            <button class=\"btn__check flex-grid__item\" disabled=\"disabled\">Disabled</button>\n                                            <button ng-click=\"stageActive0 = !stageActive0\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive0}\">Incoming stage</button>\n                                            <button ng-click=\"stageActive1 = !stageActive1\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive1}\">Working stage</button>\n                                            <button ng-click=\"stageActive2 = !stageActive2\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive2}\">Revise stage</button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div sd-toggle-box data-title=\"Embargo\" data-style=\"circle\" data-open=\"true\">\n                                    <div class=\"form__row form__row--flex  form__row--small-padding\">\n                                        <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                            <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                            <label class=\"sd-line-input__label\">Embargo till</label>\n                                            <input class=\"sd-line-input__input\" type=\"text\">\n                                        </div>\n                                        <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                            <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                            <input class=\"sd-line-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                    <a class=\"text-link text-link--white\" href=\"\"><i class=\"icon-remove-sign\"> </i> Clear embargo</a>\n                                </div>\n                                <div sd-toggle-box data-title=\"Publish schedule\" data-style=\"circle\" data-open=\"true\">\n                                    <div class=\"form__row form__row--flex  form__row--small-padding\">\n                                        <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                            <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                            <label class=\"sd-line-input__label\">Publish on</label>\n                                            <input class=\"sd-line-input__input\" type=\"text\">\n                                        </div>\n                                        <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                            <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                            <input class=\"sd-line-input__input\" type=\"text\">\n                                        </div>\n                                    </div>\n                                    <a class=\"text-link text-link--white\" href=\"\"><i class=\"icon-remove-sign\"> </i> Clear schedule</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer side-panel__footer--button-box-large\" ng-if=\"!tab || tab === 'send-to'\">\n                            <button class=\"btn btn--large btn--primary btn--expanded\">Send</button>\n                        </div>\n                        <div class=\"side-panel__footer side-panel__footer--button-box-large\" ng-if=\"tab === 'publish'\">\n                            <button class=\"btn btn--large btn--highlight btn--expanded\">Publish</button>\n                        </div>\n                    </div>  \n                </div>\n            </div>\n            <!-- END OVERLAY PANEL -->\n            <!-- END left content -->\n        </div>\n        <div class=\"sd-content-wrapper__content-splitter\" ng-if=\"editArticle\" sd-splitter=\"authoringContent\" splitter-max=\"1000\" splitter-min=\"650\"></div>\n        <div id=\"authoringContent\" class=\"sd-content-wrapper__authoring-content-area\" ng-include=\"'playgrounds/layout-snippets/edit-article.html'\" ng-if=\"editArticle\">\n\n        </div>\n    </section>\n    <footer class=\"bottom-bar\">\n        This is the optional footer.\n    </footer>\n</div>\n";

/***/ }),
/* 262 */
/***/ (function(module, exports) {

module.exports = "<div class=\"sd-page-grid--basic\" doc-modal>\n    <header class=\"sd-top-menu\">\n        <a href=\"\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n        <p class=\"sd-top-menu__header\">Photo Desk</p>\n    </header>\n\n    <section class=\"sd-content sd-page-content--slide-in\" ng-class=\"{\n            'sd-page-content--slide-in--open' : editorOpen}\">\n\n        <div class=\"sd-sidebar-menu sd-page-content__left-tabs\">\n            <ul class=\"authoring-active\">\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Monitoring\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--view\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Highlights\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--marked-star\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Spiked\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--spike\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Personal\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--personal\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Search\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--global-search\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Media archive\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\" ng-click=\"menuItemActive1 = !menuItemActive1\" ng-class=\"{'sd-sidebar-menu__btn--closed': menuItemActive1}\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--picture\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n            </ul>\n        </div>\n        <div id=\"leftContent\"  ng-init=\"darkUI = true; gridView = true\" class=\"sd-page-content__content-block sd-page-content__content-block--main\" ng-class=\"{'open-filters': leftFilterOpen, 'open-preview': leftPreviewOpen, 'dark-ui': darkUI}\">\n            <!-- left content -->\n            <div class=\"subnav\" ng-class=\"{'subnav--dark-ui': darkUI}\">\n                <div class=\"subnav__sliding-toolbar\" ng-show=\"select1 || select2 || select3 || select4 || select5 || select6 || select7 || select8\">\n                    <div class=\"sliding-toolbar__inner\">\n                        <a class=\"btn\" ng-click=\"select1 = false; select2 = false; select3 = false; select4 = false; select5 = false; select6 = false; select7 = false; select8 = false\">Cancel</a>\n                        <span class=\"sliding-toolbar__info-text\">1 item selected</span>\n                    </div>\n                    <a class=\"btn btn--primary\" ng-click=\"openModal('imageModal'); multiEdit = true; select1 = false; select2 = false; select3 = false; select4 = false; select5 = false; select6 = false; select7 = false; select8 = false; select11 = true; select12 = true; select13 = true; select14 = true\">Edit metadata</a>\n                    <a class=\"btn btn--alert\"><i class=\"icon-trash\"></i>Delete</a>\n                </div>\n                <div class=\"subnav__spacer subnav__spacer--no-margin\"></div>\n                <div class=\"sd-searchbar\" ng-class=\"{'sd-searchbar--focused': focused}\" >\n                    <label for=\"search-input\" class=\"sd-searchbar__icon\"></label>\n                    <input id=\"search-input\"\n                           class=\"sd-searchbar__input\"\n                           type=\"text\"\n                           placeholder=\"Search media\"\n                           ng-keyup=\"searchOnEnter($event)\"\n                           ng-model=\"query\"\n                           tabindex=\"1\"\n                           ng-focus=\"focused = true\">\n                    <button class=\"sd-searchbar__cancel\" ng-if=\"query\">\n                        <i class=\"icon-remove-sign\"></i>\n                    </button>\n                    <button id=\"sd-searchbar__search-btn\" class=\"sd-searchbar__search-btn\" ng-if=\"focused\" tabindex=\"2\">\n                        <i class=\"big-icon--chevron-right\"></i>\n                    </button>\n                </div>\n                <div class=\"dropdown dropdown--align-right\" dropdown>\n                    <button class=\"dropdown__toggle navbtn\" dropdown__toggle>\n                        <i class=\"icon-dots-vertical\"></i>\n                    </button>\n                    <ul class=\"dropdown__menu\">\n                        <li>\n                            <div class=\"dropdown__menu-label\">Actions</div>\n                        </li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li><button>Action 2</button></li>\n                        <li><button>Action 3</button></li>\n                        <li><button ng-click=\"openModal('modalEditorConfig')\">Media carousel test</button></li>\n                    </ul>\n                </div>\n                <div class=\"dropdown dropdown--align-right\" dropdown>\n                    <button class=\"dropdown__toggle navbtn sd-create-btn\" dropdown__toggle>\n                        <i class=\"icon-plus-large\"></i>\n                        <span class=\"circle\"></span>\n                    </button>\n                    <ul class=\"dropdown__menu\">\n                        <li>\n                            <div class=\"dropdown__menu-label\">Upload</div>\n                        </li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li>\n                            <button><i class=\"icon-plus-sign icon--blue\"></i>Image</button>\n                        </li>\n                        <li>\n                            <button><i class=\"icon-plus-sign icon--blue\"></i>Video</button>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"subnav\" ng-class=\"{'subnav--dark-ui': darkUI}\">\n                <button class=\"navbtn navbtn--left navbtn--darker\" ng-click=\"leftFilterOpen = !leftFilterOpen\" ng-class=\"{'navbtn--active': leftFilterOpen}\">\n                    <i class=\"icon-filter-large\"></i>\n                </button>\n                <div class=\"subnav__stretch-bar\" ng-init=\"planningType = 'events-planning'\">\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"events-planning\" label-position=\"inside\">All media types</sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"events\" label-position=\"inside\">Images only</sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"planning\" label-position=\"inside\">Videos only</sd-check>\n                </div>\n                <div class=\"subnav__spacer subnav__spacer--no-margin\"></div>\n                <div class=\"subnav__content-bar\">\n                    <button class=\"icn-btn\" ng-click=\"openComment = !openComment\">\n                        <i class=\"icon-post\"></i>\n                    </button>\n                    <div class=\"editor-popup editor-popup--annotation\" ng-class=\"{'editor-popup--open' : openComment}\" style=\"top: 100px;bottom: 40px;right: 374px;\">\n                        <div class=\"editor-popup__main editor-popup__main--floating\">\n                            <div class=\"editor-popup__header\">\n                                <figure class=\"avatar\">vs</figure>\n                                <div class=\"editor-popup__header-text\">\n                                    <p class=\"editor-popup__author-name\">Andrewopoulus Powerspopdouculopudotidus</p>\n                                    <time class=\"editor-popup__time\" title=\"12:50, 15.09.2017\">12:50, 15.09.2017</time>\n                                </div>\n                                <div class=\"editor-popup__header-tools\">\n                                    <div class=\"dropdown dropdown--align-right\" dropdown>\n                                        <button class=\"icn-btn dropdown__toggle\" dropdown__toggle>\n                                            <i class=\"icon-dots-vertical\"></i>\n                                        </button>\n                                        <ul class=\"dropdown__menu\">\n                                            <li><button><i class=\"icon-pencil\"></i>Edit</button></li>\n                                            <li><button><i class=\"icon-trash\"></i>Delete</button></li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"editor-popup__content-block\">\n                                <div class=\"editor-popup__info-bar\">\n                                    <span class=\"label label--annotation\">Annotation</span>\n                                </div>\n                                <p>Maecenas nec odio et ante tincidunt tempus. Pellentesque libero tortor, tincidunt et, tincidunt eget, semper nec, quam. Vestibulum fringilla pede sit amet augue.</p>\n                                <div class=\"comment-box__button-toolbar comment-box__button-toolbar--right\">\n                                    <button class=\"btn btn--hollow btn--small\" ng-click=\"openComment = !openComment\">Resolve</button>\n                                </div>\n                            </div>\n                            <div class=\"editor-popup__secondary-content\">\n                                <ul class=\"editor-popup__content-scrollable \">\n                                    <li class=\"comment-box__reply-item\" ng-show=\"!deleteReply1\">\n                                        <div class=\"editor-popup__header\">\n                                            <figure class=\"avatar\">pz</figure>\n                                            <div class=\"editor-popup__header-text\">\n                                                <p class=\"editor-popup__author-name\">Perus Zderus</p>\n                                                <time class=\"editor-popup__time\" title=\"12:50, 15.09.2017\">12:55, 15.09.2017</time>\n                                            </div>\n                                            <div class=\"editor-popup__header-tools\">\n                                                <div class=\"dropdown dropdown--align-right\" dropdown>\n                                                    <button class=\"icn-btn dropdown__toggle\" dropdown__toggle>\n                                                        <i class=\"icon-dots-vertical\"></i>\n                                                    </button>\n                                                    <ul class=\"dropdown__menu\">\n                                                        <li><button ng-click=\"editReply1 = true\"><i class=\"icon-pencil\"></i>Edit</button></li>\n                                                        <li><button ng-click=\"deleteReply1 = true\"><i class=\"icon-trash\"></i>Delete</button></li>\n                                                    </ul>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"editor-popup__content-block\" ng-if=\"!editReply1\">\n                                            <p>Vestibulum fringilla pede sit amet augue. Curabitur blandit mollis lacus. Aenean posuere, tortor sed cursus feugiat.</p>\n                                        </div>\n                                        <div class=\"editor-popup__content-block\" ng-show=\"editReply1\">\n                                            <textarea class=\"comment-box__input\" type=\"text\" placeholder=\"Reply\" sd-auto-height elastic=\"false\">Vestibulum fringilla pede sit amet augue. Curabitur blandit mollis lacus. Aenean posuere, tortor sed cursus feugiat.</textarea>\n                                            <div class=\"comment-box__button-toolbar comment-box__button-toolbar--right comment-box__button-toolbar--small\">\n                                                <button class=\"btn btn--icon-only btn--hollow\" ng-click=\"editReply1 = false\"><i class=\"icon-close-small\"></i></button>\n                                                <button class=\"btn btn--primary btn--icon-only\" ng-click=\"editReply1 = false\"><i class=\"icon-ok\"></i></button>\n                                            </div>\n                                        </div>\n                                    </li>\n                                    <li class=\"comment-box__reply-item\" ng-show=\"!deleteReply2\">\n                                        <div class=\"editor-popup__header\">\n                                            <figure class=\"avatar\">op</figure>\n                                            <div class=\"editor-popup__header-text\">\n                                                <p class=\"editor-popup__author-name\">Omar Epps</p>\n                                                <time class=\"editor-popup__time\" title=\"12:50, 15.09.2017\">13:15, 15.09.2017</time>\n                                            </div>\n                                            <div class=\"editor-popup__header-tools\">\n                                                <div class=\"dropdown dropdown--align-right\" dropdown>\n                                                    <button class=\"icn-btn dropdown__toggle\" dropdown__toggle>\n                                                        <i class=\"icon-dots-vertical\"></i>\n                                                    </button>\n                                                    <ul class=\"dropdown__menu\">\n                                                        <li><button ng-click=\"editReply2 = true\"><i class=\"icon-pencil\"></i>Edit</button></li>\n                                                        <li><button ng-click=\"deleteReply2 = true\"><i class=\"icon-trash\"></i>Delete</button></li>\n                                                    </ul>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"editor-popup__content-block\" ng-if=\"!editReply2\">\n                                            <p>Curabitur blandit mollis lacus. Aenean posuere, tortor sed cursus feugiat.</p>\n                                        </div>\n                                        <div class=\"editor-popup__content-block\" ng-show=\"editReply2\">\n                                            <textarea class=\"comment-box__input\" type=\"text\" placeholder=\"Reply\" sd-auto-height elastic=\"false\">Curabitur blandit mollis lacus. Aenean posuere, tortor sed cursus feugiat.</textarea>\n                                            <div class=\"comment-box__button-toolbar comment-box__button-toolbar--right comment-box__button-toolbar--small\">\n                                                <button class=\"btn btn--icon-only btn--hollow\" ng-click=\"editReply2 = false\"><i class=\"icon-close-small\"></i></button>\n                                                <button class=\"btn btn--primary btn--icon-only\" ng-click=\"editReply2 = false\"><i class=\"icon-ok\"></i></button>\n                                            </div>\n                                        </div>\n                                    </li>\n                                    <li class=\"comment-box__reply-item\" ng-show=\"!deleteReply3\">\n                                        <div class=\"editor-popup__header\">\n                                            <figure class=\"avatar\">op</figure>\n                                            <div class=\"editor-popup__header-text\">\n                                                <p class=\"editor-popup__author-name\">Michael Kenneth Williams</p>\n                                                <time class=\"editor-popup__time\" title=\"12:50, 15.09.2017\">13:15, 15.09.2017</time>\n                                            </div>\n                                            <div class=\"editor-popup__header-tools\">\n                                                <div class=\"dropdown dropdown--align-right\" dropdown>\n                                                    <button class=\"icn-btn dropdown__toggle\" dropdown__toggle>\n                                                        <i class=\"icon-dots-vertical\"></i>\n                                                    </button>\n                                                    <ul class=\"dropdown__menu\">\n                                                        <li><button ng-click=\"editReply3 = true\"><i class=\"icon-pencil\"></i>Edit</button></li>\n                                                        <li><button ng-click=\"deleteReply3 = true\"><i class=\"icon-trash\"></i>Delete</button></li>\n                                                    </ul>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"editor-popup__content-block\" ng-if=\"!editReply3\">\n                                            <p>Curabitur blandit mollis lacus. Aenean posuere, tortor sed cursus feugiat.</p>\n                                        </div>\n                                        <div class=\"editor-popup__content-block\" ng-show=\"editReply3\">\n                                            <textarea class=\"comment-box__input\" type=\"text\" placeholder=\"Reply\" sd-auto-height elastic=\"false\">Curabitur blandit mollis lacus. Aenean posuere, tortor sed cursus feugiat.</textarea>\n                                            <div class=\"comment-box__button-toolbar comment-box__button-toolbar--right comment-box__button-toolbar--small\">\n                                                <button class=\"btn btn--icon-only btn--hollow\" ng-click=\"editReply3 = false\"><i class=\"icon-close-small\"></i></button>\n                                                <button class=\"btn btn--primary btn--icon-only\" ng-click=\"editReply3 = false\"><i class=\"icon-ok\"></i></button>\n                                            </div>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <div class=\"editor-popup__content-block\">\n                                    <textarea class=\"comment-box__input\" type=\"text\" placeholder=\"Reply\" sd-auto-height elastic=\"false\" ng-focus=\"replyFocus = true\"></textarea>\n                                    <div class=\"comment-box__reply-toolbar\" ng-class=\"{'comment-box__reply-toolbar--active' : replyFocus}\">\n                                        <button class=\"btn btn--primary\" ng-click=\"replyFocus = false\">Reply</button>\n                                        <button class=\"btn\" ng-click=\"replyFocus = false\">Cancel</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"subnav__spacer subnav__spacer--no-margin\"></div>\n                <div class=\"subnav__content-bar\">\n                    <span>Total:</span> <span class=\"badge\" style=\"margin: 0 10px 0 6px;\">6432</span>\n                    <div class=\"dropdown dropdown--align-right\" dropdown>\n                        <button class=\"dropdown__toggle\" dropdown__toggle>\n                            Updated<span class=\"dropdown__caret\"></span>\n                        </button>\n                        <ul class=\"dropdown__menu\">\n                            <li><button>Updated</button></li>\n                            <li><button>Created</button></li>\n                            <li><button>Urgency</button></li>\n                            <li><button>Category</button></li>\n                            <li><button>Slugline</button></li>\n                            <li><button>Priority</button></li>\n                            <li><button>Genre</button></li>\n                        </ul>\n                    </div>\n                    <a class=\"icn-btn\" sd-tooltip=\"Descending\" flow=\"bottom\" ng-click=\"sortDesc = !sortDesc\" ng-hide=\"!sortDesc\"><i class=\"icon-descending\"></i></a>\n                    <a class=\"icn-btn\" sd-tooltip=\"Ascending\" flow=\"bottom\" ng-click=\"sortDesc = !sortDesc\" ng-show=\"!sortDesc\"><i class=\"icon-ascending\"></i></a>\n\n                </div>\n                <button class=\"navbtn\" ng-click=\"darkUI = !darkUI\">\n                    <i class=\"icon-adjust\"></i>\n                </button>\n                <button class=\"navbtn\" ng-click=\"gridView = !gridView\">\n                    <i class=\"icon-th\" ng-hide=\"gridView\"></i>\n                    <i class=\"icon-th-list\" ng-show=\"gridView\"></i>\n                </button>\n            </div>\n            <div class=\"sd-column-box--3\">\n                <div class=\"sd-filters-panel\">\n                    <div class=\"side-panel side-panel--transparent side-panel--shadow-left\">\n                        <div class=\"side-panel__header side-panel__header--border-b\">\n                            <a class=\"icn-btn side-panel__close\" sd-tooltip=\"Close filters\" flow=\"left\" ng-click=\"leftFilterOpen = !leftFilterOpen\"><i class=\"icon-close-small\"></i></a>\n                            <h3 class=\"side-panel__heading\">Advanced filters</h3>  \n                        </div>\n                        <div class=\"side-panel__content\">\n                            <div class=\"side-panel__content-block\">\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <label class=\"sd-line-input__label\">Title</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--is-select sd-line-input--no-margin\">\n                                        <label class=\"sd-line-input__label\">Source</label>\n                                        <select class=\"sd-line-input__select\">\n                                            <option value=\"\">Select ingest source...</option>\n                                            <option value=\"\">Associated Press</option>\n                                            <option value=\"\">Reuters</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <label class=\"sd-line-input__label\">Location</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                                        <span class=\"sd-line-input__plus-btn\"></span>\n                                        <label class=\"sd-line-input__label\">Category</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                                        <span class=\"sd-line-input__plus-btn\"></span>\n                                        <label class=\"sd-line-input__label\">Subject</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--is-select \">\n                                        <label class=\"sd-line-input__label\">Usage right</label>\n                                        <select class=\"sd-line-input__select\">\n                                            <option value=\"\">--- Not selected ---</option>\n                                            <option value=\"single\">Single usage</option>\n                                            <option value=\"time\">Time restricted</option>\n                                            <option value=\"bananas\">Indefinite usage</option>\n                                            <option value=\"indefinite\">Pears</option>\n                                        </select>\n                                        <span class=\"sd-line-input__hint\">Dolor in hendrerit.</span>\n                                    </div>\n                                </div>\n                                <div class=\"form__row form__row--flex\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                        <label class=\"sd-line-input__label\">From</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row form__row--flex\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                        <label class=\"sd-line-input__label\">To</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer side-panel__footer--button-box\">\n                            <div class=\"flex-grid flex-grid--boxed-small flex-grid--wrap-items flex-grid--small-2\">\n                                <a class=\"btn btn--hollow\">Clear</a>\n                                <a class=\"btn btn--primary\">Submit</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"sd-column-box__main-column\">\n                    <div class=\"sd-list-header\">\n                        <span class=\"sd-list-header__name\">Friday September 15, 2017</span>\n                    </div>\n                    <!-- Grid item view -->\n                    <div class=\"sd-grid-list\" ng-hide=\"!gridView\">\n                        <!-- item 1 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select1, 'sd-grid-item--activated' : selectThis1}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\" ng-click=\"openModal('imageModal')\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select1\"></sd-check>\n                                </div>\n                                <img src=\"/d_trump.jpg\" alt=\"Trt\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span>\n                                </div>\n                                \n                            </div>\n                            <div class=\"sd-grid-item__footer\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--success sd-grid-item__footer-block-item\">1</span><span class=\"badge badge--warning badge--square sd-grid-item__footer-block-item\">3</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- item 2 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select2}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\" ng-click=\"openModal('imageModal')\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select2\"></sd-check>\n                                </div>\n                                <img src=\"/d_trump_2.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">In ac dui quis mi consectetuer lacinia. Aenean tellus metus, bibendum sed, posuere ac, mattis non, nunc.</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--primary sd-grid-item__footer-block-item\">2</span><span class=\"badge badge--alert badge--square sd-grid-item__footer-block-item\">4</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- item 3 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select3}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\" ng-click=\"openModal('imageModal')\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select3\"></sd-check>\n                                </div>\n                                <img src=\"/bill.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae. Aenean tellus metus, bibendum sed...</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span>  \n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--highlight sd-grid-item__footer-block-item\">3</span><span class=\"badge badge--light badge--square\">&nbsp;</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- item 4 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select4}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\" ng-click=\"openModal('imageModal')\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select4\"></sd-check>\n                                </div>\n                                <img src=\"/hillary.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero.</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">Reuters</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--primary sd-grid-item__footer-block-item\">2</span><span class=\"badge badge--warning badge--square sd-grid-item__footer-block-item\">3</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- item 5 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select5}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select5\"></sd-check>\n                                </div>\n                                <img src=\"/obama_1.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Pellentesque auctor neque nec urna. Vestibulum turpis sem, aliquet eget lobortis...</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span> \n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--light\">&nbsp;</span><span class=\"badge badge--square sd-grid-item__footer-block-item\">5</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- item 6 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select6}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select6\"></sd-check>\n                                </div>\n                                <img src=\"/obama_2.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Vestibulum turpis sem, aliquet eget lobortis...</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--highlight sd-grid-item__footer-block-item\">3</span><span class=\"badge badge--light badge--square\">&nbsp;</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- item 7 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select7}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select7\"></sd-check>\n                                </div>\n                                <img src=\"/bush_1.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Vivamus in erat ut urna cursus vestibulum. Sed consequat, leo eget bibendum sodales...</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--success sd-grid-item__footer-block-item\">1</span><span class=\"badge badge--highlight badge--square sd-grid-item__footer-block-item\">2</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- item 8 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select8}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select8\"></sd-check>\n                                </div>\n                                <img src=\"/bush_2.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Mauris sollicitudin fermentum libero, vestibulum et, tempor auctor, justo...</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--primary sd-grid-item__footer-block-item\">2</span><span class=\"badge badge--square sd-grid-item__footer-block-item\">5</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- List item view -->\n                \n                    <div class=\"sd-list-item-group sd-list-item-group--space-between-items\" ng-show=\"!gridView\" ng-class=\"{'sd-list-item-group--dark-ui' : darkUI}\">\n                        <!-- list item  1 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select1, 'sd-list-item--activated' : selectThis1}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select1}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select1\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--success\">1</span>\n                                    <span class=\"badge badge--warning badge--square \">3</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  2 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select2}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select2}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select2\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--primary\">2</span>\n                                    <span class=\"badge badge--alert badge--square\">4</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>In ac dui quis mi consectetuer lacinia. Aenean tellus metus, bibendum sed, posuere ac, mattis non, nunc.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  3 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select3}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select3}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select3\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--highlight\">3</span>\n                                    <span class=\"badge badge--light badge--square\">&nbsp;</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae. Aenean tellus metus, bibendum sed...</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  4 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select4}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select4}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select4\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--primary\">2</span>\n                                    <span class=\"badge badge--warning badge--square\">3</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n\n                        <!-- list item  5 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select5}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select5}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select5\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--light\">&nbsp;</span>\n                                    <span class=\"badge badge--square\">5</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Pellentesque auctor neque nec urna. Vestibulum turpis sem, aliquet eget lobortis...</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  6 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select6}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select6}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select6\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--highlight\">3</span>\n                                    <span class=\"badge badge--light badge--square\">&nbsp;</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Vestibulum turpis sem, aliquet eget lobortis...</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  7 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select7}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select7}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select7\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--success\">1</span>\n                                    <span class=\"badge badge--highlight badge--square\">2</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Vivamus in erat ut urna cursus vestibulum. Sed consequat, leo eget bibendum sodales...</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  8 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select8}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select8}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select8\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--primary\">2</span>\n                                    <span class=\"badge badge--square\">5</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Mauris sollicitudin fermentum libero, vestibulum et, tempor auctor, justo...</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"sd-preview-panel\" ng-class=\"{'sd-preview-panel--dark-ui' : darkUI}\">\n                    <div class=\"side-panel side-panel--shadow-right\" ng-class=\"{'side-panel--dark-ui' : darkUI}\">\n                        <div class=\"side-panel__header\">\n                            <div class=\"side-panel__tools\">\n                                <a class=\"icn-btn\" sd-tooltip=\"Edit details\" flow=\"top\" ng-click=\"editorOpen = true; leftPreviewOpen = false\"><i class=\"icon-pencil\"></i></a>\n                                <a class=\"icn-btn\" sd-tooltip=\"Close details\" flow=\"top\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\"><i class=\"icon-close-small\"></i></a>\n                            </div>\n                            <ul class=\"nav-tabs\" ng-class=\"{'nav-tabs--ui-dark' : darkUI}\">\n                                <li ng-class=\"{'nav-tabs__tab--active': !tab || tab === 'event-details'}\" class=\"nav-tabs__tab\">\n                                    <button ng-click=\"tab = 'event-details'\" class=\"nav-tabs__link\"><span translate=\"\">Content</span></button>\n                                </li>\n                                <li ng-class=\"{'nav-tabs__tab--active': tab === 'event-history'}\" class=\"nav-tabs__tab\">\n                                    <button ng-click=\"tab = 'event-history'\" class=\"nav-tabs__link\"><span translate=\"\">History</span></button>\n                                </li>\n                            </ul> \n                        </div>\n                        <div class=\"side-panel__content\" ng-if=\"!tab || tab === 'event-details'\">\n                            <div class=\"side-panel__content-block side-panel__content-block--pad-small side-panel__content-block--flex\">\n                                <div class=\"side-panel__content-block-inner side-panel__content-block-inner--grow\">\n                                    <p class=\"sd-text__date-and-author\"><time>Created 23.08.2017 by </time> <span class=\"sd-text__author\">Mika Karapet</span></p> \n                                    <p class=\"sd-text__date-and-author\"><time>Updated 3 hours ago by</time> <span class=\"sd-text__author\">John Doe</span></p>\n                                </div>\n                                <div class=\"side-panel__content-block-inner side-panel__content-block-inner--right\">\n                                    <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                                </div>\n                            </div>\n                            <div class=\"side-panel__content-block side-panel__content-block--image\">\n                                <a class=\"icn-btn side-panel__image-actions\" ng-click=\"openModal('imageModal')\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <img src=\"/d_trump.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"side-panel__content-block\">\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Slugline</label>\n                                    <p class=\"sd-text__slugline\">This is a slugline</p>\n                                </div>\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Description</label>\n                                    <p>Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</p>\n                                </div>\n\n                                <div sd-toggle-box data-title=\"Details\" data-style=\"circle\">\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Usage right</label>\n                                        <p>Single usage</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Category</label>\n                                        <p>Some category</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Subject</label>\n                                        <p>Arts, culture and entertainment, Music</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Long Description</label>\n                                        <p>Nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Internal Note</label>\n                                        <p>Lorem ipsum dolor sit amet, consetetur sadipscing.</p>\n                                    </div>\n                                </div>\n                                <h3 class=\"side-panel__heading side-panel__heading--big\" ng-hide=\"multiEdit\">Related items</h3>\n                                <div class=\"sd-grid-list sd-grid-list--small sd-grid-list--no-rl-margin dark-ui\" ng-hide=\"multiEdit\">\n                                    <!-- related item 1 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/d_trump_2.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 2 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/bill.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 3 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/hillary.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 4 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/bush_1.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__content\" ng-if=\"tab === 'event-history'\">\n                            <div class=\"side-panel__content-block\">\n                                <ul class=\"simple-list simple-list--dotted simple-list--no-padding\">\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Created by</strong> Mika Karapet</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:10</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Coverage created by</strong> Vince Ryan</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:13</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Updated by</strong> Karel Petrak</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:13</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Coverage updated by</strong> John Doe</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:21</time>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer\">\n\n                        </div>\n                    </div>      \n                </div>\n            </div>\n            <!-- END left content -->\n        </div>\n\n        <!-- SPLIT CONTENT -->\n        <div \n        id=\"editPane\" \n        class=\"sd-edit-panel sd-page-content__content-block sd-page-content__content-block--right sd-page-content__content-block--30-slide\" \n        ng-class=\"{'open-filters': rightFilterOpen, 'open-preview': rightPreviewOpen}\">\n            <!-- Eitor content -->\n            <div\n            class=\"side-panel side-panel--shadow-right\" \n            ng-if=\"!itemType || itemType === 'planning'\"\n            ng-include=\"'playgrounds/photo-snippets/edit-photo-metadata.html'\"></div>\n            <!-- END Editor content -->\n        </div>\n    </section>\n    <footer class=\"bottom-bar \">\n        This is the optional footer.\n    </footer>\n</div>\n    <!-- Editor configuration modal -->\n    <div sd-modal data-model=\"modalEditorConfig\" class=\"modal--x-large\">\n        <div class=\"modal__header\">\n            <button class=\"modal__close pull-right icn-btn\" ng-click=\"closeModal('modalEditorConfig')\"><i class=\"icon-close-small\"></i></button>\n            <h3 class=\"modal__heading\">Media carousel test</h3>\n        </div>\n        <div class=\"modal__body modal__body--no-padding\">\n            <div class=\"sd-column-box--2\">\n                <div class=\"sd-column-box__main-column sd-column-box__main-column--left sd-column-box__main-column--padded\">\n                    <div class=\"form__row\">\n                        <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--is-select\">\n                            <label class=\"sd-line-input__label\">Font</label>\n                            <select class=\"sd-line-input__select\" ng-model=\"fontFace\" ng-init=\"fontFace = 'sans'\" >\n                                <option value=\"sans\">Sans-serif (Roboto)</option>\n                                <option value=\"serif\">Serif (Merriweather)</option>\n                                <option value=\"mono\">Monospace (Roboto Mono)</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"color-swatch__list\" ng-init=\"selctTheme1 = true\">\n                        <div class=\"color-swatch sd-editor--theme-default\" \n                            ng-click=\"selctTheme1 = true; selctTheme2 = false; selctTheme3 = false; selctTheme4 = false; selctTheme5 = false; selctTheme6 = false;\" \n                            ng-class=\"{'color-swatch--selected' : selctTheme1}\">\n                            <span class=\"color-swatch__inner\">a</span>\n                        </div>\n                        <div class=\"color-swatch sd-editor--theme-dark\" \n                            ng-click=\"selctTheme2 = true; selctTheme1 = false; selctTheme3 = false; selctTheme4 = false; selctTheme5 = false; selctTheme6 = false;\" \n                            ng-class=\"{'color-swatch--selected' : selctTheme2}\">\n                            <span class=\"color-swatch__inner\">a</span>\n                        </div>\n                        <div class=\"color-swatch sd-editor--theme-blue\" \n                            ng-click=\"selctTheme3 = true; selctTheme1 = false; selctTheme2 = false; selctTheme4 = false; selctTheme5 = false; selctTheme6 = false;\" \n                            ng-class=\"{'color-swatch--selected' : selctTheme3}\">\n                            <span class=\"color-swatch__inner\">a</span>\n                        </div>\n                        <div class=\"color-swatch sd-editor--theme-turquoise\" \n                            ng-click=\"selctTheme4 = true; selctTheme1 = false; selctTheme2 = false; selctTheme3 = false; selctTheme5 = false; selctTheme6 = false;\" \n                            ng-class=\"{'color-swatch--selected' : selctTheme4}\">\n                            <span class=\"color-swatch__inner\">a</span>\n                        </div>\n                        <div class=\"color-swatch sd-editor--theme-military\" \n                            ng-click=\"selctTheme5 = true; selctTheme1 = false; selctTheme2 = false; selctTheme3 = false; selctTheme4 = false; selctTheme6 = false;\" \n                            ng-class=\"{'color-swatch--selected' : selctTheme5}\">\n                            <span class=\"color-swatch__inner\">a</span>\n                        </div>\n                        <div class=\"color-swatch sd-editor--theme-natural\" \n                            ng-click=\"selctTheme6 = true; selctTheme1 = false; selctTheme2 = false; selctTheme3 = false; selctTheme4 = false; selctTheme5 = false;\" \n                            ng-class=\"{'color-swatch--selected' : selctTheme6}\">\n                            <span class=\"color-swatch__inner\">a</span>\n                        </div>\n                    </div>\n                    <div class=\"theme-preview\" \n                    ng-class=\"{'sd-editor--font-sans' : fontFace === 'sans', 'sd-editor--font-serif' : fontFace === 'serif', 'sd-editor--font-mono' : fontFace === 'mono', 'sd-editor--theme-default' : selctTheme1, 'sd-editor--theme-dark' : selctTheme2, 'sd-editor--theme-blue' : selctTheme3, 'sd-editor--theme-turquoise' : selctTheme4,  'sd-editor--theme-military' : selctTheme5, 'sd-editor--theme-natural' : selctTheme6, 'sd-editor--headline-small' : fontSizeHeadline === 's', 'sd-editor--headline-medium' : fontSizeHeadline === 'm', 'sd-editor--headline-large' : fontSizeHeadline === 'l', 'sd-editor--abstract-small' : fontSizeAbstract === 's', 'sd-editor--abstract-medium' : fontSizeAbstract === 'm', 'sd-editor--abstract-large' : fontSizeAbstract === 'l', 'sd-editor--body-small' : fontSizeBody === 's', 'sd-editor--body-medium' : fontSizeBody === 'm', 'sd-editor--body-large' : fontSizeBody === 'l'}\"\n                    ng-init=\"fontSizeHeadline = 'm'; fontSizeAbstract = 'm'; fontSizeBody = 'm'\">\n                        <div class=\"theme-preview__block\" style=\"margin: 30px 60px;\">\n                            <label class=\"theme-preview__label\">Featured media</label>\n                            <div class=\"theme-preview__media-field\">\n                                <div class=\"sd-media-carousel\">\n                                    <div class=\"sd-media-carousel__dialog\">\n                                        <div class=\"sd-media-carousel__content\">\n                                            <a href=\"\" class=\"sd-media-carousel__nav-button sd-media-carousel__nav-button--prev-inner sd-media-carousel__nav-button--disabled\"></a>\n                                            <a href=\"\" class=\"sd-media-carousel__nav-button sd-media-carousel__nav-button--next-inner\"></a>\n                                            <div class=\"sd-media-carousel__page\">\n                                                <div class=\"sd-media-carousel__page-media\">\n                                                    <img src=\"/d_trump.jpg\" alt=\"Ronmo\">\n                                                </div>\n                                                <div class=\"sd-media-carousel__media-caption\">\n                                                    Lorem ipsum dolor amet.\n                                                </div>\n                                            </div>\n                                        </div>\n                                        \n                                        <div class=\"sd-media-carousel__thumb-strip\" ng-init=\"thumb1Active = true\">\n                                            <div class=\"sd-media-carousel__thumb-strip-item\" ng-class=\"{'sd-media-carousel__thumb-strip-item--active' : thumb1Active}\" ng-click=\"thumb1Active = true; thumb2Active = false; thumb3Active = false; thumb4Active = false; thumb5Active = false; thumb6Active = false; thumb7Active = false; thumb8Active = false\">\n                                                <div class=\"sd-media-carousel__thumb\">\n                                                    <img src=\"/d_trump.jpg\" alt=\"Ronmo\">\n                                                </div>\n                                            </div>\n                                            <div class=\"sd-media-carousel__thumb-strip-item\" ng-class=\"{'sd-media-carousel__thumb-strip-item--active' : thumb2Active}\" ng-click=\"thumb2Active = true; thumb1Active = false; thumb3Active = false; thumb4Active = false; thumb5Active = false; thumb6Active = false; thumb7Active = false; thumb8Active = false\">\n                                                <div class=\"sd-media-carousel__thumb\">\n                                                    <img src=\"/d_trump_2.jpg\" alt=\"Ronmo\">\n                                                </div>\n                                            </div>\n                                            <div class=\"sd-media-carousel__thumb-strip-item\" ng-class=\"{'sd-media-carousel__thumb-strip-item--active' : thumb3Active}\" ng-click=\"thumb3Active = true; thumb1Active = false; thumb2Active = false; thumb4Active = false; thumb5Active = false; thumb6Active = false; thumb7Active = false; thumb8Active = false\">\n                                                <div class=\"sd-media-carousel__thumb\">\n                                                    <img src=\"/d_trump.jpg\" alt=\"Ronmo\">\n                                                </div>\n                                            </div>\n                                            <div class=\"sd-media-carousel__thumb-strip-item\" ng-class=\"{'sd-media-carousel__thumb-strip-item--active' : thumb4Active}\" ng-click=\"thumb4Active = true; thumb1Active = false; thumb2Active = false; thumb3Active = false; thumb5Active = false; thumb6Active = false; thumb7Active = false; thumb8Active = false\">\n                                                <div class=\"sd-media-carousel__thumb\">\n                                                    <img src=\"/d_trump.jpg\" alt=\"Ronmo\">\n                                                </div>\n                                            </div>\n                                            <div class=\"sd-media-carousel__thumb-strip-item\" ng-class=\"{'sd-media-carousel__thumb-strip-item--active' : thumb5Active}\" ng-click=\"thumb5Active = true; thumb1Active = false; thumb2Active = false; thumb3Active = false; thumb4Active = false; thumb6Active = false; thumb7Active = false; thumb8Active = false\">\n                                                <div class=\"sd-media-carousel__thumb\">\n                                                    <img src=\"/d_trump.jpg\" alt=\"Ronmo\">\n                                                </div>\n                                            </div>\n                                            <div class=\"sd-media-carousel__thumb-strip-item\" ng-class=\"{'sd-media-carousel__thumb-strip-item--active' : thumb6Active}\" ng-click=\"thumb6Active = true; thumb1Active = false; thumb2Active = false; thumb3Active = false; thumb4Active = false; thumb5Active = false; thumb7Active = false; thumb8Active = false\">\n                                                <div class=\"sd-media-carousel__thumb\">\n                                                    <img src=\"/d_trump.jpg\" alt=\"Ronmo\">\n                                                </div>\n                                            </div>\n                                            <div class=\"sd-media-carousel__thumb-strip-item\" ng-class=\"{'sd-media-carousel__thumb-strip-item--active' : thumb7Active}\" ng-click=\"thumb7Active = true; thumb1Active = false; thumb2Active = false; thumb3Active = false; thumb4Active = false; thumb5Active = false; thumb6Active = false; thumb8Active = false\">\n                                                <div class=\"sd-media-carousel__thumb\">\n                                                    <img src=\"/d_trump.jpg\" alt=\"Ronmo\">\n                                                </div>\n                                            </div>\n                                            <div class=\"sd-media-carousel__thumb-strip-item\" ng-class=\"{'sd-media-carousel__thumb-strip-item--active' : thumb8Active}\" ng-click=\"thumb8Active = true; thumb1Active = false; thumb2Active = false; thumb3Active = false; thumb4Active = false; thumb5Active = false; thumb6Active = false; thumb7Active = false\">\n                                                <div class=\"sd-media-carousel__thumb\">\n                                                    <img src=\"/d_trump.jpg\" alt=\"Ronmo\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"modal__footer\">\n            <button class=\"btn\" ng-click=\"closeModal('modalEditorConfig')\">Cancel</button>\n            <button class=\"btn btn--primary\" ng-click=\"closeModal('modalEditorConfig')\">Save</button>\n        </div>\n    </div>\n    <!-- END Editor configuration modal -->\n";

/***/ }),
/* 263 */
/***/ (function(module, exports) {

module.exports = "<header class=\"sd-top-menu\">\n    <a class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n    <p class=\"sd-top-menu__header\">Nav buttons</p>\n</header>\n<main class=\"sd-page\">\n    <section class=\"sd-page__main-content\" ng-class=\"{'dark-ui': darkUI}\">\n        <div class=\"subnav\" ng-class=\"{'subnav--dark-ui': darkUI}\">\n\n            <div class=\"button-group button-group--left\">\n                <button class=\"sd-navbtn sd-navbtn--darker\">\n                    <i class=\"big-icon--dashboard\"></i>\n                </button>\n                <button class=\"sd-navbtn\">\n                    <i class=\"icon-slideshow\"></i>\n                </button>\n            </div>\n\n            <div class=\"button-group button-group--center\">\n                <button class=\"sd-navbtn\">\n                    <i class=\"icon-align-left\"></i>\n                </button>\n                <button class=\"sd-navbtn sd-navbtn--primary\">\n                    <i class=\"icon-align-center\"></i>\n                </button>\n                <button class=\"sd-navbtn sd-navbtn--highlight\">\n                    <i class=\"icon-align-right\"></i>\n                </button>\n            </div>\n\n            <div class=\"button-group button-group--right\">\n                <div class=\"dropdown dropdown--align-right\" dropdown>\n                    <button class=\"sd-navbtn\" dropdown__toggle>\n                        <i class=\"icon-dots-vertical\"></i>\n                    </button>\n                    <ul class=\"dropdown__menu\">\n                        <li>\n                            <div class=\"dropdown__menu-label\">Actions</div>\n                        </li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li><button>Action 1</button></li>\n                        <li><button>Action 2</button></li>\n                        <li><button>Action 3</button></li>\n                    </ul>\n                </div>\n\n                <button class=\"sd-navbtn\">\n                    <i class=\"icon-copy\"></i>\n                </button>\n\n                <button class=\"sd-navbtn\" ng-click=\"darkUI = !darkUI\">\n                    <i class=\"icon-adjust\"></i>\n                </button>\n            </div>\n\n        </div>\n        <div class=\"sd-page__content\">\n            <div class=\"grid grid--boxed\" style=\"max-width: 500px; margin: 0 auto\">\n                <div class=\"grid__item\">\n\n                    \n                </div>\n            </div>\n        </div>\n    </section>\n</main>\n";

/***/ }),
/* 264 */
/***/ (function(module, exports) {

module.exports = "<div class=\"sd-page-grid--basic\" doc-modal>\n    <header class=\"sd-top-menu\">\n        <a href=\"\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n        <p class=\"sd-top-menu__header\">Photo Desk</p>\n    </header>\n\n    <section class=\"sd-content sd-page-content--slide-in\" ng-class=\"{\n            'sd-page-content--slide-in--open' : editorOpen}\">\n\n        <div class=\"sd-sidebar-menu sd-page-content__left-tabs\">\n            <ul class=\"authoring-active\">\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Monitoring\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--view\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Highlights\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--marked-star\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Spiked\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--spike\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Personal\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--personal\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Search\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--global-search\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Media archive\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\" ng-click=\"menuItemActive1 = !menuItemActive1\" ng-class=\"{'sd-sidebar-menu__btn--closed': menuItemActive1}\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--picture\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n            </ul>\n        </div>\n        <div id=\"leftContent\"  ng-init=\"darkUI = true; gridView = true\" class=\"sd-page-content__content-block sd-page-content__content-block--main\" ng-class=\"{'open-filters': leftFilterOpen, 'open-preview': leftPreviewOpen, 'dark-ui': darkUI}\">\n            <!-- left content -->\n            <div class=\"subnav\" ng-class=\"{'subnav--dark-ui': darkUI}\">\n                <div class=\"subnav__sliding-toolbar\" ng-show=\"select1 || select2 || select3 || select4 || select5 || select6 || select7 || select8\">\n                    <div class=\"sliding-toolbar__inner\">\n                        <a class=\"btn\" ng-click=\"select1 = false; select2 = false; select3 = false; select4 = false; select5 = false; select6 = false; select7 = false; select8 = false\">Cancel</a>\n                        <span class=\"sliding-toolbar__info-text\">1 item selected</span>\n                    </div>\n                    <a class=\"btn btn--primary\" ng-click=\"openModal('imageModal'); multiEdit = true; select1 = false; select2 = false; select3 = false; select4 = false; select5 = false; select6 = false; select7 = false; select8 = false; select11 = true; select12 = true; select13 = true; select14 = true\">Edit metadata</a>\n                    <a class=\"btn btn--alert\"><i class=\"icon-trash\"></i>Delete</a>\n                </div>\n                \n                <div class=\"dropdown\" dropdown>\n                    <button class=\"dropdown__toggle navbtn navbtn--text-only dropdown-toggle\" dropdown-toggle >All media archives<span class=\"dropdown__caret\"></span></button>\n                    <ul class=\"dropdown__menu scrollable\">\n                        <li><div class=\"dropdown__menu-label ng-binding\">Media archives</div></li>\n                        <li><button>Media archive One</button></li>\n                        <li><button>Media archive Two</button></li>\n                        <li><button>Media archive Three</button></li>\n                    </ul>\n                </div>\n                <div class=\"subnav__spacer subnav__spacer--no-margin\"></div>\n                <div class=\"sd-searchbar\" ng-class=\"{'sd-searchbar--focused': focused}\" >\n                    <label for=\"search-input\" class=\"sd-searchbar__icon\"></label>\n                    <input id=\"search-input\"\n                           class=\"sd-searchbar__input\"\n                           type=\"text\"\n                           placeholder=\"Search media\"\n                           ng-keyup=\"searchOnEnter($event)\"\n                           ng-model=\"query\"\n                           tabindex=\"1\"\n                           ng-focus=\"focused = true\">\n                    <button class=\"sd-searchbar__cancel\" ng-if=\"query\">\n                        <i class=\"icon-remove-sign\"></i>\n                    </button>\n                    <button id=\"sd-searchbar__search-btn\" class=\"sd-searchbar__search-btn\" ng-if=\"focused\" tabindex=\"2\">\n                        <i class=\"big-icon--chevron-right\"></i>\n                    </button>\n                </div>\n                <div class=\"dropdown dropdown--align-right\" dropdown>\n                    <button class=\"dropdown__toggle navbtn\" dropdown__toggle>\n                        <i class=\"icon-dots-vertical\"></i>\n                    </button>\n                    <ul class=\"dropdown__menu\">\n                        <li>\n                            <div class=\"dropdown__menu-label\">Actions</div>\n                        </li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li><button>Action 2</button></li>\n                        <li><button>Action 3</button></li>\n                        <li><button ng-click=\"openModal('modalEditorConfig')\">Configure Editor</button></li>\n                    </ul>\n                </div>\n                <div class=\"dropdown dropdown--align-right\" dropdown>\n                    <button class=\"dropdown__toggle navbtn sd-create-btn\" dropdown__toggle>\n                        <i class=\"icon-plus-large\"></i>\n                        <span class=\"circle\"></span>\n                    </button>\n                    <ul class=\"dropdown__menu\">\n                        <li>\n                            <div class=\"dropdown__menu-label\">Upload</div>\n                        </li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li>\n                            <button ng-click=\"openModal('uploadModal')\"><i class=\"icon-plus-sign icon--blue\"></i>Upload media</button>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"subnav\" ng-class=\"{'subnav--dark-ui': darkUI}\">\n                <button class=\"navbtn navbtn--left navbtn--darker\" ng-click=\"leftFilterOpen = !leftFilterOpen\" ng-class=\"{'navbtn--active': leftFilterOpen}\">\n                    <i class=\"icon-filter-large\"></i>\n                </button>\n                <div class=\"subnav__stretch-bar\" ng-init=\"planningType = 'events-planning'\">\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"events-planning\" label-position=\"inside\">All media types</sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"events\" label-position=\"inside\">Images only</sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"planning\" label-position=\"inside\">Videos only</sd-check>\n                </div>\n                <div class=\"subnav__spacer subnav__spacer--no-margin\"></div>\n                <div class=\"subnav__content-bar\">\n                    <span>Total:</span> <span class=\"badge\" style=\"margin: 0 10px 0 6px;\">6432</span>\n                    <div class=\"dropdown dropdown--align-right\" dropdown>\n                        <button class=\"dropdown__toggle\" dropdown__toggle>\n                            Updated<span class=\"dropdown__caret\"></span>\n                        </button>\n                        <ul class=\"dropdown__menu\">\n                            <li><button>Updated</button></li>\n                            <li><button>Created</button></li>\n                            <li><button>Urgency</button></li>\n                            <li><button>Category</button></li>\n                            <li><button>Slugline</button></li>\n                            <li><button>Priority</button></li>\n                            <li><button>Genre</button></li>\n                        </ul>\n                    </div>\n                    <a class=\"icn-btn\" sd-tooltip=\"Descending\" flow=\"bottom\" ng-click=\"sortDesc = !sortDesc\" ng-hide=\"!sortDesc\"><i class=\"icon-descending\"></i></a>\n                    <a class=\"icn-btn\" sd-tooltip=\"Ascending\" flow=\"bottom\" ng-click=\"sortDesc = !sortDesc\" ng-show=\"!sortDesc\"><i class=\"icon-ascending\"></i></a>\n\n                </div>\n                <button class=\"navbtn\" ng-click=\"darkUI = !darkUI\">\n                    <i class=\"icon-adjust\"></i>\n                </button>\n                <button class=\"navbtn\" ng-click=\"gridView = !gridView\">\n                    <i class=\"icon-th\" ng-hide=\"gridView\"></i>\n                    <i class=\"icon-th-list\" ng-show=\"gridView\"></i>\n                </button>\n            </div>\n            <div class=\"sd-column-box--3\">\n                <div class=\"sd-filters-panel\">\n                    <div class=\"side-panel side-panel--transparent side-panel--shadow-left\">\n                        <div class=\"side-panel__header side-panel__header--border-b\">\n                            <a class=\"icn-btn side-panel__close\" sd-tooltip=\"Close filters\" flow=\"left\" ng-click=\"leftFilterOpen = !leftFilterOpen\"><i class=\"icon-close-small\"></i></a>\n                            <h3 class=\"side-panel__heading\">Advanced filters</h3>  \n                        </div>\n                        <div class=\"side-panel__content\">\n                            <div class=\"side-panel__content-block\">\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <label class=\"sd-line-input__label\">Title</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--is-select sd-line-input--no-margin\">\n                                        <label class=\"sd-line-input__label\">Source</label>\n                                        <select class=\"sd-line-input__select\">\n                                            <option value=\"\">Select ingest source...</option>\n                                            <option value=\"\">Associated Press</option>\n                                            <option value=\"\">Reuters</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <label class=\"sd-line-input__label\">Location</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                                        <span class=\"sd-line-input__plus-btn\"></span>\n                                        <label class=\"sd-line-input__label\">Category</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                                        <span class=\"sd-line-input__plus-btn\"></span>\n                                        <label class=\"sd-line-input__label\">Subject</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--is-select \">\n                                        <label class=\"sd-line-input__label\">Usage right</label>\n                                        <select class=\"sd-line-input__select\">\n                                            <option value=\"\">--- Not selected ---</option>\n                                            <option value=\"single\">Single usage</option>\n                                            <option value=\"time\">Time restricted</option>\n                                            <option value=\"bananas\">Indefinite usage</option>\n                                            <option value=\"indefinite\">Pears</option>\n                                        </select>\n                                        <span class=\"sd-line-input__hint\">Dolor in hendrerit.</span>\n                                    </div>\n                                </div>\n                                <div class=\"form__row form__row--flex\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                        <label class=\"sd-line-input__label\">From</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row form__row--flex\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                        <label class=\"sd-line-input__label\">To</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <sd-check ng-model=\"abc2\">Check me!</sd-check>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer side-panel__footer--button-box\">\n                            <div class=\"flex-grid flex-grid--boxed-small flex-grid--wrap-items flex-grid--small-2\">\n                                <a class=\"btn btn--hollow\">Clear</a>\n                                <a class=\"btn btn--primary\">Submit</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"sd-column-box__main-column\">\n                    <div class=\"sd-list-header\">\n                        <span class=\"sd-list-header__name\">Friday September 15, 2017</span>\n                    </div>\n                    <!-- Grid item view -->\n                    <div class=\"sd-grid-list\" ng-hide=\"!gridView\">\n                        <!-- item 1 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click locked\" ng-class=\"{'sd-grid-item--selected' : select1, 'sd-grid-item--activated' : selectThis1}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\" ng-click=\"openModal('imageModal')\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select1\"></sd-check>\n                                </div>\n                                <img src=\"/d_trump.jpg\" alt=\"Trt\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span>\n                                </div>\n                                \n                            </div>\n                            <div class=\"sd-grid-item__footer\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--success sd-grid-item__footer-block-item\">1</span><span class=\"badge badge--warning badge--square sd-grid-item__footer-block-item\">3</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__state-border\"></div>\n                        </div>\n                        <!-- item 2 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click actioning\" ng-class=\"{'sd-grid-item--selected' : select2}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\" ng-click=\"openModal('imageModal')\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select2\"></sd-check>\n                                </div>\n                                <img src=\"/d_trump_2.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">In ac dui quis mi consectetuer lacinia. Aenean tellus metus, bibendum sed, posuere ac, mattis non, nunc.</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--primary sd-grid-item__footer-block-item\">2</span><span class=\"badge badge--alert badge--square sd-grid-item__footer-block-item\">4</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__state-border\"></div>\n                        </div>\n                        <!-- item 3 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select3}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\" ng-click=\"openModal('imageModal')\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select3\"></sd-check>\n                                </div>\n                                <img src=\"/bill.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae. Aenean tellus metus, bibendum sed...</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span>  \n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--highlight sd-grid-item__footer-block-item\">3</span><span class=\"badge badge--light badge--square sd-grid-item__footer-block-item\">&nbsp;</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__state-border\"></div>\n                        </div>\n                        <!-- item 4 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select4}\">\n                                <div class=\"sd-loader\"></div>\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\" ng-click=\"openModal('imageModal')\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select4\"></sd-check>\n                                </div>\n                                <img src=\"/hillary.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero.</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">Reuters</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--primary sd-grid-item__footer-block-item\">2</span><span class=\"badge badge--warning badge--square sd-grid-item__footer-block-item\">3</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__state-border\"></div>\n                        </div>\n                        <!-- item 5 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select5}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select5\"></sd-check>\n                                </div>\n                                <img src=\"/obama_1.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Pellentesque auctor neque nec urna. Vestibulum turpis sem, aliquet eget lobortis...</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span> \n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--light sd-grid-item__footer-block-item\">&nbsp;</span><span class=\"badge badge--square sd-grid-item__footer-block-item\">5</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__state-border\"></div>\n                        </div>\n                        <!-- item 6 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select6}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select6\"></sd-check>\n                                </div>\n                                <img src=\"/obama_2.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Vestibulum turpis sem, aliquet eget lobortis...</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--highlight sd-grid-item__footer-block-item\">3</span><span class=\"badge badge--light badge--square sd-grid-item__footer-block-item\">&nbsp;</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__state-border\"></div>\n                        </div>\n                        <!-- item 7 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click archived\" ng-class=\"{'sd-grid-item--selected' : select7}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select7\"></sd-check>\n                                </div>\n                                <!-- <img src=\"/bush_1.jpg\" alt=\"test\"> -->\n                                <i class=\"sd-grid-item__type-icon icon-audio\"></i>\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item__title\">This is a headline.</p>\n                                <p class=\"sd-grid-item__text-light sd-grid-item--element-grow\">Description vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--success sd-grid-item__footer-block-item\">1</span><span class=\"badge badge--highlight badge--square sd-grid-item__footer-block-item\">2</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__state-border\"></div>\n                        </div>\n                        <!-- item 8 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click locked\" ng-class=\"{'sd-grid-item--selected' : select8}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select8\"></sd-check>\n                                </div>\n                                <img src=\"/bush_2.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Mauris sollicitudin fermentum libero, vestibulum et, tempor auctor, justo...</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--primary sd-grid-item__footer-block-item\">2</span><span class=\"badge badge--square sd-grid-item__footer-block-item\">5</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__state-border\"></div>\n                        </div>\n                    </div>\n\n                    <!-- List item view -->\n                \n                    <div class=\"sd-list-item-group sd-list-item-group--space-between-items\" ng-show=\"!gridView\" ng-class=\"{'sd-list-item-group--dark-ui' : darkUI}\">\n                        <!-- list item  1 -->\n                        <div class=\"sd-list-item sd-shadow--z1 locked\" ng-class=\"{'sd-list-item--selected' : select1, 'sd-list-item--activated' : selectThis1}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select1}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select1\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--success\">1</span>\n                                    <span class=\"badge badge--warning badge--square \">3</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  2 -->\n                        <div class=\"sd-list-item sd-shadow--z1 actioning\" ng-class=\"{'sd-list-item--selected' : select2}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select2}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select2\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--primary\">2</span>\n                                    <span class=\"badge badge--alert badge--square\">4</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>In ac dui quis mi consectetuer lacinia. Aenean tellus metus, bibendum sed, posuere ac, mattis non, nunc.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  3 -->\n                        <div class=\"sd-list-item sd-shadow--z1 archived\" ng-class=\"{'sd-list-item--selected' : select3}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select3}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select3\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--highlight\">3</span>\n                                    <span class=\"badge badge--light badge--square\">&nbsp;</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae. Aenean tellus metus, bibendum sed...</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  4 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select4}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select4}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select4\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--primary\">2</span>\n                                    <span class=\"badge badge--warning badge--square\">3</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n\n                        <!-- list item  5 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select5}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select5}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select5\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--light\">&nbsp;</span>\n                                    <span class=\"badge badge--square\">5</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Pellentesque auctor neque nec urna. Vestibulum turpis sem, aliquet eget lobortis...</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  6 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select6}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select6}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select6\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--highlight\">3</span>\n                                    <span class=\"badge badge--light badge--square\">&nbsp;</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Vestibulum turpis sem, aliquet eget lobortis...</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  7 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select7}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select7}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select7\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--success\">1</span>\n                                    <span class=\"badge badge--highlight badge--square\">2</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Vivamus in erat ut urna cursus vestibulum. Sed consequat, leo eget bibendum sodales...</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  8 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select8}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select8}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select8\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--primary\">2</span>\n                                    <span class=\"badge badge--square\">5</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Mauris sollicitudin fermentum libero, vestibulum et, tempor auctor, justo...</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"sd-preview-panel\" ng-class=\"{'sd-preview-panel--dark-ui' : darkUI}\">\n                    <div class=\"side-panel side-panel--shadow-right\" ng-class=\"{'side-panel--dark-ui' : darkUI}\">\n                        <div class=\"side-panel__header\">\n                            <div class=\"side-panel__tools\">\n                                <a class=\"icn-btn\" sd-tooltip=\"Edit details\" flow=\"top\" ng-click=\"editorOpen = true; leftPreviewOpen = false\"><i class=\"icon-pencil\"></i></a>\n                                <a class=\"icn-btn\" sd-tooltip=\"Close details\" flow=\"top\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\"><i class=\"icon-close-small\"></i></a>\n                            </div>\n                            <ul class=\"nav-tabs\" ng-class=\"{'nav-tabs--ui-dark' : darkUI}\">\n                                <li ng-class=\"{'nav-tabs__tab--active': !tab || tab === 'event-details'}\" class=\"nav-tabs__tab\">\n                                    <button ng-click=\"tab = 'event-details'\" class=\"nav-tabs__link\"><span translate=\"\">Content</span></button>\n                                </li>\n                                <li ng-class=\"{'nav-tabs__tab--active': tab === 'event-history'}\" class=\"nav-tabs__tab\">\n                                    <button ng-click=\"tab = 'event-history'\" class=\"nav-tabs__link\"><span translate=\"\">History</span></button>\n                                </li>\n                            </ul> \n                        </div>\n                        <div class=\"side-panel__content\" ng-if=\"!tab || tab === 'event-details'\">\n                            <div class=\"side-panel__content-block side-panel__content-block--pad-small side-panel__content-block--flex\">\n                                <div class=\"side-panel__content-block-inner side-panel__content-block-inner--grow\">\n                                    <p class=\"sd-text__date-and-author\"><time>Created 23.08.2017 by </time> <span class=\"sd-text__author\">Mika Karapet</span></p> \n                                    <p class=\"sd-text__date-and-author\"><time>Updated 3 hours ago by</time> <span class=\"sd-text__author\">John Doe</span></p>\n                                </div>\n                                <div class=\"side-panel__content-block-inner side-panel__content-block-inner--right\">\n                                    <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                                </div>\n                            </div>\n                            <div class=\"side-panel__content-block side-panel__content-block--image\">\n                                <a class=\"icn-btn side-panel__image-actions\" ng-click=\"openModal('imageModal')\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <img src=\"/d_trump.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"side-panel__content-block\">\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Slugline</label>\n                                    <p class=\"sd-text__slugline\">This is a slugline</p>\n                                </div>\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Description</label>\n                                    <p>Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</p>\n                                </div>\n\n                                <div sd-toggle-box data-title=\"Details\" data-style=\"circle\">\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Usage right</label>\n                                        <p>Single usage</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Category</label>\n                                        <p>Some category</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Subject</label>\n                                        <p>Arts, culture and entertainment, Music</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Long Description</label>\n                                        <p>Nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Internal Note</label>\n                                        <p>Lorem ipsum dolor sit amet, consetetur sadipscing.</p>\n                                    </div>\n                                </div>\n                                <h3 class=\"side-panel__heading side-panel__heading--big\" ng-hide=\"multiEdit\">Related items</h3>\n                                <div class=\"sd-grid-list sd-grid-list--small sd-grid-list--no-rl-margin dark-ui\" ng-hide=\"multiEdit\">\n                                    <!-- related item 1 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/d_trump_2.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 2 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/bill.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 3 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/hillary.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 4 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/bush_1.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__content\" ng-if=\"tab === 'event-history'\">\n                            <div class=\"side-panel__content-block\">\n                                <ul class=\"simple-list simple-list--dotted simple-list--no-padding\">\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Created by</strong> Mika Karapet</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:10</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Coverage created by</strong> Vince Ryan</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:13</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Updated by</strong> Karel Petrak</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:13</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Coverage updated by</strong> John Doe</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:21</time>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer\">\n\n                        </div>\n                    </div>      \n                </div>\n            </div>\n            <!-- END left content -->\n        </div>\n\n        <!-- SPLIT CONTENT -->\n        <div id=\"editPane\" \n             class=\"sd-edit-panel sd-page-content__content-block sd-page-content__content-block--right sd-page-content__content-block--30-slide\" ng-class=\"{'open-filters': rightFilterOpen, 'open-preview': rightPreviewOpen}\">\n            <!-- Eitor content -->\n\n            <div class=\"side-panel side-panel--shadow-right\" ng-if=\"!itemType || itemType === 'planning'\" ng-include=\"'playgrounds/photo-snippets/edit-photo-metadata.html'\"></div>\n            <!-- END Editor content -->\n        </div>\n    </section>\n    <footer class=\"bottom-bar \">\n        This is the optional footer.\n    </footer>\n\n    <!-- Image Edit modal -->\n    <div sd-modal data-model=\"imageModal\" class=\"modal--fullscreen modal--dark-ui\" ng-init=\"showMetadata = true\">\n        <div class=\"modal__header modal__header--flex\">\n            <div class=\"modal__sliding-toolbar\" ng-show=\"!contentChanged\">\n                <div class=\"sliding-toolbar__inner\"></div>\n                <a class=\"btn\" ng-click=\"contentChanged = true\">Cancel</a>\n                <a class=\"btn btn--primary\" ng-click=\"contentChanged = true\">Save</a>\n            </div>\n            <h3 class=\"modal__heading modal__heading--no-grow\">Details</h3>\n            <div class=\"modal__header-buttons  modal__header-buttons--center modal__header-element-grow button-nav\" ng-init=\"nav = 'view'\">\n                <button class=\"button-nav__btn\" ng-click=\"nav = 'view'; showMetadata = true\" ng-class=\"{'button-nav__btn--active' : nav === 'view'}\">Details</button>\n                <button class=\"button-nav__btn\" ng-click=\"nav = 'image-edit'\" ng-class=\"{'button-nav__btn--active': nav === 'image-edit'}\">Edit image</button>\n                <button class=\"button-nav__btn\" ng-click=\"nav = 'crop'; showMetadata = false\" ng-class=\"{'button-nav__btn--active': nav === 'crop'}\">Edit crops</button>\n            </div>\n            <div class=\"modal__header-buttons modal__header-buttons--right\">\n                <button class=\"btn btn--ui-dark btn--hollow\" ng-click=\"this.$parent.$parent.$parent.multiEdit = false; closeModal('imageModal')\">Close</button>\n                <!-- <a class=\"icn-btn\" ng-click=\"this.$parent.$parent.$parent.multiEdit = false; closeModal('imageModal')\">\n                    <i class=\"icon-close-small\"></i>\n                </a> -->\n            </div>\n        </div>\n        <div class=\"modal__body modal__body--no-padding\">\n            <div class=\"sd-column-box--2\">\n                <div class=\"sd-column-box__main-column sd-column-box__main-column--photo-preview\">\n                    <a class=\"sd-photo-preview__slide-in-button\" ng-show=\"!showMetadata\" ng-click=\"showMetadata = !showMetadata\" data-sd-tooltip=\"Open metadata\" data-flow=\"left\">\n                        <i class=\"icon-backward-thin\"></i>\n                    </a>\n                    <div class=\"sd-photo-preview\" ng-class=\"{'sd-photo-preview--grid-only' : multiEdit}\">\n                        <div class=\"sd-photo-preview__image\" ng-hide=\"multiEdit\">\n                            <a class=\"sd-photo-preview__nav-button sd-photo-preview__nav-button--prev\"></a>\n                            <a class=\"sd-photo-preview__nav-button sd-photo-preview__nav-button--next\"></a>                   \n                            <img src=\"/d_trump_large.jpg\" alt=\"test\">\n                        </div>\n                        <!-- THUMBS for Multiedit  -->\n                        <div class=\"sd-photo-preview__thumb-strip\" ng-hide=\"!multiEdit\">\n                            <div class=\"sd-grid-list dark-ui\">\n                                <!-- small item 1 -->\n                                <div class=\"sd-grid-item sd-grid-item--with-click\" ng-click=\"select11 = !select11\" ng-class=\"{'sd-grid-item--selected' : select11}\">\n                                    <div class=\"sd-grid-item__thumb\">\n                                        <img src=\"/d_trump.jpg\" alt=\"test\">\n                                    </div>\n                                    <div class=\"sd-grid-item__content\">\n                                        <time title=\"20.11.2017\">20.11.2017</time>\n                                        <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                    </div>\n                                    <div class=\"sd-grid-item__footer\">\n                                        <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                            <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i>\n                                        </div>\n                                        <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                            <a class=\"icn-btn sd-grid-item__actions\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- small item 2 -->\n                                <div class=\"sd-grid-item sd-grid-item--with-click\" ng-click=\"select12 = !select12\" ng-class=\"{'sd-grid-item--selected' : select12}\">\n                                    <div class=\"sd-grid-item__thumb\">\n                                        <img src=\"/d_trump_2.jpg\" alt=\"test\">\n                                    </div>\n                                    <div class=\"sd-grid-item__content\">\n                                        <time title=\"20.11.2017\">20.11.2017</time>\n                                        <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                    </div>\n                                    <div class=\"sd-grid-item__footer\">\n                                        <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                            <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i>\n                                        </div>\n                                        <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                            <a class=\"icn-btn sd-grid-item__actions\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- small item 3 -->\n                                <div class=\"sd-grid-item sd-grid-item--with-click\" ng-click=\"select13 = !select13\" ng-class=\"{'sd-grid-item--selected' : select13}\">\n                                    <div class=\"sd-grid-item__thumb\">\n                                        <img src=\"/bill.jpg\" alt=\"test\">\n                                    </div>\n                                    <div class=\"sd-grid-item__content\">\n                                        <time title=\"20.11.2017\">20.11.2017</time>\n                                        <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                    </div>\n                                    <div class=\"sd-grid-item__footer\">\n                                        <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                            <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i>\n                                        </div>\n                                        <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                            <a class=\"icn-btn sd-grid-item__actions\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- small item 4 -->\n                                <div class=\"sd-grid-item sd-grid-item--with-click\" ng-click=\"select14 = !select14\" ng-class=\"{'sd-grid-item--selected' : select14}\">\n                                    <div class=\"sd-grid-item__thumb\">\n                                        <img src=\"/hillary.jpg\" alt=\"test\">\n                                    </div>\n                                    <div class=\"sd-grid-item__content\">\n                                        <time title=\"20.11.2017\">20.11.2017</time>\n                                        <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                    </div>\n                                    <div class=\"sd-grid-item__footer\">\n                                        <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                            <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i>\n                                        </div>\n                                        <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                            <a class=\"icn-btn sd-grid-item__actions\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- END THUMBS for Multiedit  -->\n                        <!-- THUMBS for EDIT Crops  -->\n                        <div class=\"sd-photo-preview__thumb-strip\" ng-show=\"nav === 'crop'\">\n                            <div class=\"sd-grid-list dark-ui\">\n                                <!-- small item 1 -->\n                                <div class=\"sd-grid-item sd-grid-item--with-click\">\n                                    <div class=\"sd-grid-item__thumb\">\n                                        <img src=\"/d_trump.jpg\" alt=\"dileja\">\n                                    </div>\n                                    <div class=\"sd-grid-item__content\">\n                                        <span class=\"\">Original</span>\n                                    </div>\n                                </div>\n                                <!-- small item 2 -->\n                                <div class=\"sd-grid-item sd-grid-item--with-click\">\n                                    <div class=\"sd-grid-item__thumb\">\n                                        <img src=\"/d_trump.jpg\" alt=\"dileja\">\n                                    </div>\n                                    <div class=\"sd-grid-item__content\">\n                                        <span class=\"\">3 x 2</span>\n                                    </div>\n                                </div>\n                                <!-- small item 3 -->\n                                <div class=\"sd-grid-item sd-grid-item--with-click\">\n                                    <div class=\"sd-grid-item__thumb\">\n                                        <img src=\"/d_trump.jpg\" alt=\"dileja\">\n                                    </div>\n                                    <div class=\"sd-grid-item__content\">\n                                        <span class=\"\">21 x 9</span>\n                                    </div>\n                                </div>\n                                <!-- small item 4 -->\n                                <div class=\"sd-grid-item sd-grid-item--with-click\">\n                                    <div class=\"sd-grid-item__thumb\">\n                                        <img src=\"/d_trump.jpg\" alt=\"dileja\">\n                                    </div>\n                                    <div class=\"sd-grid-item__content\">\n                                        <span class=\"\">Portrait</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- END THUMBS for EDIT Crops  -->\n                    </div>\n                </div>\n                <div class=\"sd-column-box__slide-in-column sd-column-box__slide-in-column--large sd-column-box__slide-in-column--dark-ui\" ng-class=\"{'sd-column-box__slide-in-column--closed' : !showMetadata}\">\n                    <div class=\"sd-column-box__slide-in-column-inner sd-slide-in-panel\">\n\n                        <div class=\"sd-slide-in-panel__header\">\n                            <h3 class=\"sd-slide-in-panel__heading\">Metadata</h3>\n                            <a class=\"icn-btn sd-slide-in-panel__close\" sd-tooltip=\"Close details\" flow=\"top\" ng-click=\"showMetadata = !showMetadata\"><i class=\"icon-close-small\"></i></a>\n                        </div>\n                        <div class=\"sd-slide-in-panel__content\">\n                            <div class=\"sd-slide-in-panel__content-block sd-slide-in-panel__content-block--first\">\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed\">\n                                        <label class=\"sd-line-input__label\">Title</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\" value=\"Image title\" >\n                                        <div class=\"sd-line-input__hint\">Hendrerit in vulputate velit esse molestie consequat.</div>\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed\">\n                                        <label class=\"sd-line-input__label\">Description</label>\n                                        <textarea class=\"sd-line-input__input\"></textarea>\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--with-button sd-line-input--dark-ui sd-line-input--boxed\">\n                                        <span class=\"sd-line-input__plus-btn\"></span>\n                                        <label class=\"sd-line-input__label\">Category</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--with-button sd-line-input--dark-ui sd-line-input--boxed\">\n                                        <span class=\"sd-line-input__plus-btn\"></span>\n                                        <label class=\"sd-line-input__label\">Subject</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--boxed\">\n                                        <label class=\"sd-line-input__label\">Usage right</label>\n                                        <select class=\"sd-line-input__select\">\n                                            <option value=\"\">--- Not selected ---</option>\n                                            <option value=\"single\">Single usage</option>\n                                            <option value=\"time\">Time restricted</option>\n                                            <option value=\"bananas\">Indefinite usage</option>\n                                            <option value=\"indefinite\">Pears</option>\n                                        </select>\n                                        <span class=\"sd-line-input__hint\">Dolor in hendrerit.</span>\n                                    </div>\n                                </div>\n                                <div class=\"form__row\" ng-init=\"contentChanged = true\">\n                                    <span ng-model=\"contentChanged\" sd-switch></span><label>For publication</label>\n                                </div>\n                                <h3 class=\"sd-slide-in-panel__heading\" ng-hide=\"multiEdit\">Related items</h3>\n                                <div class=\"sd-grid-list sd-grid-list--small sd-grid-list--no-rl-margin dark-ui\" ng-hide=\"multiEdit\">\n                                    <!-- related item 1 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/d_trump_2.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 2-->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/bill.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 3 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/hillary.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 4 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/bush_1.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div> \n                </div>\n\n            </div>\n        </div>\n    </div>\n    <!-- END Image Edit modal -->\n\n\n    <!-- //////////////////////////////////////////////////////////////////////// mage Upload modal //////////////////////////////////////////////////////////////////////// -->\n    <div sd-modal data-model=\"uploadModal\" class=\"modal--fullscreen modal--dark-ui\" ng-init=\"showMetadata = true\">\n        <div class=\"modal__header modal__header--flex\">\n            <h3 class=\"modal__heading modal__heading--no-grow\">Upload media</h3>\n            <div class=\"modal__header-element-grow\"></div>\n            <div class=\"modal__header-buttons modal__header-buttons--right\">\n                <button class=\"btn btn--ui-dark btn--hollow\" ng-click=\"this.$parent.$parent.$parent.multiEdit = false; closeModal('uploadModal')\">Cancel</button>\n                <div class=\"dropdown dropdown--dark\" dropdown is-open=\"isOpen\">\n                    <button class=\"dropdown__toggle dropdown__toggle--small dropdown__toggle--hollow dropdown-toggle\" dropdown__toggle aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <span class=\"dropdown__button-label\">Send to:</span> <span>National</span><b class=\"dropdown__caret white\"></b>\n                    </button>\n                    <ul class=\"dropdown__menu dropdown--align-right\">\n                        <li><button ng-click=\"\">National</button></li>\n                        <li><button ng-click=\"\">Sports</button></li>\n                        <li><button ng-click=\"\">International</button></li>\n                        <li><button ng-click=\"\">Lifestyle</button></li>\n                    </ul>\n                </div>\n                <button class=\"btn btn--ui-dark btn--hollow btn--primary\">Upload</button>\n            </div>\n        </div>\n        <div class=\"modal__body modal__body--no-padding\">\n            <div class=\"sd-column-box--2\">\n                <div class=\"sd-column-box__main-column sd-column-box__main-column--photo-preview\">\n                    <a class=\"sd-photo-preview__slide-in-button\" ng-show=\"!showMetadata\" ng-click=\"showMetadata = !showMetadata\" data-sd-tooltip=\"Open metadata\" data-flow=\"left\">\n                        <i class=\"icon-backward-thin\"></i>\n                    </a>\n                    <div class=\"sd-photo-preview sd-photo-preview--grid-only\">\n                        <!-- THUMBS for Multiedit  -->\n                        <div class=\"sd-photo-preview__thumb-controls\">\n                            <button class=\"btn btn--ui-dark btn--text-only\">deselect all</button>\n                            <button class=\"btn btn--ui-dark btn--text-only\" disabled>select all</button>\n                        </div>\n                        <div class=\"sd-photo-preview__thumb-strip\" ng-class=\"{'sd-photo-preview__thumb-strip--with-controls' : itemsLoaded}\" ng-init=\"itemsLoaded = true;\">\n                            <div class=\"upload__info\" ng-if=\"!itemsLoaded\">\n                                <div class=\"upload__info-icon\"></div>\n                                <h3 class=\"upload__info-heading\">Drag Your Files Here</h3>\n                                <div class=\"upload__info-label\">or</div>\n                                <button class=\"btn btn--hollow btn--ui-dark upload__info-button\">Select them from folder</button>\n                            </div>\n                            <div class=\"upload__target\" ng-if=\"!itemsLoaded\"></div>\n\n                            <div class=\"sd-grid-list dark-ui\" ng-if=\"itemsLoaded\" ng-init=\"select11 = true; select12 = true; select13 = true; select14 = true;\">\n                                <!-- small item 1 -->\n                                <div class=\"sd-grid-item sd-grid-item--with-click\" ng-click=\"select11 = !select11\" ng-class=\"{'sd-grid-item--selected' : select11}\">\n                                    <div class=\"sd-grid-item__thumb\">\n                                        <a class=\"icn-btn sd-grid-item__remove\" sd-tooltip=\"Remove item\" flow=\"left\">\n                                            <i class=\"icon-close-small\"></i>\n                                        </a>\n                                        <img src=\"/d_trump.jpg\" alt=\"test\">\n                                    </div>\n                                    <div class=\"sd-grid-item__content\">\n                                        <time title=\"20.11.2017\">20.11.2017</time>\n                                        <p class=\"sd-grid-item__title\">Item one title</p>\n                                        <p class=\"sd-grid-item--element-grow\">Description vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae.</p>\n                                        <div class=\"sd-grid-item__content-block\">\n                                            <span class=\"sd-grid-item__text-label\">Copyright:</span>\n                                            <span class=\"sd-grid-item__text-strong\">ANSA</span>\n                                        </div>\n                                    </div>\n                                    <div class=\"sd-grid-item__footer\">\n                                        <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                            <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i>\n                                        </div>\n                                        <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                            <a class=\"icn-btn sd-grid-item__actions\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- small item 2 -->\n                                <div class=\"sd-grid-item sd-grid-item--with-click\" ng-click=\"select12 = !select12\" ng-class=\"{'sd-grid-item--selected' : select12}\">\n                                    <div class=\"sd-grid-item__thumb\">\n                                        <a class=\"icn-btn sd-grid-item__remove\" sd-tooltip=\"Remove item\" flow=\"left\">\n                                            <i class=\"icon-close-small\"></i>\n                                        </a>\n                                        <img src=\"/d_trump_2.jpg\" alt=\"test\">\n                                    </div>\n                                    <div class=\"sd-grid-item__content\">\n                                        <time title=\"20.11.2017\">20.11.2017</time>\n                                        <p class=\"sd-grid-item__title\">Item two title</p>\n                                        <p class=\"sd-grid-item--element-grow\">Description curabitur blandit tempus porttitor. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n                                        <div class=\"sd-grid-item__content-block\">\n                                            <span class=\"sd-grid-item__text-label\">Copyright:</span>\n                                            <span class=\"sd-grid-item__text-strong\">ANSA</span>\n                                        </div>\n                                    </div>\n                                    <div class=\"sd-grid-item__footer\">\n                                        <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                            <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i>\n                                        </div>\n                                        <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                            <a class=\"icn-btn sd-grid-item__actions\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- small item 3 -->\n                                <div class=\"sd-grid-item sd-grid-item--with-click\" ng-click=\"select13 = !select13\" ng-class=\"{'sd-grid-item--selected' : select13}\">\n                                    <div class=\"sd-grid-item__thumb sd-grid-item__thumb--uploading\">\n                                        <a class=\"icn-btn sd-grid-item__remove\" sd-tooltip=\"Remove item\" flow=\"left\">\n                                            <i class=\"icon-close-small\"></i>\n                                        </a>\n                                        <div class=\"sd-grid-item__progress-circle\">\n                                            <sd-circular-progress value=\"60\" class=\"sd-circular-progress--m\"></sd-circular-progress>\n                                        </div>\n                                        <img src=\"/bill.jpg\" alt=\"test\">\n                                    </div>\n                                    <div class=\"sd-grid-item__content\">\n                                        <time title=\"20.11.2017\">20.11.2017</time>\n                                        <p class=\"sd-grid-item__title\">Item three title</p>\n                                        <p class=\"sd-grid-item--element-grow\">Description donec ullamcorper nulla non metus auctor fringilla. Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\n                                        <div class=\"sd-grid-item__content-block\">\n                                            <span class=\"sd-grid-item__text-label\">Copyright:</span>\n                                            <span class=\"sd-grid-item__text-strong\">ANSA</span>\n                                        </div>\n                                    </div>\n                                    <div class=\"sd-grid-item__footer\">\n                                        <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                            <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i>\n                                        </div>\n                                        <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                            <a class=\"icn-btn sd-grid-item__actions\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- small item 4 -->\n                                <div class=\"sd-grid-item sd-grid-item--with-click\" ng-click=\"select14 = !select14\" ng-class=\"{'sd-grid-item--selected' : select14}\">\n                                    <div class=\"sd-grid-item__thumb sd-grid-item__thumb--uploading\">\n                                        <a class=\"icn-btn sd-grid-item__remove\" sd-tooltip=\"Remove item\" flow=\"left\">\n                                            <i class=\"icon-close-small\"></i>\n                                        </a>\n                                        <div class=\"sd-grid-item__progress-circle\">\n                                            <sd-circular-progress value=\"100\" class=\"sd-circular-progress--m\"></sd-circular-progress>\n                                        </div>\n                                        <img src=\"/hillary.jpg\" alt=\"test\">\n                                    </div>\n                                    <div class=\"sd-grid-item__content\">\n                                        <time title=\"20.11.2017\">20.11.2017</time>\n                                        <p class=\"sd-grid-item__title\">Item four title</p>\n                                        <p class=\"sd-grid-item--element-grow\">Description curabitur blandit tempus porttitor.</p>\n                                        <div class=\"sd-grid-item__content-block\">\n                                            <span class=\"sd-grid-item__text-label\">Copyright:</span>\n                                            <span class=\"sd-grid-item__text-strong\">ANSA</span>\n                                        </div>\n                                    </div>\n                                    <div class=\"sd-grid-item__footer\">\n                                        <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                            <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i>\n                                        </div>\n                                        <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                            <a class=\"icn-btn sd-grid-item__actions\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- END THUMBS for Multiedit  -->\n                    </div>\n                </div>\n                <!-- Sidebar -->\n                <div class=\"sd-column-box__slide-in-column sd-column-box__slide-in-column--large sd-column-box__slide-in-column--dark-ui\" ng-class=\"{'sd-column-box__slide-in-column--closed' : !showMetadata}\"  ng-if=\"itemsLoaded\">\n                    <div class=\"sd-column-box__slide-in-column-inner sd-slide-in-panel\">\n\n                        <div class=\"sd-slide-in-panel__header\">\n                            <h3 class=\"sd-slide-in-panel__heading\">Metadata</h3>\n                        </div>\n                        <div class=\"sd-slide-in-panel__content\">\n                            <div class=\"sd-slide-in-panel__content-block sd-slide-in-panel__content-block--first\">\n                                <div class=\"sd-alert sd-alert--hollow sd-alert--primary sd-alert--small\" style=\"margin: -1rem 0 3rem\">\n                                    <span translate=\"\">Currently editing: 4 items</span>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed\">\n                                        <label class=\"sd-line-input__label\">Title</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\" value=\"Image title\" >\n                                        <div class=\"sd-line-input__hint\">Hendrerit in vulputate velit esse molestie consequat.</div>\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--dark-ui sd-line-input--boxed\">\n                                        <label class=\"sd-line-input__label\">Description</label>\n                                        <textarea class=\"sd-line-input__input\"></textarea>\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--dark-ui sd-line-input--boxed\">\n                                        <label class=\"sd-line-input__label\">Category</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--dark-ui sd-line-input--boxed\">\n                                        <label class=\"sd-line-input__label\">Subject</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--is-select sd-line-input--dark-ui sd-line-input--boxed\">\n                                        <label class=\"sd-line-input__label\">Usage right</label>\n                                        <select class=\"sd-line-input__select\">\n                                            <option value=\"\">--- Not selected ---</option>\n                                            <option value=\"single\">Single usage</option>\n                                            <option value=\"time\">Time restricted</option>\n                                            <option value=\"bananas\">Indefinite usage</option>\n                                            <option value=\"indefinite\">Pears</option>\n                                        </select>\n                                        <span class=\"sd-line-input__hint\">Dolor in hendrerit.</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div> \n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- //////////////////////////////////////////////////////////////////////// END Image Upload modal //////////////////////////////////////////////////////////////////////// -->\n\n\n    <!-- Editor configuration modal -->\n    <div sd-modal data-model=\"modalEditorConfig\" class=\"modal--x-large\">\n        <div class=\"modal__header\">\n            <button class=\"modal__close pull-right icn-btn\" ng-click=\"closeModal('modalEditorConfig')\"><i class=\"icon-close-small\"></i></button>\n            <h3 class=\"modal__heading\">Configure Editor themes</h3>\n        </div>\n        <div class=\"modal__body modal__body--no-padding\">\n            <div class=\"sd-column-box--2\">\n                <div class=\"sd-column-box__main-column sd-column-box__main-column--left sd-column-box__main-column--padded\">\n                    <h2 class=\"modal__body-heading\"><span class=\"badge badge--success\">&nbsp;</span>Default Theme</h2>\n                    <div class=\"form__row\">\n                        <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--is-select\">\n                            <label class=\"sd-line-input__label\">Font</label>\n                            <select class=\"sd-line-input__select\" ng-model=\"fontFace\" ng-init=\"fontFace = 'sans'\" >\n                                <option value=\"sans\">Sans-serif (Roboto)</option>\n                                <option value=\"serif\">Serif (Merriweather)</option>\n                                <option value=\"mono\">Monospace (Roboto Mono)</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"color-swatch__list\" ng-init=\"selctTheme1 = true\">\n                        <div class=\"color-swatch sd-editor--theme-default\" \n                            ng-click=\"selctTheme1 = true; selctTheme2 = false; selctTheme3 = false; selctTheme4 = false; selctTheme5 = false; selctTheme6 = false;\" \n                            ng-class=\"{'color-swatch--selected' : selctTheme1}\">\n                            <span class=\"color-swatch__inner\">a</span>\n                        </div>\n                        <div class=\"color-swatch sd-editor--theme-dark\" \n                            ng-click=\"selctTheme2 = true; selctTheme1 = false; selctTheme3 = false; selctTheme4 = false; selctTheme5 = false; selctTheme6 = false;\" \n                            ng-class=\"{'color-swatch--selected' : selctTheme2}\">\n                            <span class=\"color-swatch__inner\">a</span>\n                        </div>\n                        <div class=\"color-swatch sd-editor--theme-blue\" \n                            ng-click=\"selctTheme3 = true; selctTheme1 = false; selctTheme2 = false; selctTheme4 = false; selctTheme5 = false; selctTheme6 = false;\" \n                            ng-class=\"{'color-swatch--selected' : selctTheme3}\">\n                            <span class=\"color-swatch__inner\">a</span>\n                        </div>\n                        <div class=\"color-swatch sd-editor--theme-turquoise\" \n                            ng-click=\"selctTheme4 = true; selctTheme1 = false; selctTheme2 = false; selctTheme3 = false; selctTheme5 = false; selctTheme6 = false;\" \n                            ng-class=\"{'color-swatch--selected' : selctTheme4}\">\n                            <span class=\"color-swatch__inner\">a</span>\n                        </div>\n                        <div class=\"color-swatch sd-editor--theme-military\" \n                            ng-click=\"selctTheme5 = true; selctTheme1 = false; selctTheme2 = false; selctTheme3 = false; selctTheme4 = false; selctTheme6 = false;\" \n                            ng-class=\"{'color-swatch--selected' : selctTheme5}\">\n                            <span class=\"color-swatch__inner\">a</span>\n                        </div>\n                        <div class=\"color-swatch sd-editor--theme-natural\" \n                            ng-click=\"selctTheme6 = true; selctTheme1 = false; selctTheme2 = false; selctTheme3 = false; selctTheme4 = false; selctTheme5 = false;\" \n                            ng-class=\"{'color-swatch--selected' : selctTheme6}\">\n                            <span class=\"color-swatch__inner\">a</span>\n                        </div>\n                    </div>\n                    <div class=\"theme-preview\" \n                    ng-class=\"{'sd-editor--font-sans' : fontFace === 'sans', 'sd-editor--font-serif' : fontFace === 'serif', 'sd-editor--font-mono' : fontFace === 'mono', 'sd-editor--theme-default' : selctTheme1, 'sd-editor--theme-dark' : selctTheme2, 'sd-editor--theme-blue' : selctTheme3, 'sd-editor--theme-turquoise' : selctTheme4,  'sd-editor--theme-military' : selctTheme5, 'sd-editor--theme-natural' : selctTheme6, 'sd-editor--headline-small' : fontSizeHeadline === 's', 'sd-editor--headline-medium' : fontSizeHeadline === 'm', 'sd-editor--headline-large' : fontSizeHeadline === 'l', 'sd-editor--abstract-small' : fontSizeAbstract === 's', 'sd-editor--abstract-medium' : fontSizeAbstract === 'm', 'sd-editor--abstract-large' : fontSizeAbstract === 'l', 'sd-editor--body-small' : fontSizeBody === 's', 'sd-editor--body-medium' : fontSizeBody === 'm', 'sd-editor--body-large' : fontSizeBody === 'l'}\"\n                    ng-init=\"fontSizeHeadline = 'm'; fontSizeAbstract = 'm'; fontSizeBody = 'm'\">\n                        <div class=\"theme-preview__block\">\n                            <label class=\"theme-preview__label\">Headline</label>\n                            <div class=\"theme-preview__text-field text-field__headline\">\n                                This is the headline\n                            </div>\n                            <div class=\"theme-preview__button-bar\" ng-class=\"{'dark-ui' : selctTheme2 || selctTheme3}\">\n                                <sd-check type=\"radio\" ng-model=\"fontSizeHeadline\" label-position=\"inside\" ng-value=\"s\">S</sd-check>\n                                <sd-check type=\"radio\" ng-model=\"fontSizeHeadline\" label-position=\"inside\" ng-value=\"m\">M</sd-check>\n                                <sd-check type=\"radio\" ng-model=\"fontSizeHeadline\" label-position=\"inside\" ng-value=\"l\">L</sd-check>\n                            </div>\n                        </div>\n                        <div class=\"theme-preview__block\">\n                            <label class=\"theme-preview__label\">Abstract</label>\n                            <div class=\"theme-preview__text-field text-field__abstract\">\n                                Abstract example. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Fusce id purus. Phasellus ullamcorper…\n                            </div>\n                            <div class=\"theme-preview__button-bar\" ng-class=\"{'dark-ui' : selctTheme2 || selctTheme3}\">\n                                <sd-check type=\"radio\" ng-model=\"fontSizeAbstract\" label-position=\"inside\" ng-value=\"s\">S</sd-check>\n                                <sd-check type=\"radio\" ng-model=\"fontSizeAbstract\" label-position=\"inside\" ng-value=\"m\">M</sd-check>\n                                <sd-check type=\"radio\" ng-model=\"fontSizeAbstract\" label-position=\"inside\" ng-value=\"l\">L</sd-check>\n                            </div>\n                        </div>\n                        <div class=\"theme-preview__block\">\n                            <label class=\"theme-preview__label\">Body</label>\n                            <div class=\"theme-preview__text-field text-field__body\">\n                                Body text example. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Fusce id purus. Phasellus ullamcorper…\n                            </div>\n                            <div class=\"theme-preview__button-bar\" ng-class=\"{'dark-ui' : selctTheme2 || selctTheme3}\">\n                                <sd-check type=\"radio\" ng-model=\"fontSizeBody\" label-position=\"inside\" ng-value=\"s\">S</sd-check>\n                                <sd-check type=\"radio\" ng-model=\"fontSizeBody\" label-position=\"inside\" ng-value=\"m\">M</sd-check>\n                                <sd-check type=\"radio\" ng-model=\"fontSizeBody\" label-position=\"inside\" ng-value=\"l\">L</sd-check>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"sd-column-box__main-column sd-column-box__main-column--padded\">\n                    <h2 class=\"modal__body-heading modal__body-heading--inactive\"><span class=\"badge badge--light\">&nbsp;</span>Proofread Theme</h2>\n                    <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. </p>\n                </div>\n            </div>\n        </div>\n        <div class=\"modal__footer\">\n            <button class=\"btn\" ng-click=\"closeModal('modalEditorConfig')\">Cancel</button>\n            <button class=\"btn btn--primary\" ng-click=\"closeModal('modalEditorConfig')\">Save</button>\n        </div>\n    </div>\n    <!-- END Editor configuration modal -->\n</div>\n";

/***/ }),
/* 265 */
/***/ (function(module, exports) {

module.exports = "<!-- Planning edit panel -->\n<div class=\"side-panel__header subnav\" ng-init=\"editorOpen = true\">\n    <div class=\"subnav__stretch-bar\">\n\n    </div>\n    <div class=\"subnav__stretch-bar subnav__stretch-bar--right\">\n        <a href=\"\" class=\"btn\" ng-click=\"$parent.editorOpen = false\">Cancel</a>\n        <a href=\"\" class=\"btn btn--primary\" ng-click=\"$parent.editorOpen = false\">Save</a>\n\n    </div>\n    <button class=\"navbtn\" ng-click=\"editorOpen = !editorOpen\">\n        <i class=\"big-icon--minimize\"></i>\n    </button>\n    <button class=\"navbtn\">\n        <i class=\"icon-dots-vertical\"></i>\n    </button>\n</div>\n<div class=\"side-panel__content side-panel__content--flex\">\n    <ul class=\"nav-tabs side-panel__content-tab-nav\">\n        <li ng-class=\"{'nav-tabs__tab--active': !tab2 || tab2 === 'event-details2'}\" class=\"nav-tabs__tab\">\n            <button ng-click=\"tab2 = 'event-details2'\" class=\"nav-tabs__link\"><span translate=\"\">Content</span></button>\n        </li>\n        <li ng-class=\"{'nav-tabs__tab--active': tab2 === 'event-history2'}\" class=\"nav-tabs__tab\">\n            <button ng-click=\"tab2 = 'event-history2'\" class=\"nav-tabs__link\"><span translate=\"\">History</span></button>\n        </li>\n    </ul>\n    <!-- First tab -->\n    <div class=\"side-panel__content-tab-content\" ng-if=\"!tab2 || tab2 === 'event-details2'\">\n\n        <div class=\"side-panel__content-block side-panel__content-block--pad-small side-panel__content-block--flex\">\n            <div class=\"side-panel__content-block-inner\" data-sd-tooltip=\"Planning item\" data-flow=\"right\">\n                <span class=\"double-size-icn double-size-icn--light\">\n                    <i class=\"icon-photo\"></i>\n                </span>\n            </div>\n            <div class=\"side-panel__content-block-inner side-panel__content-block-inner--grow\">\n                <p class=\"sd-text__date-and-author\"><time>Created 15.09.2017 by </time> <span class=\"sd-text__author\">Mika Karapet</span></p> \n                <p class=\"sd-text__date-and-author\"><time>Updated 1 hour ago by </time> <span class=\"sd-text__author\">John Doe</span></p> \n            </div>\n\n        </div>\n\n        <div class=\"side-panel__content-block\">\n            <div class=\"form__row\">\n                <div class=\"sd-line-input\">\n                    <label class=\"sd-line-input__label\">Slugline</label>\n                    <input class=\"sd-line-input__input\" type=\"text\" value=\"This is a slugline\">\n                </div>\n            </div>\n            <div class=\"form__row\">\n                <div class=\"sd-line-input\">\n                    <label class=\"sd-line-input__label\">Description</label>\n                    <textarea class=\"sd-line-input__input\"></textarea>\n                </div>\n            </div>\n            <div sd-toggle-box data-title=\"Details\" data-style=\"circle\">\n                <div class=\"form__row\">\n                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                        <span class=\"sd-line-input__plus-btn\"></span>\n                        <label class=\"sd-line-input__label\">Category</label>\n                        <input class=\"sd-line-input__input\" type=\"text\">\n                    </div>\n                </div>\n                <div class=\"form__row\">\n                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                        <span class=\"sd-line-input__plus-btn\"></span>\n                        <label class=\"sd-line-input__label\">Subject</label>\n                        <input class=\"sd-line-input__input\" type=\"text\">\n                    </div>\n                </div>\n                <div class=\"form__row\">\n                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                        <label class=\"sd-line-input__label\">Long Description</label>\n                        <textarea class=\"sd-line-input__input\"></textarea>\n                    </div>\n                </div>\n                <div class=\"form__row\">\n                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                        <label class=\"sd-line-input__label\">Internal Note</label>\n                        <textarea class=\"sd-line-input__input\"></textarea>\n                    </div>\n                </div>\n                <div class=\"form__row\">\n                    <div class=\"sd-line-input sd-line-input--is-select  sd-line-input--no-margin\">\n                        <label class=\"sd-line-input__label\">Urgency</label>\n                        <select class=\"sd-line-input__select\">\n                            <option value=\"\">None</option>\n                            <option value=\"\">1</option>\n                            <option value=\"\">2</option>\n                            <option value=\"\">3</option>\n                            <option value=\"\">4</option>\n                            <option value=\"\">5</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"form__row\">\n                    <span ng-model=\"pubStatus\" sd-switch=\"\"></span><label>Not for publication</label>\n                </div>\n            </div>\n        </div>\n        <h3 class=\"side-panel__heading side-panel__heading--big\">Associated items</h3>\n        <div class=\"side-panel__content-block\">\n            <!-- Collapse box 1 -->\n            <div class=\"sd-collapse-box sd-shadow--z2\" ng-class=\"{'sd-collapse-box--open' : isOpen0}\">\n                <div class=\"sd-collapse-box__header\" ng-click=\"isOpen0 = !isOpen0\">\n                    <!-- list item  -->\n                    <div class=\"sd-list-item sd-list-item--no-bg\">\n                        <div class=\"sd-list-item__border\"></div>\n                        <div class=\"sd-list-item__column\">\n                            <i class=\"icon-photo\"></i>\n                        </div>\n                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__text-strong\">Item name</span></span>\n                                <time title=\"\">15.10.2017–16.10.2017 </time>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                            <button class=\"icn-btn\">\n                                <i class=\"icon-dots-vertical\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <!-- END list item  -->\n                </div>\n                <div class=\"sd-collapse-box__content-wraper\">\n                    <div class=\"sd-collapse-box__content\">\n                        <div class=\"sd-collapse-box__tools\">\n                            <a class=\"icn-btn\" sd-tooltip=\"Collapse\" flow=\"left\" ng-click=\"isOpen0 = false\"><i class=\"icon-chevron-up-thin\"></i></a>\n                            <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                        </div>\n                        <div class=\"sd-collapse-box__content-block sd-collapse-box__content-block--top\">\n                            <div class=\"sd-list-item sd-list-item--no-bg sd-list-item--no-hover\">\n                                <div class=\"sd-list-item__column sd-list-item__column--no-border\">\n                                    <span class=\"double-size-icn double-size-icn--light\">\n                                        <i class=\"icon-calendar\"></i>\n                                    </span>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow sd-list-item__text-strong\">Event name</span>\n                                    </div>\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__location\">New York City </span></span><time title=\"\">15.10.2017–16.10.2017 </time>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"\">\n                            <div class=\"form__row\">\n                                <span class=\"label label--hollow\">Draft</span>\n                            </div>\n                            <div class=\"form__row\">\n                                <label class=\"form-label form-label--light\">Name</label>\n                                <p class=\"sd-text__strong\">Event name</p>\n                            </div>\n                            <div class=\"form__row\">\n                                <label class=\"form-label form-label--light\">Date</label>\n                                <p><span class=\"sd-text__info\">From</span> 15.10.2017 @ 12:50 <span class=\"sd-text__info\">to</span> 16.10.2017 @ 12:50</p>\n                            </div>\n                            <div class=\"form__row\">\n                                <label class=\"form-label form-label--light\">Location</label>\n                                <p>New York City, USA</p>\n                            </div>\n                            <div class=\"form__row\">\n                                <label class=\"form-label form-label--light\">Occurence Status</label>\n                                <p>Planned, occurs certainly</p>\n                            </div>\n                            <div class=\"form__row\">\n                                <label class=\"form-label form-label--light\">Description</label>\n                                <p>Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis.</p>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- END First tab -->\n    <!-- Second tab -->\n    <div class=\"side-panel__content-tab-content\" ng-if=\"tab2 === 'event-history2'\">\n        <div class=\"side-panel__content-block\">\n            <ul class=\"simple-list simple-list--dotted simple-list--no-padding\">\n                <li class=\"simple-list__item\">\n                    <p><strong>Created by</strong> Mika Karapet</p>\n                    <time class=\"small\">Tuesday, 12. September 13:10</time>\n                </li>\n                <li class=\"simple-list__item\">\n                    <p><strong>Coverage created by</strong> Vince Ryan</p>\n                    <time class=\"small\">Tuesday, 12. September 13:13</time>\n                </li>\n                <li class=\"simple-list__item\">\n                    <p><strong>Updated by</strong> Karel Petrak</p>\n                    <time class=\"small\">Tuesday, 12. September 13:13</time>\n                </li>\n                <li class=\"simple-list__item\">\n                    <p><strong>Coverage updated by</strong> John Doe</p>\n                    <time class=\"small\">Tuesday, 12. September 13:21</time>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <!-- END Second tab -->\n</div>\n<div class=\"side-panel__footer\">\n\n</div>\n";

/***/ }),
/* 266 */
/***/ (function(module, exports) {

module.exports = "<!-- Event edit panel -->\n<div class=\"side-panel__header subnav subnav--dark-blue-grey\">\n    <div class=\"subnav__stretch-bar\">\n        <span class=\"icn-mix icn-mix--2x\" data-sd-tooltip=\"Event\" data-flow=\"right\">\n            <i class=\"icon-repeat icn-mix__sub-icn\"></i>\n            <i class=\"icon-event icn-mix__icn\"></i>\n        </span>\n        <figure class=\"avatar\" style=\"margin-right:10px;\">sd</figure>\n    </div>\n    <div class=\"subnav__stretch-bar subnav__stretch-bar--right\">\n        <a href=\"\" class=\"btn btn--ui-dark\" ng-click=\"$parent.editorOpen = false\">Cancel</a>\n        <button class=\"btn btn--success\">Publish</button>\n        <a href=\"\" class=\"btn btn--primary\" ng-click=\"$parent.editorOpen = false\">Save</a>\n\n    </div>\n    <button class=\"navbtn\" ng-click=\"editorOpen = !editorOpen\">\n        <i class=\"big-icon--minimize\"></i>\n    </button>\n    <button class=\"navbtn\">\n        <i class=\"icon-dots-vertical\"></i>\n    </button>\n</div>\n<div class=\"side-panel__content side-panel__content--flex\">\n\n    <ul class=\"nav-tabs side-panel__content-tab-nav\">\n        <li ng-class=\"{'nav-tabs__tab--active': !tab2 || tab2 === 'event-details2'}\" class=\"nav-tabs__tab\">\n            <button ng-click=\"tab2 = 'event-details2'\" class=\"nav-tabs__link\"><span translate=\"\">Content</span></button>\n        </li>\n        <li ng-class=\"{'nav-tabs__tab--active': tab2 === 'event-history2'}\" class=\"nav-tabs__tab\">\n            <button ng-click=\"tab2 = 'event-history2'\" class=\"nav-tabs__link\"><span translate=\"\">History</span></button>\n        </li>\n    </ul>\n    <!-- First tab -->\n    <div class=\"side-panel__content-tab-content\" ng-if=\"!tab2 || tab2 === 'event-details2'\">\n\n        <div class=\"side-panel__content-block side-panel__content-block--pad-small side-panel__content-block--flex\">\n            <div class=\"side-panel__content-block-inner side-panel__content-block-inner--grow\">\n                <p class=\"sd-text__date-and-author\"><time>Created 16.10.2017 by </time> <span class=\"sd-text__author\">John Doe</span></p> \n                <p class=\"sd-text__date-and-author\"><time>Updated 3 hours ago by </time> <span class=\"sd-text__author\">Mika Karapet</span></p> \n            </div>\n            <div class=\"side-panel__content-block-inner side-panel__content-block-inner--right\">\n                <span class=\"label label--success label--hollow\">Scheduled</span>\n            </div>\n        </div>\n\n        <div class=\"side-panel__content-block\">\n            <div class=\"form__row\">\n                <div class=\"sd-line-input\">\n                    <label class=\"sd-line-input__label\">Slugline</label>\n                    <input class=\"sd-line-input__input\" type=\"text\" value=\"Clickable event\">\n                </div>\n            </div>\n            <div class=\"form__row\">\n                <div class=\"sd-line-input sd-line-input--required\">\n                    <label class=\"sd-line-input__label\">Name</label>\n                    <input class=\"sd-line-input__input\" type=\"text\">\n                </div>\n            </div>\n            <div class=\"form__row\">\n                <div class=\"sd-line-input\">\n                    <label class=\"sd-line-input__label\">Description</label>\n                    <input class=\"sd-line-input__input\" type=\"text\">\n                </div>\n            </div>\n            <div class=\"form__row\">\n                <div class=\"sd-line-input sd-line-input--is-select\">\n                    <label class=\"sd-line-input__label\">Occurence Status</label>\n                    <select class=\"sd-line-input__select\">\n                        <option value=\"\">Unplanned event</option>\n                        <option value=\"\">Planned, occurence planned only</option>\n                        <option value=\"\">Planned, occurence highly uncertain</option>\n                        <option value=\"\">Planned, May occur</option>\n                        <option value=\"\">Planned, occurence highly likely</option>\n                        <option value=\"\">Planned, occurs certainly</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"form__row form__row--flex\">\n                <span>From</span>\n                <div class=\"sd-line-input sd-line-input--no-margin\">\n                    <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                    <input class=\"sd-line-input__input\" type=\"text\">\n                </div>\n                <div class=\"sd-line-input sd-line-input--no-margin\">\n                    <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                    <input class=\"sd-line-input__input\" type=\"text\">\n                </div>\n                <span>to</span>\n                <div class=\"sd-line-input sd-line-input--no-margin\">\n                    <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                    <input class=\"sd-line-input__input\">\n                </div>\n                <div class=\"sd-line-input\">\n                    <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                    <input class=\"sd-line-input__input\" type=\"text\">\n                </div>\n            </div>\n            <div class=\"form__row\">\n                <div class=\"sd-line-input\">\n                    <label class=\"sd-line-input__label\">Location</label>\n                    <input class=\"sd-line-input__input\" type=\"text\">\n                </div>\n            </div>\n            <div sd-toggle-box data-title=\"Details\" data-style=\"circle\">\n                <div class=\"form__row\">\n                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                        <span class=\"sd-line-input__plus-btn\"></span>\n                        <label class=\"sd-line-input__label\">Calendars</label>\n                        <input class=\"sd-line-input__input\" type=\"text\">\n                    </div>\n                </div>\n                <div class=\"form__row\">\n                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                        <span class=\"sd-line-input__plus-btn\"></span>\n                        <label class=\"sd-line-input__label\">Category</label>\n                        <input class=\"sd-line-input__input\" type=\"text\">\n                    </div>\n                </div>\n                <div class=\"form__row\">\n                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                        <span class=\"sd-line-input__plus-btn\"></span>\n                        <label class=\"sd-line-input__label\">Subject</label>\n                        <input class=\"sd-line-input__input\" type=\"text\">\n                    </div>\n                </div>\n                <div class=\"form__row\">\n                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                        <label class=\"sd-line-input__label\">Long Description</label>\n                        <textarea class=\"sd-line-input__input\"></textarea>\n                    </div>\n                </div>\n                <div class=\"form__row\">\n                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                        <label class=\"sd-line-input__label\">Internal Note</label>\n                        <textarea class=\"sd-line-input__input\"></textarea>\n                    </div>\n                </div>\n            </div>\n            <div sd-toggle-box data-title=\"Attached files\" data-open=\"false\" data-style=\"circle\">\n                <div class=\"basic-drag-block\">\n                    <i class=\"big-icon--upload-alt\"></i> <span class=\"basic-drag-block__text\"> Drag files here or</span> <a class=\"text-link\" href=\"\">browse</a>.\n                </div>\n            </div>\n            <div sd-toggle-box data-title=\"External links\" data-open=\"false\" data-style=\"circle\">\n                <a class=\"text-link\" href=\"\"><i class=\"icon-plus-sign\"> </i> Add link</a>\n            </div>\n            <div sd-toggle-box data-title=\"Related planning items\" data-open=\"false\" data-style=\"circle\">\n                <ul class=\"simple-list simple-list--dotted simple-list--no-padding\">\n                    <li class=\"simple-list__item simple-list__item--with-icon\"><i class=\"icon-text\"></i> <p><strong>Planning_1</strong> created by Mika Karapet in Agenda: <a class=\"text-link\" href=\"\">Daily Sports</a></p></li>\n                    <li class=\"simple-list__item simple-list__item--with-icon\"><i class=\"icon-text\"></i> <p><strong>Planning_2</strong> created by Vince Ryan in Agenda: <a class=\"text-link\" href=\"\">Daily Sports</a></p></li>\n                    <li class=\"simple-list__item simple-list__item--with-icon\"><i class=\"icon-text\"></i> <p><strong>Planning_3</strong> created by Karel Petrak in Agenda: <a class=\"text-link\" href=\"\">Daily Sports</a></p></li>\n                    <li class=\"simple-list__item simple-list__item--with-icon\"><i class=\"icon-text\"></i> <p><strong>Planning_4</strong> created by John Doe in Agenda: <a class=\"text-link\" href=\"\">Daily Sports</a></p></li>\n                </ul>\n            </div>\n        </div>\n\n\n    </div>\n    <!-- END First tab -->\n    <!-- Second tab -->\n    <div class=\"side-panel__content-tab-content\" ng-if=\"tab2 === 'event-history2'\">\n        <div class=\"side-panel__content-block\">\n            <ul class=\"simple-list simple-list--dotted simple-list--no-padding\">\n                <li class=\"simple-list__item\">\n                    <p><strong>Created by</strong> Mika Karapet</p>\n                    <time class=\"small\">Tuesday, 12. September 13:10</time>\n                </li>\n                <li class=\"simple-list__item\">\n                    <p><strong>Coverage created by</strong> Vince Ryan</p>\n                    <time class=\"small\">Tuesday, 12. September 13:13</time>\n                </li>\n                <li class=\"simple-list__item\">\n                    <p><strong>Updated by</strong> Karel Petrak</p>\n                    <time class=\"small\">Tuesday, 12. September 13:13</time>\n                </li>\n                <li class=\"simple-list__item\">\n                    <p><strong>Coverage updated by</strong> John Doe</p>\n                    <time class=\"small\">Tuesday, 12. September 13:21</time>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <!-- END Second tab -->\n</div>\n<div class=\"side-panel__footer\">\n\n</div>\n";

/***/ }),
/* 267 */
/***/ (function(module, exports) {

module.exports = "<!-- Planning edit panel -->\n<div class=\"side-panel__header subnav subnav--darker\" ng-init=\"editorOpen = true\">\n    <div class=\"subnav__stretch-bar\">\n        <span class=\"icn-mix icn-mix--2x\" data-sd-tooltip=\"Planning\" data-flow=\"right\">\n            <i class=\"icon-repeat icn-mix__sub-icn\"></i>\n            <i class=\"icon-calendar icon--light-blue icn-mix__icn\"></i>\n        </span>\n        <figure class=\"avatar\" style=\"margin-right:10px;\">sd</figure>\n    </div>\n    <div class=\"subnav__stretch-bar subnav__stretch-bar--right\">\n        <a href=\"\" class=\"btn\" ng-click=\"$parent.editorOpen = false\">Cancel</a>\n        <button class=\"btn btn--success\">Publish</button>\n        <a href=\"\" class=\"btn btn--primary\" ng-click=\"$parent.editorOpen = false\">Save</a>\n\n    </div>\n    <button class=\"navbtn\" ng-click=\"editorOpen = !editorOpen\">\n        <i class=\"big-icon--minimize\"></i>\n    </button>\n    <button class=\"navbtn\">\n        <i class=\"icon-dots-vertical\"></i>\n    </button>\n</div>\n<div class=\"side-panel__content side-panel__content--flex\">\n\n    <ul class=\"nav-tabs side-panel__content-tab-nav\">\n        <li ng-class=\"{'nav-tabs__tab--active': !tab2 || tab2 === 'event-details2'}\" class=\"nav-tabs__tab\">\n            <button ng-click=\"tab2 = 'event-details2'\" class=\"nav-tabs__link\"><span translate=\"\">Content</span></button>\n        </li>\n        <li ng-class=\"{'nav-tabs__tab--active': tab2 === 'event-history2'}\" class=\"nav-tabs__tab\">\n            <button ng-click=\"tab2 = 'event-history2'\" class=\"nav-tabs__link\"><span translate=\"\">History</span></button>\n        </li>\n    </ul>\n    <!-- First tab -->\n    <div class=\"side-panel__content-tab-content\" ng-if=\"!tab2 || tab2 === 'event-details2'\">\n\n        <div class=\"side-panel__content-block side-panel__content-block--pad-small side-panel__content-block--flex\">\n            <div class=\"side-panel__content-block-inner side-panel__content-block-inner--grow\">\n                <p class=\"sd-text__date-and-author\"><time>Created 15.09.2017 by </time> <span class=\"sd-text__author\">Mika Karapet</span></p> \n                <p class=\"sd-text__date-and-author\"><time>Updated 1 hour ago by </time> <span class=\"sd-text__author\">John Doe</span></p> \n            </div>\n            <div class=\"side-panel__content-block-inner side-panel__content-block-inner--right\">\n                <span class=\"label label--hollow label--highlight2\">Rescheduled</span>\n            </div>\n        </div>\n\n        <div class=\"side-panel__content-block\">\n            <div class=\"form__row\">\n                <div class=\"sd-line-input\">\n                    <label class=\"sd-line-input__label\">Slugline</label>\n                    <input class=\"sd-line-input__input\" type=\"text\" value=\"Double-click Planning item\">\n                </div>\n            </div>\n            <div class=\"form__row\">\n                <div class=\"sd-line-input\">\n                    <label class=\"sd-line-input__label\">Description</label>\n                    <textarea class=\"sd-line-input__input\"></textarea>\n                </div>\n            </div>\n            <div class=\"form__row\">\n                <div class=\"sd-line-input\">\n                    <label class=\"sd-line-input__label\">Internale note</label>\n                    <textarea class=\"sd-line-input__input\"></textarea>\n                </div>\n            </div>\n            <div class=\"form__row\">\n                <div class=\"sd-line-input sd-line-input--with-button\">\n                    <span class=\"sd-line-input__plus-btn\"></span>\n                    <label class=\"sd-line-input__label\">Agenda</label>\n                    <input class=\"sd-line-input__input\" type=\"text\">\n                </div>\n            </div>\n\n            <div sd-toggle-box data-title=\"Details\" data-style=\"circle\">\n                <div class=\"form__row\">\n                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                        <label class=\"sd-line-input__label\">Ed note</label>\n                        <textarea class=\"sd-line-input__input\"></textarea>\n                    </div>\n                </div>\n                <div class=\"form__row\">\n                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                        <span class=\"sd-line-input__plus-btn\"></span>\n                        <label class=\"sd-line-input__label\">Category</label>\n                        <input class=\"sd-line-input__input\" type=\"text\">\n                    </div>\n                </div>\n                <div class=\"form__row\">\n                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                        <span class=\"sd-line-input__plus-btn\"></span>\n                        <label class=\"sd-line-input__label\">Subject</label>\n                        <input class=\"sd-line-input__input\" type=\"text\">\n                    </div>\n                </div>\n                <div class=\"form__row\">\n                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                        <label class=\"sd-line-input__label\">Long Description</label>\n                        <textarea class=\"sd-line-input__input\"></textarea>\n                    </div>\n                </div>\n                <div class=\"form__row\">\n                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                        <label class=\"sd-line-input__label\">Internal Note</label>\n                        <textarea class=\"sd-line-input__input\"></textarea>\n                    </div>\n                </div>\n                <div class=\"form__row\">\n                    <div class=\"sd-line-input sd-line-input--is-select  sd-line-input--no-margin\">\n                        <label class=\"sd-line-input__label\">Urgency</label>\n                        <select class=\"sd-line-input__select\">\n                            <option value=\"\">None</option>\n                            <option value=\"\">1</option>\n                            <option value=\"\">2</option>\n                            <option value=\"\">3</option>\n                            <option value=\"\">4</option>\n                            <option value=\"\">5</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"form__row\">\n                    <span ng-model=\"pubStatus\" sd-switch=\"\"></span><label>Not for publication</label>\n                </div>\n            </div>\n        </div>\n        <h3 class=\"side-panel__heading side-panel__heading--big\">Associated Event</h3>\n        <div class=\"side-panel__content-block\">\n                <!-- Collapse box 1 -->\n                <div class=\"sd-collapse-box sd-shadow--z2\" ng-class=\"{'sd-collapse-box--open' : isOpen0}\">\n                    <div class=\"sd-collapse-box__header\" ng-click=\"isOpen0 = !isOpen0\">\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-list-item--no-bg\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column\">\n                                <i class=\"icon-calendar-list\"></i>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"label label--hollow\">Draft</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__text-strong\">Event name</span></span>\n                                    <time title=\"\">15.10.2017–16.10.2017 </time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- END list item  -->\n                    </div>\n                    <div class=\"sd-collapse-box__content-wraper\">\n                        <div class=\"sd-collapse-box__content\">\n                            <div class=\"sd-collapse-box__tools\">\n                                <a class=\"icn-btn\" sd-tooltip=\"Collapse\" flow=\"left\" ng-click=\"isOpen0 = false\"><i class=\"icon-chevron-up-thin\"></i></a>\n                                <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                            </div>\n                            <div class=\"sd-collapse-box__content-block sd-collapse-box__content-block--top\">\n                                <div class=\"sd-list-item sd-list-item--no-bg sd-list-item--no-hover\">\n                                    <div class=\"sd-list-item__column sd-list-item__column--no-border\">\n                                        <span class=\"double-size-icn double-size-icn--light\">\n                                            <i class=\"icon-calendar\"></i>\n                                        </span>\n                                    </div>\n                                    <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                        <div class=\"sd-list-item__row\">\n                                            <span class=\"sd-overflow-ellipsis sd-list-item--element-grow sd-list-item__text-strong\">Event name</span>\n                                        </div>\n                                        <div class=\"sd-list-item__row\">\n                                            <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__location\">New York City </span></span><time title=\"\">15.10.2017–16.10.2017 </time>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"\">\n                                <div class=\"form__row\">\n                                    <span class=\"label label--hollow\">Draft</span>\n                                </div>\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Name</label>\n                                    <p class=\"sd-text__strong\">Event name</p>\n                                </div>\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Date</label>\n                                    <p><span class=\"sd-text__info\">From</span> 15.10.2017 @ 12:50 <span class=\"sd-text__info\">to</span> 16.10.2017 @ 12:50</p>\n                                </div>\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Location</label>\n                                    <p>New York City, USA</p>\n                                </div>\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Occurence Status</label>\n                                    <p>Planned, occurs certainly</p>\n                                </div>\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Description</label>\n                                    <p>Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis.</p>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        <h3 class=\"side-panel__heading side-panel__heading--big\">Coverages</h3>\n        <div class=\"side-panel__content-block\">\n            <!-- Collapse box 1 -->\n            <div class=\"sd-collapse-box sd-shadow--z2\" ng-class=\"{\n                    'sd-collapse-box--open' : isOpen1}\">\n                <div class=\"sd-collapse-box__header\" ng-click=\"isOpen1 = !isOpen1\">\n                    <!-- list item  -->\n                    <div class=\"sd-list-item sd-list-item--no-bg\">\n                        <div class=\"sd-list-item__border\"></div>\n                        <div class=\"sd-list-item__column sd-list-item__column--no-border\">\n                            <figure class=\"avatar avatar--no-margin\">sd</figure>\n                        </div>\n                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                            <div class=\"sd-list-item__row\">\n                                <i class=\"icon-photo sd-list-item__inline-icon\"></i> \n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">Photo</span>\n                                <time title=\"March 22, 2017 11:08 AM\"><i class=\"icon-time\"></i> Saturday, 7. October 13:35</time>\n                            </div>\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__text-label sd-list-item__text-label--normal\">Desk:</span>Sports; <span class=\"sd-list-item__text-label sd-list-item__text-label--normal\">Assignee:</span>Mika Karapet</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                            <button class=\"icn-btn\">\n                                <i class=\"icon-dots-vertical\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <!-- END list item  -->\n                </div>\n                <div class=\"sd-collapse-box__content-wraper\">\n                    <div class=\"sd-collapse-box__content\">\n                        <div class=\"sd-collapse-box__tools\">\n                            <a class=\"icn-btn\" sd-tooltip=\"Collapse\" flow=\"left\" ng-click=\"isOpen1 = false\"><i class=\"icon-chevron-up-thin\"></i></a>\n                            <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                        </div>\n                        <div class=\"sd-collapse-box__content-block sd-collapse-box__content-block--top\">\n                            <div class=\"sd-list-item sd-list-item--no-bg sd-list-item--no-hover\">\n                                <div class=\"sd-list-item__border\"></div>\n                                <div class=\"sd-list-item__column sd-list-item__column--no-border\">\n                                    <figure class=\"avatar avatar--no-margin avatar--large\">sd</figure>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__text-label sd-list-item__text-label--normal\">Desk:</span>Sports</span>\n                                    </div>\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__text-label sd-list-item__text-label--normal\">Assignee:</span>Mika Karapet</span>\n                                    </div>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--no-border\">\n                                    <a class=\"btn btn--hollow btn--small\">Reassign</a>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form__row\">\n                            <div class=\"sd-line-input sd-line-input--is-select\">\n                                <label class=\"sd-line-input__label\">Type</label>\n                                <select class=\"sd-line-input__select\">\n                                    <option value=\"\">Text</option>\n                                    <option value=\"\">Video</option>\n                                    <option value=\"\">Audio</option>\n                                    <option value=\"\">Infographics</option>\n                                    <option value=\"\">Live Blog</option>\n                                    <option value=\"\">Live Video</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"form__row\">\n                            <div class=\"sd-line-input\">\n                                <label class=\"sd-line-input__label\">Slugline</label>\n                                <input class=\"sd-line-input__input\" type=\"text\">\n                            </div>\n                        </div>\n                        <div class=\"form__row\">\n                            <div class=\"sd-line-input\">\n                                <label class=\"sd-line-input__label\">Ed note</label>\n                                <textarea class=\"sd-line-input__input\"></textarea>\n                            </div>\n                        </div>\n                        <div class=\"form__row\">\n                            <div class=\"sd-line-input\">\n                                <label class=\"sd-line-input__label\">Internal Note</label>\n                                <textarea class=\"sd-line-input__input\"></textarea>\n                            </div>\n                        </div>\n\n                        <div class=\"form__row\">\n                            <div class=\"sd-line-input sd-line-input--is-select\">\n                                <label class=\"sd-line-input__label\">Coverage Status</label>\n                                <select class=\"sd-line-input__select\">\n                                    <option value=\"\">Planned</option>\n                                    <option value=\"\">On merit</option>\n                                    <option value=\"\">Not planned</option>\n                                    <option value=\"\">On request</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"form__row form__row--flex\">\n                            <label class=\"form-label\">Due</label>\n                            <div class=\"sd-line-input sd-line-input--no-margin\">\n                                <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                <input class=\"sd-line-input__input\" type=\"text\">\n                            </div>\n                            <div class=\"sd-line-input sd-line-input--no-margin\">\n                                <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                <input class=\"sd-line-input__input\" type=\"text\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- Collapse box 2 -->\n            <div class=\"sd-collapse-box sd-shadow--z2\" ng-class=\"{\n                    'sd-collapse-box--open' : isOpen2}\">\n                <div class=\"sd-collapse-box__header\" ng-click=\"isOpen2 = !isOpen2\">\n                    <!-- list item  -->\n                    <div class=\"sd-list-item sd-list-item--no-bg\">\n                        <div class=\"sd-list-item__border\"></div>\n                        <div class=\"sd-list-item__column sd-list-item__column--no-border\">\n                            <figure class=\"avatar avatar--no-margin avatar--empty\"></figure>\n                        </div>\n                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                            <div class=\"sd-list-item__row\">\n                                <i class=\"icon-text sd-list-item__inline-icon\"></i> \n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">Article (news)</span>\n                                <time title=\"March 22, 2017 11:08 AM\"><i class=\"icon-time\"></i> Not scheduled yet</time>\n                            </div>\n                            <div class=\"sd-list-item__row\">\n                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__text-label sd-list-item__text-label--normal\">Not assigned</span></span>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                            <button class=\"icn-btn\">\n                                <i class=\"icon-dots-vertical\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <!-- END list item  -->\n                </div>\n                <div class=\"sd-collapse-box__content-wraper\">\n                    <div class=\"sd-collapse-box__content\">\n                        <div class=\"sd-collapse-box__tools\">\n                            <a class=\"icn-btn\" sd-tooltip=\"Collapse\" flow=\"left\" ng-click=\"isOpen2 = false\"><i class=\"icon-chevron-up-thin\"></i></a>\n                            <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                        </div>\n                        <div class=\"sd-collapse-box__content-block sd-collapse-box__content-block--top\">\n                            <div class=\"sd-list-item sd-list-item--no-bg sd-list-item--no-hover\">\n                                <div class=\"sd-list-item__border\"></div>\n                                <div class=\"sd-list-item__column sd-list-item__column--no-border\">\n                                    <figure class=\"avatar avatar--no-margin avatar--large avatar--empty\"></figure>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                    <div class=\"sd-list-item__row\">\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__text-label sd-list-item__text-label--normal\">Unassigned</span></span>\n                                    </div>\n                                    <div class=\"sd-list-item__row\">\n                                        <a class=\"btn btn--primary btn--small\">Assign</a>\n                                    </div>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--no-border\">\n\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form__row\">\n                            <div class=\"sd-line-input sd-line-input--is-select\">\n                                <label class=\"sd-line-input__label\">Type</label>\n                                <select class=\"sd-line-input__select\">\n                                    <option value=\"\">Text</option>\n                                    <option value=\"\">Video</option>\n                                    <option value=\"\">Audio</option>\n                                    <option value=\"\">Infographics</option>\n                                    <option value=\"\">Live Blog</option>\n                                    <option value=\"\">Live Video</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"form__row\">\n                            <div class=\"sd-line-input\">\n                                <label class=\"sd-line-input__label\">Slugline</label>\n                                <input class=\"sd-line-input__input\" type=\"text\">\n                            </div>\n                        </div>\n                        <div class=\"form__row\">\n                            <div class=\"sd-line-input\">\n                                <label class=\"sd-line-input__label\">Ed note</label>\n                                <textarea class=\"sd-line-input__input\"></textarea>\n                            </div>\n                        </div>\n                        <div class=\"form__row\">\n                            <div class=\"sd-line-input\">\n                                <label class=\"sd-line-input__label\">Internal Note</label>\n                                <textarea class=\"sd-line-input__input\"></textarea>\n                            </div>\n                        </div>\n\n                        <div class=\"form__row\">\n                            <div class=\"sd-line-input sd-line-input--is-select\">\n                                <label class=\"sd-line-input__label\">Coverage Status</label>\n                                <select class=\"sd-line-input__select\">\n                                    <option value=\"\">Planned</option>\n                                    <option value=\"\">On merit</option>\n                                    <option value=\"\">Not planned</option>\n                                    <option value=\"\">On request</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"form__row form__row--flex\">\n                            <label class=\"form-label\">Due</label>\n                            <div class=\"sd-line-input sd-line-input--no-margin\">\n                                <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                <input class=\"sd-line-input__input\" type=\"text\">\n                            </div>\n                            <div class=\"sd-line-input sd-line-input--no-margin\">\n                                <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                <input class=\"sd-line-input__input\" type=\"text\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- END First tab -->\n    <!-- Second tab -->\n    <div class=\"side-panel__content-tab-content\" ng-if=\"tab2 === 'event-history2'\">\n        <div class=\"side-panel__content-block\">\n            <ul class=\"simple-list simple-list--dotted simple-list--no-padding\">\n                <li class=\"simple-list__item\">\n                    <p><strong>Created by</strong> Mika Karapet</p>\n                    <time class=\"small\">Tuesday, 12. September 13:10</time>\n                </li>\n                <li class=\"simple-list__item\">\n                    <p><strong>Coverage created by</strong> Vince Ryan</p>\n                    <time class=\"small\">Tuesday, 12. September 13:13</time>\n                </li>\n                <li class=\"simple-list__item\">\n                    <p><strong>Updated by</strong> Karel Petrak</p>\n                    <time class=\"small\">Tuesday, 12. September 13:13</time>\n                </li>\n                <li class=\"simple-list__item\">\n                    <p><strong>Coverage updated by</strong> John Doe</p>\n                    <time class=\"small\">Tuesday, 12. September 13:21</time>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <!-- END Second tab -->\n</div>\n<div class=\"side-panel__footer\">\n\n</div>\n";

/***/ }),
/* 268 */
/***/ (function(module, exports) {

module.exports = "<div class=\"sd-page-grid--basic\" doc-modal>\n    <header class=\"sd-top-menu\">\n        <a href=\"\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n        <p class=\"sd-top-menu__header\">Planning</p>\n    </header>\n\n    <section class=\"sd-content sd-page-content--slide-in\" ng-class=\"{\n            'sd-page-content--slide-in--open' : editorOpen}\">\n\n        <div class=\"sd-sidebar-menu sd-page-content__left-tabs\">\n            <ul class=\"authoring-active\">\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Monitoring\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--view\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Highlights\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--marked-star\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Spiked\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--spike\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Personal\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--personal\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Search\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--global-search\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Events\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\" ng-click=\"menuItemActive1 = !menuItemActive1\" ng-class=\"{\n                            'sd- sidebar - menu__btn--closed': menuItemActive1}\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--calendar\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n            </ul>\n        </div>\n        <div id=\"leftContent\" class=\"sd-page-content__content-block sd-page-content__content-block--main\" ng-class=\"{\n                'open-filters': leftFilterOpen, 'open-preview': leftPreviewOpen}\">\n            <!-- left content -->\n            <div class=\"subnav\">\n\n                <div class=\"subnav__sliding-toolbar\" ng-show=\"editMode\">\n                    <div class=\"sliding-toolbar__inner\">\n                        <a class=\"btn\" ng-click=\"editMode = false\">Cancel</a>\n                        <span class=\"sliding-toolbar__info-text\">1 item selected</span>\n                    </div>\n                    <a class=\"btn btn--primary\">Create Planning item</a>\n                    <a class=\"btn btn--alert\"><i class=\"icon-trash\"></i>Spike</a>\n                </div>\n                <div class=\"sd-searchbar\" ng-class=\"{\n                        'sd-searchbar--focused': focused}\" >\n                    <label for=\"search-input\" class=\"sd-searchbar__icon\"></label>\n                    <input id=\"search-input\"\n                           class=\"sd-searchbar__input\"\n                           type=\"text\"\n                           placeholder=\"Search planning\"\n                           ng-keyup=\"searchOnEnter($event)\"\n                           ng-model=\"query\"\n                           tabindex=\"1\"\n                           ng-focus=\"focused = true\">\n                    <button class=\"sd-searchbar__cancel\" ng-if=\"query\">\n                        <i class=\"icon-remove-sign\"></i>\n                    </button>\n                    <button id=\"sd-searchbar__search-btn\" class=\"sd-searchbar__search-btn\" ng-if=\"focused\" tabindex=\"2\">\n                        <i class=\"big-icon--chevron-right\"></i>\n                    </button>\n                </div>\n                <div class=\"dropdown dropdown--align-right\" dropdown>\n                    <button class=\"dropdown__toggle navbtn\" dropdown__toggle>\n                        <i class=\"icon-dots-vertical\"></i>\n                    </button>\n                    <ul class=\"dropdown__menu\">\n                        <li>\n                            <div class=\"dropdown__menu-label\">Actions</div>\n                        </li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li><button>Action 2</button></li>\n                        <li><button>Action 3</button></li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li><button ng-click=\"openModal('agendaModal')\">Manage agendas</button></li>\n                    </ul>\n                </div>\n                <div class=\"dropdown dropdown--align-right\" dropdown>\n                    <button class=\"dropdown__toggle navbtn sd-create-btn\" dropdown__toggle>\n                        <i class=\"icon-plus-large\"></i>\n                        <span class=\"circle\"></span>\n                    </button>\n                    <ul class=\"dropdown__menu\">\n                        <li>\n                            <div class=\"dropdown__menu-label\">Create New</div>\n                        </li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li>\n                            <button><i class=\"icon-plus-sign icon--blue\"></i>Planning item</button>\n                        </li>\n                        <li>\n                            <button><i class=\"icon-plus-sign icon--blue\"></i>Event</button>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"subnav subnav--responsive\" ng-class=\"{'compact--level-1' : planningType === 'planning' || planningType === 'events'}\">\n                <button class=\"navbtn navbtn--left navbtn--darker\" ng-click=\"leftFilterOpen = !leftFilterOpen\" ng-class=\"{'navbtn--active': leftFilterOpen}\">\n                    <i class=\"icon-filter-large\"></i>\n                </button>\n                <div class=\"subnav__stretch-bar\" ng-init=\"planningType = 'events-planning'\">\n\n                    <div class=\"dropdown\" dropdown id=\"planning-dropdown\" ng-init=\"planningTypeText = 'Events & Planning'\">\n                        <button class=\"dropdown__toggle navbtn navbtn--text-only navbtn--border-r dropdown-toggle\" dropdown-toggle>{{planningTypeText}}<span class=\"dropdown__caret\"></span></button>\n                        <ul class=\"dropdown__menu\">\n                            <li><button ng-click=\"planningType = 'events-planning'; planningTypeText = 'Events & Planning'\" ng-disabled=\"planningType === 'events-planning'\">Events & Planning</button></li>\n                            <li><button ng-click=\"planningType = 'events'; planningTypeText = 'Events only'\" ng-disabled=\"planningType === 'events'\">Events only</button></li>\n                            <li><button ng-click=\"planningType = 'planning'; planningTypeText = 'Planning only'\" ng-disabled=\"planningType === 'planning'\">Planning only</button></li>\n                        </ul>\n                    </div>\n                    <div class=\"sd-check__group\" id=\"planning-buttons\">\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"events-planning\" label-position=\"inside\">Events & Planning</sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"events\" label-position=\"inside\">Events only</sd-check>\n                        <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"planning\" label-position=\"inside\">Planning only</sd-check>\n                        <div class=\"subnav__spacer subnav__spacer--dotted subnav__spacer--no-r-margin\" ng-show=\"planningType === 'planning' || planningType === 'events'\"></div>\n                    </div>\n                    <div class=\"dropdown\" dropdown ng-show=\"planningType === 'planning'\">\n                        <button class=\"dropdown__toggle navbtn navbtn--text-only dropdown-toggle\" dropdown-toggle>Agenda: No Agenda Selected <span class=\"dropdown__caret\"></span></button>\n                        <ul class=\"dropdown__menu scrollable\">\n                            <li><div class=\"dropdown__menu-label ng-binding\">Agendas</div></li>\n                            <li><button>Agenda One</button></li>\n                            <li><button>Agenda Two</button></li>\n                            <li><button>Agenda Three</button></li>\n                            <li><button>Agenda Four</button></li>\n                        </ul>\n                    </div>\n                    <div class=\"dropdown\" dropdown ng-show=\"planningType === 'events'\">\n                        <button class=\"dropdown__toggle navbtn navbtn--text-only dropdown-toggle\" dropdown-toggle>Calendar: No Calendar Assigned <span class=\"dropdown__caret\"></span></button>\n                        <ul class=\"dropdown__menu scrollable\">\n                            <li><div class=\"dropdown__menu-label ng-binding\">Calendars</div></li>\n                            <li><button>Calendar One</button></li>\n                            <li><button>Calendar Two</button></li>\n                            <li><button>Calendar Three</button></li>\n                            <li><button>Calendar Four</button></li>\n                        </ul>\n                    </div>\n                </div>\n                <div class=\"subnav__button-stack subnav__button-stack--padded\">\n                    <a class=\"btn\">Today</a>\n                </div>\n                <div class=\"subnav__button-stack subnav__button-stack--padded\">\n                        <a class=\"btn btn--icon-only-circle\"><i class=\"icon-chevron-left-thin\"></i></a>\n                        <a class=\"btn btn--icon-only-circle\"><i class=\"icon-chevron-right-thin\"></i></a>\n                    </div>\n                <div class=\"subnav__button-stack subnav__button-stack--padded\" ng-init=\"dateSpan = 'week'\">\n                    <sd-check ng-model=\"dateSpan\" type=\"radio\" ng-value=\"day\" label-position=\"inside\">D</sd-check>\n                    <sd-check ng-model=\"dateSpan\" type=\"radio\" ng-value=\"week\" label-position=\"inside\">W</sd-check>\n                    <sd-check ng-model=\"dateSpan\" type=\"radio\" ng-value=\"month\" label-position=\"inside\">M</sd-check>\n                </div>\n            </div>\n            <div class=\"sd-column-box--3\">\n                <div class=\"sd-filters-panel\">\n                    <div class=\"side-panel side-panel--transparent side-panel--shadow-left\">\n                        <div class=\"side-panel__header side-panel__header--border-b\">\n                            <a class=\"icn-btn side-panel__close\" sd-tooltip=\"Close filters\" flow=\"left\" ng-click=\"leftFilterOpen = !leftFilterOpen\"><i class=\"icon-close-small\"></i></a>\n                            <h3 class=\"side-panel__heading\">Advanced filters</h3>  \n                        </div>\n                        <div class=\"side-panel__content\">\n                            <div class=\"side-panel__content-block\">\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <label class=\"sd-line-input__label\">Name</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--is-select sd-line-input--no-margin\">\n                                        <label class=\"sd-line-input__label\">Ingest source</label>\n                                        <select class=\"sd-line-input__select\">\n                                            <option value=\"\">Select ingest source...</option>\n                                            <option value=\"\">Associated Press</option>\n                                            <option value=\"\">Reuters</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <label class=\"sd-line-input__label\">Location</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                                        <span class=\"sd-line-input__plus-btn\"></span>\n                                        <label class=\"sd-line-input__label\">Calendars</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                                        <span class=\"sd-line-input__plus-btn\"></span>\n                                        <label class=\"sd-line-input__label\">Category</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                                        <span class=\"sd-line-input__plus-btn\"></span>\n                                        <label class=\"sd-line-input__label\">Subject</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <label class=\"form-label\">Event state</label>\n                                    <div class=\"flex-grid flex-grid--boxed-small flex-grid--wrap-items flex-grid--small-2\">\n                                        <sd-check ng-model=\"xyz\" type=\"radio\" ng-value=\"value1\" label-position=\"inside\" ng-checked=\"true\">Exclude spiked</sd-check>\n                                        <sd-check ng-model=\"xyz\" type=\"radio\" ng-value=\"value2\" label-position=\"inside\">Include spiked</sd-check>\n                                        <sd-check ng-model=\"xyz\" type=\"radio\" ng-value=\"value3\" label-position=\"inside\">Spiked only</sd-check>\n                                    </div>\n                                </div>\n\n                                <div class=\"form__row form__row--flex\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                        <label class=\"sd-line-input__label\">From</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row form__row--flex\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                        <label class=\"sd-line-input__label\">To</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer side-panel__footer--button-box\">\n                            <div class=\"flex-grid flex-grid--boxed-small flex-grid--wrap-items flex-grid--small-2\">\n                                <a class=\"btn btn--hollow\">Clear</a>\n                                <a class=\"btn btn--primary\">Submit</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"sd-column-box__main-column\">\n                    <div class=\"sd-list-header\">\n                        <span class=\"sd-list-header__name\">Friday September 15, 2017</span>\n                    </div>\n                    <div class=\"sd-list-item-group sd-list-item-group--space-between-items\" >\n                        <!-- list item  -->\n                        <div class=\"sd-list-item-nested\" ng-class=\"{'sd-list-item-nested--expanded' : openNested, 'sd-list-item-nested--collapsed' : !openNested}\" ng-init=\"openNested = true\">\n                                <div class=\"sd-list-item sd-list-item-nested__parent sd-shadow--z1\" ng-click=\"leftPreviewOpen = !leftPreviewOpen\" ng-dblclick=\"editorOpen = true; itemType = 'event'\" ng-class=\"{\n                                    'sd-list-item--activated': leftPreviewOpen, 'sd-list-item--selected' : editMode}\" ng-show=\"planningType === 'events-planning' || planningType === 'events'\">\n                                <div class=\"sd-list-item__border\"></div>\n                                <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : editMode}\">\n                                    <div class=\"sd-list-item__checkbox-container\">\n                                        <sd-check ng-model=\"editMode\"></sd-check>\n                                    </div>\n                                    <span class=\"icn-mix sd-list-item__item-type\">\n                                        <i class=\"icon-repeat icn-mix__sub-icn\"></i>\n                                        <i class=\"icon-event icon--dark-blue-grey icn-mix__icn\"></i>\n                                    </span>\n                                </div>\n                                <div class=\"sd-list-item__column\">\n                                    <span class=\"badge badge--success\">P</span>\n                                </div>\n                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                    <div class=\"sd-list-item__row\" ng-class=\"{'sd-list-item__row--only-child' : planningType !== 'events-planning'}\">\n                                        <span class=\"label label--success label--hollow\">Scheduled</span>\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Clickable event</span>Duis autem vel eum iriure dolor illum dolore.</span>\n                                        <time title=\"March 22, 2017 11:08 AM\">12:50, 15.09.2017</time>\n                                    </div>\n                                    <div class=\"sd-list-item__row\" ng-show=\"planningType === 'events-planning'\">\n                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"> <a class=\"text-link\" ng-click=\"openNested = !openNested; leftPreviewOpen = false\"><i class=\"icon-calendar\"></i>(2) <span ng-show=\"openNested\">Hide planning items</span><span ng-show=\"!openNested\">Show planning items</span></a></span>\n                                    </div>\n                                </div>\n                                <div class=\"sd-list-item__action-menu\">\n                                    <!--dropdown-->\n                                    <div class=\"dropdown\" dropdown dropdown-append-to-body is-open=\"itemActive1\">\n                                        <button class=\"icn-btn dropdown__toggle\" dropdown__toggle>\n                                            <i class=\"icon-dots-vertical\"></i>\n                                        </button>\n                                        <ul class=\"dropdown__menu\">\n                                            <li>\n                                                <div class=\"dropdown__menu-label\">\n                                                    Actions\n                                                    <button class=\"dropdown__menu-close\"><i class=\"icon-close-small\"></i></button>\n                                                </div>\n                                            </li>\n                                            <li class=\"dropdown__menu-divider\"></li>\n                                            <li><button><i class=\"icon-pencil\"></i>Edit</button></li>\n                                            <li><button><i class=\"icon-copy\"></i>Copy</button></li>\n                                            <li><button><i class=\"icon-trash\"></i>Delete</button></li>\n                                            <li class=\"dropdown__menu-divider\"></li>\n                                            <li>\n                                                <div class=\"dropdown__menu-label\">Actions 2</div>\n                                            </li>\n                                            <li class=\"dropdown__menu-item--no-link\">\n                                                Just some text without a link\n                                            </li>\n                                            <li>\n                                                <button><i class=\"icon-download\"></i>Download</button>\n                                            </li>\n                                            <li>\n                                                <button><i class=\"icon-print\"></i>Print</button>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <!--end dropdown-->\n                                </div>\n                            </div>\n                            <!-- Nested items -->\n                            <div class=\"sd-list-item-nested__childs sd-shadow--z1\" ng-show=\"planningType === 'events-planning'\">\n                                <!-- Child 1 -->\n                                <div class=\"sd-list-item\">\n                                    <div class=\"sd-list-item__border\"></div>\n                                    <div class=\"sd-list-item__column\">\n                                        <i class=\"icon-calendar icon--light-blue\"></i>\n                                    </div>\n                                    <div class=\"sd-list-item__column\">\n                                        <span class=\"badge badge--light\">&nbsp;</span>\n                                    </div>\n                                    <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                        <div class=\"sd-list-item__row\">\n                                            <i class=\"icon-text sd-list-item__inline-icon\"></i><i class=\"icon-photo sd-list-item__inline-icon\"></i>\n                                            <span class=\"label label--hollow\">Draft</span>\n                                            <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                                <span class=\"sd-list-item__slugline\">Lipsum Ipsum</span><span class=\"sd-list-item__text-label\">agenda:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong sd-list-item__element-rm-10\">Daily agenda</span><span>Molestie consequatvel illum dolore eu feugiat nulla facilisis.</span>\n                                            </span>\n                                            <time title=\"March 22, 2017 11:08 AM\">13:00–14:00, 15.09.2017</time>\n                                        </div>\n                                    </div>\n                                    <div class=\"sd-list-item__action-menu\">\n                                        <button class=\"icn-btn\">\n                                            <i class=\"icon-dots-vertical\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                                <!-- Child 2 -->\n                                <div class=\"sd-list-item\">\n                                    <div class=\"sd-list-item__border\"></div>\n                                    <div class=\"sd-list-item__column\">\n                                        <i class=\"icon-calendar icon--light-blue\"></i>\n                                    </div>\n                                    <div class=\"sd-list-item__column\">\n                                        <span class=\"badge badge--success\">P</span>\n                                    </div>\n                                    <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <i class=\"icon-text sd-list-item__inline-icon\"></i>\n                                                <span class=\"label label--success label--hollow\">Scheduled</span>\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                                    <span class=\"sd-list-item__slugline\">Lipsum Ipsum</span><span class=\"sd-list-item__text-label\">agenda:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong sd-list-item__element-rm-10\">Daily agenda</span><span>Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper.</span>\n                                                </span>\n                                                <time title=\"March 22, 2017 11:08 AM\">13:00–14:00, 15.09.2017</time>\n                                            </div>\n                                        </div>\n                                    <div class=\"sd-list-item__action-menu\">\n                                        <button class=\"icn-btn\">\n                                            <i class=\"icon-dots-vertical\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                            <!-- END nested items -->\n                        </div>\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--activated' : itemActive2}\"  ng-show=\"planningType === 'events-planning' || planningType === 'events'\">\n                            <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                            <div class=\"sd-list-item__column\">\n                                <i class=\"icon-event icon--dark-blue-grey\"></i>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--light\">&nbsp;</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"label label--hollow\">Draft</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">I'm a Slugline</span>Molestie consequatvel illum dolore eu feugiat nulla facilisis.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">13:00–14:00, 15.09.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-show=\"planningType === 'events-planning' || planningType === 'planning'\" ng-dblclick=\"editorOpen = true; itemType = 'planning'\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"icn-mix\">\n                                   <i class=\"icon-calendar icon--light-blue\"></i> \n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--success\">P</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"label label--highlight2 label--hollow\">Rescheduled</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Double-click Planning item</span>Vulputate velit esse molestie consequatvel illum dolore.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">15.09.2017–16.09.2017</time>\n                                </div>\n                                <div class=\"sd-list-item__row\">\n                                    <i class=\"icon-text sd-list-item__inline-icon\"></i> <i class=\"icon-photo sd-list-item__inline-icon\"></i> \n                                    <span class=\"sd-overflow-ellipsis sd-list-item__inline-text sd-list-item__location\">Belgrade, Serbia</span><span class=\"sd-list-item__text-label\">agenda:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong sd-list-item--element-grow\">Daily agenda</span>\n                                    <time title=\"\">12:25, 15.09.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-show=\"planningType === 'events-planning' || planningType === 'planning'\">\n                            <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                            <div class=\"sd-list-item__column\">\n                                <i class=\"icon-calendar icon--light-blue\"></i>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--light\">&nbsp;</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"label label--yellow2 label--hollow\">Postponed</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Ipsum lorem</span>Iriure dolor in hendrerit in vulputate velit esse molestie consequatvel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">15.09.2017</time>\n                                </div>\n                                <div class=\"sd-list-item__row\">\n                                    <i class=\"icon-text sd-list-item__inline-icon\"></i> <i class=\"icon-photo sd-list-item__inline-icon\"></i> \n                                    <span class=\"sd-overflow-ellipsis sd-list-item__inline-text sd-list-item__location\">Berlin, Germany</span><span class=\"sd-list-item__text-label\">agenda:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong sd-list-item--element-grow\">Daily agenda</span>\n                                    <time title=\"\">12:25, 15.09.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <!--dropdown-->\n                                <div class=\"dropdown dropdown--align-right\" dropdown dropdown-append-to-body is-open=\"itemActive18\">\n                                    <button class=\"icn-btn dropdown__toggle\" dropdown__toggle>\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </button>\n                                    <ul class=\"dropdown__menu\">\n                                        <li>\n                                            <div class=\"dropdown__menu-label\">\n                                                Actions\n                                                <button class=\"dropdown__menu-close\"><i class=\"icon-close-small\"></i></button>\n                                            </div>\n                                        </li>\n                                        <li class=\"dropdown__menu-divider\"></li>\n                                        <li><button><i class=\"icon-pencil\"></i>Edit</button></li>\n                                        <li><button><i class=\"icon-copy\"></i>Copy</button></li>\n                                        <li><button><i class=\"icon-trash\"></i>Delete</button></li>\n                                        <li class=\"dropdown__menu-divider\"></li>\n                                        <li>\n                                            <div class=\"dropdown__menu-label\">Actions 2</div>\n                                        </li>\n                                        <li class=\"dropdown__menu-item--no-link\">\n                                            Just some text without a link\n                                        </li>\n                                        \n                                        <li>\n                                            <button><i class=\"icon-download\"></i>Download</button>\n                                        </li>\n                                        <li>\n                                            <button><i class=\"icon-print\"></i>Print</button>\n                                        </li>\n                                    </ul>\n                                </div>\n                                <!--end dropdown-->\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-show=\"planningType === 'events-planning' || planningType === 'events'\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-repeat icn-mix__sub-icn\"></i>\n                                    <i class=\"icon-event icon--dark-blue-grey icn-mix__icn\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--success\">P</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"label label--hollow\">Draft</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Molestie-vulputate</span>Hendrerit in vulputate velit esse molestie consequatvel illum dolore eu feugiat.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">15:00, 15.09.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-show=\"planningType === 'events-planning' || planningType === 'events'\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column\">\n                                <i class=\"icon-event icon--dark-blue-grey\"></i>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--success\">P</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"label label--yellow2 label--hollow\">Postponed</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Feugiat nulla vero</span>Consequatvel illum dolore eu feugiat nulla facilisis at.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">15:45, 15.09.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-show=\"planningType === 'events-planning' || planningType === 'planning'\">\n                            <div class=\"sd-loader\"></div>\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column\">\n                                <i class=\"icon-calendar icon--light-blue\"></i>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--light\">&nbsp;</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"label label--hollow\">Draft</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">facilisis-eros</span>Dolore eu feugiat nulla facilisis at vero eros.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">16:00-18:00, 15.09.2017</time>\n                                </div>\n                                <div class=\"sd-list-item__row\">\n                                    <i class=\"icon-text sd-list-item__inline-icon\"></i> <i class=\"icon-photo sd-list-item__inline-icon\"></i> \n                                    <span class=\"sd-overflow-ellipsis sd-list-item__inline-text sd-list-item__location\">Bologna, Italy</span><span class=\"sd-list-item__text-label\">agenda:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong sd-list-item--element-grow\">Daily agenda</span>\n                                    <time title=\"\">12:25, 15.09.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-show=\"planningType === 'events-planning' || planningType === 'events'\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column\">\n                                <i class=\"icon-event icon--dark-blue-grey\"></i>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--light\">&nbsp;</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"label label--hollow\">Draft</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Odio dignissim praesent</span>Autem hendrerit in vulputate velit esse molestie consequatvel illum dolore.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">15.09.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"sd-list-header\">\n                        <span class=\"sd-list-header__name\">Saturday September 16, 2017</span>\n                    </div>\n                    <div class=\"sd-list-item-group sd-list-item-group--space-between-items\">\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-show=\"planningType === 'events-planning' || planningType === 'events'\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column\">\n                                <i class=\"icon-event icon--dark-blue-grey\"></i>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--success\">P</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Lipsum ipsum</span>Dolor illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">16.09.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-show=\"planningType === 'events-planning' || planningType === 'planning'\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column\">\n                                <i class=\"icon-calendar icon--light-blue\"></i>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--light\">&nbsp;</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"label label--highlight2 label--hollow\">Rescheduled</span><span class=\"sd-list-item__slugline\">Tempor Nobis</span>Nam liber tempor cum soluta nobis eleifend option.</span>\n                                    <time title=\"\">15.09.2017</time>\n                                </div>\n                                <div class=\"sd-list-item__row\">\n                                    <i class=\"icon-text sd-list-item__inline-icon\"></i> <i class=\"icon-photo sd-list-item__inline-icon\"></i> \n                                    <span class=\"sd-overflow-ellipsis sd-list-item__inline-text sd-list-item__location\">Oslo, Norway </span><span class=\"sd-list-item__text-label\">agenda:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong sd-list-item--element-grow\">Some agenda</span>\n                                    <time title=\"\">13:25, 15.09.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-show=\"planningType === 'events-planning' || planningType === 'events'\">\n                            <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                            <div class=\"sd-list-item__column\">\n                                <i class=\"icon-event icon--dark-blue-grey\"></i>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--success\">P</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Dolore illum</span>Consequatvel molestie illum dolore eu feugiat nulla facilisis.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">16.09.2017–17.09.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-show=\"planningType === 'events-planning' || planningType === 'planning'\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column\">\n                                <i class=\"icon-calendar icon--light-blue\"></i>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--light\">&nbsp;</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"label label--hollow label--yellow2\">Postponed</span><span class=\"sd-list-item__slugline\">Ipsum lorem</span>Nam liber tempor cum soluta nobis eleifend option.</span>\n                                    <time title=\"\">15.09.2017</time>\n                                </div>\n                                <div class=\"sd-list-item__row\">\n                                    <i class=\"icon-text sd-list-item__inline-icon\"></i> <i class=\"icon-photo sd-list-item__inline-icon\"></i> \n                                    <span class=\"sd-overflow-ellipsis sd-list-item__inline-text sd-list-item__location\">Stockholm, Sweden </span><span class=\"sd-list-item__text-label\">agenda:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong sd-list-item--element-grow\">My agenda</span>\n                                    <time title=\"\">15:30, 15.09.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-show=\"planningType === 'events-planning' || planningType === 'events'\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column\">\n                                <i class=\"icon-event icon--dark-blue-grey\"></i>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--success\">P</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"label label--yellow2 label--hollow\">Postponed</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Feugiat nulla vero</span>Illum dolore eu feugiat nulla facilisis at vero eros.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">16.09.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-show=\"planningType === 'events-planning' || planningType === 'planning'\">\n                            <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                            <div class=\"sd-list-item__column\">\n                                <i class=\"icon-calendar icon--light-blue\"></i>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--light\">&nbsp;</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"label label--hollow\">Draft</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">facilisis-eros</span>Feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">18:00, 16.09.2017</time>\n                                </div>\n                                <div class=\"sd-list-item__row\">\n                                    <i class=\"icon-text sd-list-item__inline-icon\"></i> <i class=\"icon-photo sd-list-item__inline-icon\"></i> \n                                    <span class=\"sd-overflow-ellipsis sd-list-item__inline-text sd-list-item__location\">Prague, Czech Republic </span><span class=\"sd-list-item__text-label\">agenda:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong sd-list-item--element-grow\">My agenda</span>\n                                    <time title=\"\">15:30, 15.09.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                    </div>\n                </div>\n                <div class=\"sd-preview-panel\">\n                    <div class=\"side-panel side-panel--shadow-right\">\n                        <div class=\"side-panel__header side-panel__header--dark-blue-grey\">\n                            <div class=\"side-panel__tools\">\n                                <a class=\"icn-btn\" sd-tooltip=\"Edit details\" flow=\"top\" ng-click=\"editorOpen = true; leftPreviewOpen = false\"><i class=\"icon-pencil\"></i></a>\n                                <a class=\"icn-btn\" sd-tooltip=\"Close details\" flow=\"top\" ng-click=\"leftPreviewOpen = !leftPreviewOpen\"><i class=\"icon-close-small\"></i></a>\n                            </div>\n                            <ul class=\"nav-tabs nav-tabs--ui-dark\">\n                                <li ng-class=\"{'nav-tabs__tab--active': !tab || tab === 'event-details'}\" class=\"nav-tabs__tab\">\n                                    <button ng-click=\"tab = 'event-details'\" class=\"nav-tabs__link\"><span translate=\"\">Content</span></button>\n                                </li>\n                                <li ng-class=\"{'nav-tabs__tab--active': tab === 'event-history'}\" class=\"nav-tabs__tab\">\n                                    <button ng-click=\"tab = 'event-history'\" class=\"nav-tabs__link\"><span translate=\"\">History</span></button>\n                                </li>\n                            </ul> \n                        </div>\n                        <div class=\"side-panel__content\" ng-if=\"!tab || tab === 'event-details'\">\n                            <div class=\"side-panel__top-tools side-panel__top-tools--dark-blue-grey\">\n                                <span class=\"icn-mix icn-mix--2x\" data-sd-tooltip=\"Event\" data-flow=\"right\">\n                                    <i class=\"icon-repeat icn-mix__sub-icn\"></i>\n                                    <i class=\"icon-event icon--dark-blue-grey icn-mix__icn\"></i>\n                                </span>\n                                <div class=\"side-panel__top-tools-left\">\n                                    <figure class=\"avatar\" style=\"margin-right:10px;\">sd</figure>\n                                    <button class=\"btn btn--success\">Publish</button>\n                                </div>\n                                <div class=\"side-panel__top-tools-right\">\n                                    <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                                </div>\n                            </div>\n                            <div class=\"side-panel__content-block side-panel__content-block--pad-small side-panel__content-block--flex\">\n                                <div class=\"side-panel__content-block-inner side-panel__content-block-inner--grow\">\n                                    <p class=\"sd-text__date-and-author\"><time>Created 23.08.2017 by </time> <span class=\"sd-text__author\">Mika Karapet</span></p> \n                                    <p class=\"sd-text__date-and-author\"><time>Updated 3 hours ago by</time> <span class=\"sd-text__author\">John Doe</span></p>\n                                </div>\n                                <div class=\"side-panel__content-block-inner side-panel__content-block-inner--right\">\n                                    <span class=\"label label--hollow label--success\">Scheduled</span>\n                                </div>\n                            </div>\n                            <div class=\"side-panel__content-block\">\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Slugline</label>\n                                    <p class=\"sd-text__slugline\">Lipsum Ipsum</p>\n                                </div>\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Name</label>\n                                    <p class=\"sd-text__strong\">Duis dolore</p>\n                                </div>\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Description</label>\n                                    <p>Duis autem vel eum iriure dolor illum dolore.</p>\n                                </div>\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Occurence Status</label>\n                                    <p class=\"\">Planned, occurs certainly</p>\n                                </div>\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Date</label>\n                                    <p>15.09.2017 @ 12:50</p>\n                                </div>\n                                <div sd-toggle-box data-title=\"Details\" data-style=\"circle\">\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Calendars</label>\n                                        <p>Sport, Entertainment</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Category</label>\n                                        <p>Some category</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Subject</label>\n                                        <p>Arts, culture and entertainment, Music</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Long Description</label>\n                                        <p>Nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Internal Note</label>\n                                        <p>Lorem ipsum dolor sit amet, consetetur sadipscing.</p>\n                                    </div>\n                                </div>\n                                <div sd-toggle-box data-title=\"Attached files\" data-open=\"false\" data-style=\"circle\">\n                                    <p class=\"sd-text__info\" ng-show=\"!editModeL\">No attached files added.</p>\n                                </div>\n                                <div sd-toggle-box data-title=\"External links\" data-open=\"false\" data-style=\"circle\">\n                                    <p class=\"sd-text__info\" ng-show=\"!editModeL\">No external links added.</p>\n                                </div>\n                                <div sd-toggle-box data-title=\"Related planning items\" data-open=\"false\" data-style=\"circle\">\n                                    <ul class=\"simple-list simple-list--dotted simple-list--no-padding\">\n                                        <li class=\"simple-list__item simple-list__item--with-icon\"><i class=\"icon-text\"></i> <p><strong>Planning_1</strong> created by Mika Karapet in Agenda: <a class=\"text-link\" href=\"\">Daily Sports</a></p></li>\n                                        <li class=\"simple-list__item simple-list__item--with-icon\"><i class=\"icon-text\"></i> <p><strong>Planning_2</strong> created by Vince Ryan in Agenda: <a class=\"text-link\" href=\"\">Daily Sports</a></p></li>\n                                        <li class=\"simple-list__item simple-list__item--with-icon\"><i class=\"icon-text\"></i> <p><strong>Planning_3</strong> created by Karel Petrak in Agenda: <a class=\"text-link\" href=\"\">Daily Sports</a></p></li>\n                                        <li class=\"simple-list__item simple-list__item--with-icon\"><i class=\"icon-text\"></i> <p><strong>Planning_4</strong> created by John Doe in Agenda: <a class=\"text-link\" href=\"\">Daily Sports</a></p></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__content\" ng-if=\"tab === 'event-history'\">\n                            <div class=\"side-panel__content-block\">\n                                <ul class=\"simple-list simple-list--dotted simple-list--no-padding\">\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Created by</strong> Mika Karapet</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:10</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Coverage created by</strong> Vince Ryan</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:13</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Updated by</strong> Karel Petrak</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:13</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Coverage updated by</strong> John Doe</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:21</time>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer\">\n\n                        </div>\n                    </div>      \n                </div>\n            </div>\n            <!-- END left content -->\n        </div>\n\n        <!-- SPLIT CONTENT -->\n\n\n        <div id=\"editPane\" \n             class=\"sd-edit-panel sd-page-content__content-block sd-page-content__content-block--right sd-page-content__content-block--30-slide\" \n             ng-class=\"{'open-filters': rightFilterOpen, 'open-preview': rightPreviewOpen}\">\n            <!-- Eitor content -->\n            <div class=\"side-panel side-panel--shadow-right\" ng-if=\"!itemType || itemType === 'event'\" ng-include=\"'playgrounds/planning-snippets/edit-event.html'\"></div>\n            <div class=\"side-panel side-panel--shadow-right\" ng-if=\"!itemType || itemType === 'planning'\" ng-include=\"'playgrounds/planning-snippets/edit-planning.html'\"></div>\n            <!-- END Editor content -->\n        </div>\n    </section>\n    <footer class=\"bottom-bar \">\n        This is the optional footer.\n    </footer>\n\n    <!-- Agenda management modal -->\n    <div sd-modal data-model=\"agendaModal\" class=\"modal--large\">\n        <div class=\"modal__header\">\n            <button class=\"modal__close pull-right icn-btn\" ng-click=\"closeModal('agendaModal')\"><i class=\"icon-close-small\"></i></button>\n            <h3 class=\"modal__heading\">Manage Agendas</h3>\n        </div>\n        <div class=\"modal__body modal__body--no-padding\">\n            <div class=\"subnav\">\n                <div class=\"subnav__stretch-bar\"></div>\n                <div class=\"subnav__button-stack subnav__button-stack--right\">\n                    <button class=\"btn btn--primary\" ng-click=\"newAgenda = !newAgenda; editAgendaOpen = !editAgendaOpen\">\n                        <i class=\"icon-plus-sign icon-white\"></i>Add new agenda\n                    </button>\n                </div>\n            </div>\n            <div class=\"sd-column-box--2\">\n                <div class=\"sd-column-box__main-column sd-column-box__main-column--padded\">\n                    <div class=\"sd-list-header\">\n                        <span class=\"sd-list-header__name\">Active Agendas</span>\n                    </div>\n                    <div class=\"sd-list-item-group sd-list-item-group--space-between-items\">\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--activated': activateList}\">\n                            <div class=\"sd-list-item__border sd-list-item__border--active\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">Agenda One</span><time>updated 3 days ago</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"dropdown__toggle\" data-sd-tooltip=\"Edit Agenda\" data-flow=\"left\" ng-click=\"editAgendaOpen = !editAgendaOpen; activateList = !activateList\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"dropdown__toggle\" data-sd-tooltip=\"Delete Agenda\" data-flow=\"left\"><i class=\"icon-trash\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item sd-shadow--z1\">\n                            <div class=\"sd-list-item__border sd-list-item__border--active\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">Agenda Two</span><time>updated 3 days ago</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"dropdown__toggle\" data-sd-tooltip=\"Edit Agenda\" data-flow=\"left\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"dropdown__toggle\" data-sd-tooltip=\"Delete Agenda\" data-flow=\"left\"><i class=\"icon-trash\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item sd-shadow--z1\">\n                            <div class=\"sd-list-item__border sd-list-item__border--active\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">Agenda Three</span><time>updated 4 days ago</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"dropdown__toggle\" data-sd-tooltip=\"Edit Agenda\" data-flow=\"left\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"dropdown__toggle\" data-sd-tooltip=\"Delete Agenda\" data-flow=\"left\"><i class=\"icon-trash\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item sd-shadow--z1\">\n                            <div class=\"sd-list-item__border sd-list-item__border--active\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">Agenda Four</span><time>updated 5 days ago</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"dropdown__toggle\" data-sd-tooltip=\"Edit Agenda\" data-flow=\"left\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"dropdown__toggle\" data-sd-tooltip=\"Delete Agenda\" data-flow=\"left\"><i class=\"icon-trash\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"sd-list-header sd-list-header--m-top\">\n                        <span class=\"sd-list-header__name\">Disabled Agendas</span>\n                    </div>\n                    <div class=\"sd-list-item-group sd-list-item-group--space-between-items\">\n                        <div class=\"sd-list-item sd-shadow--z1\">\n                            <div class=\"sd-list-item__border sd-list-item__border--idle\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">Agenda Five</span><time>updated 1 days ago</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"dropdown__toggle\" data-sd-tooltip=\"Edit Agenda\" data-flow=\"left\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"dropdown__toggle\" data-sd-tooltip=\"Delete Agenda\" data-flow=\"left\"><i class=\"icon-trash\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item sd-shadow--z1\">\n                            <div class=\"sd-list-item__border sd-list-item__border--idle\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">Agenda Six</span><time>updated 2 days ago</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"dropdown__toggle\" data-sd-tooltip=\"Edit Agenda\" data-flow=\"left\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"dropdown__toggle\" data-sd-tooltip=\"Delete Agenda\" data-flow=\"left\"><i class=\"icon-trash\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div class=\"sd-column-box__slide-in-column\" ng-class=\"{'sd-column-box__slide-in-column--closed' : !editAgendaOpen}\">\n                    <div class=\"sd-column-box__slide-in-column-inner sd-slide-in-panel\">\n\n                        <div class=\"sd-slide-in-panel__header\">\n                            <div class=\"subnav__sliding-toolbar\" ng-show=\"!contentChanged || newAgenda\">\n                                <div class=\"sliding-toolbar__inner\"></div>\n                                <a class=\"btn\" ng-click=\"editAgendaOpen = false; contentChanged = true; activateList = false; newAgenda = false;\">Cancel</a>\n                                <a class=\"btn btn--primary\">Save</a>\n                            </div>\n                            <h3 class=\"sd-slide-in-panel__heading\" ng-hide=\"newAgenda\">Edit Agenda</h3>\n                            <h3 class=\"sd-slide-in-panel__heading\" ng-show=\"newAgenda\">New Agenda</h3>\n                            <a class=\"icn-btn sd-slide-in-panel__close\" sd-tooltip=\"Close details\" flow=\"top\" ng-click=\"editAgendaOpen = !editAgendaOpen; activateList = false; newAgenda = false;\"><i class=\"icon-close-small\"></i></a>\n                        </div>\n                        <div class=\"sd-slide-in-panel__content\">\n                            <div class=\"sd-slide-in-panel__content-block sd-slide-in-panel__content-block--first\">\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <label class=\"sd-line-input__label\">Name</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\" value=\"Agenda One\" ng-hide=\"newAgenda\">\n                                        <input class=\"sd-line-input__input\" type=\"text\" value=\"\" ng-show=\"newAgenda\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\" ng-init=\"contentChanged = true\">\n                                    <span ng-model=\"contentChanged\" sd-switch></span><label>Enabled</label>\n                                </div>\n                            </div>\n                        </div>\n                    </div> \n                </div>\n\n            </div>\n        </div>\n        <div class=\"modal__footer\">\n            <button class=\"btn\" ng-click=\"closeModal('agendaModal')\">Cancel</button>\n            <button class=\"btn btn--primary\" ng-click=\"closeModal('agendaModal')\">Ok</button>\n        </div>\n    </div>\n    <!-- END Agenda management modal -->\n</div>\n";

/***/ }),
/* 269 */
/***/ (function(module, exports) {

module.exports = "<!-- Article edit panel -->\n<div class=\"side-panel__header subnav subnav--darker\" ng-init=\"editorOpen = true\">\n    <div class=\"subnav__stretch-bar\">\n        <figure class=\"avatar\" style=\"margin-right:10px;\">VS</figure>\n    </div>\n    <div class=\"subnav__stretch-bar subnav__stretch-bar--right\">\n        <a href=\"\" class=\"btn\">Cancel</a>\n        <a href=\"\" class=\"btn btn--primary\">Save</a>\n\n    </div>\n    <button class=\"navbtn\" ng-click=\"editorOpen = !editorOpen\">\n        <i class=\"big-icon--minimize\"></i>\n    </button>\n    <button class=\"navbtn\">\n        <i class=\"icon-dots-vertical\"></i>\n    </button>\n    <button class=\"navbtn navbtn--highlighted\">\n        <i class=\"big-icon--send-to\"></i>\n    </button>\n</div>\n<div class=\"side-panel__content side-panel__content--flex\">\n    <div class=\"side-panel__content-tab-content\">\n\n        <div class=\"side-panel__content-block side-panel__content-block--pad-small side-panel__content-block--flex\" style=\"padding-bottom: 16px; box-shadow: 0 1px 2px 0 rgba(0,0,0,0.2)\">\n            <div class=\"side-panel__content-block-inner side-panel__content-block-inner--grow\">\n                <p class=\"sd-text__date-and-author\"><time>Created 01.02.2018 by </time> <span class=\"sd-text__author\">Mika Karapet</span></p> \n            </div>\n        </div>\n\n        <h3 class=\"side-panel__heading side-panel__heading--big\" style=\"margin-top: 60px; opacity: 0.3; text-align: center;\">EDITOR CONTENT</h3>\n        <div class=\"side-panel__content-block\">\n\n        </div>\n    </div>\n</div>\n<div class=\"side-panel__footer\"></div>\n<!-- END Article edit panel -->\n";

/***/ }),
/* 270 */
/***/ (function(module, exports) {

module.exports = "<div class=\"sd-page-grid--basic\" doc-modal>\n    <header class=\"sd-top-menu\">\n        <a href=\"\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n        <p class=\"sd-top-menu__header\">Publish pane test</p>\n    </header>\n\n    <section class=\"sd-content sd-page-content--slide-in\" ng-class=\"{\n            'sd-page-content--slide-in--open' : editorOpen}\">\n\n        <div class=\"sd-sidebar-menu sd-page-content__left-tabs\">\n            <ul class=\"authoring-active\">\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Monitoring\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--view\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Highlights\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--marked-star\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Spiked\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--spike\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Personal\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--personal\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Search\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--global-search\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n            </ul>\n        </div>\n        <div id=\"leftContent\" class=\"sd-page-content__content-block sd-page-content__content-block--main\" ng-class=\"{\n                'open-filters': leftFilterOpen, 'open-preview': leftPreviewOpen}\">\n            <!-- left content -->\n            <div class=\"subnav\">\n\n                <div class=\"subnav__sliding-toolbar\" ng-show=\"editMode\">\n                    <div class=\"sliding-toolbar__inner\">\n                        <a class=\"btn\" ng-click=\"editMode = false\">Cancel</a>\n                        <span class=\"sliding-toolbar__info-text\">1 item selected</span>\n                    </div>\n                    <a class=\"btn btn--primary\">Create Planning item</a>\n                    <a class=\"btn btn--alert\"><i class=\"icon-trash\"></i>Spike</a>\n                </div>\n                <div class=\"dropdown\" dropdown=\"\">\n                    <button class=\"dropdown__toggle navbtn navbtn--text-only dropdown-toggle\" dropdown-toggle=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">Monitoring<span class=\"dropdown__caret\"></span></button>\n                    <ul class=\"dropdown__menu scrollable\" style=\"\">\n                        <li><div class=\"dropdown__menu-label ng-binding\">Monitoring</div></li>\n                        <li><button>Incoming stage</button></li>\n                        <li><button>Working stage</button></li>\n                        <li><button>Output stage</button></li>\n                    </ul>\n                </div>\n                <div class=\"subnav__spacer subnav__spacer--no-margin\"></div>\n                <div class=\"sd-searchbar\" ng-class=\"{\n                        'sd-searchbar--focused': focused}\" >\n                    <label for=\"search-input\" class=\"sd-searchbar__icon\"></label>\n                    <input id=\"search-input\"\n                           class=\"sd-searchbar__input\"\n                           type=\"text\"\n                           placeholder=\"Search\"\n                           ng-keyup=\"searchOnEnter($event)\"\n                           ng-model=\"query\"\n                           tabindex=\"1\"\n                           ng-focus=\"focused = true\">\n                    <button class=\"sd-searchbar__cancel\" ng-if=\"query\">\n                        <i class=\"icon-remove-sign\"></i>\n                    </button>\n                    <button id=\"sd-searchbar__search-btn\" class=\"sd-searchbar__search-btn\" ng-if=\"focused\" tabindex=\"2\">\n                        <i class=\"big-icon--chevron-right\"></i>\n                    </button>\n                </div>\n                <div class=\"dropdown dropdown--align-right\" dropdown>\n                    <button class=\"dropdown__toggle navbtn sd-create-btn\" dropdown__toggle>\n                        <i class=\"icon-plus-large\"></i>\n                        <span class=\"circle\"></span>\n                    </button>\n                    <ul class=\"dropdown__menu\">\n                        <li>\n                            <div class=\"dropdown__menu-label\">Create New Item</div>\n                        </li>\n                        \n                        <li>\n                            <button><i class=\"icon-plus-sign icon--blue\"></i>Editor 3</button>\n                        </li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li>\n                            <div class=\"dropdown__menu-label\">Recent templates</div>\n                        </li>\n                        <li>\n                            <button><i class=\"icon-plus-sign icon--blue\"></i>Template one</button>\n                        </li>\n                        <li>\n                            <button><i class=\"icon-plus-sign icon--blue\"></i>Template two</button>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"subnav\">\n                <div class=\"subnav__stretch-bar\" ng-init=\"planningType = 'events-planning'\">\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"all\" label-position=\"inside\">all</sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"text\" label-position=\"inside\"><i class=\"icon-text\"></i></sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"photo\" label-position=\"inside\"><i class=\"icon-photo\"></i></sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"graphic\" label-position=\"inside\"><i class=\"icon-graphic\"></i></sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"composite\" label-position=\"inside\"><i class=\"icon-composite\"></i></sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"video\" label-position=\"inside\"><i class=\"icon-video\"></i></sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"audio\" label-position=\"inside\"><i class=\"icon-audio\"></i></sd-check>\n                </div>\n                <div class=\"subnav__content-bar\">\n                    <div class=\"dropdown dropdown--align-right\" dropdown=\"\">\n                        <button class=\"dropdown__toggle dropdown-toggle\" dropdown__toggle=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            Updated<span class=\"dropdown__caret\"></span>\n                        </button>\n                        <ul class=\"dropdown__menu\">\n                            <li><button>Updated</button></li>\n                            <li><button>Created</button></li>\n                            <li><button>Urgency</button></li>\n                            <li><button>Category</button></li>\n                            <li><button>Slugline</button></li>\n                            <li><button>Priority</button></li>\n                            <li><button>Genre</button></li>\n                        </ul>\n                    </div>\n                    <a class=\"icn-btn ng-hide\" sd-tooltip=\"Descending\" flow=\"bottom\" ng-click=\"sortDesc = !sortDesc\" ng-hide=\"!sortDesc\"><i class=\"icon-descending\"></i></a>\n                    <a class=\"icn-btn\" sd-tooltip=\"Ascending\" flow=\"bottom\" ng-click=\"sortDesc = !sortDesc\" ng-show=\"!sortDesc\"><i class=\"icon-ascending\"></i></a>\n                </div>\n                <button class=\"navbtn\" ng-click=\"gridView = !gridView\">\n                    <i class=\"icon-th ng-hide\" ng-hide=\"gridView\"></i>\n                    <i class=\"icon-th-list\" ng-show=\"gridView\"></i>\n                </button>\n                <div class=\"dropdown dropdown--align-right\" dropdown>\n                    <button class=\"dropdown__toggle navbtn\" dropdown__toggle>\n                        <i class=\"icon-dots-vertical\"></i>\n                    </button>\n                    <ul class=\"dropdown__menu\">\n                        <li>\n                            <div class=\"dropdown__menu-label\">Actions</div>\n                        </li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li><button>Action 2</button></li>\n                        <li><button>Action 3</button></li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"sd-column-box--3\" ng-init=\"editorOpen = true;\">\n                <div class=\"sd-column-box__main-column\">\n                    <div class=\"sd-list-header\">\n                        <span class=\"sd-list-header__name\"><a href=\"\">Politics desk</a> / <a href=\"\">Incoming stage</a></span>\n                    </div>\n                    <div class=\"sd-list-item-group sd-list-item-group--space-between-items\" >\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select1}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select1}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select1\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-text\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--success badge--square\">1</span>\n                                <span class=\"badge badge--highlight\">2</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Lorem Ipsum</span>Vulputate velit esse molestie consequatvel illum dolore.</span>\n                                    <time title=\"28 February 2018 17:04\">Wednesday, 17:04</time>\n                                </div>\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"label\">Article</span> <span class=\"label label--yellow2 label--hollow\">In Progress</span> \n                                    <span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong sd-list-item--element-grow\">Politics</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select2}\">\n                            <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select2}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select2\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-text\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--primary badge--square\">2</span>\n                                <span class=\"badge badge--warning\">3</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Ipsum lorem</span>Iriure dolor in hendrerit in vulputate velit esse molestie consequatvel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim.</span>\n                                    <time title=\"28 February 2018 17:00\">Wednesday, 17:00</time>\n                                </div>\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"label label--yellow2 label--hollow\">In Progress</span> \n                                    <span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong sd-list-item--element-grow\">Politics</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <!--dropdown-->\n                                <div class=\"dropdown dropdown--align-right\" dropdown dropdown-append-to-body is-open=\"itemActive18\">\n                                    <button class=\"icn-btn dropdown__toggle\" dropdown__toggle>\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </button>\n                                    <ul class=\"dropdown__menu\">\n                                        <li>\n                                            <div class=\"dropdown__menu-label\">\n                                                Actions\n                                                <button class=\"dropdown__menu-close\"><i class=\"icon-close-small\"></i></button>\n                                            </div>\n                                        </li>\n                                        <li class=\"dropdown__menu-divider\"></li>\n                                        <li><button><i class=\"icon-pencil\"></i>Edit</button></li>\n                                        <li><button><i class=\"icon-copy\"></i>Copy</button></li>\n                                        <li><button><i class=\"icon-trash\"></i>Delete</button></li>\n                                        <li class=\"dropdown__menu-divider\"></li>\n                                        <li>\n                                            <div class=\"dropdown__menu-label\">Actions 2</div>\n                                        </li>\n                                        <li class=\"dropdown__menu-item--no-link\">\n                                            Just some text without a link\n                                        </li>\n                                        \n                                        <li>\n                                            <button><i class=\"icon-download\"></i>Download</button>\n                                        </li>\n                                        <li>\n                                            <button><i class=\"icon-print\"></i>Print</button>\n                                        </li>\n                                    </ul>\n                                </div>\n                                <!--end dropdown-->\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select3}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select3}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select3\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-text\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--alert badge--square\">3</span>\n                                <span class=\"badge\">5</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">facilisis-eros</span>Dolore eu feugiat nulla facilisis at vero eros.</span>\n                                    <time title=\"28 February 2018 16:55\">Wednesday, 16:55</time>\n                                </div>\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"label label--hollow\">Draft</span> \n                                    <span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong sd-list-item--element-grow\">Politics</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"sd-list-header\">\n                        <span class=\"sd-list-header__name\"><a href=\"\">Politics desk</a> / <a href=\"\">Working stage</a></span>\n                    </div>\n                    <div class=\"sd-list-item-group sd-list-item-group--space-between-items\">\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select4}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select4}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select4\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-text\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--success badge--square\">1</span>\n                                <span class=\"badge badge--highlight\">2</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Lipsum ipsum</span>Dolor illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim.</span>\n                                    <time title=\"28 February 2018 17:05\">Wednesday, 17:05</time>\n                                </div>\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"label\">Article</span> <span class=\"label label--yellow2 label--hollow\">In Progress</span> \n                                    <span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong sd-list-item--element-grow\">Politics</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select5}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select5}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select5\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-text\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--primary badge--square\">2</span>\n                                <span class=\"badge badge--warning\">3</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Tempor Nobis</span>Nam liber tempor cum soluta nobis eleifend option.</span>\n                                    <time title=\"28 February 2018 17:01\">Wednesday, 17:01</time>\n                                </div>\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"label\">Article</span> <span class=\"label label--yellow2 label--hollow\">In Progress</span> \n                                    <span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong sd-list-item--element-grow\">Politics</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select6}\">\n                            <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select6}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select6\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-text\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--alert badge--square\">3</span>\n                                <span class=\"badge\">5</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Dolore illum</span>Consequatvel molestie illum dolore eu feugiat nulla facilisis.</span>\n                                    <time title=\"28 February 2018 16:52\">Wednesday, 16:52</time>\n                                </div>\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"label label--yellow2 label--hollow\">In Progress</span> \n                                    <span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong sd-list-item--element-grow\">Politics</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select7}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select7}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select7\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-text\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--primary badge--square\">2</span>\n                                <span class=\"badge badge--warning\">3</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Ipsum lorem</span>Nam liber tempor cum soluta nobis eleifend option.</span>\n                                    <time title=\"28 February 2018 15:23\">Wednesday, 15:23</time>\n                                </div>\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"label\">Article</span> <span class=\"label label--yellow2 label--hollow\">In Progress</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong sd-list-item--element-grow\">Politics</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select8}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select8}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select8\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-text\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--alert badge--square\">3</span>\n                                <span class=\"badge\">5</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Feugiat nulla vero</span>Illum dolore eu feugiat nulla facilisis at vero eros.</span>\n                                    <time title=\"28 February 2018 14:48\">Wednesday, 14:48</time>\n                                </div>\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"label label--yellow2 label--hollow\">In Progress</span> \n                                    <span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong sd-list-item--element-grow\">Politics</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select9}\">\n                            <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select9}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select9\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-text\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <span class=\"badge badge--success badge--square\">1</span>\n                                <span class=\"badge badge--highlight\">2</span>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">facilisis-eros</span>Feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim.</span>\n                                    <time title=\"28 February 2018 13:34\">Wednesday, 13:34</time>\n                                </div>\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"label label--yellow2 label--hollow\">In Progress</span> \n                                    <span class=\"sd-overflow-ellipsis sd-list-item__inline-text\">Reuters</span><span class=\"sd-list-item__text-label\">desk:</span><span class=\"sd-overflow-ellipsis sd-list-item__text-strong sd-list-item--element-grow\">Politics</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  -->\n                    </div>\n                </div>\n            </div>\n            <!-- END left content -->\n        </div>\n\n        <!-- SPLIT CONTENT -->\n\n\n        <div id=\"editPane\" \n             class=\"sd-edit-panel sd-page-content__content-block sd-page-content__content-block--right sd-page-content__content-block--30-slide\" \n             ng-class=\"{'open-filters': rightFilterOpen, 'open-preview': rightPreviewOpen}\">\n            <!-- Eitor content -->\n            <div class=\"side-panel side-panel--shadow-right\">\n                <!-- Article edit panel -->\n                <div class=\"side-panel__header subnav subnav--darker\" ng-init=\"editorOpen = true\">\n                    <div class=\"subnav__stretch-bar\">\n                        <figure class=\"avatar\" style=\"margin-right:10px;\">VS</figure>\n                    </div>\n                    <div class=\"subnav__stretch-bar subnav__stretch-bar--right\">\n                        <a href=\"\" class=\"btn\">Cancel</a>\n                        <a href=\"\" class=\"btn btn--primary\">Save</a>\n\n                    </div>\n                    <button class=\"navbtn\" ng-click=\"editorOpen = !editorOpen\">\n                        <i class=\"big-icon--minimize\"></i>\n                    </button>\n                    <button class=\"navbtn\">\n                        <i class=\"icon-dots-vertical\"></i>\n                    </button>\n                    <button class=\"navbtn navbtn--highlighted\" ng-click=\"publishPaneOpen = !publishPaneOpen\">\n                        <i class=\"big-icon--send-to\"></i>\n                    </button>\n                </div>\n                <div class=\"side-panel__content side-panel__content--flex\">\n                    <div class=\"side-panel__content-tab-content\">\n\n                        <div class=\"side-panel__content-block side-panel__content-block--pad-small side-panel__content-block--flex\" style=\"padding-bottom: 16px; box-shadow: 0 1px 2px 0 rgba(0,0,0,0.2)\">\n                            <div class=\"side-panel__content-block-inner side-panel__content-block-inner--grow\">\n                                <p class=\"sd-text__date-and-author\"><time>Created 01.02.2018 by </time> <span class=\"sd-text__author\">Mika Karapet</span></p> \n                            </div>\n                        </div>\n\n                        <h3 class=\"side-panel__heading side-panel__heading--big\" style=\"margin-top: 60px; opacity: 0.3; text-align: center;\">EDITOR CONTENT</h3>\n                        <div class=\"side-panel__content-block\">\n\n                        </div>\n                    </div>\n                </div>\n                <div class=\"side-panel__footer\"></div>\n                <!-- END Article edit panel -->\n            </div>\n            <!-- END Editor content -->\n        </div>\n    </section>\n    <footer class=\"bottom-bar \">\n        This is the optional footer.\n    </footer>\n</div>\n\n<div class=\"sd-overlay-panel sd-overlay-panel--dark-ui\" ng-class=\"{'sd-overlay-panel--open' : publishPaneOpen, 'sd-overlay-panel--large': tab === 'publish'}\">\n    <div class=\"side-panel side-panel--shadow-right side-panel--dark-ui overflow-x-hidden\">\n        <div class=\"side-panel__header\">\n            <div class=\"side-panel__tools\">\n                <a class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen; $root.overlayPaneOpen = false\"><i class=\"icon-close-small\"></i></a>\n            </div>\n            <ul class=\"nav-tabs nav-tabs--big nav-tabs--ui-dark\">\n                <li ng-class=\"{'nav-tabs__tab--active': !tab || tab === 'send-to'}\" class=\"nav-tabs__tab\">\n                    <button ng-click=\"tab = 'send-to'\" class=\"nav-tabs__link\"><span translate=\"\">Send to</span></button>\n                </li>\n                <li ng-class=\"{'nav-tabs__tab--active': tab === 'publish'}\" class=\"nav-tabs__tab\">\n                    <button ng-click=\"tab = 'publish'\" class=\"nav-tabs__link\"><span translate=\"\">Publish</span></button>\n                </li>\n            </ul>\n            <!-- <button class=\"navbtn navbtn--highlighted\" ng-click=\"publishPaneOpen = !publishPaneOpen\">\n                <i class=\"icon-close-small\" style=\"margin-left: -10px;\"></i>\n            </button>  -->\n        </div>\n        <!-- Send To Tab -->\n        <div class=\"side-panel__content\" ng-if=\"!tab || tab === 'send-to'\">\n            <div class=\"side-panel__content-block\">\n                <div sd-toggle-box data-title=\"Destination\" data-style=\"circle\" data-open=\"true\">\n                    <div class=\"form__row\">\n                        <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-label sd-line-input--no-margin\">\n                            <select class=\"sd-line-input__select\">\n                                <option value=\"single\">Politics desk</option>\n                                <option value=\"time\">Sports desk</option>\n                                <option value=\"bananas\">Features desk</option>\n                                <option value=\"indefinite\">Photo desk</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form__row form__row--no-padding\">\n                        <div class=\"flex-grid flex-grid--boxed-small flex-grid--wrap-items flex-grid--small-2\">\n                            <button class=\"btn__check btn__check--active flex-grid__item\" disabled=\"disabled\">Active disabled</button>\n                            <button class=\"btn__check flex-grid__item\" disabled=\"disabled\">Disabled</button>\n                            <button ng-click=\"stageActive0 = !stageActive0\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive0}\">Incoming stage</button>\n                            <button ng-click=\"stageActive1 = !stageActive1\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive1}\">Working stage</button>\n                            <button ng-click=\"stageActive2 = !stageActive2\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive2}\">Revise stage</button>\n                        </div>\n                    </div>\n                </div>\n                <div sd-toggle-box data-title=\"Embargo\" data-style=\"circle\" data-open=\"true\">\n                    <div class=\"form__row form__row--flex  form__row--small-padding\">\n                        <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                            <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                            <label class=\"sd-line-input__label\">Embargo till</label>\n                            <input class=\"sd-line-input__input\" type=\"text\">\n                        </div>\n                        <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                            <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                            <input class=\"sd-line-input__input\" type=\"text\">\n                        </div>\n                    </div>\n                    <a class=\"text-link text-link--white\" href=\"\"><i class=\"icon-remove-sign\"> </i> Clear embargo</a>\n                </div>\n                <div sd-toggle-box data-title=\"Publish schedule\" data-style=\"circle\" data-open=\"true\">\n                    <div class=\"form__row form__row--flex  form__row--small-padding\">\n                        <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                            <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                            <label class=\"sd-line-input__label\">Publish on</label>\n                            <input class=\"sd-line-input__input\" type=\"text\">\n                        </div>\n                        <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                            <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                            <input class=\"sd-line-input__input\" type=\"text\">\n                        </div>\n                    </div>\n                    <a class=\"text-link text-link--white\" href=\"\"><i class=\"icon-remove-sign\"> </i> Clear schedule</a>\n                </div>\n            </div>\n        </div>\n        <!-- Publish Tab -->\n        <div class=\"side-panel__content side-panel__content--split overflow-x-hidden\" ng-if=\"tab === 'publish'\">\n            <!-- LEFT pane -->\n            <div class=\"side-panel__content-block side-panel__content-block--left\">\n                <div sd-toggle-box data-title=\"Publish from\" data-style=\"circle\" data-open=\"true\">\n                    <div class=\"form__row\">\n                        <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-label sd-line-input--no-margin\">\n                            <select class=\"sd-line-input__select\">\n                                <option value=\"single\">Politics desk</option>\n                                <option value=\"time\">Sports desk</option>\n                                <option value=\"bananas\">Features desk</option>\n                                <option value=\"indefinite\">Photo desk</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n                <div sd-toggle-box data-title=\"Embargo\" data-style=\"circle\" data-open=\"true\">\n                        <div class=\"form__row form__row--flex  form__row--small-padding\">\n                            <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                <label class=\"sd-line-input__label\">Embargo till</label>\n                                <input class=\"sd-line-input__input\" type=\"text\">\n                            </div>\n                            <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                <input class=\"sd-line-input__input\" type=\"text\">\n                            </div>\n                        </div>\n                        <a class=\"text-link text-link--white\" href=\"\"><i class=\"icon-remove-sign\"> </i> Clear embargo</a>\n                    </div>\n                    <div sd-toggle-box data-title=\"Publish schedule\" data-style=\"circle\" data-open=\"true\">\n                        <div class=\"form__row form__row--flex  form__row--small-padding\">\n                            <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                <label class=\"sd-line-input__label\">Publish on</label>\n                                <input class=\"sd-line-input__input\" type=\"text\">\n                            </div>\n                            <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed sd-line-input--no-margin\">\n                                <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                <input class=\"sd-line-input__input\" type=\"text\">\n                            </div>\n                        </div>\n                        <a class=\"text-link text-link--white\" href=\"\"><i class=\"icon-remove-sign\"> </i> Clear schedule</a>\n                    </div>\n            </div>\n            <!-- RIGHT pane -->\n            <div class=\"side-panel__content-block side-panel__content-block--right side-panel__content-block--overlay-panel-inside\">\n                <div>\n                    <span>\n                        <div sd-toggle-box data-title=\"Web publishing\" data-style=\"circle\" data-open=\"true\">\n                            <!-- website 1 -->\n                            <div class=\"sd-collapse-box sd-shadow--z2\" ng-class=\"{'sd-collapse-box--open' : isOpen0}\">\n                                <div class=\"sd-collapse-box__header\" ng-click=\"isOpen0 = !isOpen0\">\n                                    <!-- list item  -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__text-strong\">www.sourcefabric.org</span></span>\n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-list-item__text-label\">Publish to:</span><span class=\"sd-overflow-ellipsis\">news</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <!-- END list item  -->\n                                </div>\n                                <div class=\"sd-collapse-box__content-wraper\">\n                                    <div class=\"sd-collapse-box__content\">\n                                        <div class=\"sd-collapse-box__sliding-toolbar-wrapper\" ng-show=\"!contentChanged0\">\n                                            <div class=\"sd-collapse-box__sliding-toolbar\">\n                                                <div class=\"sliding-toolbar__inner\"></div>\n                                                <a class=\"btn btn--hollow btn--ui-dark\" ng-click=\"contentChanged0 = true; isOpen0 = false\">Cancel</a>\n                                                <a class=\"btn btn--primary\" ng-click=\"contentChanged0 = true; isOpen0 = false\">Save</a>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-collapse-box__tools sd-collapse-box__tools--flex\">\n                                            <a class=\"sd-collapse-box__collapse-btn\" href=\"\" ng-click=\"isOpen0 = false\">\n                                                <span class=\"icn-btn\"><i class=\"icon-chevron-up-thin\"></i></span>\n                                            </a>\n                                            <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                                        </div>\n                                        <div class=\"sd-collapse-box__content-block sd-collapse-box__content-block--top\">\n                                            <div class=\"sd-list-item sd-list-item--no-bg sd-list-item--no-hover\">\n                                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                    <div class=\"sd-list-item__row\">\n                                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow sd-list-item__text-strong\">www.sourcefabric.org</span>\n                                                        <a class=\"icn-btn\" sd-tooltip=\"Preview\" flow=\"left\"><i class=\"icon-external\"></i></a>\n                                                    </div>\n                                                    <div class=\"sd-list-item__row\">\n                                                        <span class=\"sd-list-item__text-label sd-overflow-ellipsis\">Automatically:</span><span class=\"sd-overflow-ellipsis\">news</span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form__row\">\n                                            <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--no-margin\">\n                                                <label class=\"sd-line-input__label\">Route</label>\n                                                <select class=\"sd-line-input__select\">\n                                                    <option value=\"single\">News</option>\n                                                    <option value=\"time\">Politics</option>\n                                                    <option value=\"bananas\">Lifestyle</option>\n                                                    <option value=\"indefinite\">Culture</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div class=\"form__row\" ng-init=\"contentChanged0 = true\">\n                                            <sd-check ng-model=\"contentChanged0\" ng-checked=\"false\">Publish to facebook</sd-check>\n                                        </div>\n                                        <div class=\"form__row\">\n                                            <sd-check ng-model=\"dnp0\">Do not publish</sd-check>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <!-- website 2 -->\n                            <div class=\"sd-collapse-box sd-shadow--z2\" ng-class=\"{'sd-collapse-box--open' : isOpen1}\">\n                                <div class=\"sd-collapse-box__header\" ng-click=\"isOpen1 = !isOpen1\">\n                                    <!-- list item  -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__text-strong\">www.superdesk.org</span></span>\n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-list-item__text-label\">Publish to:</span><span class=\"sd-overflow-ellipsis\">news, facebook</span>\n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-list-item__text-label\">Content lists:</span><span class=\"sd-overflow-ellipsis\">Home page, Economy</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <!-- END list item  -->\n                                </div>\n                                <div class=\"sd-collapse-box__content-wraper\">\n                                    <div class=\"sd-collapse-box__content\">\n                                        <div class=\"sd-collapse-box__sliding-toolbar-wrapper\" ng-show=\"!contentChanged1\">\n                                            <div class=\"sd-collapse-box__sliding-toolbar\">\n                                                <div class=\"sliding-toolbar__inner\"></div>\n                                                <a class=\"btn btn--hollow btn--ui-dark\" ng-click=\"contentChanged1 = true; isOpen1 = false\">Cancel</a>\n                                                <a class=\"btn btn--primary\" ng-click=\"contentChanged1 = true; isOpen1 = false\">Save</a>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-collapse-box__tools sd-collapse-box__tools--flex\">\n                                            <a class=\"sd-collapse-box__collapse-btn\" href=\"\" ng-click=\"isOpen1 = false\">\n                                                <span class=\"icn-btn\"><i class=\"icon-chevron-up-thin\"></i></span>\n                                            </a>\n                                            <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                                        </div>\n                                        <div class=\"sd-collapse-box__content-block sd-collapse-box__content-block--top\">\n                                            <div class=\"sd-list-item sd-list-item--no-bg sd-list-item--no-hover\">\n                                                <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                    <div class=\"sd-list-item__row\">\n                                                        <span class=\"sd-overflow-ellipsis sd-list-item--element-grow sd-list-item__text-strong\">www.superdesk.org</span>\n                                                        <a class=\"icn-btn\" sd-tooltip=\"Preview\" flow=\"left\"><i class=\"icon-external\"></i></a>\n                                                    </div>\n                                                    <div class=\"sd-list-item__row\">\n                                                        <span class=\"sd-list-item__text-label sd-overflow-ellipsis\">Automatically:</span><span class=\"sd-overflow-ellipsis\">news, facebook</span>\n                                                    </div>\n                                                    <div class=\"sd-list-item__row\">\n                                                        <span class=\"sd-list-item__text-label\">Content lists:</span><span class=\"sd-overflow-ellipsis\">Home page, Economy</span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form__row\">\n                                            <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--no-margin\">\n                                                <label class=\"sd-line-input__label\">Route</label>\n                                                <select class=\"sd-line-input__select\">\n                                                    <option value=\"single\">News</option>\n                                                    <option value=\"time\">Politics</option>\n                                                    <option value=\"bananas\">Lifestyle</option>\n                                                    <option value=\"indefinite\">Culture</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div class=\"form__row\">\n                                            <sd-check  ng-model=\"contentChanged1\" ng-checked=\"true\">Publish to facebook</sd-check>\n                                        </div>\n                                        <div class=\"form__row\">\n                                            <sd-check ng-model=\"dnp1\">Do not publish</sd-check>\n                                        </div>\n                                        <!-- content lists -->\n                                        <label class=\"form-label\">Content lists</label>\n                                        <div class=\"sd-list-item sd-list-item--no-hover sd-margin-b--1\" ng-show=\"contentListItem\">\n                                            <div class=\"sd-list-item__column sd-list-item__column--large-padding sd-list-item__column--grow\">\n                                                <div class=\"sd-list-item__row no-margin sd-flex-justify-end\">\n                                                    <a class=\"icn-btn disabled\" sd-tooltip=\"Remove list\" flow=\"left\" ng-click=\"contentListItem = false;\"><i class=\"icon-trash\"></i></a>\n                                                </div>\n                                                <div class=\"sd-list-item__row\">\n                                                    <div class=\"sd-line-input sd-line-input--is-select sd-list-item--element-grow\">\n                                                        <label class=\"sd-line-input__label\">Choose list</label>\n                                                        <select class=\"sd-line-input__select\">\n                                                            <option value=\"\"></option>\n                                                            <option value=\"home\">Home page</option>\n                                                            <option value=\"economy\">Economy</option>\n                                                            <option value=\"business\">Business</option>\n                                                            <option value=\"Sports\">Sports</option>\n                                                            <option value=\"lifestyle\">Lifestyle</option>\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                                <div class=\"sd-list-item__row\">\n                                                    <div class=\"sd-line-input sd-line-input--is-select sd-list-item--element-grow\">\n                                                        <label class=\"sd-line-input__label\">Set order</label>\n                                                        <select class=\"sd-line-input__select\">\n                                                            <option value=\"\"></option>\n                                                            <option value=\"\">1</option>\n                                                            <option value=\"\">2</option>\n                                                            <option value=\"\">3</option>\n                                                            <option value=\"\">4</option>\n                                                            <option value=\"\">5</option>\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form__row\">\n                                            <button class=\"btn btn--hollow btn--expanded btn--primary\" ng-click=\"contentListItem = true;\">Add to content list</button>      \n                                        </div>                                \n                                    </div>\n                                </div>\n                            </div>\n                            <!-- end website 2-->\n                        </div>\n                        <div sd-toggle-box data-title=\"Related articles\" data-open=\"false\" data-style=\"circle\">\n                            <ul class=\"simple-list simple-list--dotted simple-list--no-padding\">\n                                <li class=\"simple-list__item\">\n                                    <p>J.P. Morgan to settle allegations of violating sanctions: U.S. Treasury</p>\n                                    <span class=\"label-icon label-icon--success\" ng-hide=\"deleteTenant0\"><i class=\"icon-globe\"></i> www.sourcefabric.org</span>\n                                    <span class=\"label-icon label-icon--success\" ng-hide=\"deleteTenant1\"><i class=\"icon-globe\"></i> www.bbc.co.uk</span>\n                                    <span class=\"label-icon\" ng-hide=\"deleteTenant2\"><i class=\"icon-globe\"></i> sp-magazine.s-lab.sourcefabric.org</span>  \n                                </li>\n                                <li class=\"simple-list__item\">\n                                    <p>Republican Senator Murkowski says has not decided final Kavanaugh vote</p>\n                                    <span class=\"label-icon\" ng-hide=\"deleteTenant0\"><i class=\"icon-globe\"></i> www.sourcefabric.org</span>\n                                    <span class=\"label-icon label-icon--success\" ng-hide=\"deleteTenant1\"><i class=\"icon-globe\"></i> www.bbc.co.uk</span>\n                                    <span class=\"label-icon\" ng-hide=\"deleteTenant2\"><i class=\"icon-globe\"></i> sp-magazine.s-lab.sourcefabric.org</span>  \n                                </li>                        \n                                <li class=\"simple-list__item\">\n                                    <p>China bet big on quantum computing. Now the US races to keep up.</p>\n                                    <span class=\"label-icon\" ng-hide=\"deleteTenant0\"><i class=\"icon-globe\"></i> www.sourcefabric.org</span>\n                                    <span class=\"label-icon\" ng-hide=\"deleteTenant1\"><i class=\"icon-globe\"></i> www.bbc.co.uk</span>\n                                    <span class=\"label-icon label-icon--success\" ng-hide=\"deleteTenant2\"><i class=\"icon-globe\"></i> sp-magazine.s-lab.sourcefabric.org</span>  \n                                </li>\n                            </ul>\n                        </div>\n                        <div sd-toggle-box data-title=\"Meta data\" data-open=\"true\" data-style=\"circle\">\n                            <div class=\"sd-list-item-group sd-shadow--z1\">\n                                <div class=\"sd-list-item\" ng-click=\"$root.overlayPaneOpen = !$root.overlayPaneOpen\">\n                                    <div class=\"sd-list-item__border\"></div>\n                                    <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                        <div class=\"sd-list-item__row\">\n                                            <span class=\"sd-overflow-ellipsis\">Facebook</span>\n                                        </div>\n                                    </div>\n                                    <div class=\"sd-list-item__action-menu\">\n                                        <i class=\"icon-chevron-right-thin\"></i>\n                                    </div>\n                                </div>\n                                <div class=\"sd-list-item\" ng-click=\"$root.overlayPaneOpen = !$root.overlayPaneOpen\">\n                                    <div class=\"sd-list-item__border\"></div>\n                                    <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                        <div class=\"sd-list-item__row\">\n                                            <span class=\"sd-overflow-ellipsis\">Twitter</span>\n                                        </div>\n                                    </div>\n                                    <div class=\"sd-list-item__action-menu\">\n                                        <i class=\"icon-chevron-right-thin\"></i>\n                                    </div>\n                                </div>\n                            \n                                <div class=\"sd-list-item\" ng-click=\"$root.overlayPaneOpen = !$root.overlayPaneOpen\">\n                                    <div class=\"sd-list-item__border\"></div>\n                                    <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                        <div class=\"sd-list-item__row\">\n                                            <span class=\"sd-overflow-ellipsis\">SEO / Meta Tags</span>\n                                        </div>\n                                    </div>\n                                    <div class=\"sd-list-item__action-menu\">\n                                        <i class=\"icon-chevron-right-thin\"></i>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- Social media overlay -->\n                        <div class=\"side-panel__content-block-overlay\" ng-class=\"{'side-panel__content-block-overlay--open' : $root.overlayPaneOpen}\">\n                            <div class=\"side-panel\">\n                                <div class=\"side-panel__header\">\n                                    <a class=\"icn-btn sd-margin-l--1\" ng-click=\"$root.overlayPaneOpen = !$root.overlayPaneOpen\" sd-tooltip=\"Back\" flow=\"right\"><i class=\"icon-arrow-left\"></i></a>\n                                    <h3 class=\"side-panel__heading side-panel__heading--big\">Facebook meta data</h3>\n                                </div>\n                                <div class=\"side-panel__content\">\n                                    <div class=\"side-panel__content-block\">\n                                        <div class=\"form__row\">\n                                            <p class=\"sd-opacity--60\">Important: template has to support this feature. It won't work out of the box.</p>\n                                        </div>\n                                        <div class=\"form__row\">\n                                            <div class=\"sd-line-input\">\n                                                <label class=\"sd-line-input__label\">Post image</label>                                    \n                                                <div class=\"sd-overlay-block sd-overlay-block--no-image\">\n                                                    <div class=\"sd-overlay-block__overlay\">\n                                                        <div class=\"sd-overlay-block__overlay-action-group\">\n                                                            <a class=\"sd-overlay-block__overlay-action\" sd-tooltip=\"Upload image\"><i class=\"icon-upload\"></i></a>\n                                                            <span class=\"sd-overlay-block__overlay-message\">No image has been set so far.</span>\n                                                        </div>\n                                                    </div>\n                                                    <img src=\"/overlay-img.jpg\" />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form__row\">\n                                            <div class=\"sd-line-input sd-line-input--required sd-line-input--dark-ui sd-line-input--boxed\">\n                                                <label class=\"sd-line-input__label\">Headline</label>\n                                                <input class=\"sd-line-input__input\" type=\"text\" value=\"Article headline here.\">\n                                            </div>\n                                        </div>\n                                        <div class=\"form__row\">\n                                            <sd-tag-input\n                                                ng-model=\"tags\"\n                                                data-label=\"Tags\"\n                                                data-items=\"[\n                                                { text: 'Audi' },\n                                                { text: 'BMW' },\n                                                { text: 'Hyundai' },\n                                                { text: 'Opel' },\n                                                { text: 'Audi2' },\n                                                { text: 'BMW2' },\n                                                { text: 'Hyundai2' },\n                                                { text: 'Opel2' },\n                                                { text: 'Audi3' },\n                                                { text: 'BMW3' },\n                                                { text: 'Hyundai3' },\n                                                { text: 'Opel3' },\n                                                { text: 'Audi4' },\n                                                { text: 'BMW4' },\n                                                { text: 'Hyundai4' },\n                                                { text: 'Opel4' },\n                                                { text: 'Audi5' },\n                                                { text: 'BMW5' },\n                                                { text: 'Hyundai5' },\n                                                { text: 'Opel5' },\n                                                { text: 'Audi6' },\n                                                { text: 'BMW6' },\n                                                { text: 'Hyundai6' },\n                                                { text: 'Opel6' }\n                                                ]\"\n                                                data-field=\"text\"\n                                                data-freetext=\"false\">\n                                            </sd-tag-input>\n                                        </div>\n                                        <div class=\"form__row\">\n                                            <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed\">\n                                                <label class=\"sd-line-input__label\">Text body</label>\n                                                <textarea class=\"sd-line-input__input\"></textarea>\n                                            </div>\n                                        </div>\n                                        <div class=\"form__row\">\n                                            <sd-tag-input\n                                                ng-model=\"authors\"\n                                                data-label=\"Authors\"\n                                                data-items=\"[\n                                                { text: 'Author 1' },\n                                                { text: 'Author 2' },\n                                                { text: 'Author 3' },\n                                                { text: 'Author 4' },\n                                                { text: 'Author 5' }                                        \n                                                ]\"\n                                                data-field=\"text\"\n                                                data-freetext=\"false\">\n                                            </sd-tag-input>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </span>\n                </div>\n            </div> <!-- end RIGHT pane -->\n        </div>\n        <div class=\"side-panel__footer side-panel__footer--button-box-large\" ng-if=\"!tab || tab === 'send-to'\">\n            <button class=\"btn btn--large btn--primary btn--expanded\">Send</button>\n        </div>\n        <div class=\"side-panel__footer side-panel__footer--button-box-large\" ng-if=\"tab === 'publish'\">\n            <button class=\"btn btn--large btn--primary btn--hollow btn--expanded btn--ui-dark\" disabled=\"disabled\">publish from</button>\n            <button class=\"btn btn--large btn--highlight btn--expanded\">Publish</button>\n        </div>\n    </div>  \n</div>\n";

/***/ }),
/* 271 */
/***/ (function(module, exports) {

module.exports = "<div class=\"sd-page-grid--basic docs-page__content\" doc-modal>\n    <header class=\"sd-top-menu\">\n        <a href=\"\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n        <p class=\"sd-top-menu__header\">Publisher</p>\n    </header>\n\n    <section class=\"sd-content sd-page-content--slide-in\" ng-class=\"{\n            'sd-page-content--slide-in--open' : editorOpen}\">\n\n        <div class=\"sd-sidebar-menu sd-page-content__left-tabs\">\n            <ul>\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Monitoring\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--view\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Highlights\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--marked-star\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Spiked\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--spike\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Personal\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--personal\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Search\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--global-search\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Publisher\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--publisher\"></i>                        \n                    </a>\n                </li>\n                <li sd-tooltip=\"Planning\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--calendar\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"sd-sidebar-menu sd-sidebar-menu--second-level sd-page-content__left-tabs\">\n            <ul>\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard-alt\"></i>                       \n                    </a>\n                </li>\n                <li sd-tooltip=\"Output Control\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--web\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>                \n            </ul>\n        </div>\n        <div class=\"sd-page-content__content-block\" ng-class=\"{'open-filters': leftFilterOpen}\">\n            <div class=\"subnav\">\n                <button class=\"navbtn navbtn--left\">\n                    <i class=\"icon-arrow-left\"></i>\n                </button>\n                <h3 class=\"subnav__page-title\">Content Analytics <span>/ Daily Telegraph</span></h3>\n                <div class=\"dropdown dropdown--align-right\" dropdown=\"\">\n                    <button class=\"navbtn dropdown sd-create-btn dropdown-toggle\" dropdown__toggle=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"icon-plus-large\"></i>\n                        <span class=\"circle\"></span>\n                    </button>   \n                    <ul class=\"dropdown__menu dropdown--align-right\">\n                        <li>\n                            <div class=\"dropdown__menu-label\">Create new site</div>\n                        </li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li><button>Superdesk Publisher</button></li>\n                        <li><button>Wordpress</button></li>                        \n                    </ul>\n                </div>\n            </div>\n            <div class=\"sd-column-box--3\" ng-class=\"{'content-nav-closed' : closedContentNav}\">\n                <!-- vert tabbed nav -->\n                <div class=\"nav-tabs-vertical\" ng-class=\"{'nav-tabs-vertical--closed' : !closedContentNav }\">\n                    <ul class=\"nav-tabs-vertical__list\">\n                        <li class=\"nav-tabs-vertical__tab\">\n                            <button ng-click=\"closedContentNav = !closedContentNav\" class=\"nav-tabs-vertical__link\">Website</button>\n                        </li>\n                    </ul>\n                </div>\n                <div class=\"sd-content-navigation-panel sd-content-navigation-panel--border-right\">\n                    <div class=\"subnav subnav--padded subnav--lower-z-index\">\n                        <h3 class=\"sd-content-nav-title sd-content-nav-title--uppercase\">Website</h3>       \n                        <a class=\"icn-btn ml-auto\" ng-click=\"closedContentNav = !closedContentNav\" ng-init=\"closedContentNav = false\"><i class=\"icon-close-small\"></i></a>\n                    </div>\n                    <nav class=\"sd-content-nav\">\n                        <ul>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn sd-content-nav__btn--active\">Daily Telegraph</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">The Torch</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">Gotham Globe</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">Daily Bugle</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">The Daily Star</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">Sourcefabric.org</a></li>\n                        </ul>\n                    </nav>\n                </div>\n                <div class=\"flex-grid flex-grid--grow flex-grid--small-1\">\n                    <div class=\"flex-grid__item flex-grid__item--d-flex flex-grid__item--column\">\n                        <div class=\"subnav subnav--lower-z-index\">\n                            <button class=\"navbtn navbtn--left navbtn--darker\" ng-click=\"leftFilterOpen = !leftFilterOpen\" ng-class=\"{'navbtn--active': leftFilterOpen}\">\n                                <i class=\"icon-filter-large\"></i>\n                            </button>\n                            \n                            <div class=\"subnav__stretch-bar\"></div>\n                            <button class=\"navbtn\" ng-click=\"chartView = !chartView;\">\n                                <i class=\"icon-analytics ng-hide\" ng-show=\"chartView\"></i>\n                                <i class=\"icon-list-view\" ng-hide=\"chartView\"></i>\n                            </button>\n                        </div>\n                        \n                        <div class=\"sd-column-box--3\">\n                            <!-- filters -->\n                            <div class=\"sd-filters-panel sd-filters-panel--border-right\">\n                                <div class=\"side-panel side-panel--transparent side-panel--shadow-right\">\n                                    <div class=\"side-panel__header side-panel__header--border-b\">\n                                            <a class=\"icn-btn side-panel__close\" sd-tooltip=\"Close filters\" flow=\"left\" ng-click=\"leftFilterOpen = !leftFilterOpen\"><i class=\"icon-close-small\"></i></a>\n                                        <h3 class=\"side-panel__heading side-panel__heading--big\">Filter</h3>\n                                    </div>\n                                    <div class=\"side-panel__content\">\n                                        <div class=\"side-panel__content-block\">\n                                            <div class=\"form__row\">\n                                                <div class=\"sd-line-input sd-line-input--with-button\">\n                                                    <span class=\"sd-line-input__plus-btn\"></span>\n                                                    <label class=\"sd-line-input__label\">Author</label>\n                                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                                </div>\n                                            </div>\n                                            <div class=\"form__row form__row--flex\">\n                                                <div class=\"sd-line-input\">\n                                                    <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                                    <label class=\"sd-line-input__label\">Published before</label>\n                                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                                </div>                                                    \n                                            </div>\n                                            <div class=\"form__row form__row--flex\">\n                                                <div class=\"sd-line-input\">\n                                                    <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                                    <label class=\"sd-line-input__label\">Published after</label>\n                                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                                </div>                                                    \n                                            </div>\n                                            <div class=\"form__row sd-margin-b--2\">\n                                                <sd-check ng-model=\"ghi\" label-position=\"inside\">Yesterday</sd-check>\n                                                <sd-check ng-model=\"ghi2\" label-position=\"inside\">Today</sd-check>\n                                            </div>                                            \n                                            <div class=\"form__row\">\n                                                <div class=\"sd-line-input sd-line-input--with-button\">\n                                                    <span class=\"sd-line-input__plus-btn\"></span>\n                                                    <label class=\"sd-line-input__label\">Category</label>\n                                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"side-panel__footer side-panel__footer--button-box\">\n                                        <div class=\"flex-grid flex-grid--boxed-small flex-grid--small-1\">\n                                            <a class=\"btn btn--primary btn--large\">Update Criteria</a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"sd-column-box__main-column-inner\">\n                                <!-- table -->\n                                <div class=\"sd-flex-table sd-table--shadowed sd-table--action-hover\">\n                                    <div class=\"sd-flex-table__row sd-flex-table--head\">\n                                        <div class=\"sd-flex-table__cell sd-flex-grow\">\n                                            <div>\n                                                Title <a class=\"icn-btn icn-btn--small\" ng-click=\"ascending = !ascending\">\n                                                <i class=\"icon-chevron-down-thin\" ng-show=\"!ascending\"></i>\n                                                <i class=\"icon-chevron-up-thin\" ng-show=\"ascending\"></i>\n                                                </a> \n                                            </div>                                         \n                                        </div>\n                                        <div class=\"sd-flex-table__cell\">\n                                            &nbsp;\n                                        </div>\n                                        <div class=\"sd-flex-table__cell\">\n                                            <div>\n                                                Page Views \n                                                <a class=\"icn-btn icn-btn--small icn-btn--disabled\">\n                                                    <i class=\"icon-chevron-down-thin\"></i>\n                                                </a>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-flex-table__cell\">\n                                            <div>\n                                                Click Rate\n                                                <a class=\"icn-btn icn-btn--small icn-btn--disabled\">\n                                                    <i class=\"icon-chevron-down-thin\"></i>\n                                                </a>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-flex-table__cell\">\n                                            <div>\n                                                Impressions\n                                                <a class=\"icn-btn icn-btn--small icn-btn--disabled\" ng-click=\"ascending = !ascending\">\n                                                    <i class=\"icon-chevron-down-thin\"></i>\n                                                </a>\n                                            </div>\n                                        </div>                                        \n                                    </div>\n                                    <div class=\"sd-flex-table__row\">\n                                        <div class=\"sd-flex-table__cell sd-flex-grow\">\n                                            <div class=\"sd-text__strong\">\n                                                <strong>Nisi quis eiusmod nostrud pariatur amet.</strong>\n                                            </div>\n                                            <div>\n                                                <span class=\"sd-text__date-time sd-text__italic\">Category:</span><span class=\"sd-text__normal\">Culture</span>\n                                                <span class=\"sd-text__date-time sd-text__italic sd-margin-l--1\">Authors:</span><span class=\"sd-text__normal\">Donald Duck</span>\n                                                <span class=\"sd-text__date-time sd-text__italic sd-margin-l--1\">Published:</span><time>1 week ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-flex-table__cell sd-text__center\">\n                                            <a class=\"icn-btn\" target=\"_blank\" href=\"#\">\n                                                <i class=\"icon-external\"></i>\n                                            </a>\n                                        </div>\n                                        <div class=\"sd-flex-table__cell\">\n                                            1546321\n                                        </div>\n                                        <div class=\"sd-flex-table__cell\">\n                                            589654\n                                        </div>\n                                        <div class=\"sd-flex-table__cell\">\n                                            98652146\n                                        </div>                                        \n                                    </div>\n                                    <div class=\"sd-flex-table__row\">\n                                        <div class=\"sd-flex-table__cell sd-flex-grow\">\n                                            <div class=\"sd-text__strong\">\n                                                <strong>Mollit sit ut mollit dolor laborum nisi adipisicing minim.</strong>\n                                            </div>\n                                            <div>\n                                                <span class=\"sd-text__date-time sd-text__italic\">Category:</span><span class=\"sd-text__normal\">Sport, News</span>\n                                                <span class=\"sd-text__date-time sd-text__italic sd-margin-l--1\">Authors:</span><span class=\"sd-text__normal\">Jack Daniels, Mickey Mouse</span>\n                                                <span class=\"sd-text__date-time sd-text__italic sd-margin-l--1\">Published:</span><time>1 week ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-flex-table__cell sd-text__center\">\n                                            <a class=\"icn-btn\" target=\"_blank\" href=\"#\">\n                                                <i class=\"icon-external\"></i>\n                                            </a>\n                                        </div>\n                                        <div class=\"sd-flex-table__cell\">\n                                            9865301\n                                        </div>\n                                        <div class=\"sd-flex-table__cell\">\n                                            101\n                                        </div>\n                                        <div class=\"sd-flex-table__cell\">\n                                            22\n                                        </div>                                        \n                                    </div>\n                                    <div class=\"sd-flex-table__row\">\n                                        <div class=\"sd-flex-table__cell sd-flex-grow\">\n                                            <div class=\"sd-text__strong\">\n                                                <strong>Enim enim cupidatat duis eu deserunt.</strong>\n                                            </div>\n                                            <div>\n                                                <span class=\"sd-text__date-time sd-text__italic\">Category:</span><span class=\"sd-text__normal\">News, Business</span>\n                                                <span class=\"sd-text__date-time sd-text__italic sd-margin-l--1\">Authors:</span><span class=\"sd-text__normal\">Donald Trump</span>\n                                                <span class=\"sd-text__date-time sd-text__italic sd-margin-l--1\">Published:</span><time>1 week ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-flex-table__cell sd-text__center\">\n                                            <a class=\"icn-btn\" target=\"_blank\" href=\"#\">\n                                                <i class=\"icon-external\"></i>\n                                            </a>\n                                        </div>                                        \n                                        <div class=\"sd-flex-table__cell\">\n                                            65231\n                                        </div>\n                                        <div class=\"sd-flex-table__cell\">\n                                            58\n                                        </div>\n                                        <div class=\"sd-flex-table__cell\">\n                                            0\n                                        </div>                                        \n                                    </div>\n                                    <div class=\"sd-flex-table__row\">\n                                        <div class=\"sd-flex-table__cell sd-flex-grow\">\n                                            <div class=\"sd-text__strong\">\n                                                <strong>Sit qui aliqua dolore dolor aliqua ut officia incididunt reprehenderit ad laboris qui proident.</strong>\n                                            </div>\n                                            <div>\n                                                <span class=\"sd-text__date-time sd-text__italic\">Category:</span><span class=\"sd-text__normal\">News, Business</span>\n                                                <span class=\"sd-text__date-time sd-text__italic sd-margin-l--1\">Authors:</span><span class=\"sd-text__normal\">Donald Trump</span>\n                                                <span class=\"sd-text__date-time sd-text__italic sd-margin-l--1\">Published:</span><time>1 week ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-flex-table__cell sd-text__center\">\n                                            <a class=\"icn-btn\" target=\"_blank\" href=\"#\">\n                                                <i class=\"icon-external\"></i>\n                                            </a>\n                                        </div>\n                                        <div class=\"sd-flex-table__cell\">\n                                            2365\n                                        </div>\n                                        <div class=\"sd-flex-table__cell\">\n                                           125845\n                                        </div>\n                                        <div class=\"sd-flex-table__cell\">\n                                            43444\n                                        </div>                                        \n                                    </div>\n                                    <div class=\"sd-flex-table__row\">\n                                        <div class=\"sd-flex-table__cell sd-flex-grow\">\n                                            <div class=\"sd-text__strong\">\n                                                <strong>Elit eu laboris nulla laborum irure dolor ut.</strong>\n                                            </div>\n                                            <div>\n                                                <span class=\"sd-text__date-time sd-text__italic\">Category:</span><span class=\"sd-text__normal\">Sport, News</span>\n                                                <span class=\"sd-text__date-time sd-text__italic sd-margin-l--1\">Authors:</span><span class=\"sd-text__normal\">Jack Daniels, Mickey Mouse</span>\n                                                <span class=\"sd-text__date-time sd-text__italic sd-margin-l--1\">Published:</span><time>1 week ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-flex-table__cell sd-text__center\">\n                                            <a class=\"icn-btn\" target=\"_blank\" href=\"#\">\n                                                <i class=\"icon-external\"></i>\n                                            </a>\n                                        </div>\n                                        <div class=\"sd-flex-table__cell\">\n                                            65231\n                                        </div>\n                                        <div class=\"sd-flex-table__cell\">\n                                            58\n                                        </div>\n                                        <div class=\"sd-flex-table__cell\">\n                                            0\n                                        </div>                                        \n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n\n    </section>\n    <footer class=\"bottom-bar \">\n        This is the optional footer.\n    </footer>\n</div>\n";

/***/ }),
/* 272 */
/***/ (function(module, exports) {

module.exports = "<div class=\"sd-page-grid--basic docs-page__content\" doc-modal>\n    <header class=\"sd-top-menu\">\n        <a href=\"\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n        <p class=\"sd-top-menu__header\">Publisher</p>\n    </header>\n\n    <section class=\"sd-content sd-page-content--slide-in\" ng-class=\"{\n            'sd-page-content--slide-in--open' : editorOpen}\">\n\n        <div class=\"sd-sidebar-menu sd-page-content__left-tabs\">\n            <ul>\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Monitoring\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--view\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Highlights\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--marked-star\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Spiked\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--spike\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Personal\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--personal\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Search\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--global-search\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Publisher\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--publisher\"></i>                        \n                    </a>\n                </li>\n                <li sd-tooltip=\"Planning\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--calendar\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"sd-sidebar-menu sd-sidebar-menu--second-level sd-page-content__left-tabs\">\n            <ul>\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard-alt\"></i>                        \n                    </a>\n                </li>\n                <li sd-tooltip=\"Output Control\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--web\"></i>                        \n                    </a>\n                </li>                \n            </ul>\n        </div>\n        <div class=\"sd-page-content__content-block sd-page-content__content-block--double-sidebar\" ng-class=\"{'open-filters': !leftFilterOpen}\">\n            <div class=\"subnav\">\n                <button class=\"navbtn navbtn--left\">\n                    <i class=\"icon-arrow-left\"></i>\n                </button>\n                <h3 class=\"subnav__page-title\">Content Lists</h3>\n                <div class=\"dropdown dropdown--align-right\" dropdown=\"\">\n                    <button class=\"navbtn dropdown sd-create-btn dropdown-toggle\" dropdown__toggle=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"icon-plus-large\"></i>\n                        <span class=\"circle\"></span>\n                    </button>   \n                    <ul class=\"dropdown__menu dropdown--align-right\">\n                        <li>\n                            <div class=\"dropdown__menu-label\">Create new site</div>\n                        </li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li><button>Superdesk Publisher</button></li>\n                        <li><button>Wordpress</button></li>                        \n                    </ul>\n                </div>\n            </div>\n            <div class=\"sd-column-box--3\">\n                <div class=\"sd-content-navigation-panel sd-content-navigation-panel--border-right\">\n                    <div class=\"subnav subnav--padded subnav--lower-z-index\">\n                        <h3 class=\"sd-content-nav-title\">Website</h3>\n                    </div>\n                    <nav class=\"sd-content-nav\">\n                        <ul>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn sd-content-nav__btn--active\">Daily Telegraph</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">The Torch</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">Gotham Globe</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">Daily Bugle</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">The Daily Star</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">Sourcefabric.org</a></li>\n                        </ul>\n                    </nav>\n                </div>                \n                <div class=\"flex-grid flex-grid--grow flex-grid--small-1\">\n                    <div class=\"flex-grid__item flex-grid__item--d-flex flex-grid__item--column\">\n                        <div class=\"subnav subnav--lower-z-index subnav--mid-blue-grey\">\n                            <button class=\"navbtn navbtn--left\">\n                                <i class=\"icon-th\"></i>\n                            </button>\n                            <button class=\"navbtn navbtn--left navbtn--darker\" ng-click=\"leftFilterOpen = !leftFilterOpen\" ng-class=\"{'navbtn--active': !leftFilterOpen}\">\n                                <i class=\"icon-filter-large\"></i>\n                            </button>\n                            <button class=\"navbtn navbtn--left\">\n                                <i class=\"icon-search\"></i>\n                            </button>\n                            <div class=\"dropdown\" dropdown=\"\">\n                                <button class=\"dropdown__toggle navbtn navbtn--text-only dropdown-toggle\" dropdown-toggle=\"\">Breaking News\n                                    <span class=\"dropdown__caret\"></span>\n                                </button>\n                                <ul class=\"dropdown__menu scrollable\">\n                                    <li><div class=\"dropdown__menu-label\">Content lists</div></li>\n                                    <li><button>Breaking News</button></li>                                \n                                    <li><button>Politics teaser / Home</button></li>                                \n                                    <li><button>Entertainment teaser / Home</button></li>                                \n                                    <li><button>Custom automated list</button></li>                                \n                                </ul>\n                            </div>\n                        </div>\n                        \n                        <div class=\"sd-column-box--3\">\n                            <!-- filters -->\n                            <div class=\"sd-filters-panel sd-filters-panel--border-right\">\n                                <div class=\"side-panel side-panel--transparent side-panel--shadow-right\">\n                                    <div class=\"side-panel__header side-panel__header--border-b\">\n                                            <a class=\"icn-btn side-panel__close\" sd-tooltip=\"Close filters\" flow=\"left\" ng-click=\"leftFilterOpen = !leftFilterOpen\"><i class=\"icon-close-small\"></i></a>\n                                        <h3 class=\"side-panel__heading side-panel__heading--big\">Automatic List Criteria</h3>\n                                    </div>\n                                    <div class=\"side-panel__content\">\n                                        <div class=\"side-panel__content-block\">\n                                            <div class=\"form__row\">\n                                                <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                                                    <span class=\"sd-line-input__plus-btn\"></span>\n                                                    <label class=\"sd-line-input__label\">Routes</label>\n                                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                                </div>\n                                            </div>\n                                            <div class=\"form__row\">\n                                                <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                                                    <span class=\"sd-line-input__plus-btn\"></span>\n                                                    <label class=\"sd-line-input__label\">Author</label>\n                                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                                </div>\n                                            </div>\n                                            <div class=\"form__row form__row--flex\">\n                                                <div class=\"sd-line-input sd-line-input--no-margin\">\n                                                    <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                                    <label class=\"sd-line-input__label\">Published date</label>\n                                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                                </div>                                                    \n                                            </div>\n                                            <div class=\"form__row form__row--flex\">\n                                                <div class=\"sd-line-input sd-line-input--no-margin\">\n                                                    <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                                    <label class=\"sd-line-input__label\">Published after</label>\n                                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                                </div>                                                    \n                                            </div>\n                                            <div class=\"form__row form__row--flex\">\n                                                <div class=\"sd-line-input sd-line-input--no-margin\">\n                                                    <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                                    <label class=\"sd-line-input__label\">Published before</label>\n                                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                                </div>                                                    \n                                            </div>\n                                            <div class=\"form__row\">\n                                                <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                                                    <span class=\"sd-line-input__plus-btn\"></span>\n                                                    <label class=\"sd-line-input__label\">Metadata</label>\n                                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"side-panel__footer side-panel__footer--button-box\">\n                                        <div class=\"flex-grid flex-grid--boxed-small flex-grid--small-1\">\n                                            <a class=\"btn btn--primary btn--large\">Update Criteria</a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"sd-column-box__main-column\">          \n                                <div class=\"sd-list-item-group sd-shadow--z2\">\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-list-item__column--no-right-padding\">\n                                            <img src=\"/th01.jpg\" class=\"sd-list-item__thumbnail\" />\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Occaecat ad consequat officia esse occaecat pariatur et deserunt nulla pariatur Lorem aliquip eu.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Style</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-list-item__column--no-right-padding\">\n                                            <img src=\"/th02.jpg\" class=\"sd-list-item__thumbnail\" />\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Nostrud elit commodo exercitation enim ullamco dolor velit Lorem elit.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Politics</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Dolor magna et tempor ullamco labore velit voluptate dolor nulla.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Business</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Labore minim sint aliquip quis exercitation id culpa occaecat consequat.</span>\n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Travel</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-list-item__column--no-right-padding\">\n                                            <img src=\"/th03.jpg\" class=\"sd-list-item__thumbnail\" />\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Dolor laboris consectetur excepteur ex velit mollit ad enim.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Business</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Nulla laborum reprehenderit proident enim pariatur.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">4 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Style</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                </div>\n                            </div>\n                        </div>                        \n                    </div>\n\n                </div>\n\n            </div>\n        </div>\n\n\n\n    </section>\n    <footer class=\"bottom-bar \">\n        This is the optional footer.\n    </footer>\n</div>\n";

/***/ }),
/* 273 */
/***/ (function(module, exports) {

module.exports = "<div class=\"sd-page-grid--basic docs-page__content\" doc-modal>\n    <header class=\"sd-top-menu\">\n        <a href=\"\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n        <p class=\"sd-top-menu__header\">Publisher</p>\n    </header>\n\n    <section class=\"sd-content sd-page-content--slide-in\" ng-class=\"{\n            'sd-page-content--slide-in--open' : editorOpen}\">\n\n        <div class=\"sd-sidebar-menu sd-page-content__left-tabs\">\n            <ul>\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Monitoring\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--view\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Highlights\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--marked-star\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Spiked\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--spike\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Personal\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--personal\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Search\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--global-search\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Publisher\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--publisher\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Planning\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--calendar\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"sd-sidebar-menu sd-sidebar-menu--second-level sd-page-content__left-tabs\">\n            <ul>\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard-alt\"></i>                        \n                    </a>\n                </li>\n                <li sd-tooltip=\"Output Control\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--web\"></i>\n                    </a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"sd-page-content__content-block sd-page-content__content-block--double-sidebar\" ng-class=\"{'open-filters': leftFilterOpen}\">\n            <div class=\"subnav\">\n                <button class=\"navbtn navbtn--left\">\n                    <i class=\"icon-arrow-left\"></i>\n                </button>\n                <h3 class=\"subnav__page-title\">Content Lists</h3>\n                <div class=\"dropdown dropdown--align-right\" dropdown=\"\">\n                    <button class=\"navbtn dropdown sd-create-btn dropdown-toggle\" dropdown__toggle=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"icon-plus-large\"></i>\n                        <span class=\"circle\"></span>\n                    </button>   \n                    <ul class=\"dropdown__menu dropdown--align-right\">\n                        <li>\n                            <div class=\"dropdown__menu-label\">Create new site</div>\n                        </li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li><button>Superdesk Publisher</button></li>\n                        <li><button>Wordpress</button></li>                        \n                    </ul>\n                </div>\n            </div>\n            <div class=\"sd-column-box--3\">\n                <div class=\"sd-content-navigation-panel sd-content-navigation-panel--border-right\">\n                    <div class=\"subnav subnav--padded subnav--lower-z-index\">\n                        <h3 class=\"sd-content-nav-title\">Website</h3>\n                    </div>\n                    <nav class=\"sd-content-nav\">\n                        <ul>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn sd-content-nav__btn--active\">Daily Telegraph</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">The Torch</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">Gotham Globe</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">Daily Bugle</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">The Daily Star</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">Sourcefabric.org</a></li>\n                        </ul>\n                    </nav>\n                </div>\n                \n                <div class=\"flex-grid flex-grid--grow flex-grid--small-2\">\n                    <div class=\"flex-grid__item flex-grid__item--d-flex flex-grid__item--column panel-border-right\">\n                        <div class=\"subnav subnav--lower-z-index subnav--dark-blue-grey\">\n                            <button class=\"navbtn navbtn--left\">\n                                <i class=\"icon-th\"></i>\n                            </button>\n                            <button class=\"navbtn navbtn--left\">\n                                <i class=\"icon-search\"></i>\n                            </button>\n                            <div class=\"dropdown\" dropdown=\"\">\n                                <button class=\"dropdown__toggle navbtn navbtn--text-only dropdown-toggle\" dropdown-toggle=\"\">Breaking News\n                                    <span class=\"dropdown__caret\"></span>\n                                </button>\n                                <ul class=\"dropdown__menu scrollable\">\n                                    <li><div class=\"dropdown__menu-label\">Content lists</div></li>\n                                    <li><button>Breaking News</button></li>                                \n                                    <li><button>Politics teaser / Home</button></li>                                \n                                    <li><button>Entertainment teaser / Home</button></li>                                \n                                    <li><button>Custom automated list</button></li>                                \n                                </ul>\n                            </div>\n                        </div>\n                        \n                        <div class=\"sd-column-box--3\">\n                            <div class=\"sd-column-box__main-column\">          \n                                <div class=\"sd-list-item-group sd-shadow--z2\">\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__column\">\n                                            <span class=\"sd-list-item__serial-number\">1</span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-list-item__column--no-right-padding\">\n                                            <img src=\"/th01.jpg\" class=\"sd-list-item__thumbnail\" />\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Occaecat ad consequat officia esse occaecat pariatur et deserunt nulla pariatur Lorem aliquip eu.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Style</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__column\">\n                                            <span class=\"sd-list-item__serial-number\">2</span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-list-item__column--no-right-padding\">\n                                            <img src=\"/th02.jpg\" class=\"sd-list-item__thumbnail\" />\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Nostrud elit commodo exercitation enim ullamco dolor velit Lorem elit.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Politics</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__column\">\n                                            <span class=\"sd-list-item__serial-number\">3</span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Dolor magna et tempor ullamco labore velit voluptate dolor nulla.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Business</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__column\">\n                                            <span class=\"sd-list-item__serial-number\">4</span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Labore minim sint aliquip quis exercitation id culpa occaecat consequat.</span>\n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Travel</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__column\">\n                                            <span class=\"sd-list-item__serial-number\">5</span>\n                                        </div>                                        \n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-list-item__column--no-right-padding\">\n                                            <img src=\"/th03.jpg\" class=\"sd-list-item__thumbnail\" />\n                                        </div>                                        \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Dolor laboris consectetur excepteur ex velit mollit ad enim.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Business</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__column\">\n                                            <span class=\"sd-list-item__serial-number\">6</span>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Nulla laborum reprehenderit proident enim pariatur.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">4 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Style</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        \n                    </div>\n                    <div class=\"flex-grid__item flex-grid__item--d-flex flex-grid__item--column\">\n                        <div class=\"subnav subnav--lower-z-index\">\n                            <button class=\"navbtn navbtn--left navbtn--darker\" ng-click=\"leftFilterOpen = !leftFilterOpen\" ng-class=\"{'navbtn--active': leftFilterOpen}\">\n                                <i class=\"icon-filter-large\"></i>\n                            </button>\n                            <button class=\"navbtn navbtn--left\">\n                                <i class=\"icon-search\"></i>\n                            </button>\n                            <h3 class=\"subnav__page-title\">All published articles</h3>\n                        </div>                        \n                        <div class=\"sd-column-box--3\">\n                            <div class=\"sd-column-box__main-column\">\n                                <div class=\"sd-list-item-group sd-shadow--z2\">\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Article heading here lorem ipsum dolor sit amet</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">a month ago</span>\n                                                <span class=\"label label--success label--hollow\">Travel</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-list-item__column--no-right-padding\">\n                                            <img src=\"/th02.jpg\" class=\"sd-list-item__thumbnail\" />\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Duis esse mollit labore exercitation mollit amet reprehenderit ullamco sint.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">2 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Politics</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Sit magna Lorem fugiat aliqua dolore cupidatat labore proident incididunt laborum aliqua.</span>\n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">2 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Business</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-list-item__column--no-right-padding\">\n                                            <img src=\"/th03.jpg\" class=\"sd-list-item__thumbnail\" />\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Esse nostrud anim adipisicing mollit consectetur duis proident.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">2 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Style</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Ea officia ea in ea sunt.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Politics</span>\n                                            </div>\n                                        </div>                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Sunt deserunt nostrud ad pariatur fugiat minim.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Business</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__column sd-list-item__column--no-border sd-list-item__column--no-right-padding\">\n                                            <img src=\"/th01.jpg\" class=\"sd-list-item__thumbnail\" />\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Id non laborum id id aliquip sit velit incididunt mollit sint fugiat.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Business</span>\n                                            </div>\n                                        </div>                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Quis dolor proident esse aliquip duis ut consequat officia.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Style</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Fugiat duis sit ea cillum consequat qui culpa quis tempor culpa.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Politics</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Dolor magna et tempor ullamco labore velit voluptate dolor nulla.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Business</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Labore minim sint aliquip quis exercitation id culpa occaecat consequat.</span>\n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Travel</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Dolor laboris consectetur excepteur ex velit mollit ad enim.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Business</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Nulla laborum reprehenderit proident enim pariatur.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">4 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Style</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Article heading here lorem ipsum dolor sit amet</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">a month ago</span>\n                                                <span class=\"label label--success label--hollow\">Travel</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Duis esse mollit labore exercitation mollit amet reprehenderit ullamco sint.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">2 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Politics</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Sit magna Lorem fugiat aliqua dolore cupidatat labore proident incididunt laborum aliqua.</span>\n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">2 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Business</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Esse nostrud anim adipisicing mollit consectetur duis proident.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">2 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Style</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Ea officia ea in ea sunt.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Politics</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Sunt deserunt nostrud ad pariatur fugiat minim.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Business</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Id non laborum id id aliquip sit velit incididunt mollit sint fugiat.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Business</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Quis dolor proident esse aliquip duis ut consequat officia.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Style</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Fugiat duis sit ea cillum consequat qui culpa quis tempor culpa.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Politics</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Dolor magna et tempor ullamco labore velit voluptate dolor nulla.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Business</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Labore minim sint aliquip quis exercitation id culpa occaecat consequat.</span>\n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Travel</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Dolor laboris consectetur excepteur ex velit mollit ad enim.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">3 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Business</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                    <div class=\"sd-list-item\">                                \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">Nulla laborum reprehenderit proident enim pariatur.</span> \n                                            </div>\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">4 months ago</span>\n                                                <span class=\"label label--success label--hollow\">Style</span>\n                                            </div>\n                                        </div>                                                            \n                                    </div>\n                                </div>\n                            </div>\n                            <!-- filters -->\n                            <div class=\"sd-filters-panel sd-filters-panel--border-left\">\n                                <div class=\"side-panel side-panel--transparent side-panel--shadow-right\">\n                                    <div class=\"side-panel__header side-panel__header--border-b\">\n                                            <a class=\"icn-btn side-panel__close\" sd-tooltip=\"Close filters\" flow=\"left\" ng-click=\"leftFilterOpen = !leftFilterOpen\"><i class=\"icon-close-small\"></i></a>\n                                        <h3 class=\"side-panel__heading\">Advanced filters</h3>\n                                    </div>\n                                    <div class=\"side-panel__content\">\n                                        <div class=\"side-panel__content-block\">\n                                            <div class=\"form__row\">\n                                                <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                                                    <span class=\"sd-line-input__plus-btn\"></span>\n                                                    <label class=\"sd-line-input__label\">Routes</label>\n                                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                                </div>\n                                            </div>\n                                            <div class=\"form__row\">\n                                                <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                                                    <span class=\"sd-line-input__plus-btn\"></span>\n                                                    <label class=\"sd-line-input__label\">Author</label>\n                                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                                </div>\n                                            </div>\n                                            <div class=\"form__row form__row--flex\">\n                                                <div class=\"sd-line-input sd-line-input--no-margin\">\n                                                    <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                                    <label class=\"sd-line-input__label\">Published after</label>\n                                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                                </div>                                                    \n                                            </div>\n                                            <div class=\"form__row form__row--flex\">\n                                                <div class=\"sd-line-input sd-line-input--no-margin\">\n                                                    <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                                    <label class=\"sd-line-input__label\">Published before</label>\n                                                    <input class=\"sd-line-input__input\" type=\"text\">\n                                                </div>                                                    \n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"side-panel__footer side-panel__footer--button-box\">\n                                        <div class=\"flex-grid flex-grid--boxed-small flex-grid--small-2\">\n                                            <a class=\"btn btn--hollow\">Clear</a>\n                                            <a class=\"btn btn--primary\">Filter</a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>                        \n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n\n\n    </section>\n    <footer class=\"bottom-bar \">\n        This is the optional footer.\n    </footer>\n</div>\n";

/***/ }),
/* 274 */
/***/ (function(module, exports) {

module.exports = "<div class=\"sd-page-grid--basic docs-page__content\" doc-modal>\n    <header class=\"sd-top-menu\">\n        <a href=\"\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n        <p class=\"sd-top-menu__header\">Publisher</p>\n    </header>\n\n    <section class=\"sd-content sd-page-content--slide-in\" ng-class=\"{\n            'sd-page-content--slide-in--open' : editorOpen}\">\n\n        <div class=\"sd-sidebar-menu sd-page-content__left-tabs\">\n            <ul>\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Monitoring\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--view\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Highlights\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--marked-star\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Spiked\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--spike\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Personal\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--personal\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Search\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--global-search\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Publisher\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--publisher\"></i>                        \n                    </a>\n                </li>\n                <li sd-tooltip=\"Planning\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--calendar\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"sd-sidebar-menu sd-sidebar-menu--second-level sd-page-content__left-tabs\">\n            <ul>\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard-alt\"></i>                       \n                    </a>\n                </li>\n                <li sd-tooltip=\"Output Control\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--web\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>                \n            </ul>\n        </div>\n        <div class=\"sd-page-content__content-block\">\n            <div class=\"subnav\">\n                <button class=\"navbtn navbtn--left\">\n                    <i class=\"icon-arrow-left\"></i>\n                </button>\n                <h3 class=\"subnav__page-title sd-flex-no-grow\">Content Lists <span>/ Daily Telegraph</span></h3>\n                <sd-search-handler ng-model=\"query.name\" data-debounce=\"200\" data-button=\"true\" data-label=\"Search\" data-borderleft=\"true\"></sd-search-handler>\n                <div class=\"dropdown dropdown--align-right sd-margin-l--auto\" dropdown=\"\">\n                    <button class=\"navbtn dropdown sd-create-btn dropdown-toggle\" dropdown__toggle=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"icon-plus-large\"></i>\n                        <span class=\"circle\"></span>\n                    </button>   \n                    <ul class=\"dropdown__menu dropdown--align-right\">\n                        <li>\n                            <div class=\"dropdown__menu-label\">Create new site</div>\n                        </li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li><button>Superdesk Publisher</button></li>\n                        <li><button>Wordpress</button></li>                        \n                    </ul>\n                </div>\n            </div>\n            <div class=\"sd-column-box--3\" ng-class=\"{'content-nav-closed' : closedContentNav}\">\n                <!-- vert tabbed nav -->\n                <div class=\"nav-tabs-vertical\" ng-class=\"{'nav-tabs-vertical--closed' : !closedContentNav }\">\n                    <ul class=\"nav-tabs-vertical__list\">\n                        <li class=\"nav-tabs-vertical__tab\">\n                            <button ng-click=\"closedContentNav = !closedContentNav\" class=\"nav-tabs-vertical__link\">Website</button>\n                        </li>\n                    </ul>\n                </div>\n                <!-- left content nav-->\n                <div class=\"sd-content-navigation-panel sd-content-navigation-panel--border-right\">\n                    <div class=\"subnav subnav--padded subnav--lower-z-index\">\n                        <h3 class=\"sd-content-nav-title sd-content-nav-title--uppercase\">Website</h3>       \n                        <a class=\"icn-btn ml-auto\" ng-click=\"closedContentNav = !closedContentNav\" ng-init=\"closedContentNav = false\"><i class=\"icon-close-small\"></i></a>\n                    </div>\n                    <nav class=\"sd-content-nav\">\n                        <ul>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn sd-content-nav__btn--active\">Daily Telegraph</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">The Torch</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">Gotham Globe</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">Daily Bugle</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">The Daily Star</a></li>\n                            <li><a href=\"#\" class=\"sd-content-nav__btn\">Sourcefabric.org</a></li>\n                        </ul>\n                    </nav>\n                </div>\n                <div class=\"sd-column-box__main-column\">\n                    <div class=\"subnav subnav--padded subnav--lower-z-index\" ng-init=\"listType = 'all-lists'\">\n                        <sd-check ng-model=\"listType\" type=\"radio\" ng-value=\"all-lists\" label-position=\"inside\">All</sd-check>\n                        <sd-check ng-model=\"listType\" type=\"radio\" ng-value=\"automatic\" label-position=\"inside\">Automatic</sd-check>\n                        <sd-check ng-model=\"listType\" type=\"radio\" ng-value=\"manual\" label-position=\"inside\">Manual</sd-check>                        \n                    </div>\n                    <div class=\"sd-grid-list sd-grid-list--large\">\n                        <div class=\"sd-card\">\n                            <div class=\"sd-card__header sd-card__header--padding\">\n                                <div class=\"sd-card__heading\">Breaking news</div>\n                                <div class=\"sd-card__actions-group\">\n                                    <a class=\"btn btn--small btn--hollow btn--ui-dark\">Edit</a>\n                                    <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                                </div>                        \n                            </div>                            \n                            <div class=\"sd-card__content sd-card__content--scrollable\">\n                                <ul class=\"sd-card__content-list\">\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Sint ullamco eu occaecat minim aliquip.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Nisi in est irure eiusmod ipsum cupidatat in voluptate.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Duis culpa ea et ullamco ex tempor et nisi qui id eiusmod irure sunt.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Reprehenderit aliquip sit nulla qui proident consectetur.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Culpa officia ipsum amet aute eu ea et occaecat officia.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Dolor elit occaecat sint ex excepteur ipsum.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Laboris aliqua sit fugiat laboris exercitation dolor quis anim est.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Ad pariatur velit et officia do.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Sunt ex Lorem do amet consequat.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small sd-card__content-list-item--border-bottom\">Nisi commodo cillum voluptate culpa exercitation aliqua.</li>\n                                </ul>\n                            </div>\n                            <div class=\"sd-card__footer sd-card__footer--spread\">\n                                <div>\n                                    <span class=\"sd-text__info\">Last modified:</span>\n                                    <span> a day ago</span>\n                                </div>\n                                <span class=\"label label--success label--hollow\">active</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-card\">\n                            <div class=\"sd-card__header sd-card__header--padding sd-card__header--secondary-color\">\n                                <div class=\"sd-card__heading\">Politics teaser / Home</div>\n                                <div class=\"sd-card__actions-group\">\n                                    <a class=\"btn btn--small btn--hollow btn--ui-dark\">Edit</a>\n                                    <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                                </div>                        \n                            </div>                            \n                            <div class=\"sd-card__content sd-card__content--scrollable\">\n                                <ul class=\"sd-card__content-list\">\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Occaecat reprehenderit quis exercitation enim aute veniam esse esse Lorem officia.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Ipsum id tempor laborum sunt fugiat nulla.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Nisi reprehenderit qui ad in ea anim eiusmod labore nulla magna exercitation minim.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Adipisicing deserunt occaecat ex eiusmod ut voluptate voluptate est elit.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Aute magna duis dolor officia ex sunt eu non commodo veniam.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Ipsum laborum officia sit laboris incididunt qui exercitation veniam exercitation cupidatat dolore pariatur.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Quis qui et excepteur duis Lorem sint ea irure mollit nulla laborum id non.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Proident culpa minim non ea do nisi duis sint cupidatat.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Amet non amet sint non qui consequat Lorem aliquip adipisicing irure id.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small sd-card__content-list-item--border-bottom\">Qui eu ad velit eu qui veniam labore labore enim veniam reprehenderit.</li>\n                                </ul>\n                            </div>\n                            <div class=\"sd-card__footer sd-card__footer--spread\">\n                                <div>\n                                    <span class=\"sd-text__info\">Last modified:</span>\n                                    <span> a day ago</span>\n                                </div>\n                                <span class=\"label label--success label--hollow\">active</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-card\">\n                            <div class=\"sd-card__header sd-card__header--padding\">\n                                <div class=\"sd-card__heading\">Entertainment teaser / Home</div>\n                                <div class=\"sd-card__actions-group\">\n                                    <a class=\"btn btn--small btn--hollow btn--ui-dark\">Edit</a>\n                                    <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                                </div>                        \n                            </div>                            \n                            <div class=\"sd-card__content sd-card__content--scrollable\">\n                                <ul class=\"sd-card__content-list\">\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Sint ullamco eu occaecat minim aliquip.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Nisi in est irure eiusmod ipsum cupidatat in voluptate.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small sd-card__content-list-item--border-bottom\">Duis culpa ea et ullamco ex tempor et nisi qui id eiusmod irure sunt.</li>                              \n                                </ul>\n                            </div>\n                            <div class=\"sd-card__footer sd-card__footer--spread\">\n                                <div>\n                                    <span class=\"sd-text__info\">Last modified:</span>\n                                    <span> a day ago</span>\n                                </div>\n                                <span class=\"label label--success label--hollow\">active</span>\n                            </div>\n                        </div>\n                        <div class=\"sd-card\">\n                            <div class=\"sd-card__header sd-card__header--padding sd-card__header--secondary-color\">\n                                <div class=\"sd-card__heading\">Custom automated list</div>\n                                <div class=\"sd-card__actions-group\">\n                                    <a class=\"btn btn--small btn--hollow btn--ui-dark\">Edit</a>\n                                    <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                                </div>                        \n                            </div>                            \n                            <div class=\"sd-card__content sd-card__content--scrollable\">\n                                <ul class=\"sd-card__content-list\">\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Dolor excepteur est sit laboris dolor ipsum duis eiusmod qui voluptate ea ut sit laboris.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Non est excepteur laboris incididunt do ad aliqua aliquip.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Enim in ad anim eu qui.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Cillum magna est laborum nulla cillum.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small\">Nostrud Lorem nisi duis tempor aute et est sit proident qui incididunt id id.</li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--small sd-card__content-list-item--border-bottom\">Veniam exercitation sit id sit.</li>                                    \n                                </ul>\n                            </div>\n                            <div class=\"sd-card__footer sd-card__footer--spread\">\n                                <div>\n                                    <span class=\"sd-text__info\">Last modified:</span>\n                                    <span> a day ago</span>\n                                </div>\n                                <span class=\"label label--success label--hollow\">active</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n\n    </section>\n    <footer class=\"bottom-bar \">\n        This is the optional footer.\n    </footer>\n</div>\n";

/***/ }),
/* 275 */
/***/ (function(module, exports) {

module.exports = "<div class=\"sd-page-grid--basic docs-page__content\" doc-modal>\n    <header class=\"sd-top-menu\">\n        <a href=\"\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n        <p class=\"sd-top-menu__header\">Publisher</p>\n    </header>\n\n    <section class=\"sd-content sd-page-content--slide-in\" ng-class=\"{\n            'sd-page-content--slide-in--open' : editorOpen}\">\n\n        <div class=\"sd-sidebar-menu sd-page-content__left-tabs\">\n            <ul>\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Monitoring\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--view\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Highlights\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--marked-star\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Spiked\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--spike\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Personal\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--personal\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Search\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--global-search\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Publisher\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--publisher\"></i>                        \n                    </a>\n                </li>\n                <li sd-tooltip=\"Planning\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--calendar\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"sd-sidebar-menu sd-sidebar-menu--second-level sd-page-content__left-tabs\">\n            <ul>\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard-alt\"></i>                        \n                    </a>\n                </li>\n                <li sd-tooltip=\"Output Control\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--web\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>                \n            </ul>\n        </div>\n        <div class=\"sd-page-content__content-block\">\n            <div class=\"subnav\">\n                <h3 class=\"subnav__page-title\">Publisher Dashboard</h3>\n                <div class=\"dropdown dropdown--align-right\" dropdown=\"\">\n                    <button class=\"navbtn dropdown sd-create-btn dropdown-toggle\" dropdown__toggle=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"icon-plus-large\"></i>\n                        <span class=\"circle\"></span>\n                    </button>   \n                    <ul class=\"dropdown__menu dropdown--align-right\">\n                        <li>\n                            <div class=\"dropdown__menu-label\">Create new site</div>\n                        </li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li><button>Superdesk Publisher</button></li>\n                        <li><button>Wordpress</button></li>                        \n                    </ul>\n                </div>\n            </div>\n            <div class=\"sd-column-box--3\">\n                <div class=\"sd-column-box__main-column\">\n                    <div class=\"sd-grid-list sd-grid-list--large\">\n                        <div class=\"sd-grid-item-wrapper\">\n                            <div class=\"sd-grid-item-header\">\n                                <h3 class=\"sd-grid-item-header__heading sd-overflow-ellipsis\">\n                                    <a href=\"\" flow=\"down\">\n                                        <span>Daily Telegraph</span><i class=\"icon-external\"></i>\n                                    </a>                                \n                                </h3>\n                                <div>\n                                    <a class=\"icn-btn\"><i class=\"icon-dots\"></i></a>\n                                </div>\n                            </div>\n                            <div class=\"sd-card sd-card--flex-grow\">\n                                <div class=\"dashboard-content-header sd-shadow--z1\">\n                                    <div class=\"big-number-block big-number-block--grow big-number-block--center\">\n                                        <div class=\"big-number-block__number\">28\n                                        </div> \n                                        <div class=\"big-number-block__text\">Published items today</div>\n                                    </div>\n                                    <div class=\"btn-icon-group\">\n                                        <a class=\"btn btn--icon-only-circle btn--large btn--hollow\" sd-tooltip=\"Analytics\" flow=\"down\"><i class=\"icon-analytics\"></i></a>\n                                        <a class=\"btn btn--icon-only-circle btn--large btn--hollow\" sd-tooltip=\"Content lists\" flow=\"down\"><i class=\"icon-unordered-list\"></i></a>\n                                        <a class=\"btn btn--primary btn--icon-only-circle btn--large btn--hollow\" sd-tooltip=\"Livesite editor\" flow=\"down\"><i class=\"icon-pencil\"></i></a>\n                                    </div>\n                                </div>\n                                <div class=\"sd-card__content\">\n                                    <ul class=\"sd-card__content-list\">\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Breaking news</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Politic teaser / Home</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Entertainment teaser / Home</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Custom manual list</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Some automatic list</a></li>\n                                    </ul>\n                                </div>                                \n                            </div>\n                        </div>\n                        <div class=\"sd-grid-item-wrapper\">\n                            <div class=\"sd-grid-item-header\">\n                                <h3 class=\"sd-grid-item-header__heading sd-overflow-ellipsis\">\n                                    <a href=\"\" flow=\"down\">\n                                        <span>The Torch</span><i class=\"icon-external\"></i>\n                                    </a>                                \n                                </h3>\n                                <div>\n                                    <a class=\"icn-btn\"><i class=\"icon-dots\"></i></a>\n                                </div>\n                            </div>\n                            <div class=\"sd-card sd-card--flex-grow\">\n                                <div class=\"dashboard-content-header sd-shadow--z1\">\n                                    <div class=\"big-number-block big-number-block--grow big-number-block--center\">\n                                        <div class=\"big-number-block__number\">117\n                                        </div> \n                                        <div class=\"big-number-block__text\">Published items today</div>\n                                    </div>\n                                    <div class=\"btn-icon-group\">\n                                        <a class=\"btn btn--icon-only-circle btn--large btn--hollow\" sd-tooltip=\"Analytics\" flow=\"down\"><i class=\"icon-analytics\"></i></a>\n                                        <a class=\"btn btn--icon-only-circle btn--large btn--hollow\" sd-tooltip=\"Content lists\" flow=\"down\"><i class=\"icon-unordered-list\"></i></a>\n                                        <a class=\"btn btn--primary btn--icon-only-circle btn--large btn--hollow\" sd-tooltip=\"Livesite editor\" flow=\"down\"><i class=\"icon-pencil\"></i></a>\n                                    </div>\n                                </div>\n                                <div class=\"sd-card__content\">\n                                    <ul class=\"sd-card__content-list\">\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Breaking news</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Politic teaser / Home</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Entertainment teaser / Home</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Custom manual list</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Some automatic list</a></li>\n                                    </ul>\n                                </div>                                \n                            </div>\n                        </div>\n                        <div class=\"sd-grid-item-wrapper\">\n                            <div class=\"sd-grid-item-header\">\n                                <h3 class=\"sd-grid-item-header__heading sd-overflow-ellipsis\">\n                                    <a href=\"\" flow=\"down\">\n                                        <span>Gotham Globe</span><i class=\"icon-external\"></i>\n                                    </a>                                \n                                </h3>\n                                <div>\n                                    <a class=\"icn-btn\"><i class=\"icon-dots\"></i></a>\n                                </div>\n                            </div>\n                            <div class=\"sd-card sd-card--flex-grow\">\n                                <div class=\"dashboard-content-header sd-shadow--z1\">\n                                    <div class=\"big-number-block big-number-block--grow big-number-block--center\">\n                                        <div class=\"big-number-block__number\">2659\n                                        </div> \n                                        <div class=\"big-number-block__text\">Published items today</div>\n                                    </div>\n                                    <div class=\"btn-icon-group\">\n                                        <a class=\"btn btn--icon-only-circle btn--large btn--hollow\" sd-tooltip=\"Analytics\" flow=\"down\"><i class=\"icon-analytics\"></i></a>\n                                        <a class=\"btn btn--icon-only-circle btn--large btn--hollow\" sd-tooltip=\"Content lists\" flow=\"down\"><i class=\"icon-unordered-list\"></i></a>\n                                        <a class=\"btn btn--primary btn--icon-only-circle btn--large btn--hollow\" sd-tooltip=\"Livesite editor\" flow=\"down\"><i class=\"icon-pencil\"></i></a>\n                                    </div>\n                                </div>\n                                <div class=\"sd-card__content\">\n                                    <ul class=\"sd-card__content-list\">\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Breaking news</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Politic teaser / Home</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Entertainment teaser / Home</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Custom manual list</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Some automatic list</a></li>\n                                    </ul>\n                                </div>                                \n                            </div>\n                        </div>\n                        <div class=\"sd-grid-item-wrapper\">\n                            <div class=\"sd-grid-item-header\">\n                                <h3 class=\"sd-grid-item-header__heading sd-overflow-ellipsis\">\n                                    <a href=\"\" flow=\"down\">\n                                        <span>Daily Bugle</span><i class=\"icon-external\"></i>\n                                    </a>                                \n                                </h3>\n                                <div>\n                                    <a class=\"icn-btn\"><i class=\"icon-dots\"></i></a>\n                                </div>\n                            </div>\n                            <div class=\"sd-card sd-card--flex-grow\">\n                                <div class=\"dashboard-content-header sd-shadow--z1\">\n                                    <div class=\"big-number-block big-number-block--grow big-number-block--center\">\n                                        <div class=\"big-number-block__number\">16\n                                        </div> \n                                        <div class=\"big-number-block__text\">Published items today</div>\n                                    </div>\n                                    <div class=\"btn-icon-group\">\n                                        <a class=\"btn btn--icon-only-circle btn--large btn--hollow\" sd-tooltip=\"Analytics\" flow=\"down\"><i class=\"icon-analytics\"></i></a>\n                                        <a class=\"btn btn--icon-only-circle btn--large btn--hollow\" sd-tooltip=\"Content lists\" flow=\"down\"><i class=\"icon-unordered-list\"></i></a>\n                                        <a class=\"btn btn--primary btn--icon-only-circle btn--large btn--hollow\" sd-tooltip=\"Livesite editor\" flow=\"down\"><i class=\"icon-pencil\"></i></a>\n                                    </div>\n                                </div>\n                                <div class=\"sd-card__content\">\n                                    <ul class=\"sd-card__content-list\">\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Breaking news</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Politic teaser / Home</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Entertainment teaser / Home</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Custom manual list</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Some automatic list</a></li>\n                                    </ul>\n                                </div>                                \n                            </div>\n                        </div>\n                        <div class=\"sd-grid-item-wrapper\">\n                            <div class=\"sd-grid-item-header\">\n                                <h3 class=\"sd-grid-item-header__heading sd-overflow-ellipsis\">\n                                    <a href=\"\" flow=\"down\">\n                                        <span>The Daily Star</span><i class=\"icon-external\"></i>\n                                    </a>                                \n                                </h3>\n                                <div>\n                                    <a class=\"icn-btn\"><i class=\"icon-dots\"></i></a>\n                                </div>\n                            </div>\n                            <div class=\"sd-card sd-card--flex-grow\">\n                                <div class=\"dashboard-content-header sd-shadow--z1\">\n                                    <div class=\"big-number-block big-number-block--grow big-number-block--center\">\n                                        <div class=\"big-number-block__number\">56985\n                                        </div> \n                                        <div class=\"big-number-block__text\">Published items today</div>\n                                    </div>\n                                    <div class=\"btn-icon-group\">\n                                        <a class=\"btn btn--icon-only-circle btn--large btn--hollow\" sd-tooltip=\"Analytics\" flow=\"down\"><i class=\"icon-analytics\"></i></a>\n                                        <a class=\"btn btn--icon-only-circle btn--large btn--hollow\" sd-tooltip=\"Content lists\" flow=\"down\"><i class=\"icon-unordered-list\"></i></a>\n                                        <a class=\"btn btn--primary btn--icon-only-circle btn--large btn--hollow\" sd-tooltip=\"Livesite editor\" flow=\"down\"><i class=\"icon-pencil\"></i></a>\n                                    </div>\n                                </div>\n                                <div class=\"sd-card__content\">\n                                    <ul class=\"sd-card__content-list\">\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Breaking news</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Politic teaser / Home</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Entertainment teaser / Home</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Custom manual list</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Some automatic list</a></li>\n                                    </ul>\n                                </div>                                \n                            </div>\n                        </div>\n                        <div class=\"sd-grid-item-wrapper\">\n                            <div class=\"sd-grid-item-header\">\n                                <h3 class=\"sd-grid-item-header__heading sd-overflow-ellipsis\">\n                                    <a href=\"\" flow=\"down\">\n                                        <span>Sourcefabric.org</span><i class=\"icon-external\"></i>\n                                    </a>                                \n                                </h3>\n                                <div>\n                                    <a class=\"icn-btn\"><i class=\"icon-dots\"></i></a>\n                                </div>\n                            </div>\n                            <div class=\"sd-card sd-card--flex-grow\">\n                                <div class=\"dashboard-content-header sd-shadow--z1\">\n                                    <div class=\"big-number-block big-number-block--grow big-number-block--center\">\n                                        <div class=\"big-number-block__number\">216\n                                        </div> \n                                        <div class=\"big-number-block__text\">Published items today</div>\n                                    </div>\n                                    <div class=\"btn-icon-group\">\n                                        <a class=\"btn btn--icon-only-circle btn--large btn--hollow\" sd-tooltip=\"Analytics\" flow=\"down\"><i class=\"icon-analytics\"></i></a>\n                                        <a class=\"btn btn--icon-only-circle btn--large btn--hollow\" sd-tooltip=\"Content lists\" flow=\"down\"><i class=\"icon-unordered-list\"></i></a>\n                                        <a class=\"btn btn--primary btn--icon-only-circle btn--large btn--hollow\" sd-tooltip=\"Livesite editor\" flow=\"down\"><i class=\"icon-pencil\"></i></a>\n                                    </div>\n                                </div>\n                                <div class=\"sd-card__content\">\n                                    <ul class=\"sd-card__content-list\">\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Breaking news</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Politic teaser / Home</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Entertainment teaser / Home</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Custom manual list</a></li>\n                                        <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-overflow-ellipsis\">Some automatic list</a></li>\n                                    </ul>\n                                </div>                                \n                            </div>\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n\n    </section>\n    <footer class=\"bottom-bar \">\n        This is the optional footer.\n    </footer>\n</div>\n";

/***/ }),
/* 276 */
/***/ (function(module, exports) {

module.exports = "<div class=\"sd-page-grid--basic docs-page__content\" doc-modal>\n    <header class=\"sd-top-menu\">\n        <a href=\"\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n        <p class=\"sd-top-menu__header\">Publisher</p>\n    </header>\n\n    <section class=\"sd-content sd-page-content--slide-in\" ng-class=\"{\n            'sd-page-content--slide-in--open' : editorOpen}\">\n\n        <div class=\"sd-sidebar-menu sd-page-content__left-tabs\">\n            <ul>\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Monitoring\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--view\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Highlights\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--marked-star\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Spiked\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--spike\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Personal\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--personal\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Search\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--global-search\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Publisher\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--publisher\"></i>                        \n                    </a>\n                </li>\n                <li sd-tooltip=\"Planning\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--calendar\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"sd-sidebar-menu sd-sidebar-menu--second-level sd-page-content__left-tabs\">\n            <ul>\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard-alt\"></i>                       \n                    </a>\n                </li>\n                <li sd-tooltip=\"Output Control\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--web\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>                \n            </ul>\n        </div>\n        <div class=\"sd-page-content__content-block sd-page-content__content-block--double-sidebar\" ng-class=\"{'open-filters': leftFilterOpen, 'open-preview': leftPreviewOpen, 'open-publish': publishPaneOpen}\">\n            <div class=\"subnav\">\n                <button class=\"navbtn navbtn--left navbtn--darker\" ng-click=\"leftFilterOpen = !leftFilterOpen\" ng-class=\"{'navbtn--active': leftFilterOpen}\">\n                    <i class=\"icon-filter-large\"></i>\n                </button>\n                <h3 class=\"subnav__page-title sd-flex-no-grow\">Output Control</h3>\n                <sd-search-handler ng-model=\"query.name\" data-debounce=\"200\" data-button=\"true\" data-label=\"Search\" data-borderleft=\"true\"></sd-search-handler>\n                <div class=\"dropdown dropdown--align-right sd-margin-l--auto\" dropdown=\"\">\n                    <button class=\"navbtn dropdown sd-create-btn dropdown-toggle\" dropdown__toggle=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"icon-plus-large\"></i>\n                        <span class=\"circle\"></span>\n                    </button>   \n                    <ul class=\"dropdown__menu dropdown--align-right\">\n                        <li>\n                            <div class=\"dropdown__menu-label\">Create new site</div>\n                        </li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li><button>Superdesk Publisher</button></li>\n                        <li><button>Wordpress</button></li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"subnav subnav--lower-z-index\" ng-init=\"listType = 'incoming'; swimlaneView = false\">\n                <div class=\"subnav__content-bar\">\n                    <sd-check ng-model=\"listType\" type=\"radio\" ng-value=\"incoming\" label-position=\"inside\">Incoming content</sd-check>\n                    <sd-check ng-model=\"listType\" type=\"radio\" ng-value=\"published\" label-position=\"inside\">Published</sd-check>\n                </div>\n                <div class=\"subnav__spacer subnav__spacer--no-margin\"></div>\n                <div class=\"subnav__stretch-bar\"></div>\n                <div class=\"subnav__spacer subnav__spacer--no-margin\"></div>\n                <div class=\"subnav__content-bar sd-flex-wrap\">\n                    <span>Incoming:</span><span class=\"badge sd-margin-l--1\">2435</span>\n                    <span class=\"sd-margin-l--2\">Published:</span><span class=\"badge sd-margin-l--1\">31471</span>\n                </div>\n                <div class=\"subnav__spacer subnav__spacer--no-margin\" ng-show=\"listType == 'published' && !swimlaneView\"></div>\n                <div class=\"subnav__content-bar\" ng-show=\"listType == 'published' && !swimlaneView\">\n                    <div class=\"dropdown\" dropdown=\"\" ng-show=\"listType == 'published' && !swimlaneView\">\n                        <button class=\"dropdown__toggle dropdown-toggle\" dropdown-toggle=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">All Tenants<span class=\"dropdown__caret\"></span></button>\n                        <ul class=\"dropdown__menu dropdown__menu--scrollable\">     \n                            <li><button>Vijesti.me</button></li>\n                            <li><button>Superdesk.org</button></li>\n                            <li><button>BBC</button></li>\n                            <li><button>Sourcefabric</button></li>\n                        </ul>\n                    </div>\n                </div>\n                <button class=\"navbtn\" ng-click=\"swimlaneView = !swimlaneView; leftFilterOpen = false\" ng-show=\"listType == 'published'\">\n                    <i class=\"icon-kanban-view ng-hide\" ng-show=\"swimlaneView\"></i>\n                    <i class=\"icon-list-view\" ng-hide=\"swimlaneView\"></i>\n                </button>                \n            </div>\n            <div class=\"sd-column-box--3\">\n                <div class=\"sd-filters-panel sd-filters-panel--border-right\" ng-class=\"{'sd-flex-no-shrink': listType == 'published' && swimlaneView}\">\n                    <div class=\"side-panel side-panel--transparent side-panel--shadow-right\">\n                        <div class=\"side-panel__header side-panel__header--border-b\">\n                                <a class=\"icn-btn side-panel__close\" sd-tooltip=\"Close filters\" flow=\"left\" ng-click=\"leftFilterOpen = !leftFilterOpen\"><i class=\"icon-close-small\"></i></a>\n                            <h3 class=\"side-panel__heading side-panel__heading--big\">Filters</h3>\n                        </div>\n                        <div class=\"side-panel__content\">\n                            <div class=\"side-panel__content-block\">\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                                        <span class=\"sd-line-input__plus-btn\"></span>\n                                        <label class=\"sd-line-input__label\">Routes</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                                        <span class=\"sd-line-input__plus-btn\"></span>\n                                        <label class=\"sd-line-input__label\">Author</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row form__row--flex\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                        <label class=\"sd-line-input__label\">Published after</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                        <label class=\"sd-line-input__label\">Published before</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                                        <span class=\"sd-line-input__plus-btn\"></span>\n                                        <label class=\"sd-line-input__label\">Metadata</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer side-panel__footer--button-box\">\n                            <div class=\"flex-grid flex-grid--boxed-small\">\n                                <a class=\"btn btn--hollow btn--expanded\">Clear filters</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- Incoming list -->\n                <div class=\"sd-column-box__main-column\" ng-show=\"listType == 'incoming'\">\n                    <div class=\"sd-list-item-group sd-shadow--z2\">\n                        <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--activated':leftPreviewOpen}\" ng-click=\"leftPreviewOpen = !leftPreviewOpen\" ng-dblclick=\"publishPaneOpen = !publishPaneOpen\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">This is article heading, the quick brown fox jumps over the lazy dog.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">a minute ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>6</span>\n                                    <span class=\"label label--hollow\">politics</span><span class=\"label label--darkBlue2 label--hollow\">update 2</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">byline</span>                                    \n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen; $event.stopPropagation();\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Duis occaecat ullamco sunt veniam aute ullamco ad eu Lorem ea.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">a minute ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>8</span>\n                                    <span class=\"label label--hollow\">sport</span><span class=\"label label--darkBlue2 label--hollow\">update 4</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">byline</span>                                    \n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Consectetur cillum est ipsum occaecat in sunt proident culpa culpa sint.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">a minute ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>12</span>\n                                    <span class=\"label label--hollow\">travel</span><span class=\"label label--darkBlue2 label--hollow\">update 3</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">byline</span>                                \n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Lorem dolore fugiat pariatur mollit occaecat.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">a minute ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"label label--hollow\">business</span><span class=\"label label--darkBlue2 label--hollow\">update 4</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">byline</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Proident incididunt aliquip laboris qui sint elit consequat deserunt aliqua in occaecat laborum.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">a minute ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>7</span>\n                                    <span class=\"label label--hollow\">travel</span><span class=\"label label--darkBlue2 label--hollow\">update 1</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">byline</span>                                \n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Ipsum ipsum nulla ullamco nulla elit dolore non pariatur esse reprehenderit.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">a minute ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"label label--hollow\">travel</span><span class=\"label label--darkBlue2 label--hollow\">update 3</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">byline</span>                                \n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Enim nisi tempor irure cillum adipisicing dolor velit sunt velit aliquip mollit proident adipisicing.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">a minute ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>5</span>\n                                    <span class=\"label label--hollow\">sports</span><span class=\"label label--darkBlue2 label--hollow\">update 1</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">byline</span>                                \n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Dolore mollit esse irure exercitation mollit ullamco exercitation nostrud sint consectetur do adipisicing.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">a minute ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"label label--hollow\">travel</span><span class=\"label label--darkBlue2 label--hollow\">update 6</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">byline</span>                                \n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Nostrud Lorem quis reprehenderit incididunt aute ea esse.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">a minute ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>3</span>\n                                    <span class=\"label label--hollow\">culture</span><span class=\"label label--darkBlue2 label--hollow\">update 2</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">byline</span>                                \n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Ex ut eu irure consequat eu proident Lorem Lorem aute eiusmod dolor do.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">a minute ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>2</span>\n                                    <span class=\"label label--hollow\">business</span><span class=\"label label--darkBlue2 label--hollow\">update 1</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">byline</span>                                \n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Nulla duis pariatur mollit est reprehenderit anim ipsum irure.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">a minute ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"label label--hollow\">politics</span><span class=\"label label--darkBlue2 label--hollow\">update 3</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">byline</span>                                \n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Sit esse cupidatat cupidatat ea minim tempor veniam id do adipisicing fugiat anim.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">a minute ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>2</span>\n                                    <span class=\"label label--hollow\">travel</span><span class=\"label label--darkBlue2 label--hollow\">update 4</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">byline</span>                                \n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Incididunt commodo eu laboris aute qui non aliqua ea et nostrud.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">a minute ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"label label--hollow\">news</span><span class=\"label label--darkBlue2 label--hollow\">update 1</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">byline</span>                                \n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Id magna ipsum duis voluptate voluptate ad.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">a minute ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>7</span>\n                                    <span class=\"label label--hollow\">travel</span><span class=\"label label--darkBlue2 label--hollow\">update 1</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">byline</span>                                \n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Irure consectetur deserunt esse nisi enim qui in irure tempor consectetur ipsum.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">a minute ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"label label--hollow\">sports</span><span class=\"label label--darkBlue2 label--hollow\">update 2</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">byline</span>                                \n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Exercitation consectetur dolore amet amet commodo ut ea.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">a minute ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>4</span>\n                                    <span class=\"label label--hollow\">culture</span><span class=\"label label--darkBlue2 label--hollow\">update 1</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">byline</span>                                \n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                </div><!-- end incoming list -->\n                <!-- Published list -->\n                <div class=\"sd-column-box__main-column\" ng-show=\"listType == 'published' && !swimlaneView\">\n                    <div class=\"sd-list-item-group sd-shadow--z2\">\n\n                        <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--activated':leftPreviewOpen}\" ng-click=\"leftPreviewOpen = !leftPreviewOpen\" ng-dblclick=\"publishPaneOpen = !publishPaneOpen\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Odgođeno suđenje po tužbi Kalića: Čeka se vještak</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">2 minutes ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>5</span>\n                                    <span class=\"label label--hollow\">politics</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">pageviews:</span><span>2346</span>\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">comments:</span><span>16</span>\n                                    </span>\n                                    <span class=\"sd-list-item__inline-text ml-auto no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                    <span class=\"label label--alert\">BBC</span>\n                                    <span class=\"label label--success\">Vijesti</span>\n                                    <span class=\"label label--success\">superdesk.pro</span>\n                                    <span>+6 more</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen; $event.stopPropagation();\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>                        \n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Ekosistem koji služi za primjer u pružanju zdravstvenih usluga</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">1 hr ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"label label--hollow\">culture</span><span class=\"label label--darkBlue2 label--hollow\">update 2</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">pageviews:</span><span>462</span>\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">comments:</span><span>8</span>\n                                    </span>\n                                    <span class=\"sd-list-item__inline-text ml-auto no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                    <span class=\"label label--alert\">Vijesti</span>\n                                    <span class=\"label label--success\">superdesk.pro</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen; $event.stopPropagation();\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>                        \n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Japan: Beba rođena sa 268 grama poslije pet mjeseci puštena kući iz bolnice dobrog zdravlja</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">2 hrs ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>9</span>\n                                    <span class=\"label label--hollow\">lifestyle</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">pageviews:</span><span>450</span>\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">comments:</span><span>26</span>\n                                    </span>\n                                    <span class=\"sd-list-item__inline-text ml-auto no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                    <span class=\"label label--alert\">BBC</span>\n                                    <span class=\"label label--success\">Vijesti</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen; $event.stopPropagation();\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>                        \n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Švedska: Uhapšena jedna osoba, sumnja se da je ruski špijun</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">3 hrs ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"label label--hollow\">sports</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">pageviews:</span><span>145</span>\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">comments:</span><span>78</span>\n                                    </span>\n                                    <span class=\"sd-list-item__inline-text ml-auto no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                    <span class=\"label label--success\">Vijesti</span>\n                                    <span class=\"label label--success\">Sourcefabric</span>\n                                    <span class=\"label label--success\">BBC</span>\n                                    <span>+3 more</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen; $event.stopPropagation();\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>                        \n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Radojević: Nisam tražio enormno više od ponuđene sume</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">1 day ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>7</span>\n                                    <span class=\"label label--hollow\">politics</span><span class=\"label label--darkBlue2 label--hollow\">update 2</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                            <span class=\"sd-list-item__text-label sd-margin-l--1\">pageviews:</span><span>3646</span>\n                                            <span class=\"sd-list-item__text-label sd-margin-l--1\">comments:</span><span>35</span>\n                                    </span>\n                                    <span class=\"sd-list-item__inline-text ml-auto no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                    <span class=\"label label--success\">Vijesti</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen; $event.stopPropagation();\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>                        \n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Francuska: Macron za smanjenje poreskog opterećenja</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">2 days ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>8</span>\n                                    <span class=\"label label--hollow\">politics</span><span class=\"label label--darkBlue2 label--hollow\">update 1</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">pageviews:</span><span>23</span>\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">comments:</span><span>0</span>\n                                    </span>\n                                    <span class=\"sd-list-item__inline-text ml-auto no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                    <span class=\"label label--success\">BBC</span>\n                                    <span class=\"label label--success\">Vijesti</span>\n                                    <span class=\"label label--success\">superdesk.pro</span>\n                                    <span>+6 more</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen; $event.stopPropagation();\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>                        \n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Bregzit ili smak svijeta?</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">3 days ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"label label--hollow\">politics</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">pageviews:</span><span>1133</span>\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">comments:</span><span>212</span>\n                                    </span>\n                                    <span class=\"sd-list-item__inline-text ml-auto no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                    <span class=\"label label--success\">BBC</span>\n                                    <span class=\"label label--success\">Vijesti</span>\n                                    <span class=\"label label--success\">superdesk.pro</span>\n                                    <span>+6 more</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen; $event.stopPropagation();\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Eiusmod consectetur occaecat pariatur culpa dolor fugiat nisi.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">2 days ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"label label--hollow\">sports</span><span class=\"label label--darkBlue2 label--hollow\">update 3</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">pageviews:</span><span>57</span>\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">comments:</span><span>4</span>\n                                    </span>\n                                    <span class=\"sd-list-item__inline-text ml-auto no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                    <span class=\"label label--success\">BBC</span>\n                                    <span class=\"label label--alert\">Vijesti</span>\n                                    <span class=\"label label--success\">superdesk.pro</span>\n                                    <span>+63 more</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen; $event.stopPropagation();\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Incididunt esse fugiat aliqua quis culpa.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">2 days ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>4</span>\n                                    <span class=\"label label--hollow\">politics</span><span class=\"label label--darkBlue2 label--hollow\">update 2</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">pageviews:</span><span>4523</span>\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">comments:</span><span>20</span>\n                                    </span>\n                                    <span class=\"sd-list-item__inline-text ml-auto no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                    <span class=\"label label--success\">BBC</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen; $event.stopPropagation();\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Officia id est mollit id cupidatat nostrud deserunt ipsum consequat commodo.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">2 days ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>5</span>\n                                    <span class=\"label label--hollow\">culture</span><span class=\"label label--darkBlue2 label--hollow\">update 1</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">pageviews:</span><span>356</span>\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">comments:</span><span>42</span>\n                                    </span>\n                                    <span class=\"sd-list-item__inline-text ml-auto no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                    <span class=\"label label--success\">BBC</span>\n                                    <span class=\"label label--success\">Vijesti</span>\n                                    <span class=\"label label--alert\">superdesk.pro</span>\n                                    <span>+1 more</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen; $event.stopPropagation();\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Sit sit aliqua pariatur esse est occaecat aute eiusmod labore enim cillum ex deserunt.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">2 days ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>2</span>\n                                    <span class=\"label label--hollow\">business</span><span class=\"label label--darkBlue2 label--hollow\">update 2</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">pageviews:</span><span>563</span>\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">comments:</span><span>12</span>\n                                    </span>\n                                    <span class=\"sd-list-item__inline-text ml-auto no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                    <span class=\"label label--success\">Vijesti</span>\n                                    <span class=\"label label--alert\">superdesk.pro</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen; $event.stopPropagation();\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Irure proident sint Lorem non in ullamco enim voluptate laborum excepteur laborum velit.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">2 days ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"label label--hollow\">politics</span><span class=\"label label--darkBlue2 label--hollow\">update 1</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">pageviews:</span><span>678</span>\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">comments:</span><span>6</span>\n                                    </span>\n                                    <span class=\"sd-list-item__inline-text ml-auto no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                    <span class=\"label label--success\">BBC</span>\n                                    <span class=\"label label--success\">Vijesti</span>\n                                    <span class=\"label label--alert\">superdesk.pro</span>\n                                    <span>+2 more</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen; $event.stopPropagation();\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Amet proident laboris eiusmod nisi et.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">2 days ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>6</span>\n                                    <span class=\"label label--hollow\">news</span><span class=\"label label--darkBlue2 label--hollow\">update 2</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">pageviews:</span><span>23</span>\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">comments:</span><span>0</span>\n                                    </span>\n                                    <span class=\"sd-list-item__inline-text ml-auto no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                    <span class=\"label label--success\">BBC</span>\n                                    <span class=\"label label--success\">Vijesti</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen; $event.stopPropagation();\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Proident sit enim tempor et excepteur in officia quis.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">2 days ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>3</span>\n                                    <span class=\"label label--hollow\">culture</span><span class=\"label label--darkBlue2 label--hollow\">update 4</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">pageviews:</span><span>765</span>\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">comments:</span><span>2</span>\n                                    </span>\n                                    <span class=\"sd-list-item__inline-text ml-auto no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                    <span class=\"label label--success\">BBC</span>\n                                    <span class=\"label label--success\">Vijesti</span>\n                                    <span class=\"label label--success\">superdesk.pro</span>\n                                    <span>+12 more</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen; $event.stopPropagation();\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        <div class=\"sd-list-item\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item__headline\">Proident sit enim tempor et excepteur in officia quis.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">2 days ago</time>\n                                </div>\n                                <div class=\"sd-list-item__row sd-list-item__row--wrap\">\n                                    <span class=\"sd-text-icon sd-margin-r--1\"><i class=\"icon-slideshow sd-opacity--40\"></i>3</span>\n                                    <span class=\"label label--hollow\">sports</span><span class=\"label label--darkBlue2 label--hollow\">update 1</span>\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">pageviews:</span><span>876</span>\n                                        <span class=\"sd-list-item__text-label sd-margin-l--1\">comments:</span><span>63</span>\n                                    </span>\n                                    <span class=\"sd-list-item__inline-text ml-auto no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                    <span class=\"label label--success\">Vijesti</span>\n                                    <span class=\"label label--success\">superdesk.pro</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                                <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button>      \n                                <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                <button class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen; $event.stopPropagation();\"><i class=\"icon-expand-thin\"></i></button>\n                            </div>\n                        </div>\n                        \n                    </div>\n                </div><!-- end published list -->\n                <!-- Published swimlane -->\n                <div class=\"sd-column-box__main-column\" ng-show=\"listType == 'published' && swimlaneView\">\n                    <div class=\"sd-kanban-list sd-d-inline-flex\">\n                        <!-- KANBAN BOARD 1 -->\n                        <div class=\"sd-kanban-list__board sd-kanban-list__board--wide\">\n                            <div class=\"sd-kanban-list__board-header\">\n                                <div class=\"sd-list-header\">\n                                    <span class=\"sd-list-header__name\">Vijesti</span>\n                                    <span class=\"sd-list-header__number badge\">314226</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-kanban-list__board-content\">\n                                <div class=\"sd-list-item-group sd-shadow--z1\">\n                                    <!-- list item 1 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--activated':leftPreviewOpen}\" ng-click=\"leftPreviewOpen = !leftPreviewOpen\" ng-dblclick=\"publishPaneOpen = !publishPaneOpen\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>5</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Odgođeno suđenje po tužbi Kalića: Čeka se vještak\">Odgođeno suđenje po tužbi Kalića: Čeka se vještak</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">2 minutes ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <!--dropdown-->\n                                            <div class=\"dropdown dropdown--align-right\" dropdown=\"\" dropdown-append-to-body=\"\" is-open=\"itemActive1\">\n                                                <button class=\"icn-btn dropdown__toggle\" dropdown__toggle=\"\" ng-click=\"$event.stopPropagation();\"><i class=\"icon-dots-vertical\"></i></button>\n                                                <ul class=\"dropdown__menu\">\n                                                    <li><button><i class=\"icon-trash\"></i>Remove</button></li>\n                                                    <li><button><i class=\"icon-pencil\"></i>Edit</button></li>\n                                                    <li><button><i class=\"icon-expand-thin\"></i>Publish</button></li>\n                                                </ul>\n                                            </div>\n                                            <!--end dropdown-->        \n                                        </div>\n                                    </div>\n                                    <!-- list item 2 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Ekosistem koji služi za primjer u pružanju zdravstvenih usluga\">Ekosistem koji služi za primjer u pružanju zdravstvenih usluga</span>\n                                                <span class=\"label label--hollow\">culture</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">10 minutes ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 3 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>9</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Japan: Beba rođena sa 268 grama poslije pet mjeseci puštena kući iz bolnice dobrog zdravlja\">Japan: Beba rođena sa 268 grama poslije pet mjeseci puštena kući iz bolnice dobrog zdravlja</span>\n                                                <span class=\"label label--hollow\">lifestyle</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">30 minutes ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 4 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Švedska: Uhapšena jedna osoba, sumnja se da je ruski špijun\">Švedska: Uhapšena jedna osoba, sumnja se da je ruski špijun</span>\n                                                <span class=\"label label--hollow\">sports</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">1 hr ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 5 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>7</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Radojević: Nisam tražio enormno više od ponuđene sume\">Radojević: Nisam tražio enormno više od ponuđene sume</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">2 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 6 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>8</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Francuska: Macron za smanjenje poreskog opterećenja\">Francuska: Macron za smanjenje poreskog opterećenja</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">4 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>                                    \n                                    <!-- list item 7 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                       \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Bregzit ili smak svijeta?\">Bregzit ili smak svijeta?</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">7 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 8 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Eiusmod consectetur occaecat pariatur culpa dolor fugiat nisi.\">Eiusmod consectetur occaecat pariatur culpa dolor fugiat nisi.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">10 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 9 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                        \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Incididunt esse fugiat aliqua quis culpa.\">Incididunt esse fugiat aliqua quis culpa.</span>\n                                                <span class=\"label label--hollow\">lifestyle</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">12 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 10 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>7</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Officia id est mollit id cupidatat nostrud deserunt ipsum consequat commodo.\">Officia id est mollit id cupidatat nostrud deserunt ipsum consequat commodo.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">14 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 11 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Sit sit aliqua pariatur esse est occaecat aute eiusmod labore enim cillum ex deserunt.\">Sit sit aliqua pariatur esse est occaecat aute eiusmod labore enim cillum ex deserunt.</span>\n                                                <span class=\"label label--hollow\">culture</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">15 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 12 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>8</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Irure proident sint Lorem non in ullamco enim voluptate laborum excepteur laborum velit.\">Irure proident sint Lorem non in ullamco enim voluptate laborum excepteur laborum velit.</span>\n                                                <span class=\"label label--hollow\">sports</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">17 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 13 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Amet proident laboris eiusmod nisi et.\">Amet proident laboris eiusmod nisi et.</span>\n                                                <span class=\"label label--hollow\">culture</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">1 day ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 14 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Proident sit enim tempor et excepteur in officia quis.\">Proident sit enim tempor et excepteur in officia quis.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">2 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 15 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>8</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Francuska: Macron za smanjenje poreskog opterećenja\">Francuska: Macron za smanjenje poreskog opterećenja</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">3 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>                                    \n                                    <!-- list item 16 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                       \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Bregzit ili smak svijeta?\">Bregzit ili smak svijeta?</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">4 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 17 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Eiusmod consectetur occaecat pariatur culpa dolor fugiat nisi.\">Eiusmod consectetur occaecat pariatur culpa dolor fugiat nisi.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">5 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 18 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                        \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Incididunt esse fugiat aliqua quis culpa.\">Incididunt esse fugiat aliqua quis culpa.</span>\n                                                <span class=\"label label--hollow\">lifestyle</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">7 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 19 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>2</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Quis tempor ut ipsum amet dolore voluptate pariatur.\">Quis tempor ut ipsum amet dolore voluptate pariatur.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">9 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 20 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Cupidatat sint non et fugiat eu laborum.\">Cupidatat sint non et fugiat eu laborum.</span>\n                                                <span class=\"label label--hollow\">culture</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">15 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 21 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>8</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Nostrud anim culpa ad incididunt esse dolor id incididunt ad adipisicing reprehenderit voluptate et commodo.\">Nostrud anim culpa ad incididunt esse dolor id incididunt ad adipisicing reprehenderit voluptate et commodo.</span>\n                                                <span class=\"label label--hollow\">sports</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">17 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 22 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Elit enim commodo labore consequat nisi deserunt incididunt.\">Elit enim commodo labore consequat nisi deserunt incididunt.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">18 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 23 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>6</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Anim dolor sunt cupidatat labore ad elit aliqua nulla ex culpa.\">Anim dolor sunt cupidatat labore ad elit aliqua nulla ex culpa.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">21 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 24 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Ex eu cupidatat adipisicing irure aliquip proident laboris amet est magna.\">Ex eu cupidatat adipisicing irure aliquip proident laboris amet est magna.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">22 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>                                    \n                                    <!-- list item 25 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                       \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Ad culpa aliqua quis labore voluptate quis voluptate amet anim do et elit.\">Ad culpa aliqua quis labore voluptate quis voluptate amet anim do et elit.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">23 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 26 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Cupidatat adipisicing labore laborum Lorem.\">Cupidatat adipisicing labore laborum Lorem.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">24 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 27 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                        \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Laborum qui dolor aliquip sunt.\">Laborum qui dolor aliquip sunt.</span>\n                                                <span class=\"label label--hollow\">lifestyle</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">March 15, 2018</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n    \n                                </div>\n                            </div>\n                        </div>\n                        <!-- KANBAN BOARD 2 -->\n                        <div class=\"sd-kanban-list__board sd-kanban-list__board--wide\">\n                            <div class=\"sd-kanban-list__board-header\">\n                                <div class=\"sd-list-header\">\n                                    <span class=\"sd-list-header__name\">BBC</span>\n                                    <span class=\"sd-list-header__number badge\">28525</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-kanban-list__board-content\">\n                                <div class=\"sd-list-item-group sd-shadow--z1\">\n                                    <!-- list item  1 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>5</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\">Odgođeno suđenje po tužbi Kalića: Čeka se vještak</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <span class=\"sd-overflow-ellipsis\"><time title=\"March 22, 2017 11:08 AM\">2 minutes ago</time></span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 2 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Ekosistem koji služi za primjer u pružanju zdravstvenih usluga\">Ekosistem koji služi za primjer u pružanju zdravstvenih usluga</span>\n                                                <span class=\"label label--hollow\">culture</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">10 minutes ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 3 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>9</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Japan: Beba rođena sa 268 grama poslije pet mjeseci puštena kući iz bolnice dobrog zdravlja\">Japan: Beba rođena sa 268 grama poslije pet mjeseci puštena kući iz bolnice dobrog zdravlja</span>\n                                                <span class=\"label label--hollow\">lifestyle</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">30 minutes ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 4 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Švedska: Uhapšena jedna osoba, sumnja se da je ruski špijun\">Švedska: Uhapšena jedna osoba, sumnja se da je ruski špijun</span>\n                                                <span class=\"label label--hollow\">sports</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">1 hr ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 5 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>7</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Radojević: Nisam tražio enormno više od ponuđene sume\">Radojević: Nisam tražio enormno više od ponuđene sume</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">2 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 6 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>8</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Francuska: Macron za smanjenje poreskog opterećenja\">Francuska: Macron za smanjenje poreskog opterećenja</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">4 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>                                    \n                                    <!-- list item 7 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                       \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Bregzit ili smak svijeta?\">Bregzit ili smak svijeta?</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">7 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 8 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Eiusmod consectetur occaecat pariatur culpa dolor fugiat nisi.\">Eiusmod consectetur occaecat pariatur culpa dolor fugiat nisi.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">10 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 9 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                        \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Incididunt esse fugiat aliqua quis culpa.\">Incididunt esse fugiat aliqua quis culpa.</span>\n                                                <span class=\"label label--hollow\">lifestyle</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">12 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 10 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>7</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Officia id est mollit id cupidatat nostrud deserunt ipsum consequat commodo.\">Officia id est mollit id cupidatat nostrud deserunt ipsum consequat commodo.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">14 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 11 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Sit sit aliqua pariatur esse est occaecat aute eiusmod labore enim cillum ex deserunt.\">Sit sit aliqua pariatur esse est occaecat aute eiusmod labore enim cillum ex deserunt.</span>\n                                                <span class=\"label label--hollow\">culture</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">15 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 12 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>8</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Irure proident sint Lorem non in ullamco enim voluptate laborum excepteur laborum velit.\">Irure proident sint Lorem non in ullamco enim voluptate laborum excepteur laborum velit.</span>\n                                                <span class=\"label label--hollow\">sports</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">17 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 13 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Amet proident laboris eiusmod nisi et.\">Amet proident laboris eiusmod nisi et.</span>\n                                                <span class=\"label label--hollow\">culture</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">1 day ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 14 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Proident sit enim tempor et excepteur in officia quis.\">Proident sit enim tempor et excepteur in officia quis.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">2 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 15 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>8</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Francuska: Macron za smanjenje poreskog opterećenja\">Francuska: Macron za smanjenje poreskog opterećenja</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">3 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>                                    \n                                    <!-- list item 16 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                       \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Bregzit ili smak svijeta?\">Bregzit ili smak svijeta?</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">4 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 17 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Eiusmod consectetur occaecat pariatur culpa dolor fugiat nisi.\">Eiusmod consectetur occaecat pariatur culpa dolor fugiat nisi.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">5 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 18 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                        \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Incididunt esse fugiat aliqua quis culpa.\">Incididunt esse fugiat aliqua quis culpa.</span>\n                                                <span class=\"label label--hollow\">lifestyle</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">7 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 19 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>2</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Quis tempor ut ipsum amet dolore voluptate pariatur.\">Quis tempor ut ipsum amet dolore voluptate pariatur.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">9 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 20 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Cupidatat sint non et fugiat eu laborum.\">Cupidatat sint non et fugiat eu laborum.</span>\n                                                <span class=\"label label--hollow\">culture</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">15 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 21 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>8</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Nostrud anim culpa ad incididunt esse dolor id incididunt ad adipisicing reprehenderit voluptate et commodo.\">Nostrud anim culpa ad incididunt esse dolor id incididunt ad adipisicing reprehenderit voluptate et commodo.</span>\n                                                <span class=\"label label--hollow\">sports</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">17 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 22 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Elit enim commodo labore consequat nisi deserunt incididunt.\">Elit enim commodo labore consequat nisi deserunt incididunt.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">18 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 23 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>6</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Anim dolor sunt cupidatat labore ad elit aliqua nulla ex culpa.\">Anim dolor sunt cupidatat labore ad elit aliqua nulla ex culpa.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">21 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 24 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Ex eu cupidatat adipisicing irure aliquip proident laboris amet est magna.\">Ex eu cupidatat adipisicing irure aliquip proident laboris amet est magna.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">22 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>                                    \n                                    <!-- list item 25 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                       \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Ad culpa aliqua quis labore voluptate quis voluptate amet anim do et elit.\">Ad culpa aliqua quis labore voluptate quis voluptate amet anim do et elit.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">23 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 26 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Cupidatat adipisicing labore laborum Lorem.\">Cupidatat adipisicing labore laborum Lorem.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">24 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 27 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                        \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Laborum qui dolor aliquip sunt.\">Laborum qui dolor aliquip sunt.</span>\n                                                <span class=\"label label--hollow\">lifestyle</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">March 15, 2018</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n    \n                                </div>\n                            </div>\n                        </div>\n                        <!-- KANBAN BOARD 3 -->\n                        <div class=\"sd-kanban-list__board sd-kanban-list__board--wide\">\n                            <div class=\"sd-kanban-list__board-header\">\n                                <div class=\"sd-list-header\">\n                                    <span class=\"sd-list-header__name\">Superdesk.pro</span>\n                                    <span class=\"sd-list-header__number badge\">21345</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-kanban-list__board-content\">\n                                <div class=\"sd-list-item-group sd-shadow--z1\">\n                                    <!-- list item  1 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>5</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\">Odgođeno suđenje po tužbi Kalića: Čeka se vještak</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <span class=\"sd-overflow-ellipsis\"><time title=\"March 22, 2017 11:08 AM\">2 minutes ago</time></span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 2 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Ekosistem koji služi za primjer u pružanju zdravstvenih usluga\">Ekosistem koji služi za primjer u pružanju zdravstvenih usluga</span>\n                                                <span class=\"label label--hollow\">culture</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">10 minutes ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 3 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>9</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Japan: Beba rođena sa 268 grama poslije pet mjeseci puštena kući iz bolnice dobrog zdravlja\">Japan: Beba rođena sa 268 grama poslije pet mjeseci puštena kući iz bolnice dobrog zdravlja</span>\n                                                <span class=\"label label--hollow\">lifestyle</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">30 minutes ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 4 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Švedska: Uhapšena jedna osoba, sumnja se da je ruski špijun\">Švedska: Uhapšena jedna osoba, sumnja se da je ruski špijun</span>\n                                                <span class=\"label label--hollow\">sports</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">1 hr ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 5 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>7</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Radojević: Nisam tražio enormno više od ponuđene sume\">Radojević: Nisam tražio enormno više od ponuđene sume</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">2 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 6 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>8</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Francuska: Macron za smanjenje poreskog opterećenja\">Francuska: Macron za smanjenje poreskog opterećenja</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">4 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>                                    \n                                    <!-- list item 7 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                       \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Bregzit ili smak svijeta?\">Bregzit ili smak svijeta?</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">7 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 8 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Eiusmod consectetur occaecat pariatur culpa dolor fugiat nisi.\">Eiusmod consectetur occaecat pariatur culpa dolor fugiat nisi.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">10 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 9 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                        \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Incididunt esse fugiat aliqua quis culpa.\">Incididunt esse fugiat aliqua quis culpa.</span>\n                                                <span class=\"label label--hollow\">lifestyle</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">12 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 10 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>7</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Officia id est mollit id cupidatat nostrud deserunt ipsum consequat commodo.\">Officia id est mollit id cupidatat nostrud deserunt ipsum consequat commodo.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">14 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 11 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Sit sit aliqua pariatur esse est occaecat aute eiusmod labore enim cillum ex deserunt.\">Sit sit aliqua pariatur esse est occaecat aute eiusmod labore enim cillum ex deserunt.</span>\n                                                <span class=\"label label--hollow\">culture</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">15 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 12 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>8</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Irure proident sint Lorem non in ullamco enim voluptate laborum excepteur laborum velit.\">Irure proident sint Lorem non in ullamco enim voluptate laborum excepteur laborum velit.</span>\n                                                <span class=\"label label--hollow\">sports</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">17 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 13 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Amet proident laboris eiusmod nisi et.\">Amet proident laboris eiusmod nisi et.</span>\n                                                <span class=\"label label--hollow\">culture</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">1 day ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 14 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Proident sit enim tempor et excepteur in officia quis.\">Proident sit enim tempor et excepteur in officia quis.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">2 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 15 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>8</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Francuska: Macron za smanjenje poreskog opterećenja\">Francuska: Macron za smanjenje poreskog opterećenja</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">3 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>                                    \n                                    <!-- list item 16 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                       \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Bregzit ili smak svijeta?\">Bregzit ili smak svijeta?</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">4 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 17 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Eiusmod consectetur occaecat pariatur culpa dolor fugiat nisi.\">Eiusmod consectetur occaecat pariatur culpa dolor fugiat nisi.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">5 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 18 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                        \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Incididunt esse fugiat aliqua quis culpa.\">Incididunt esse fugiat aliqua quis culpa.</span>\n                                                <span class=\"label label--hollow\">lifestyle</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">7 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 19 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>2</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Quis tempor ut ipsum amet dolore voluptate pariatur.\">Quis tempor ut ipsum amet dolore voluptate pariatur.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">9 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 20 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Cupidatat sint non et fugiat eu laborum.\">Cupidatat sint non et fugiat eu laborum.</span>\n                                                <span class=\"label label--hollow\">culture</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">15 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 21 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>8</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Nostrud anim culpa ad incididunt esse dolor id incididunt ad adipisicing reprehenderit voluptate et commodo.\">Nostrud anim culpa ad incididunt esse dolor id incididunt ad adipisicing reprehenderit voluptate et commodo.</span>\n                                                <span class=\"label label--hollow\">sports</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">17 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 22 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Elit enim commodo labore consequat nisi deserunt incididunt.\">Elit enim commodo labore consequat nisi deserunt incididunt.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">18 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 23 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>6</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Anim dolor sunt cupidatat labore ad elit aliqua nulla ex culpa.\">Anim dolor sunt cupidatat labore ad elit aliqua nulla ex culpa.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">21 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 24 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Ex eu cupidatat adipisicing irure aliquip proident laboris amet est magna.\">Ex eu cupidatat adipisicing irure aliquip proident laboris amet est magna.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">22 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>                                    \n                                    <!-- list item 25 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                       \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Ad culpa aliqua quis labore voluptate quis voluptate amet anim do et elit.\">Ad culpa aliqua quis labore voluptate quis voluptate amet anim do et elit.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">23 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 26 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Cupidatat adipisicing labore laborum Lorem.\">Cupidatat adipisicing labore laborum Lorem.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">24 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 27 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                        \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Laborum qui dolor aliquip sunt.\">Laborum qui dolor aliquip sunt.</span>\n                                                <span class=\"label label--hollow\">lifestyle</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">March 15, 2018</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>                                                      \n    \n                                </div>\n                            </div>\n                        </div>\n                        <!-- KANBAN BOARD 4 -->\n                        <div class=\"sd-kanban-list__board sd-kanban-list__board--wide\">\n                            <div class=\"sd-kanban-list__board-header\">\n                                <div class=\"sd-list-header\">\n                                    <span class=\"sd-list-header__name\">Sourcefabric</span>\n                                    <span class=\"sd-list-header__number badge\">13226</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-kanban-list__board-content\">\n                                <div class=\"sd-list-item-group sd-shadow--z1\">\n                                    <!-- list item  1 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>5</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\">Odgođeno suđenje po tužbi Kalića: Čeka se vještak</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <span class=\"sd-overflow-ellipsis\"><time title=\"March 22, 2017 11:08 AM\">2 minutes ago</time></span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 2 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Ekosistem koji služi za primjer u pružanju zdravstvenih usluga\">Ekosistem koji služi za primjer u pružanju zdravstvenih usluga</span>\n                                                <span class=\"label label--hollow\">culture</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">10 minutes ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 3 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>9</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Japan: Beba rođena sa 268 grama poslije pet mjeseci puštena kući iz bolnice dobrog zdravlja\">Japan: Beba rođena sa 268 grama poslije pet mjeseci puštena kući iz bolnice dobrog zdravlja</span>\n                                                <span class=\"label label--hollow\">lifestyle</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">30 minutes ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 4 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Švedska: Uhapšena jedna osoba, sumnja se da je ruski špijun\">Švedska: Uhapšena jedna osoba, sumnja se da je ruski špijun</span>\n                                                <span class=\"label label--hollow\">sports</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">1 hr ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 5 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>7</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Radojević: Nisam tražio enormno više od ponuđene sume\">Radojević: Nisam tražio enormno više od ponuđene sume</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">2 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 6 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>8</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Francuska: Macron za smanjenje poreskog opterećenja\">Francuska: Macron za smanjenje poreskog opterećenja</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">4 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>                                    \n                                    <!-- list item 7 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                       \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Bregzit ili smak svijeta?\">Bregzit ili smak svijeta?</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">7 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 8 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Eiusmod consectetur occaecat pariatur culpa dolor fugiat nisi.\">Eiusmod consectetur occaecat pariatur culpa dolor fugiat nisi.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">10 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 9 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                        \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Incididunt esse fugiat aliqua quis culpa.\">Incididunt esse fugiat aliqua quis culpa.</span>\n                                                <span class=\"label label--hollow\">lifestyle</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">12 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 10 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>7</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Officia id est mollit id cupidatat nostrud deserunt ipsum consequat commodo.\">Officia id est mollit id cupidatat nostrud deserunt ipsum consequat commodo.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">14 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 11 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Sit sit aliqua pariatur esse est occaecat aute eiusmod labore enim cillum ex deserunt.\">Sit sit aliqua pariatur esse est occaecat aute eiusmod labore enim cillum ex deserunt.</span>\n                                                <span class=\"label label--hollow\">culture</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">15 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 12 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>8</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Irure proident sint Lorem non in ullamco enim voluptate laborum excepteur laborum velit.\">Irure proident sint Lorem non in ullamco enim voluptate laborum excepteur laborum velit.</span>\n                                                <span class=\"label label--hollow\">sports</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">17 hrs ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 13 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Amet proident laboris eiusmod nisi et.\">Amet proident laboris eiusmod nisi et.</span>\n                                                <span class=\"label label--hollow\">culture</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">1 day ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 14 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Proident sit enim tempor et excepteur in officia quis.\">Proident sit enim tempor et excepteur in officia quis.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">2 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 15 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>8</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Francuska: Macron za smanjenje poreskog opterećenja\">Francuska: Macron za smanjenje poreskog opterećenja</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">3 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>                                    \n                                    <!-- list item 16 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                       \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Bregzit ili smak svijeta?\">Bregzit ili smak svijeta?</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">4 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 17 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Eiusmod consectetur occaecat pariatur culpa dolor fugiat nisi.\">Eiusmod consectetur occaecat pariatur culpa dolor fugiat nisi.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">5 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 18 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                        \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Incididunt esse fugiat aliqua quis culpa.\">Incididunt esse fugiat aliqua quis culpa.</span>\n                                                <span class=\"label label--hollow\">lifestyle</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">7 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 19 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>2</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Quis tempor ut ipsum amet dolore voluptate pariatur.\">Quis tempor ut ipsum amet dolore voluptate pariatur.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">9 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 20 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Cupidatat sint non et fugiat eu laborum.\">Cupidatat sint non et fugiat eu laborum.</span>\n                                                <span class=\"label label--hollow\">culture</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">15 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 21 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>8</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Nostrud anim culpa ad incididunt esse dolor id incididunt ad adipisicing reprehenderit voluptate et commodo.\">Nostrud anim culpa ad incididunt esse dolor id incididunt ad adipisicing reprehenderit voluptate et commodo.</span>\n                                                <span class=\"label label--hollow\">sports</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">17 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 22 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Elit enim commodo labore consequat nisi deserunt incididunt.\">Elit enim commodo labore consequat nisi deserunt incididunt.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">18 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 23 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>6</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Anim dolor sunt cupidatat labore ad elit aliqua nulla ex culpa.\">Anim dolor sunt cupidatat labore ad elit aliqua nulla ex culpa.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">21 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 24 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Ex eu cupidatat adipisicing irure aliquip proident laboris amet est magna.\">Ex eu cupidatat adipisicing irure aliquip proident laboris amet est magna.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">22 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>                                    \n                                    <!-- list item 25 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                       \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Ad culpa aliqua quis labore voluptate quis voluptate amet anim do et elit.\">Ad culpa aliqua quis labore voluptate quis voluptate amet anim do et elit.</span>\n                                                <span class=\"label label--hollow\">politics</span>\n                                                <span class=\"sd-list-item__inline-text no-line-height\" sd-tooltip=\"Paywall secured\" flow=\"left\"><i class=\"icon-paywall icon--orange icon--full-opacity\"></i></span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">23 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 26 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-text-icon\"><i class=\"icon-slideshow sd-opacity--40\"></i>4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Cupidatat adipisicing labore laborum Lorem.\">Cupidatat adipisicing labore laborum Lorem.</span>\n                                                <span class=\"label label--hollow\">business</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">24 days ago</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item 27 -->\n                                    <div class=\"sd-list-item\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--success\"></div>                                        \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item__headline sd-list-item--element-grow\" title=\"Laborum qui dolor aliquip sunt.\">Laborum qui dolor aliquip sunt.</span>\n                                                <span class=\"label label--hollow\">lifestyle</span>\n                                                <time title=\"March 22, 2017 11:08 AM\" class=\"no-padding\">March 15, 2018</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- start preview -->\n                <div class=\"sd-preview-panel\">\n                    <div class=\"side-panel side-panel--shadow-right\">\n                        <div class=\"side-panel__header side-panel__header--border-bottom\">\n                            <div class=\"side-panel__tools\">\n                                <a class=\"icn-btn\" sd-tooltip=\"Close details\" flow=\"top\" ng-click=\"leftPreviewOpen = !leftPreviewOpen\"><i class=\"icon-close-small\"></i></a>\n                            </div>\n                            <h3 class=\"side-panel__heading\">Item preview</h3>                           \n                        </div>\n                        <div class=\"side-panel__content\">                            \n                            <div class=\"side-panel-collapsible-header\" ng-class=\"{'active': collapsibleHeaderOpen}\" ng-init=\"collapsibleHeaderOpen = true\">\n                                <div class=\"side-panel-collapsible-header__fixed\">\n                                    <p class=\"sd-text__date-and-author\"><time>Created: 3 days ago</time></p>\n                                    <span class=\"btn-icon-group\">\n                                        <button class=\"icn-btn\"><i class=\"icon-trash\"></i></button> \n                                        <button class=\"icn-btn\"><i class=\"icon-pencil\"></i></button>\n                                        <button class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen\"><i class=\"icon-expand-thin\"></i></button>\n                                    </span>\n                                </div>\n                                <div class=\"side-panel-collapsible-header__collapsible\">                                    \n                                    <div class=\"form__row\">\n                                        <span class=\"label-icon label-icon--warning\"><i class=\"icon-paywall\"></i> Paywall secured</span>\n                                    </div>\n                                    <div class=\"form__row form__row--small-padding\">\n                                        <label>Published to:</label>\n                                        <div>\n                                            <span class=\"label label--success\">magazine</span>\n                                            <span class=\"label label--success\">rafal's website</span>                                            \n                                            <span class=\"label label--success\">tenant100</span>                                            \n                                            <span class=\"label label--success\">tenant101</span>                                            \n                                            <span class=\"label label--success\">tenant102</span>                                            \n                                            <span class=\"label label--success\">tenant103</span>                                            \n                                            <span class=\"label label--success\">tenant104</span>                                            \n                                            <span class=\"label label--success\">tenant105</span>                                            \n                                        </div>\n                                    </div>\n                                    <div class=\"form__row form__row--small-padding\">\n                                        <label>Unpublished from:</label>\n                                        <div>\n                                            <span class=\"label label--alert\">the tribune</span>                                            \n                                        </div>\n                                    </div>\n                                </div>\n                                <button class=\"side-panel-collapsible-header__toggle active\" ng-class=\"{'active': collapsibleHeaderOpen}\" ng-click=\"collapsibleHeaderOpen = !collapsibleHeaderOpen\">\n                                    <i class=\"icon-chevron-down-thin\"></i>\n                                </button>\n                            </div>\n                                                        \n                            <div class=\"side-panel__content-block\">\n                                <h3 class=\"side-panel__content-block-heading\">This is article heading, the quick brown fox jumps over the lazy dog.</h3>\n                                <p class=\"side-panel__content-block-text\">Eu fugiat commodo anim quis. Anim culpa cillum cupidatat consectetur dolor ea aliquip dolore nostrud laboris aliquip. Aliqua sint magna enim magna ea sunt Lorem consectetur veniam in eiusmod. Incididunt officia ea est reprehenderit.</p>\n                                <p class=\"side-panel__content-block-text\">Reprehenderit est fugiat Lorem aute magna reprehenderit aute nisi laborum sint nisi adipisicing elit labore. Incididunt quis sint eiusmod ex eu enim irure adipisicing amet aute consectetur. Ut exercitation minim nisi officia.</p>\n                                <p class=\"side-panel__content-block-text\">Incididunt nulla id dolor nulla aliqua mollit ullamco ea officia voluptate. Aliqua exercitation aliqua excepteur qui occaecat qui fugiat et exercitation aute reprehenderit laborum esse. Nisi ex consequat cillum ut tempor ea laboris. Ipsum pariatur amet fugiat laborum dolor consequat occaecat.</p>\n                                <p class=\"side-panel__content-block-text\">Nulla sit dolor qui amet non Lorem amet excepteur enim ullamco duis esse. Amet tempor esse mollit qui velit reprehenderit. Esse sunt fugiat veniam mollit. Adipisicing sit voluptate consectetur id nisi aliqua est aliquip eiusmod aliqua est.</p>\n                                <p class=\"side-panel__content-block-text\">Ad consectetur sint et minim sint id nulla voluptate in velit Lorem cillum labore. Eiusmod sunt consectetur quis ullamco adipisicing tempor quis. Officia laboris eu laborum deserunt eu veniam magna sit laboris magna. Sunt minim mollit excepteur elit elit occaecat voluptate adipisicing. Labore incididunt amet cillum deserunt ea commodo velit sint nisi labore do nulla est duis.</p>\n                                <p class=\"side-panel__content-block-text\">Incididunt nulla quis cillum laborum. Aliqua proident exercitation nulla ipsum. Esse reprehenderit adipisicing cillum non ut anim do sunt commodo sint ea sint. Consequat ut excepteur dolore voluptate veniam sit. Voluptate magna proident dolor sunt ea occaecat dolore. Ut commodo et enim laboris qui.</p>\n                                <p class=\"side-panel__content-block-text\">Sint consectetur cillum magna incididunt minim ipsum ipsum culpa ullamco dolor sunt sint nulla. Elit culpa dolor dolor ut occaecat qui nostrud officia deserunt magna ea nisi est. Id exercitation sint occaecat sint. Voluptate ad quis minim enim est ipsum irure consectetur irure velit cillum. Nulla aliqua ullamco ullamco laborum ullamco ipsum proident aliquip amet in. Nulla amet ex officia cupidatat est consectetur labore ea eu amet magna. Voluptate proident ad dolor eu mollit quis eu eiusmod enim nisi.</p>\n                            </div>\n                        </div>\n                    </div>\n                </div><!-- end preview -->\n\n                <!-- start publish -->\n                <div class=\"sd-publish-panel\">\n                    <div class=\"side-panel side-panel--shadow-right side-panel--dark-ui\">\n                        <div class=\"side-panel__header\">\n                            <div class=\"side-panel__tools\">\n                                <a class=\"icn-btn\" ng-click=\"publishPaneOpen = !publishPaneOpen\"><i class=\"icon-close-small\"></i></a>\n                            </div>\n                            <ul class=\"nav-tabs nav-tabs--ui-dark\">\n                                <li ng-class=\"{'nav-tabs__tab--active': !tab || tab === 'publish'}\" class=\"nav-tabs__tab nav-tabs__tab--active\">\n                                    <button ng-click=\"tab = 'publish'\" class=\"nav-tabs__link\"><span translate=\"\">Publish</span></button>\n                                </li>\n                                <li ng-class=\"{'nav-tabs__tab--active': tab === 'unpublish'}\" class=\"nav-tabs__tab\">\n                                    <button ng-click=\"tab = 'unpublish'; $root.overlayPaneOpen = false\" class=\"nav-tabs__link\"><span translate=\"\">Unpublish</span></button>\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"side-panel__content\" ng-if=\"!tab || tab === 'publish'\">\n                            <div class=\"side-panel__content-block side-panel__content-block--pad-small\">\n                                <div class=\"side-panel__content-block-heading side-panel__content-block-heading--small-margin\">This is article heading, the quick brown fox jumps over the lazy dog.</div>                               \n                            </div>\n                            <div class=\"side-panel__content-block side-panel__content-block--flex side-panel__content-block--space-between\">\n                                <div class=\"dropdown\" dropdown=\"\">\n                                    <button class=\"btn btn--primary btn--icon-only-circle btn--large dropdown__toggle\" sd-tooltip=\"Add destination\" flow=\"right\" dropdown__toggle=\"\">\n                                            <i class=\"icon-plus-large\"></i>\n                                    </button>\n                                    <ul class=\"dropdown__menu\">\n                                        <li><button>Tenant 1</button></li>\n                                        <li><button>Tenant 2</button></li>\n                                        <li><button>Tenant 3</button></li>\n                                        <li><button>Tenant 4</button></li>\n                                    </ul>\n                                </div>                                \n                                <div ng-init=\"publishType = 'all'\">\n                                    <sd-check ng-model=\"publishType\" type=\"radio\" ng-value=\"all\" label-position=\"inside\">All</sd-check>\n                                    <sd-check ng-model=\"publishType\" type=\"radio\" ng-value=\"published\" label-position=\"inside\">Published</sd-check>\n                                    <sd-check ng-model=\"publishType\" type=\"radio\" ng-value=\"unpublished\" label-position=\"inside\">Unpublished</sd-check>\n                                </div>\n                            </div>\n                            <div class=\"side-panel__content-block side-panel__content-block--pad-small\">\n                               \n                                <!-- website 1 -->\n                                <div class=\"sd-collapse-box sd-shadow--z2\" ng-class=\"{'sd-collapse-box--open' : isOpen0}\" ng-hide=\"deleteTenant0; publishType == 'unpublished'\">\n                                    <div class=\"sd-collapse-box__header\" ng-click=\"isOpen0 = !isOpen0\">\n                                        <!-- list item  -->\n                                        <div class=\"sd-list-item\">\n                                            <div class=\"sd-list-item__dot sd-list-item__dot--success\"></div>\n                                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                <div class=\"sd-list-item__row\">\n                                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                                        <span class=\"sd-list-item__text-strong\">www.sourcefabric.org</span>\n                                                    </span>\n                                                    <a class=\"icn-btn disabled\" sd-tooltip=\"Remove tenant\" flow=\"left\" ng-click=\"deleteTenant0 = !deleteTenant0; $event.stopPropagation();\"><i class=\"icon-trash\"></i></a>\n                                                </div>\n                                                <div class=\"sd-list-item__row\">\n                                                    <span class=\"sd-overflow-ellipsis label label--success\">news</span>\n                                                    <span class=\"sd-list-item__inline-text sd-list-item--element-grow no-line-height\">\n                                                        <i class=\"icon-facebook icon--blue icon--full-opacity\"></i>\n                                                    </span>\n                                                    <span class=\"sd-list-item__inline-text no-line-height\">\n                                                        <i class=\"icon-paywall icon--full-opacity icon--orange\"></i>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <!-- END list item  -->\n                                    </div>\n                                    <div class=\"sd-collapse-box__content-wraper\">\n                                        <div class=\"sd-collapse-box__content\">\n                                            <div class=\"sd-list-item__dot sd-list-item__dot--success\"></div>\n                                            <div class=\"sd-collapse-box__sliding-toolbar-wrapper\" ng-show=\"!contentChanged0\">\n                                                <div class=\"sd-collapse-box__sliding-toolbar\">\n                                                    <div class=\"sliding-toolbar__inner\"></div>\n                                                    <a class=\"btn btn--hollow btn--ui-dark\" ng-click=\"contentChanged0 = true; isOpen0 = false\">Cancel</a>\n                                                    <a class=\"btn btn--primary\" ng-click=\"contentChanged0 = true; isOpen0 = false\">Save</a>\n                                                </div>\n                                            </div>\n                                            <div class=\"sd-collapse-box__tools sd-collapse-box__tools--flex\">\n                                                <a class=\"sd-collapse-box__collapse-btn\" href=\"\" ng-click=\"isOpen0 = false\">\n                                                    <span class=\"icn-btn\"><i class=\"icon-chevron-up-thin\"></i></span>\n                                                </a>\n                                                <a class=\"icn-btn\" sd-tooltip=\"Remove tenant\" flow=\"left\"><i class=\"icon-trash\"></i></a>\n                                            </div>\n                                            <div class=\"sd-collapse-box__content-block sd-collapse-box__content-block--top\">\n                                                <div class=\"sd-list-item sd-list-item--no-bg sd-list-item--no-hover\">\n                                                    <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                        <div class=\"sd-list-item__row\">\n                                                            <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">www.sourcefabric.org</span>\n                                                            <a class=\"icn-btn\" sd-tooltip=\"Preview\" flow=\"bottom\"><i class=\"icon-external icon--full-opacity icon--white\"></i></a>\n                                                        </div>                                                       \n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form__row\">\n                                                <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--no-margin\">\n                                                    <label class=\"sd-line-input__label\">Route</label>\n                                                    <select class=\"sd-line-input__select\">\n                                                        <option value=\"single\">News</option>\n                                                        <option value=\"time\">Politics</option>\n                                                        <option value=\"bananas\">Lifestyle</option>\n                                                        <option value=\"indefinite\">Culture</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class=\"form__row\" ng-init=\"contentChanged0 = true\">\n                                                <sd-check ng-model=\"contentChanged0\" ng-checked=\"false\"><i class=\"icon-facebook icon--blue\"></i> Publish to facebook</sd-check> \n                                            </div>\n                                            <div class=\"form__row\">\n                                                <sd-check ng-model=\"dnp0\" ng-checked=\"true\"><i class=\"icon-paywall icon--orange\"></i> Paywall secured</sd-check>\n                                            </div>\n                                            <div class=\"form__row\">\n                                                <!-- Social media -->\n                                                <div sd-toggle-box data-title=\"Meta data\" data-open=\"false\" data-style=\"circle\">\n                                                    <div class=\"sd-list-item-group sd-shadow--z1 no-margin\">\n                                                        <div class=\"sd-list-item\" ng-click=\"$root.overlayPaneOpen = !$root.overlayPaneOpen\">\n                                                            <div class=\"sd-list-item__border\"></div>\n                                                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                                <div class=\"sd-list-item__row\">\n                                                                    <span class=\"sd-overflow-ellipsis\">Facebook</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"sd-list-item__action-menu\">\n                                                                <i class=\"icon-chevron-right-thin\"></i>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"sd-list-item\" ng-click=\"$root.overlayPaneOpen = !$root.overlayPaneOpen\">\n                                                            <div class=\"sd-list-item__border\"></div>\n                                                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                                <div class=\"sd-list-item__row\">\n                                                                    <span class=\"sd-overflow-ellipsis\">Twitter</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"sd-list-item__action-menu\">\n                                                                <i class=\"icon-chevron-right-thin\"></i>\n                                                            </div>\n                                                        </div>\n                                                    \n                                                        <div class=\"sd-list-item\" ng-click=\"$root.overlayPaneOpen = !$root.overlayPaneOpen\">\n                                                            <div class=\"sd-list-item__border\"></div>\n                                                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                                <div class=\"sd-list-item__row\">\n                                                                    <span class=\"sd-overflow-ellipsis\">SEO / Meta Tags</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"sd-list-item__action-menu\">\n                                                                <i class=\"icon-chevron-right-thin\"></i>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- website 2 -->\n                                <div class=\"sd-collapse-box sd-shadow--z2\" ng-class=\"{'sd-collapse-box--open' : isOpen1}\" ng-hide=\"deleteTenant1; publishType == 'unpublished'\">\n                                    <div class=\"sd-collapse-box__header\" ng-click=\"isOpen1 = !isOpen1\">\n                                        <!-- list item  -->\n                                        <div class=\"sd-list-item\">\n                                            <div class=\"sd-list-item__dot sd-list-item__dot--success\"></div>\n                                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                <div class=\"sd-list-item__row\">\n                                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                                        <span class=\"sd-list-item__text-strong\">www.bbc.co.uk</span>\n                                                    </span>\n                                                    <a class=\"icn-btn disabled\" sd-tooltip=\"Remove tenant\" flow=\"left\" ng-click=\"deleteTenant1 = !deleteTenant1; $event.stopPropagation();\"><i class=\"icon-trash\"></i></a>\n                                                </div>\n                                                <div class=\"sd-list-item__row\">\n                                                    <span class=\"sd-overflow-ellipsis label label--success\">news</span>\n                                                    <span class=\"sd-list-item__inline-text sd-list-item--element-grow no-line-height\">\n                                                        <i class=\"icon-facebook icon--blue icon--full-opacity\"></i>\n                                                    </span>                                                    \n                                                </div>\n                                            </div>\n                                        </div>\n                                        <!-- END list item  -->\n                                    </div>\n                                    <div class=\"sd-collapse-box__content-wraper\">\n                                        <div class=\"sd-collapse-box__content\">\n                                            <div class=\"sd-list-item__dot sd-list-item__dot--success\"></div>\n                                            <div class=\"sd-collapse-box__sliding-toolbar-wrapper\" ng-show=\"!contentChanged1\">\n                                                <div class=\"sd-collapse-box__sliding-toolbar\">\n                                                    <div class=\"sliding-toolbar__inner\"></div>\n                                                    <a class=\"btn btn--hollow btn--ui-dark\" ng-click=\"contentChanged1 = true; isOpen1 = false\">Cancel</a>\n                                                    <a class=\"btn btn--primary\" ng-click=\"contentChanged1 = true; isOpen1 = false\">Save</a>\n                                                </div>\n                                            </div>\n                                            <div class=\"sd-collapse-box__tools sd-collapse-box__tools--flex\">\n                                                <a class=\"sd-collapse-box__collapse-btn\" href=\"\" ng-click=\"isOpen1 = false\">\n                                                    <span class=\"icn-btn\"><i class=\"icon-chevron-up-thin\"></i></span>\n                                                </a>\n                                                <a class=\"icn-btn\" sd-tooltip=\"Remove tenant\" flow=\"left\"><i class=\"icon-trash\"></i></a>\n                                            </div>\n                                            <div class=\"sd-collapse-box__content-block sd-collapse-box__content-block--top\">\n                                                <div class=\"sd-list-item sd-list-item--no-bg sd-list-item--no-hover\">\n                                                    <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                        <div class=\"sd-list-item__row\">\n                                                            <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">www.bbc.co.uk</span>\n                                                            <a class=\"icn-btn\" sd-tooltip=\"Preview\" flow=\"bottom\"><i class=\"icon-external icon--full-opacity icon--white\"></i></a>\n                                                        </div>                                                       \n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form__row\">\n                                                <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--no-margin\">\n                                                    <label class=\"sd-line-input__label\">Route</label>\n                                                    <select class=\"sd-line-input__select\">\n                                                        <option value=\"single\">News</option>\n                                                        <option value=\"time\">Politics</option>\n                                                        <option value=\"bananas\">Lifestyle</option>\n                                                        <option value=\"indefinite\">Culture</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class=\"form__row\" ng-init=\"contentChanged1 = true\">\n                                                <sd-check ng-model=\"contentChanged1\" ng-checked=\"false\"><i class=\"icon-facebook icon--blue\"></i> Publish to facebook</sd-check> \n                                            </div>\n                                            <div class=\"form__row\">\n                                                <sd-check ng-model=\"dnp0\"><i class=\"icon-paywall icon--orange\"></i> Paywall secured</sd-check>\n                                            </div>\n                                            <div class=\"form__row\">\n                                                <!-- Social media -->\n                                                <div sd-toggle-box data-title=\"Meta data\" data-open=\"false\" data-style=\"circle\">\n                                                    <div class=\"sd-list-item-group sd-shadow--z1 no-margin\">\n                                                        <div class=\"sd-list-item\" ng-click=\"$root.overlayPaneOpen = !$root.overlayPaneOpen\">\n                                                            <div class=\"sd-list-item__border\"></div>\n                                                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                                <div class=\"sd-list-item__row\">\n                                                                    <span class=\"sd-overflow-ellipsis\">Facebook</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"sd-list-item__action-menu\">\n                                                                <i class=\"icon-chevron-right-thin\"></i>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"sd-list-item\" ng-click=\"$root.overlayPaneOpen = !$root.overlayPaneOpen\">\n                                                            <div class=\"sd-list-item__border\"></div>\n                                                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                                <div class=\"sd-list-item__row\">\n                                                                    <span class=\"sd-overflow-ellipsis\">Twitter</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"sd-list-item__action-menu\">\n                                                                <i class=\"icon-chevron-right-thin\"></i>\n                                                            </div>\n                                                        </div>\n                                                    \n                                                        <div class=\"sd-list-item\" ng-click=\"$root.overlayPaneOpen = !$root.overlayPaneOpen\">\n                                                            <div class=\"sd-list-item__border\"></div>\n                                                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                                <div class=\"sd-list-item__row\">\n                                                                    <span class=\"sd-overflow-ellipsis\">SEO / Meta Tags</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"sd-list-item__action-menu\">\n                                                                <i class=\"icon-chevron-right-thin\"></i>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- website 3 -->\n                                <div class=\"sd-collapse-box sd-shadow--z2\" ng-class=\"{'sd-collapse-box--open' : isOpen2}\" ng-hide=\"deleteTenant2; publishType == 'unpublished'\">\n                                    <div class=\"sd-collapse-box__header\" ng-click=\"isOpen2 = !isOpen2\">\n                                        <!-- list item  -->\n                                        <div class=\"sd-list-item\">\n                                            <div class=\"sd-list-item__dot sd-list-item__dot--success\"></div>\n                                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                <div class=\"sd-list-item__row\">\n                                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                                        <span class=\"sd-list-item__text-strong\">sp-magazine.s-lab.sourcefabric.org</span>\n                                                    </span>\n                                                    <a class=\"icn-btn disabled\" sd-tooltip=\"Remove tenant\" flow=\"left\" ng-click=\"deleteTenant2 = !deleteTenant2; $event.stopPropagation();\"><i class=\"icon-trash\"></i></a>\n                                                </div>\n                                                <div class=\"sd-list-item__row\">\n                                                    <span class=\"sd-overflow-ellipsis label label--success\">travel</span>\n                                                    <span class=\"sd-list-item__inline-text sd-list-item--element-grow no-line-height\">\n                                                        <i class=\"icon-facebook icon--blue icon--full-opacity\"></i>\n                                                    </span>                                                    \n                                                </div>\n                                            </div>\n                                        </div>\n                                        <!-- END list item  -->\n                                    </div>\n                                    <div class=\"sd-collapse-box__content-wraper\">\n                                        <div class=\"sd-collapse-box__content\">\n                                            <div class=\"sd-list-item__dot sd-list-item__dot--success\"></div>\n                                            <div class=\"sd-collapse-box__sliding-toolbar-wrapper\" ng-show=\"!contentChanged2\">\n                                                <div class=\"sd-collapse-box__sliding-toolbar\">\n                                                    <div class=\"sliding-toolbar__inner\"></div>\n                                                    <a class=\"btn btn--hollow btn--ui-dark\" ng-click=\"contentChanged2 = true; isOpen2 = false\">Cancel</a>\n                                                    <a class=\"btn btn--primary\" ng-click=\"contentChanged2 = true; isOpen2 = false\">Save</a>\n                                                </div>\n                                            </div>\n                                            <div class=\"sd-collapse-box__tools sd-collapse-box__tools--flex\">\n                                                <a class=\"sd-collapse-box__collapse-btn\" href=\"\" ng-click=\"isOpen2 = false\">\n                                                    <span class=\"icn-btn\"><i class=\"icon-chevron-up-thin\"></i></span>\n                                                </a>\n                                                <a class=\"icn-btn\" sd-tooltip=\"Remove tenant\" flow=\"left\"><i class=\"icon-trash\"></i></a>\n                                            </div>\n                                            <div class=\"sd-collapse-box__content-block sd-collapse-box__content-block--top\">\n                                                <div class=\"sd-list-item sd-list-item--no-bg sd-list-item--no-hover\">\n                                                    <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                        <div class=\"sd-list-item__row\">\n                                                            <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">sp-magazine.s-lab.sourcefabric.org</span>\n                                                            <a class=\"icn-btn\" sd-tooltip=\"Preview\" flow=\"bottom\"><i class=\"icon-external icon--full-opacity icon--white\"></i></a>\n                                                        </div>                                                       \n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form__row\">\n                                                <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--no-margin\">\n                                                    <label class=\"sd-line-input__label\">Route</label>\n                                                    <select class=\"sd-line-input__select\">\n                                                        <option value=\"single\">Travel</option>\n                                                        <option value=\"time\">Politics</option>\n                                                        <option value=\"bananas\">Lifestyle</option>\n                                                        <option value=\"indefinite\">Culture</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class=\"form__row\" ng-init=\"contentChanged2 = true\">\n                                                <sd-check ng-model=\"contentChanged2\" ng-checked=\"false\"><i class=\"icon-facebook icon--blue\"></i> Publish to facebook</sd-check> \n                                            </div>\n                                            <div class=\"form__row\">\n                                                <sd-check ng-model=\"dnp0\"><i class=\"icon-paywall icon--orange\"></i> Paywall secured</sd-check>\n                                            </div>\n                                            <div class=\"form__row\">\n                                                <!-- Social media -->\n                                                <div sd-toggle-box data-title=\"Meta data\" data-open=\"false\" data-style=\"circle\">\n                                                    <div class=\"sd-list-item-group sd-shadow--z1 no-margin\">\n                                                        <div class=\"sd-list-item\" ng-click=\"$root.overlayPaneOpen = !$root.overlayPaneOpen\">\n                                                            <div class=\"sd-list-item__border\"></div>\n                                                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                                <div class=\"sd-list-item__row\">\n                                                                    <span class=\"sd-overflow-ellipsis\">Facebook</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"sd-list-item__action-menu\">\n                                                                <i class=\"icon-chevron-right-thin\"></i>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"sd-list-item\" ng-click=\"$root.overlayPaneOpen = !$root.overlayPaneOpen\">\n                                                            <div class=\"sd-list-item__border\"></div>\n                                                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                                <div class=\"sd-list-item__row\">\n                                                                    <span class=\"sd-overflow-ellipsis\">Twitter</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"sd-list-item__action-menu\">\n                                                                <i class=\"icon-chevron-right-thin\"></i>\n                                                            </div>\n                                                        </div>\n                                                    \n                                                        <div class=\"sd-list-item\" ng-click=\"$root.overlayPaneOpen = !$root.overlayPaneOpen\">\n                                                            <div class=\"sd-list-item__border\"></div>\n                                                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                                <div class=\"sd-list-item__row\">\n                                                                    <span class=\"sd-overflow-ellipsis\">SEO / Meta Tags</span>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"sd-list-item__action-menu\">\n                                                                <i class=\"icon-chevron-right-thin\"></i>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- website 4 -->\n                                <div class=\"sd-collapse-box sd-shadow--z2\" ng-class=\"{'sd-collapse-box--open' : isOpen3}\" ng-hide=\"deleteTenant3; publishType == 'published'\">\n                                    <div class=\"sd-collapse-box__header\" ng-click=\"isOpen3 = !isOpen3\">\n                                        <!-- list item  -->\n                                        <div class=\"sd-list-item\">\n                                            <div class=\"sd-list-item__dot sd-list-item__dot--locked\"></div>\n                                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                <div class=\"sd-list-item__row\">\n                                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\">\n                                                        <span class=\"sd-list-item__text-strong\">test.org</span>\n                                                    </span>\n                                                    <a class=\"icn-btn disabled\" sd-tooltip=\"Remove tenant\" flow=\"left\" ng-click=\"deleteTenant3 = !deleteTenant3; $event.stopPropagation();\"><i class=\"icon-trash\"></i></a>\n                                                </div>\n                                                <div class=\"sd-list-item__row\">\n                                                    <span class=\"sd-overflow-ellipsis label\">Unpublished</span>                                                    \n                                                </div>\n                                            </div>\n                                        </div>\n                                        <!-- END list item  -->\n                                    </div>\n                                    <div class=\"sd-collapse-box__content-wraper\">\n                                        <div class=\"sd-collapse-box__content\">\n                                            <div class=\"sd-list-item__dot sd-list-item__dot--locked\"></div>\n                                            <div class=\"sd-collapse-box__sliding-toolbar-wrapper\" ng-show=\"!contentChanged3\">\n                                                <div class=\"sd-collapse-box__sliding-toolbar\">\n                                                    <div class=\"sliding-toolbar__inner\"></div>\n                                                    <a class=\"btn btn--hollow btn--ui-dark\" ng-click=\"contentChanged3 = true; isOpen3 = false\">Cancel</a>\n                                                    <a class=\"btn btn--primary\" ng-click=\"contentChanged3 = true; isOpen3 = false\">Save</a>\n                                                </div>\n                                            </div>\n                                            <div class=\"sd-collapse-box__tools sd-collapse-box__tools--flex\">\n                                                <a class=\"sd-collapse-box__collapse-btn\" href=\"\" ng-click=\"isOpen3 = false\">\n                                                    <span class=\"icn-btn\"><i class=\"icon-chevron-up-thin\"></i></span>\n                                                </a>\n                                                <a class=\"icn-btn\" sd-tooltip=\"Remove tenant\" flow=\"left\"><i class=\"icon-trash\"></i></a>\n                                            </div>\n                                            <div class=\"sd-collapse-box__content-block sd-collapse-box__content-block--top\">\n                                                <div class=\"sd-list-item sd-list-item--no-bg sd-list-item--no-hover\">\n                                                    <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                                        <div class=\"sd-list-item__row\">\n                                                            <span class=\"sd-overflow-ellipsis sd-list-item__text-strong\">test.org</span>\n                                                        </div>                                                       \n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form__row\">\n                                                <span class=\"sd-overflow-ellipsis label\">Unpublished</span> \n                                            </div>\n                                            <div class=\"form__row\">\n                                                <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--no-margin\">\n                                                    <label class=\"sd-line-input__label\">Route</label>\n                                                    <select class=\"sd-line-input__select\">\n                                                        <option value=\"single\"></option>\n                                                        <option value=\"time\">Politics</option>\n                                                        <option value=\"bananas\">Lifestyle</option>\n                                                        <option value=\"indefinite\">Culture</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class=\"form__row\" ng-init=\"contentChanged3 = true\">\n                                                <sd-check ng-model=\"contentChanged3\" ng-checked=\"false\"><i class=\"icon-facebook icon--blue\"></i> Publish to facebook</sd-check> \n                                            </div>\n                                            <div class=\"form__row\">\n                                                <sd-check ng-model=\"contentChanged3\"><i class=\"icon-paywall icon--orange\"></i> Paywall secured</sd-check>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <!-- Related items -->\n                            <div class=\"side-panel__content-block\">\n                                <div sd-toggle-box data-title=\"Related articles\" data-open=\"false\" data-style=\"circle\">\n                                    <ul class=\"simple-list simple-list--dotted simple-list--no-padding\">\n                                        <li class=\"simple-list__item\">\n                                            <p>J.P. Morgan to settle allegations of violating sanctions: U.S. Treasury</p>\n                                            <span class=\"label-icon label-icon--success\" ng-hide=\"deleteTenant0\"><i class=\"icon-globe\"></i> www.sourcefabric.org</span>\n                                            <span class=\"label-icon label-icon--success\" ng-hide=\"deleteTenant1\"><i class=\"icon-globe\"></i> www.bbc.co.uk</span>\n                                            <span class=\"label-icon\" ng-hide=\"deleteTenant2\"><i class=\"icon-globe\"></i> sp-magazine.s-lab.sourcefabric.org</span>  \n                                        </li>\n                                        <li class=\"simple-list__item\">\n                                            <p>Republican Senator Murkowski says has not decided final Kavanaugh vote</p>\n                                            <span class=\"label-icon\" ng-hide=\"deleteTenant0\"><i class=\"icon-globe\"></i> www.sourcefabric.org</span>\n                                            <span class=\"label-icon label-icon--success\" ng-hide=\"deleteTenant1\"><i class=\"icon-globe\"></i> www.bbc.co.uk</span>\n                                            <span class=\"label-icon\" ng-hide=\"deleteTenant2\"><i class=\"icon-globe\"></i> sp-magazine.s-lab.sourcefabric.org</span>  \n                                        </li>                        \n                                        <li class=\"simple-list__item\">\n                                            <p>China bet big on quantum computing. Now the US races to keep up.</p>\n                                            <span class=\"label-icon\" ng-hide=\"deleteTenant0\"><i class=\"icon-globe\"></i> www.sourcefabric.org</span>\n                                            <span class=\"label-icon\" ng-hide=\"deleteTenant1\"><i class=\"icon-globe\"></i> www.bbc.co.uk</span>\n                                            <span class=\"label-icon label-icon--success\" ng-hide=\"deleteTenant2\"><i class=\"icon-globe\"></i> sp-magazine.s-lab.sourcefabric.org</span>  \n                                        </li>                        \n                                    </ul>\n                                </div>\n                            </div>                           \n                        </div>\n\n                        <div class=\"side-panel__content-block-overlay-grid\" ng-class=\"{'side-panel__content-block-overlay-grid--open' : $root.overlayPaneOpen}\" ng-if=\"!tab || tab === 'publish'\">\n                            <div class=\"side-panel\">\n                                <div class=\"side-panel__header\">\n                                    <a class=\"icn-btn sd-margin-l--1\" ng-click=\"$root.overlayPaneOpen = !$root.overlayPaneOpen\" sd-tooltip=\"Back\" flow=\"right\"><i class=\"icon-arrow-left\"></i></a>\n                                    <h3 class=\"side-panel__heading side-panel__heading--big\">Facebook meta data</h3>                                    \n                                </div>\n                                <div class=\"side-panel__content\">\n                                        <div class=\"side-panel__content-block\">\n                                            <div class=\"form__row\">\n                                                <p class=\"sd-opacity--60\">Important: template has to support this feature. It won't work out of the box.</p>\n                                            </div>\n                                            <div class=\"form__row\">\n                                                <div class=\"sd-line-input\">\n                                                    <label class=\"sd-line-input__label\">Post image</label>                                    \n                                                    <div class=\"sd-overlay-block sd-overlay-block--no-image\">\n                                                        <div class=\"sd-overlay-block__overlay\">\n                                                            <div class=\"sd-overlay-block__overlay-action-group\">\n                                                                <a class=\"sd-overlay-block__overlay-action\" sd-tooltip=\"Upload image\"><i class=\"icon-upload\"></i></a>\n                                                                <span class=\"sd-overlay-block__overlay-message\">No image has been set so far.</span>\n                                                            </div>\n                                                        </div>\n                                                        <img src=\"/overlay-img.jpg\" />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form__row\">\n                                                <div class=\"sd-line-input sd-line-input--required sd-line-input--dark-ui sd-line-input--boxed\">\n                                                    <label class=\"sd-line-input__label\">Headline</label>\n                                                    <input class=\"sd-line-input__input\" type=\"text\" value=\"Article headline here.\">\n                                                </div>\n                                            </div>\n                                            <div class=\"form__row\">\n                                                <sd-tag-input\n                                                    ng-model=\"tags\"\n                                                    data-label=\"Tags\"\n                                                    data-items=\"[\n                                                    { text: 'Audi' },\n                                                    { text: 'BMW' },\n                                                    { text: 'Hyundai' },\n                                                    { text: 'Opel' },\n                                                    { text: 'Audi2' },\n                                                    { text: 'BMW2' },\n                                                    { text: 'Hyundai2' },\n                                                    { text: 'Opel2' },\n                                                    { text: 'Audi3' },\n                                                    { text: 'BMW3' },\n                                                    { text: 'Hyundai3' },\n                                                    { text: 'Opel3' },\n                                                    { text: 'Audi4' },\n                                                    { text: 'BMW4' },\n                                                    { text: 'Hyundai4' },\n                                                    { text: 'Opel4' },\n                                                    { text: 'Audi5' },\n                                                    { text: 'BMW5' },\n                                                    { text: 'Hyundai5' },\n                                                    { text: 'Opel5' },\n                                                    { text: 'Audi6' },\n                                                    { text: 'BMW6' },\n                                                    { text: 'Hyundai6' },\n                                                    { text: 'Opel6' }\n                                                    ]\"\n                                                    data-field=\"text\"\n                                                    data-freetext=\"false\">\n                                                </sd-tag-input>\n                                            </div>\n                                            <div class=\"form__row\">\n                                                <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed\">\n                                                    <label class=\"sd-line-input__label\">Text body</label>\n                                                    <textarea class=\"sd-line-input__input\"></textarea>\n                                                </div>\n                                            </div>\n                                            <div class=\"form__row\">\n                                                <sd-tag-input\n                                                    ng-model=\"authors\"\n                                                    data-label=\"Authors\"\n                                                    data-items=\"[\n                                                    { text: 'Author 1' },\n                                                    { text: 'Author 2' },\n                                                    { text: 'Author 3' },\n                                                    { text: 'Author 4' },\n                                                    { text: 'Author 5' }                                        \n                                                    ]\"\n                                                    data-field=\"text\"\n                                                    data-freetext=\"false\">\n                                                </sd-tag-input>\n                                            </div>\n                                        </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__content\" ng-if=\"tab === 'unpublish'\">\n                            <div class=\"side-panel__content-block side-panel__content-block--pad-small\">\n                                <div class=\"side-panel__content-block-heading side-panel__content-block-heading--small-margin\">This is article heading, the quick brown fox jumps over the lazy dog.</div>                               \n                            </div>\n                            <div class=\"side-panel__content-block\">\n                               <div class=\"form__row form__row--small-padding\">\n                                <div class=\"flex-grid flex-grid--boxed-small flex-grid--wrap-items flex-grid--small-1\">\n                                    <button ng-click=\"stageActive0 = !stageActive0\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive0}\">www.sourcefabric.org</button>\n                                    <button ng-click=\"stageActive1 = !stageActive1\" class=\"btn__check flex-grid__item\" ng-class=\"{'btn__check--active' : stageActive1}\">sp-magazine.s-lab.sourcefabric.org</button>                                    \n                                </div>\n                               </div>                               \n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer side-panel__footer--button-box-large\" ng-if=\"!tab || tab === 'publish'\">\n                            <button class=\"btn btn--large btn--success btn--expanded\">Publish</button>\n                        </div>\n                        <div class=\"side-panel__footer side-panel__footer--button-box-large\" ng-if=\"tab === 'unpublish'\">\n                            <button class=\"btn btn--large btn--alert btn--expanded btn--disabled\">Unpublish</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n\n    </section>\n    <footer class=\"bottom-bar \">\n        This is the optional footer.\n    </footer>\n</div>\n";

/***/ }),
/* 277 */
/***/ (function(module, exports) {

module.exports = "<header class=\"sd-top-menu\">\n        <a href=\"#\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n        <p class=\"sd-top-menu__header\">Publisher Settings</p>\n    </header>\n    <main class=\"sd-page\">\n        <nav class=\"sd-page__sidebar sd-left-nav\">\n            <ul>\n                <li>\n                    <a href=\"#\" class=\"sd-left-nav__btn\">Publishing Rules</a>\n                </li>\n                <li>\n                    <a href=\"#\" class=\"sd-left-nav__btn sd-left-nav__btn--active\">Website Management</a>\n                </li>               \n            </ul>\n        </nav>\n        <div class=\"sd-content-navigation-panel sd-content-navigation-panel--border-right\">\n            <div class=\"subnav subnav--padded subnav--lower-z-index\">\n                <h3 class=\"sd-content-nav-title\">Website</h3>\n            </div>\n            <nav class=\"sd-content-nav\">\n                <ul>\n                    <li><a href=\"#\" class=\"sd-content-nav__btn sd-content-nav__btn--active\">Daily Telegraph</a></li>\n                    <li><a href=\"#\" class=\"sd-content-nav__btn\">The Torch</a></li>\n                    <li><a href=\"#\" class=\"sd-content-nav__btn\">Gotham Globe</a></li>\n                    <li><a href=\"#\" class=\"sd-content-nav__btn\">Daily Bugle</a></li>\n                    <li><a href=\"#\" class=\"sd-content-nav__btn\">The Daily Star</a></li>\n                    <li><a href=\"#\" class=\"sd-content-nav__btn\">Sourcefabric.org</a></li>\n                </ul>\n            </nav>\n        </div>\n        <section class=\"sd-page__main-content sd-page__main-content--double-left-nav\">\n            <div class=\"sd-page__header sd-page__header--white sd-page__header--justify-space-between\">\n                <h2 class=\"sd-page__page-heading\">Daily Telegraph</h2>\n                <a class=\"btn btn--text-only\"><i class=\"icon-globe\"></i> Open website</a>\n            </div>            \n            <div class=\"sd-page__content sd-display-flex-column no-padding\">\n                <ul class=\"nav-tabs\">\n                    <li ng-class=\"{'nav-tabs__tab--active': !tab || tab === 'general'}\" class=\"nav-tabs__tab\">\n                        <button ng-click=\"tab = 'general'\" class=\"nav-tabs__link\"><span translate=\"\">General</span></button>\n                    </li>\n                    <li ng-class=\"{'nav-tabs__tab--active': tab === 'routes'}\" class=\"nav-tabs__tab\">\n                        <button ng-click=\"tab = 'routes'\" class=\"nav-tabs__link\"><span translate=\"\">Routes</span></button>\n                    </li>\n                    <li ng-class=\"{'nav-tabs__tab--active': tab === 'navigation'}\" class=\"nav-tabs__tab\">\n                        <button ng-click=\"tab = 'navigation'\" class=\"nav-tabs__link\"><span translate=\"\">Navigation</span></button>\n                    </li>\n                    <li ng-class=\"{'nav-tabs__tab--active': tab === 'theme'}\" class=\"nav-tabs__tab\">\n                        <button ng-click=\"tab = 'theme'\" class=\"nav-tabs__link\"><span translate=\"\">Theme</span></button>\n                    </li>\n                </ul>\n                \n\n                        <div class=\"nav-tabs__content no-padding sd-display-flex-column\">\n                            <div ng-if=\"!tab || tab === 'general'\" class=\"nav-tabs__pane nav-tabs__pane--padding sd-display-flex-column\">\n                                <div class=\"grid grid--margin\">\n                                    <div class=\"grid__item gi-xsmall-12 gi-xlarge-8\">\n                                        <div class=\"form__row\">\n                                            <div class=\"sd-line-input\">\n                                                <label class=\"sd-line-input__label\">Website name</label>\n                                                <input class=\"sd-line-input__input\" type=\"text\">\n                                            </div>\n                                        </div>\n                                        <div class=\"form__row\">\n                                            <div class=\"sd-line-input\">\n                                                <label class=\"sd-line-input__label\">Domain name</label>\n                                                <input class=\"sd-line-input__input\" type=\"text\">\n                                            </div>\n                                        </div>\n                                        <div class=\"form__row\">\n                                            <div class=\"sd-line-input\">\n                                                <label class=\"sd-line-input__label\">Subdomain name</label>\n                                                <input class=\"sd-line-input__input\" type=\"text\">\n                                            </div>\n                                        </div>\n                                        <div class=\"form__row\">\n                                            <span ng-model=\"AB\" sd-switch=\"\"></span><label>Enable AMP</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div ng-if=\"tab === 'routes'\" class=\"nav-tabs__pane\">\n                                <div class=\"sd-page__header\">\n                                    <div class=\"\">\n                                        <sd-check ng-model=\"listType\" type=\"radio\" ng-value=\"all-lists\" label-position=\"inside\">All</sd-check>\n                                        <sd-check ng-model=\"listType\" type=\"radio\" ng-value=\"automatic\" label-position=\"inside\">Collection</sd-check>\n                                        <sd-check ng-model=\"listType\" type=\"radio\" ng-value=\"manual\" label-position=\"inside\">Content</sd-check>\n                                    </div>\n\n                                    <span class=\"sd-page__element-grow sd-page__element-grow--x-padding\">\n                                        <button class=\"navbtn\">\n                                            <i class=\"icon-search\"></i>\n                                        </button>\n                                    </span>\n                                    <a class=\"btn btn--primary\"><i class=\"icon-plus-sign\"></i>Add new</a>\n                                </div>\n                                <div class=\"sd-list-item-group sd-list-item-group--margin sd-shadow--z2\">\n                                    <div class=\"sd-list-item\" ng-class=\"\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--dark-blue\"></div>\n                                        <div class=\"sd-list-item__column\"><i class=\"icon-list-menu\"></i></div>                                        \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis\">About</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <!--dropdown-->\n                                            <div class=\"dropdown dropdown--align-right\" dropdown=\"\">\n                                                <button class=\"icn-btn dropdown__toggle dropdown-toggle\">\n                                                    <i class=\"icon-dots-vertical\"></i>\n                                                </button>\n                                                \n                                            </div>\n                                            <!--end dropdown-->\n                                        </div>\n                                    </div>\n                                    <div class=\"sd-list-item\" ng-class=\"\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--dark-blue\"></div>\n                                        <div class=\"sd-list-item__column\"><i class=\"icon-list-menu\"></i></div>                                        \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis\">Business</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <!--dropdown-->\n                                            <div class=\"dropdown dropdown--align-right\" dropdown=\"\">\n                                                <button class=\"icn-btn dropdown__toggle dropdown-toggle\">\n                                                    <i class=\"icon-dots-vertical\"></i>\n                                                </button>\n                                                \n                                            </div>\n                                            <!--end dropdown-->\n                                        </div>\n                                    </div>\n                                    <div class=\"sd-list-item\" ng-class=\"\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--dark-blue\"></div>\n                                        <div class=\"sd-list-item__column\"><i class=\"icon-list-menu\"></i></div>                                        \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis\">Culture</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <!--dropdown-->\n                                            <div class=\"dropdown dropdown--align-right\" dropdown=\"\">\n                                                <button class=\"icn-btn dropdown__toggle dropdown-toggle\">\n                                                    <i class=\"icon-dots-vertical\"></i>\n                                                </button>\n                                                \n                                            </div>\n                                            <!--end dropdown-->\n                                        </div>\n                                    </div>\n                                    <div class=\"sd-list-item\" ng-class=\"\">\n                                        <div class=\"sd-list-item__border sd-list-item__border--dark-blue\"></div>\n                                        <div class=\"sd-list-item__column\"><i class=\"icon-list-menu\"></i></div>                                        \n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis\">Lifestyle</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <!--dropdown-->\n                                            <div class=\"dropdown dropdown--align-right\" dropdown=\"\">\n                                                <button class=\"icn-btn dropdown__toggle dropdown-toggle\">\n                                                    <i class=\"icon-dots-vertical\"></i>\n                                                </button>\n                                                \n                                            </div>\n                                            <!--end dropdown-->\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                            <div ng-if=\"tab === 'navigation'\" class=\"nav-tabs__pane\">\n                                Navigation\n                            </div>\n                            <div ng-if=\"tab === 'theme'\" class=\"nav-tabs__pane\">\n                                Theme\n                            </div>\n                        </div>\n\n                    \n                \n            </div>\n        </section>\n    </main>";

/***/ }),
/* 278 */
/***/ (function(module, exports) {

module.exports = "<header class=\"sd-top-menu\">\n        <a href=\"#\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n        <p class=\"sd-top-menu__header\">Publisher Settings</p>\n    </header>\n    <main class=\"sd-page\">\n        <nav class=\"sd-page__sidebar sd-left-nav\">\n            <ul>\n                <li>\n                    <a href=\"#\" class=\"sd-left-nav__btn\">Publishing Rules</a>\n                </li>\n                <li>\n                    <a href=\"#\" class=\"sd-left-nav__btn sd-left-nav__btn--active\">Website Management</a>\n                </li>               \n            </ul>\n        </nav>\n        <section class=\"sd-page__main-content\">\n            <div class=\"sd-page__header sd-page__header--white sd-page__header--justify-space-between\">\n                <h2 class=\"sd-page__page-heading\">Website Management</h2>\n                <a class=\"btn btn--primary\"><i class=\"icon-plus-sign\"></i>Add new</a>\n            </div>            \n            <div class=\"sd-page__content\">\n                <div class=\"sd-grid-list sd-grid-list--large sd-grid-list--no-margin\">\n                    <div class=\"sd-grid-item-wrapper\">\n                        <div class=\"sd-grid-item-header\">\n                            <h3 class=\"sd-grid-item-header__heading sd-overflow-ellipsis\">\n                                <a href=\"\" flow=\"down\">\n                                    <span>Daily Telegraph</span><i class=\"icon-external\"></i>\n                                </a>                                \n                            </h3>\n                            <div>\n                                <a class=\"icn-btn\"><i class=\"icon-dots\"></i></a>\n                            </div>\n                        </div>\n                        <div class=\"sd-card sd-card--flex-grow\">\n                            <div class=\"dashboard-content-header sd-shadow--z1\">\n                                <div class=\"dashboard-thumbnail-block\">\n                                    <div class=\"dashboard-thumbnail-block__image\">\n                                        <img src=\"/app/img/theme-thumbnail.png\" />\n                                    </div>\n                                    <div class=\"dashboard-thumbnail-block__meta\">\n                                        <span class=\"dashboard-thumbnail-block__label\">Active theme:</span>\n                                        <h4 class=\"dashboard-thumbnail-block__heading\"><i class=\"icon-amp icon--green\"></i> The Tribune</h4>\n                                        <span><a href=\"#\" class=\"dashboard-thumbnail-block__link\">customize theme</a></span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"sd-card__content\">\n                                <ul class=\"sd-card__content-list\">\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">General <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Routes <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Navigation <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Themes <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>                                                                        \n                                </ul>\n                            </div>                                \n                        </div>\n                    </div>\n                    <div class=\"sd-grid-item-wrapper\">\n                        <div class=\"sd-grid-item-header\">\n                            <h3 class=\"sd-grid-item-header__heading sd-overflow-ellipsis\">\n                                <a href=\"\" flow=\"down\">\n                                    <span>The Torch</span><i class=\"icon-external\"></i>\n                                </a>                                \n                            </h3>\n                            <div>\n                                <a class=\"icn-btn\"><i class=\"icon-dots\"></i></a>\n                            </div>\n                        </div>\n                        <div class=\"sd-card sd-card--flex-grow\">\n                            <div class=\"dashboard-content-header sd-shadow--z1\">\n                                <div class=\"dashboard-thumbnail-block\">\n                                    <div class=\"dashboard-thumbnail-block__image\">\n                                        <img src=\"/app/img/theme-thumbnail.png\" />\n                                    </div>\n                                    <div class=\"dashboard-thumbnail-block__meta\">\n                                        <span class=\"dashboard-thumbnail-block__label\">Active theme:</span>\n                                        <h4 class=\"dashboard-thumbnail-block__heading\"><i class=\"icon-amp icon--disabled\"></i> The Source</h4>\n                                        <span><a href=\"#\" class=\"dashboard-thumbnail-block__link\">customize theme</a></span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"sd-card__content\">\n                                <ul class=\"sd-card__content-list\">\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">General <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Routes <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Navigation <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Themes <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>                                                                        \n                                </ul>\n                            </div>                                \n                        </div>\n                    </div>\n                    <div class=\"sd-grid-item-wrapper\">\n                        <div class=\"sd-grid-item-header\">\n                            <h3 class=\"sd-grid-item-header__heading sd-overflow-ellipsis\">\n                                <a href=\"\" flow=\"down\">\n                                    <span>Daily Bugle</span><i class=\"icon-external\"></i>\n                                </a>                                \n                            </h3>\n                            <div>\n                                <a class=\"icn-btn\"><i class=\"icon-dots\"></i></a>\n                            </div>\n                        </div>\n                        <div class=\"sd-card sd-card--flex-grow\">\n                            <div class=\"dashboard-content-header sd-shadow--z1\">\n                                <div class=\"dashboard-thumbnail-block\">\n                                    <div class=\"dashboard-thumbnail-block__image\">\n                                        <img src=\"/app/img/theme-thumbnail.png\" />\n                                    </div>\n                                    <div class=\"dashboard-thumbnail-block__meta\">\n                                        <span class=\"dashboard-thumbnail-block__label\">Active theme:</span>\n                                        <h4 class=\"dashboard-thumbnail-block__heading\"><i class=\"icon-amp icon--disabled\"></i> The Tribune</h4>\n                                        <span><a href=\"#\" class=\"dashboard-thumbnail-block__link\">customize theme</a></span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"sd-card__content\">\n                                <ul class=\"sd-card__content-list\">\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">General <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Routes <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Navigation <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Themes <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>                                                                        \n                                </ul>\n                            </div>                                \n                        </div>\n                    </div>\n                    <div class=\"sd-grid-item-wrapper\">\n                        <div class=\"sd-grid-item-header\">\n                            <h3 class=\"sd-grid-item-header__heading sd-overflow-ellipsis\">\n                                <a href=\"\" flow=\"down\">\n                                    <span>Gotham Globe</span><i class=\"icon-external\"></i>\n                                </a>                                \n                            </h3>\n                            <div>\n                                <a class=\"icn-btn\"><i class=\"icon-dots\"></i></a>\n                            </div>\n                        </div>\n                        <div class=\"sd-card sd-card--flex-grow\">\n                            <div class=\"dashboard-content-header sd-shadow--z1\">\n                                <div class=\"dashboard-thumbnail-block\">\n                                    <div class=\"dashboard-thumbnail-block__image\">\n                                        <img src=\"/app/img/theme-thumbnail.png\" />\n                                    </div>\n                                    <div class=\"dashboard-thumbnail-block__meta\">\n                                        <span class=\"dashboard-thumbnail-block__label\">Active theme:</span>\n                                        <h4 class=\"dashboard-thumbnail-block__heading\"><i class=\"icon-amp icon--green\"></i> Magazine theme</h4>\n                                        <span><a href=\"#\" class=\"dashboard-thumbnail-block__link\">customize theme</a></span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"sd-card__content\">\n                                <ul class=\"sd-card__content-list\">\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">General <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Routes <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Navigation <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Themes <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>                                                                        \n                                </ul>\n                            </div>                                \n                        </div>\n                    </div>\n                    <div class=\"sd-grid-item-wrapper\">\n                        <div class=\"sd-grid-item-header\">\n                            <h3 class=\"sd-grid-item-header__heading sd-overflow-ellipsis\">\n                                <a href=\"\" flow=\"down\">\n                                    <span>The Daily Prophet</span><i class=\"icon-external\"></i>\n                                </a>                                \n                            </h3>\n                            <div>\n                                <a class=\"icn-btn\"><i class=\"icon-dots\"></i></a>\n                            </div>\n                        </div>\n                        <div class=\"sd-card sd-card--flex-grow\">\n                            <div class=\"dashboard-content-header sd-shadow--z1\">\n                                <div class=\"dashboard-thumbnail-block\">\n                                    <div class=\"dashboard-thumbnail-block__image\">\n                                        <img src=\"/app/img/theme-thumbnail.png\" />\n                                    </div>\n                                    <div class=\"dashboard-thumbnail-block__meta\">\n                                        <span class=\"dashboard-thumbnail-block__label\">Active theme:</span>\n                                        <h4 class=\"dashboard-thumbnail-block__heading\"><i class=\"icon-amp icon--green\"></i> The Source</h4>\n                                        <span><a href=\"#\" class=\"dashboard-thumbnail-block__link\">customize theme</a></span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"sd-card__content\">\n                                <ul class=\"sd-card__content-list\">\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">General <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Routes <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Navigation <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Themes <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>                                                                        \n                                </ul>\n                            </div>                                \n                        </div>\n                    </div>\n                    <div class=\"sd-grid-item-wrapper\">\n                        <div class=\"sd-grid-item-header\">\n                            <h3 class=\"sd-grid-item-header__heading sd-overflow-ellipsis\">\n                                <a href=\"\" flow=\"down\">\n                                    <span>The Daily Star</span><i class=\"icon-external\"></i>\n                                </a>                                \n                            </h3>\n                            <div>\n                                <a class=\"icn-btn\"><i class=\"icon-dots\"></i></a>\n                            </div>\n                        </div>\n                        <div class=\"sd-card sd-card--flex-grow\">\n                            <div class=\"dashboard-content-header sd-shadow--z1\">\n                                <div class=\"dashboard-thumbnail-block\">\n                                    <div class=\"dashboard-thumbnail-block__image\">\n                                        <img src=\"/app/img/theme-thumbnail.png\" />\n                                    </div>\n                                    <div class=\"dashboard-thumbnail-block__meta\">\n                                        <span class=\"dashboard-thumbnail-block__label\">Active theme:</span>\n                                        <h4 class=\"dashboard-thumbnail-block__heading\"><i class=\"icon-amp icon--green\"></i> The Tribune</h4>\n                                        <span><a href=\"#\" class=\"dashboard-thumbnail-block__link\">customize theme</a></span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"sd-card__content\">\n                                <ul class=\"sd-card__content-list\">\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">General <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Routes <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Navigation <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Themes <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>                                                                        \n                                </ul>\n                            </div>                                \n                        </div>\n                    </div>\n                    <div class=\"sd-grid-item-wrapper\">\n                        <div class=\"sd-grid-item-header\">\n                            <h3 class=\"sd-grid-item-header__heading sd-overflow-ellipsis\">\n                                <a href=\"\" flow=\"down\">\n                                    <span>The Daily Planet</span><i class=\"icon-external\"></i>\n                                </a>                                \n                            </h3>\n                            <div>\n                                <a class=\"icn-btn\"><i class=\"icon-dots\"></i></a>\n                            </div>\n                        </div>\n                        <div class=\"sd-card sd-card--flex-grow\">\n                            <div class=\"dashboard-content-header sd-shadow--z1\">\n                                <div class=\"dashboard-thumbnail-block\">\n                                    <div class=\"dashboard-thumbnail-block__image\">\n                                        <img src=\"/app/img/theme-thumbnail.png\" />\n                                    </div>\n                                    <div class=\"dashboard-thumbnail-block__meta\">\n                                        <span class=\"dashboard-thumbnail-block__label\">Active theme:</span>\n                                        <h4 class=\"dashboard-thumbnail-block__heading\"><i class=\"icon-amp icon--disabled\"></i> The Tribune</h4>\n                                        <span><a href=\"#\" class=\"dashboard-thumbnail-block__link\">customize theme</a></span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"sd-card__content\">\n                                <ul class=\"sd-card__content-list\">\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">General <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Routes <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Navigation <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>\n                                    <li class=\"sd-card__content-list-item sd-card__content-list-item--no-padding\"><a href=\"\" class=\"sd-card__content-list-block-link sd-card__content-list-block-link--icon-hover sd-overflow-ellipsis\">Themes <i class=\"icon-pencil icon--dark-blue-grey\"></i></a></li>                                                                        \n                                </ul>\n                            </div>                                \n                        </div>\n                    </div>\n                                                    \n                </div>\n            </div>\n        </section>\n    </main>";

/***/ }),
/* 279 */
/***/ (function(module, exports) {

module.exports = "<header class=\"sd-top-menu\">\n    <a href=\"#\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n    <p class=\"sd-top-menu__header\">Settings</p>\n</header>\n<main class=\"sd-page\">\n    <nav class=\"sd-page__sidebar sd-left-nav\">\n        <ul>\n            <li class=\"sd-left-nav__group-header sd-left-nav__group-header--first\">Content Flow</li>\n            <li>\n                <a href=\"#\" class=\"sd-left-nav__btn\">General</a>\n            </li>\n            <li>\n                <a href=\"#\" class=\"sd-left-nav__btn\">Email settings</a>\n            </li>\n            <li>\n                <a href=\"#\" class=\"sd-left-nav__btn\">Spell checking</a>\n            </li>\n            <li class=\"sd-left-nav__group-header\">Workflow</li>\n            <li>\n                <a href=\"#\" class=\"sd-left-nav__btn\">Desk</a>\n            </li>\n            <li>\n                <a href=\"#\" class=\"sd-left-nav__btn\">User Roles &amp; Privileges</a>\n            </li>\n            <li class=\"sd-left-nav__group-header\">Content Config</li>\n            <li>\n                <a href=\"#\" class=\"sd-left-nav__btn\">Image renditions</a>\n            </li>\n            <li>\n                <a href=\"#\" class=\"sd-left-nav__btn\">Controlled Vocabularies</a>\n            </li>\n        </ul>\n    </nav>\n    <section class=\"sd-page__main-content\">        \n        <div class=\"sd-page__content sd-page__content--centered-dashboard\">\n            <div class=\"sd-grid-list sd-grid-list--auto-fit\">\n                                   \n                    <div class=\"sd-card\">\n                        <div class=\"sd-card__header sd-card__header--with-thumb sd-card__header--gradient-1\">\n                            <div class=\"sd-card__thumbnail sd-card__thumbnail--size-s\">\n                                <h4 class=\"sd-card__thumbnail-heading\">\n                                    Content flow\n                                </h4>\n                            </div>\n                        </div>\n                        <div class=\"sd-card__content sd-padding--3\">\n                            <div class=\"text-link__group\">\n                                <a href=\"/content-filters.html\" class=\"text-link\">Content filters</a>\n                                <a href=\"/ingest.html\" class=\"text-link\">Ingest</a>\n                                <a href=\"/internal-destinations.html\" class=\"text-link\">Internal destinations</a>\n                                <a href=\"/products.html\" class=\"text-link\">Products</a>\n                                <a href=\"/subscribers.html\" class=\"text-link\">Subscribers</a>\n                            </div>\n                        </div>                       \n                    </div>\n                    <div class=\"sd-card\">\n                        <div class=\"sd-card__header sd-card__header--with-thumb  sd-card__header--gradient-1\">\n                            <div class=\"sd-card__thumbnail sd-card__thumbnail--size-s\">\n                                <h4 class=\"sd-card__thumbnail-heading\">\n                                    Workflow\n                                </h4>\n                            </div>                         \n                        </div>\n                        <div class=\"sd-card__content sd-padding--3\">\n                            <div class=\"text-link__group\">\n                                <a href=\"/desks.html\" class=\"text-link\">Desks</a>\n                                <a href=\"/user-roles.html\" class=\"text-link\">User Roles</a>                                \n                            </div>\n                        </div>                        \n                    </div>\n                    <div class=\"sd-card\">\n                        <div class=\"sd-card__header sd-card__header--with-thumb sd-card__header--gradient-1\">\n                            <div class=\"sd-card__thumbnail sd-card__thumbnail--size-s\">\n                                <h4 class=\"sd-card__thumbnail-heading\">\n                                    Content config\n                                </h4>\n                            </div>                      \n                        </div>\n                        <div class=\"sd-card__content sd-padding--3\">\n                            <div class=\"text-link__group\">\n                                <a href=\"/content-profiles.html\" class=\"text-link\">Content Profiles</a>\n                                <a href=\"/dictionarise.html\" class=\"text-link\">Dictionaries</a>\n                                <a href=\"/highlights.html\" class=\"text-link\">Highlights</a>\n                                <a href=\"/metadata.html\" class=\"text-link\">Metadata</a>\n                                <a href=\"/search-providers.html\" class=\"text-link\">Search Providers</a>\n                            </div>\n                        </div>                    \n                    </div> \n            </div>\n        </div>\n    </section>\n</main>";

/***/ }),
/* 280 */
/***/ (function(module, exports) {

module.exports = "<header class=\"sd-top-menu\">\n    <a href=\"#\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n    <p class=\"sd-top-menu__header\">Top menu</p>\n</header>\n<main class=\"sd-page\">\n    <nav class=\"sd-page__sidebar sd-left-nav\">\n        <ul>\n            <li class=\"sd-left-nav__group-header sd-left-nav__group-header--first\">System settings</li>\n            <li>\n                <a href=\"#\" class=\"sd-left-nav__btn\">General</a>\n            </li>\n            <li>\n                <a href=\"#\" class=\"sd-left-nav__btn\">Email settings</a>\n            </li>\n            <li>\n                <a href=\"#\" class=\"sd-left-nav__btn\">Spell checking</a>\n            </li>\n            <li class=\"sd-left-nav__group-header\">Workflow</li>\n            <li>\n                <a href=\"#\" class=\"sd-left-nav__btn\">Desk</a>\n            </li>\n            <li>\n                <a href=\"#\" class=\"sd-left-nav__btn\">User Roles &amp; Privileges</a>\n            </li>\n            <li class=\"sd-left-nav__group-header\">Content Config</li>\n            <li>\n                <a href=\"#\" class=\"sd-left-nav__btn\">Image renditions</a>\n            </li>\n            <li>\n                <a href=\"#\" class=\"sd-left-nav__btn\">Controlled Vocabularies</a>\n            </li>\n        </ul>\n    </nav>\n    <section class=\"sd-page__main-content\">\n        <div class=\"sd-page__header sd-page__header--white\">\n            <h2 class=\"sd-page__page-heading\">Test header</h2>\n        </div>\n        <div class=\"sd-page__header\">\n            <span class=\"sd-page__element-grow\"></span><a class=\"btn btn--primary\">Primary</a>\n        </div>\n        <div class=\"sd-page__content\">\n\n            <div class=\"sd-list-item-group sd-list-item-group--space-between-items\">\n                <!-- list item  -->\n                <div class=\"sd-list-item sd-shadow--z1\">\n                    <div class=\"sd-list-item__border\"></div>\n                    <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                    <div class=\"sd-list-item__column\">\n                        <span class=\"badge badge--primary\">1</span>\n                    </div>\n                    <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                        <div class=\"sd-list-item__row\">\n                            <span class=\"sd-overflow-ellipsis\">Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequatvel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet.</span>\n                            <time title=\"March 22, 2017 11:08 AM\">11:08, 22.03.2017</time>\n                        </div>\n                    </div>\n                    <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                        <button class=\"dropdown__toggle\">\n                            <i class=\"icon-trash\"></i>\n                        </button>\n                        <button class=\"dropdown__toggle\">\n                            <i class=\"icon-pencil\"></i>\n                        </button>\n                    </div>\n                </div>\n                <!-- list item  -->\n                <div class=\"sd-list-item sd-shadow--z1\">\n                    <div class=\"sd-list-item__border\"></div>\n                    <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                    <div class=\"sd-list-item__column\">\n                        <span class=\"badge badge--warning\">4</span>\n                    </div>\n                    <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                        <div class=\"sd-list-item__row\">\n                            <span class=\"sd-overflow-ellipsis\">Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequatvel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet.</span>\n                            <time title=\"March 22, 2017 11:08 AM\">11:08, 22.03.2017</time>\n                        </div>\n                    </div>\n                    <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                        <button class=\"dropdown__toggle\">\n                            <i class=\"icon-trash\"></i>\n                        </button>\n                        <button class=\"dropdown__toggle\">\n                            <i class=\"icon-pencil\"></i>\n                        </button>\n                    </div>\n                </div>\n                <!-- list item  -->\n                <div class=\"sd-list-item sd-shadow--z1\">\n                    <div class=\"sd-list-item__border sd-list-item__border--locked\"></div>\n                    <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                    <div class=\"sd-list-item__column\">\n                        <span class=\"badge\">3</span>\n                    </div>\n                    <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                        <div class=\"sd-list-item__row\">\n                            <span class=\"sd-overflow-ellipsis\">Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequatvel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet.</span>\n                            <time title=\"March 22, 2017 11:08 AM\">11:08, 22.03.2017</time>\n                        </div>\n                    </div>\n                    <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                        <button class=\"dropdown__toggle\">\n                            <i class=\"icon-trash\"></i>\n                        </button>\n                        <button class=\"dropdown__toggle\">\n                            <i class=\"icon-pencil\"></i>\n                        </button>\n                    </div>\n                </div>\n                <!-- list item  -->\n                <div class=\"sd-list-item sd-shadow--z1\">\n                    <div class=\"sd-list-item__border\"></div>\n                    <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                    <div class=\"sd-list-item__column\">\n                        <span class=\"badge badge--primary\">1</span>\n                    </div>\n                    <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                        <div class=\"sd-list-item__row\">\n                            <span class=\"sd-overflow-ellipsis\">Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequatvel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet.</span>\n                            <time title=\"March 22, 2017 11:08 AM\">11:08, 22.03.2017</time>\n                        </div>\n                    </div>\n                    <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                        <button class=\"dropdown__toggle\">\n                            <i class=\"icon-trash\"></i>\n                        </button>\n                        <button class=\"dropdown__toggle\">\n                            <i class=\"icon-pencil\"></i>\n                        </button>\n                    </div>\n                </div>\n                <!-- list item  -->\n                <div class=\"sd-list-item sd-shadow--z1\">\n                    <div class=\"sd-list-item__border\"></div>\n                    <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                    <div class=\"sd-list-item__column\">\n                        <span class=\"badge badge--alert\">5</span>\n                    </div>\n                    <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                        <div class=\"sd-list-item__row\">\n                            <span class=\"sd-overflow-ellipsis\">Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequatvel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet.</span>\n                            <time title=\"March 22, 2017 11:08 AM\">11:08, 22.03.2017</time>\n                        </div>\n                    </div>\n                    <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                        <button class=\"dropdown__toggle\">\n                            <i class=\"icon-trash\"></i>\n                        </button>\n                        <button class=\"dropdown__toggle\">\n                            <i class=\"icon-pencil\"></i>\n                        </button>\n                    </div>\n                </div>\n                <!-- list item  -->\n                <div class=\"sd-list-item sd-shadow--z1\">\n                    <div class=\"sd-list-item__border\"></div>\n                    <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                    <div class=\"sd-list-item__column\">\n                        <span class=\"badge\">3</span>\n                    </div>\n                    <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                        <div class=\"sd-list-item__row\">\n                            <span class=\"sd-overflow-ellipsis\">Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequatvel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet.</span>\n                            <time title=\"March 22, 2017 11:08 AM\">11:08, 22.03.2017</time>\n                        </div>\n                    </div>\n                    <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                        <button class=\"dropdown__toggle\">\n                            <i class=\"icon-trash\"></i>\n                        </button>\n                        <button class=\"dropdown__toggle\">\n                            <i class=\"icon-pencil\"></i>\n                        </button>\n                    </div>\n                </div>\n                <!-- list item  -->\n                <div class=\"sd-list-item sd-shadow--z1\">\n                    <div class=\"sd-list-item__border\"></div>\n                    <div class=\"sd-list-item__column\"><i class=\"icon-text\"></i></div>\n                    <div class=\"sd-list-item__column\">\n                        <span class=\"badge badge--success\">2</span>\n                    </div>\n                    <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                        <div class=\"sd-list-item__row\">\n                            <span class=\"sd-overflow-ellipsis\">Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequatvel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet.</span>\n                            <time title=\"March 22, 2017 11:08 AM\">11:08, 22.03.2017</time>\n                        </div>\n                    </div>\n                    <div class=\"sd-list-item__action-menu sd-list-item__action-menu--direction-row\">\n                        <button class=\"dropdown__toggle\">\n                            <i class=\"icon-trash\"></i>\n                        </button>\n                        <button class=\"dropdown__toggle\">\n                            <i class=\"icon-pencil\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</main>";

/***/ }),
/* 281 */
/***/ (function(module, exports) {

module.exports = "<div class=\"sd-page-grid--basic\" doc-modal>\n    <header class=\"sd-top-menu\">\n        <a href=\"\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n        <p class=\"sd-top-menu__header\">National Desk</p>\n    </header>\n\n    <section class=\"sd-content sd-page-content--slide-in\" ng-class=\"{\n            'sd-page-content--slide-in--open' : editorOpen}\">\n\n        <div class=\"sd-sidebar-menu sd-page-content__left-tabs\">\n            <ul class=\"authoring-active\">\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Monitoring\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\" ng-click=\"menuItemActive1 = !menuItemActive1\" ng-class=\"{'sd-sidebar-menu__btn--closed': menuItemActive1}\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--view\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Highlights\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--marked-star\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Spiked\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--spike\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Personal\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--personal\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Search\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--global-search\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Media archive\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--picture\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n            </ul>\n        </div>\n        <div id=\"leftContent\"  ng-init=\"darkUI = false;  swimlaneView = true\" class=\"sd-page-content__content-block sd-page-content__content-block--main\" ng-class=\"{'open-filters': leftFilterOpen, 'open-preview': leftPreviewOpen, 'dark-ui': darkUI}\">\n            <!-- left content -->\n            <div class=\"subnav\" ng-class=\"{'subnav--dark-ui': darkUI}\">\n                <div class=\"subnav__sliding-toolbar\" ng-show=\"select1 || select2 || select3 || select4 || select5 || select6 || select7 || select8 || select9 || select10 || select11 || select12 || select13 || select14 || select15 || select16 || select17 || select18 || select19 || select20 || select21 || select22 || select23 || select24 || select25 || select26 || select27 || select28 || select29 || select30 || select31 || select32 || select33 || select34 || select35 || select36\">\n                    <div class=\"sliding-toolbar__inner\">\n                        <a class=\"btn\" ng-click=\"select1 = false; select2 = false; select3 = false; select4 = false; select5 = false; select6 = false; select7 = false; select8 = false\">Cancel</a>\n                        <span class=\"sliding-toolbar__info-text\">1 item selected</span>\n                    </div>\n                    <a class=\"btn btn--primary\" ng-click=\"openModal('imageModal'); multiEdit = true; select1 = false; select2 = false; select3 = false; select4 = false; select5 = false; select6 = false; select7 = false; select8 = false; select11 = true; select12 = true; select13 = true; select14 = true\">Edit metadata</a>\n                    <a class=\"btn btn--alert\"><i class=\"icon-trash\"></i>Delete</a>\n                </div>\n                <div class=\"dropdown\" dropdown=\"\">\n                    <button class=\"dropdown__toggle navbtn navbtn--text-only dropdown-toggle\" dropdown-toggle=\"\" aria-haspopup=\"true\" aria-expanded=\"false\">Monitoring<span class=\"dropdown__caret\"></span></button>\n                    <ul class=\"dropdown__menu scrollable\" style=\"\">\n                        <li><div class=\"dropdown__menu-label ng-binding\">Monitoring</div></li>\n                        <li><button>Incoming stage</button></li>\n                        <li><button>Working stage</button></li>\n                        <li><button>Output stage</button></li>\n                    </ul>\n                </div>\n                <div class=\"subnav__spacer subnav__spacer--no-margin\"></div>\n                <div class=\"sd-searchbar\" ng-class=\"{'sd-searchbar--focused': focused}\" >\n                    <label for=\"search-input\" class=\"sd-searchbar__icon\"></label>\n                    <input id=\"search-input\"\n                           class=\"sd-searchbar__input\"\n                           type=\"text\"\n                           placeholder=\"Search\"\n                           ng-keyup=\"searchOnEnter($event)\"\n                           ng-model=\"query\"\n                           tabindex=\"1\"\n                           ng-focus=\"focused = true\">\n                    <button class=\"sd-searchbar__cancel\" ng-if=\"query\">\n                        <i class=\"icon-remove-sign\"></i>\n                    </button>\n                    <button id=\"sd-searchbar__search-btn\" class=\"sd-searchbar__search-btn\" ng-if=\"focused\" tabindex=\"2\">\n                        <i class=\"big-icon--chevron-right\"></i>\n                    </button>\n                </div>\n                <div class=\"dropdown dropdown--align-right\" dropdown>\n                    <button class=\"dropdown__toggle navbtn sd-create-btn\" dropdown__toggle>\n                        <i class=\"icon-plus-large\"></i>\n                        <span class=\"circle\"></span>\n                    </button>\n                    <ul class=\"dropdown__menu\">\n                        <li>\n                            <div class=\"dropdown__menu-label\">Upload</div>\n                        </li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li>\n                            <button><i class=\"icon-plus-sign icon--blue\"></i>Image</button>\n                        </li>\n                        <li>\n                            <button><i class=\"icon-plus-sign icon--blue\"></i>Video</button>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"subnav\" ng-class=\"{'subnav--dark-ui': darkUI}\">\n                <div class=\"subnav__stretch-bar\">\n                    <sd-check ng-model=\"planningType\" ng-value=\"all\" label-position=\"inside\" ng-checked=\"true\">all</sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"text\" label-position=\"inside\"><i class=\"icon-text\"></i></sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"photo\" label-position=\"inside\"><i class=\"icon-photo\"></i></sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"graphic\" label-position=\"inside\"><i class=\"icon-graphic\"></i></sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"composite\" label-position=\"inside\"><i class=\"icon-composite\"></i></sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"video\" label-position=\"inside\"><i class=\"icon-video\"></i></sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"audio\" label-position=\"inside\"><i class=\"icon-audio\"></i></sd-check>\n                </div>\n                <div class=\"subnav__spacer subnav__spacer--no-margin\"></div>\n                <div class=\"subnav__content-bar\">\n                    <span>Total:</span> <span class=\"badge\" style=\"margin: 0 10px 0 6px;\">6432</span>\n                    <div class=\"dropdown dropdown--align-right\" dropdown>\n                        <button class=\"dropdown__toggle\" dropdown__toggle>\n                            Updated<span class=\"dropdown__caret\"></span>\n                        </button>\n                        <ul class=\"dropdown__menu\">\n                            <li><button>Updated</button></li>\n                            <li><button>Created</button></li>\n                            <li><button>Urgency</button></li>\n                            <li><button>Category</button></li>\n                            <li><button>Slugline</button></li>\n                            <li><button>Priority</button></li>\n                            <li><button>Genre</button></li>\n                        </ul>\n                    </div>\n                    <a class=\"icn-btn\" sd-tooltip=\"Descending\" flow=\"bottom\" ng-click=\"sortDesc = !sortDesc\" ng-hide=\"!sortDesc\"><i class=\"icon-descending\"></i></a>\n                    <a class=\"icn-btn\" sd-tooltip=\"Ascending\" flow=\"bottom\" ng-click=\"sortDesc = !sortDesc\" ng-show=\"!sortDesc\"><i class=\"icon-ascending\"></i></a>\n\n                </div>\n                <button class=\"navbtn\" ng-click=\"darkUI = !darkUI\">\n                    <i class=\"icon-adjust\"></i>\n                </button>\n                <div class=\"dropdown dropdown--align-right\" dropdown>\n                    <button class=\"navbtn\" dropdown__toggle>\n                        <i class=\"icon-list-view\" ng-show=\"listView\"></i>\n                        <i class=\"icon-kanban-view\" ng-show=\"swimlaneView\"></i>\n                        <i class=\"icon-grid-view\" ng-show=\"gridView\"></i>\n                    </button>\n                    <ul class=\"dropdown__menu\">\n                        <li><button ng-click=\"listView = true; swimlaneView = false; gridView = false;\"><i class=\"icon-list-view\"></i> List View</button></li>\n                        <li><button ng-click=\"swimlaneView = true; listView = false; gridView = false;\"><i class=\"icon-kanban-view\"></i> Swimlane View</button></li>\n                        <li><button ng-click=\"gridView = true; swimlaneView = false; listView = false;\"><i class=\"icon-grid-view\"></i> Photo Grid view</button></li>\n\n                    </ul>\n                </div>\n                <div class=\"dropdown dropdown--align-right\" dropdown>\n                    <button class=\"dropdown__toggle navbtn\" dropdown__toggle>\n                        <i class=\"icon-dots-vertical\"></i>\n                    </button>\n                    <ul class=\"dropdown__menu\">\n                        <li>\n                            <div class=\"dropdown__menu-label\">Actions</div>\n                        </li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li><button>Action 2</button></li>\n                        <li><button>Action 3</button></li>\n                        <li><button ng-click=\"showColumns6 = !showColumns6\">Show <span ng-show=\"!showColumns6\">6</span><span ng-if=\"showColumns6\">5</span> columns</button></li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"sd-column-box--3\">\n                <div class=\"sd-column-box__main-column\">\n                    <div class=\"sd-list-header\" ng-hide=\"swimlaneView\">\n                        <span class=\"sd-list-header__name\">Friday September 15, 2017</span>\n                    </div>\n                    <!-- Grid item view -->\n                    <div class=\"sd-grid-list\" ng-show=\"gridView\">\n                        <!-- item 1 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select1, 'sd-grid-item--activated' : selectThis1}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\" ng-click=\"openModal('imageModal')\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select1\"></sd-check>\n                                </div>\n                                <img src=\"/d_trump.jpg\" alt=\"Trt\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span>\n                                </div>\n                                \n                            </div>\n                            <div class=\"sd-grid-item__footer\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--success sd-grid-item__footer-block-item\">1</span><span class=\"badge badge--warning badge--square sd-grid-item__footer-block-item\">3</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- item 2 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select2}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\" ng-click=\"openModal('imageModal')\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select2\"></sd-check>\n                                </div>\n                                <img src=\"/d_trump_2.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">In ac dui quis mi consectetuer lacinia. Aenean tellus metus, bibendum sed, posuere ac, mattis non, nunc.</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--primary sd-grid-item__footer-block-item\">2</span><span class=\"badge badge--alert badge--square sd-grid-item__footer-block-item\">4</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- item 3 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select3}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\" ng-click=\"openModal('imageModal')\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select3\"></sd-check>\n                                </div>\n                                <img src=\"/bill.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae. Aenean tellus metus, bibendum sed...</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span>  \n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--highlight sd-grid-item__footer-block-item\">3</span><span class=\"badge badge--light badge--square\">&nbsp;</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- item 4 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select4}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\" ng-click=\"openModal('imageModal')\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select4\"></sd-check>\n                                </div>\n                                <img src=\"/hillary.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero.</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">Reuters</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--primary sd-grid-item__footer-block-item\">2</span><span class=\"badge badge--warning badge--square sd-grid-item__footer-block-item\">3</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- item 5 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select5}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select5\"></sd-check>\n                                </div>\n                                <img src=\"/obama_1.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Pellentesque auctor neque nec urna. Vestibulum turpis sem, aliquet eget lobortis...</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span> \n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--light\">&nbsp;</span><span class=\"badge badge--square sd-grid-item__footer-block-item\">5</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- item 6 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select6}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select6\"></sd-check>\n                                </div>\n                                <img src=\"/obama_2.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Vestibulum turpis sem, aliquet eget lobortis...</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--highlight sd-grid-item__footer-block-item\">3</span><span class=\"badge badge--light badge--square\">&nbsp;</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- item 7 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select7}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select7\"></sd-check>\n                                </div>\n                                <img src=\"/bush_1.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Vivamus in erat ut urna cursus vestibulum. Sed consequat, leo eget bibendum sodales...</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--success sd-grid-item__footer-block-item\">1</span><span class=\"badge badge--highlight badge--square sd-grid-item__footer-block-item\">2</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- item 8 -->\n                        <div class=\"sd-grid-item sd-grid-item--with-click\" ng-class=\"{'sd-grid-item--selected' : select8}\">\n                            <div class=\"sd-grid-item__thumb\">\n                                <a class=\"icn-btn sd-grid-item__actions sd-grid-item__actions--top\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <div class=\"sd-grid-item__checkbox\">\n                                    <sd-check ng-model=\"select8\"></sd-check>\n                                </div>\n                                <img src=\"/bush_2.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"sd-grid-item__content\">\n                                <time title=\"20.11.2017\">20.11.2017</time>\n                                <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                <p class=\"sd-grid-item--element-grow\">Mauris sollicitudin fermentum libero, vestibulum et, tempor auctor, justo...</p>\n                                <div class=\"sd-grid-item__content-block\">\n                                    <span class=\"sd-grid-item__text-label\">Source:</span>\n                                    <span class=\"sd-grid-item__text-strong\">ANSA</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-grid-item__footer\">\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--multi-l\">\n                                    <i class=\"icon-photo sd-grid-item__type-icn sd-grid-item__footer-block-item\"></i><span class=\"badge badge--primary sd-grid-item__footer-block-item\">2</span><span class=\"badge badge--square sd-grid-item__footer-block-item\">5</span>\n                                </div>\n                                <div class=\"sd-grid-item__footer-block sd-grid-item__footer-block--single-r\">\n                                    <a class=\"icn-btn sd-grid-item__actions\">\n                                        <i class=\"icon-dots-vertical\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- List item view -->\n                \n                    <div class=\"sd-list-item-group sd-list-item-group--space-between-items\" ng-show=\"listView\" ng-class=\"{'sd-list-item-group--dark-ui' : darkUI}\">\n                        <!-- list item  1 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select1, 'sd-list-item--activated' : selectThis1}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select1}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select1\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--success\">1</span>\n                                    <span class=\"badge badge--warning badge--square \">3</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  2 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select2}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select2}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select2\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--primary\">2</span>\n                                    <span class=\"badge badge--alert badge--square\">4</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>In ac dui quis mi consectetuer lacinia. Aenean tellus metus, bibendum sed, posuere ac, mattis non, nunc.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  3 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select3}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select3}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select3\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--highlight\">3</span>\n                                    <span class=\"badge badge--light badge--square\">&nbsp;</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae. Aenean tellus metus, bibendum sed...</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  4 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select4}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select4}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select4\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--primary\">2</span>\n                                    <span class=\"badge badge--warning badge--square\">3</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n\n                        <!-- list item  5 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select5}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select5}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select5\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--light\">&nbsp;</span>\n                                    <span class=\"badge badge--square\">5</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Pellentesque auctor neque nec urna. Vestibulum turpis sem, aliquet eget lobortis...</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  6 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select6}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select6}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select6\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--highlight\">3</span>\n                                    <span class=\"badge badge--light badge--square\">&nbsp;</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Vestibulum turpis sem, aliquet eget lobortis...</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  7 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select7}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select7}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select7\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--success\">1</span>\n                                    <span class=\"badge badge--highlight badge--square\">2</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Vivamus in erat ut urna cursus vestibulum. Sed consequat, leo eget bibendum sodales...</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- list item  8 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select8}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select8}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select8\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-photo\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--primary\">2</span>\n                                    <span class=\"badge badge--square\">5</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Mauris sollicitudin fermentum libero, vestibulum et, tempor auctor, justo...</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n<!-- /////////////////////////////////// SWIMLANE view /////////////////////////////////// -->\n                    <div class=\"sd-kanban-list\" ng-show=\"swimlaneView\">\n                        <!-- KANBAN BOARD 1 -->\n                        <div class=\"sd-kanban-list__board\">\n                            <div class=\"sd-kanban-list__board-header\">\n                                <div class=\"sd-list-header\">\n                                    <span class=\"sd-list-header__name\">Incoming</span>\n                                    <span class=\"sd-list-header__number badge\">8</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-kanban-list__board-content\">\n                                <div class=\"sd-list-item-group sd-shadow--z1\" ng-class=\"{'sd-list-item-group--dark-ui' : darkUI}\">\n                                    <!-- list item  1 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select1, 'sd-list-item--activated' : selectThis1}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select1}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select1\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--alert\">1</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  2 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select2}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select2}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select2\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--highlight\">2</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Ipsum slug</span>Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  3 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select3}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select3}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select3\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--alert\">1</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Lorem slugline</span>Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                   <!-- list item  4 -->\n                                   <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select4}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select4}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select4\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--primary\">3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">It's a slug</span>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  5 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select5}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select5}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select5\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-photo\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--warning\">4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Slugline</span>Praesent nonummy mi in odio. Fusce risus nisl, viverra et, tempor et, pretium in, sapien.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  6 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select6}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select6}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select6\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge\">5</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">My slugline</span>Maecenas faucibus mollis interdum. Praesent nonummy mi in odio fusce risus nisl viverra et.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  7 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select7}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select7}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select7\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-photo\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--alert\">1</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Slugline</span>Cras justo odio, dapibus ac facilisis in, egestas eget quam.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                   <!-- list item  8 -->\n                                   <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select8}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select8}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select8\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-video\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--highlight\">2</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- KANBAN BOARD 2 -->\n                        <div class=\"sd-kanban-list__board\">\n                            <div class=\"sd-kanban-list__board-header\">\n                                <div class=\"sd-list-header\">\n                                    <span class=\"sd-list-header__name\">Working</span>\n                                    <span class=\"sd-list-header__number badge\">16</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-kanban-list__board-content\">\n                                <div class=\"sd-list-item-group sd-shadow--z1\" ng-class=\"{'sd-list-item-group--dark-ui' : darkUI}\">\n                                    <!-- list item  1 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select9, 'sd-list-item--activated' : selectThis2}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select9}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select9\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--alert\">1</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis2 = !selectThis2\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  2 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select10}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select10}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select10\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--highlight\">2</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Ipsum slug</span>Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  3 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select11}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select11}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select11\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--alert\">1</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Lorem slugline</span>Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                   <!-- list item  4 -->\n                                   <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select12}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select12}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select12\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--primary\">3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">It's a slug</span>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  5 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select13}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select13}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select13\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-photo\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--warning\">4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Slugline</span>Praesent nonummy mi in odio. Fusce risus nisl, viverra et, tempor et, pretium in, sapien.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  6 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select14}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select14}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select14\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge\">5</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">My slugline</span>Maecenas faucibus mollis interdum. Praesent nonummy mi in odio fusce risus nisl viverra et.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  7 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select15}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select15}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select15\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-photo\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--alert\">1</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Slugline</span>Cras justo odio, dapibus ac facilisis in, egestas eget quam.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                   <!-- list item  8 -->\n                                   <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select16}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select16}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select16\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-video\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--highlight\">2</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  9 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select17}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select17}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select17\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--alert\">1</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  10 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select18}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select18}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select18\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--highlight\">2</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Ipsum slug</span>Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  11 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select19}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select19}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select19\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--alert\">1</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Lorem slugline</span>Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                   <!-- list item  12 -->\n                                   <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select20}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select20}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select20\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--primary\">3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">It's a slug</span>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  13 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select21}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select21}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select21\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-photo\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--warning\">4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Slugline</span>Praesent nonummy mi in odio. Fusce risus nisl, viverra et, tempor et, pretium in, sapien.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  14 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select22}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select22}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select22\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge\">5</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">My slugline</span>Maecenas faucibus mollis interdum. Praesent nonummy mi in odio fusce risus nisl viverra et.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  15 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select23}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select23}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select23\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-photo\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--alert\">1</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Slugline</span>Cras justo odio, dapibus ac facilisis in, egestas eget quam.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                   <!-- list item  16 -->\n                                   <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select24}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select24}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select24\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-video\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--highlight\">2</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- KANBAN BOARD 3 -->\n                        <div class=\"sd-kanban-list__board\">\n                            <div class=\"sd-kanban-list__board-header\">\n                                <div class=\"sd-list-header\">\n                                    <span class=\"sd-list-header__name\">Revise</span>\n                                    <span class=\"sd-list-header__number badge\">6</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-kanban-list__board-content\">\n                                <div class=\"sd-list-item-group sd-shadow--z1\" ng-class=\"{'sd-list-item-group--dark-ui' : darkUI}\">\n                                    <!-- list item  1 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select25, 'sd-list-item--activated' : selectThis3}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select25}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select25\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-photo\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--highlight\">2</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis3 = !selectThis3\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Slugline slug</span>Praesent nonummy mi in odio. Fusce risus nisl, viverra et, tempor et, pretium in, sapien.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  2 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select26}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select26}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select26\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--alert\">1</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Ipsum slug</span>Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  3 -->\n                                   <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select27}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select27}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select27\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--primary\">3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">It's a slug</span>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  4 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select28}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select28}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select28\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-photo\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--warning\">4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Slugline</span>Praesent nonummy mi in odio. Fusce risus nisl, viverra et, tempor et, pretium in, sapien.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  5 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select29}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select29}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select29\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge\">5</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">My slugline</span>Maecenas faucibus mollis interdum. Praesent nonummy mi in odio fusce risus nisl viverra et.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  6 -->\n                                   <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select30}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select30}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select30\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-video\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--highlight\">2</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                         <!-- KANBAN BOARD 4 -->\n                         <div class=\"sd-kanban-list__board\">\n                            <div class=\"sd-kanban-list__board-header\">\n                                <div class=\"sd-list-header\">\n                                    <span class=\"sd-list-header__name\">Desk Output</span>\n                                    <span class=\"sd-list-header__number badge\">4</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-kanban-list__board-content\">\n                                <div class=\"sd-list-item-group sd-shadow--z1\" ng-class=\"{'sd-list-item-group--dark-ui' : darkUI}\">\n                                    <!-- list item  1 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select31, 'sd-list-item--activated' : selectThis4}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select31}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select31\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-photo\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--highlight\">2</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis4 = !selectThis4\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Slugline slug</span>Praesent nonummy mi in odio. Fusce risus nisl, viverra et, tempor et, pretium in, sapien.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  2 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select32}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select32}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select32\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--alert\">1</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Ipsum slug</span>Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  3 -->\n                                   <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select33}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select33}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select33\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--primary\">3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">It's a slug</span>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  4 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select34}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select34}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select34\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-photo\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--warning\">4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Slugline</span>Praesent nonummy mi in odio. Fusce risus nisl, viverra et, tempor et, pretium in, sapien.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- KANBAN BOARD 5 -->\n                        <div class=\"sd-kanban-list__board\">\n                            <div class=\"sd-kanban-list__board-header\">\n                                <div class=\"sd-list-header\">\n                                    <span class=\"sd-list-header__name\">Scheduled Desk Output</span>\n                                    <span class=\"sd-list-header__number badge\">2</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-kanban-list__board-content\">\n                                <div class=\"sd-list-item-group sd-shadow--z1\" ng-class=\"{'sd-list-item-group--dark-ui' : darkUI}\">\n                                    <!-- list item  1 -->\n                                   <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select35, 'sd-list-item--activated' : selectThis5}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select35}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select35\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--primary\">3</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis5 = !selectThis5\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">It's a slug</span>Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  2 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select36}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select36}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select36\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge\">5</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">My slugline</span>Maecenas faucibus mollis interdum. Praesent nonummy mi in odio fusce risus nisl viverra et.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- KANBAN BOARD 6 -->\n                        <div class=\"sd-kanban-list__board\" ng-if=\"showColumns6\">\n                            <div class=\"sd-kanban-list__board-header\">\n                                <div class=\"sd-list-header\">\n                                    <span class=\"sd-list-header__name\">Saved search</span>\n                                    <span class=\"sd-list-header__number badge\">2</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-kanban-list__board-content\">\n                                <div class=\"sd-list-item-group sd-shadow--z1\" ng-class=\"{'sd-list-item-group--dark-ui' : darkUI}\">\n                                    <!-- list item  1 -->\n                                   <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select37, 'sd-list-item--activated' : selectThis6}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select37}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select37\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--alert\">1</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis6 = !selectThis6\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">It's my slug</span>Penatibus et magnis dis parturient montes, nascetur ridiculus mus.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <!-- list item  2 -->\n                                    <div class=\"sd-list-item\" ng-class=\"{'sd-list-item--selected' : select38}\">\n                                        <div class=\"sd-list-item__border\"></div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select38}\">\n                                            <div class=\"sd-list-item__checkbox-container\">\n                                                <sd-check ng-model=\"select38\"></sd-check>\n                                            </div>\n                                            <span class=\"icn-mix sd-list-item__item-type\">\n                                                <i class=\"icon-text\"></i>\n                                            </span>\n                                        </div>\n                                        <div class=\"sd-list-item__column\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"badge badge--warning\">4</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                            <div class=\"sd-list-item__row\">\n                                                <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">Dolor slug</span>Praesent nonummy mi in odio fusce risus nisl viverra et. Maecenas faucibus mollis interdum.</span>\n                                                <time title=\"March 22, 2017 11:08 AM\">20.11.2017</time>\n                                            </div>\n                                        </div>\n                                        <div class=\"sd-list-item__action-menu\">\n                                            <button class=\"icn-btn\">\n                                                <i class=\"icon-dots-vertical\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n<!-- /////////////////////////////////// END SWIMLANE view /////////////////////////////////// -->\n                </div>\n                <div class=\"sd-preview-panel\" ng-class=\"{'sd-preview-panel--dark-ui' : darkUI}\">\n                    <div class=\"side-panel side-panel--shadow-right\" ng-class=\"{'side-panel--dark-ui' : darkUI}\">\n                        <div class=\"side-panel__header\">\n                            <div class=\"side-panel__tools\">\n                                <a class=\"icn-btn\" sd-tooltip=\"Edit details\" flow=\"top\" ng-click=\"editorOpen = true; leftPreviewOpen = false\"><i class=\"icon-pencil\"></i></a>\n                                <a class=\"icn-btn\" sd-tooltip=\"Close details\" flow=\"top\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\"><i class=\"icon-close-small\"></i></a>\n                            </div>\n                            <ul class=\"nav-tabs\" ng-class=\"{'nav-tabs--ui-dark' : darkUI}\">\n                                <li ng-class=\"{'nav-tabs__tab--active': !tab || tab === 'event-details'}\" class=\"nav-tabs__tab\">\n                                    <button ng-click=\"tab = 'event-details'\" class=\"nav-tabs__link\"><span translate=\"\">Content</span></button>\n                                </li>\n                                <li ng-class=\"{'nav-tabs__tab--active': tab === 'event-history'}\" class=\"nav-tabs__tab\">\n                                    <button ng-click=\"tab = 'event-history'\" class=\"nav-tabs__link\"><span translate=\"\">History</span></button>\n                                </li>\n                            </ul> \n                        </div>\n                        <div class=\"side-panel__content\" ng-if=\"!tab || tab === 'event-details'\">\n                            <div class=\"side-panel__content-block side-panel__content-block--pad-small side-panel__content-block--flex\">\n                                <div class=\"side-panel__content-block-inner side-panel__content-block-inner--grow\">\n                                    <p class=\"sd-text__date-and-author\"><time>Created 23.08.2017 by </time> <span class=\"sd-text__author\">Mika Karapet</span></p> \n                                    <p class=\"sd-text__date-and-author\"><time>Updated 3 hours ago by</time> <span class=\"sd-text__author\">John Doe</span></p>\n                                </div>\n                                <div class=\"side-panel__content-block-inner side-panel__content-block-inner--right\">\n                                    <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                                </div>\n                            </div>\n                            <div class=\"side-panel__content-block side-panel__content-block--image\">\n                                <a class=\"icn-btn side-panel__image-actions\" ng-click=\"openModal('imageModal')\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <img src=\"/d_trump.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"side-panel__content-block\">\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Slugline</label>\n                                    <p class=\"sd-text__slugline\">This is a slugline</p>\n                                </div>\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Description</label>\n                                    <p>Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</p>\n                                </div>\n\n                                <div sd-toggle-box data-title=\"Details\" data-style=\"circle\">\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Usage right</label>\n                                        <p>Single usage</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Category</label>\n                                        <p>Some category</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Subject</label>\n                                        <p>Arts, culture and entertainment, Music</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Long Description</label>\n                                        <p>Nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Internal Note</label>\n                                        <p>Lorem ipsum dolor sit amet, consetetur sadipscing.</p>\n                                    </div>\n                                </div>\n                                <h3 class=\"side-panel__heading side-panel__heading--big\" ng-hide=\"multiEdit\">Related items</h3>\n                                <div class=\"sd-grid-list sd-grid-list--small sd-grid-list--no-rl-margin dark-ui\" ng-hide=\"multiEdit\">\n                                    <!-- related item 1 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/d_trump_2.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 2 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/bill.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 3 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/hillary.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 4 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/bush_1.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__content\" ng-if=\"tab === 'event-history'\">\n                            <div class=\"side-panel__content-block\">\n                                <ul class=\"simple-list simple-list--dotted simple-list--no-padding\">\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Created by</strong> Mika Karapet</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:10</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Coverage created by</strong> Vince Ryan</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:13</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Updated by</strong> Karel Petrak</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:13</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Coverage updated by</strong> John Doe</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:21</time>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer\">\n\n                        </div>\n                    </div>      \n                </div>\n            </div>\n            <!-- END left content -->\n        </div>\n\n        <!-- SPLIT CONTENT -->\n        <div id=\"editPane\" \n        class=\"sd-edit-panel sd-page-content__content-block sd-page-content__content-block--right sd-page-content__content-block--30-slide\" \n        ng-class=\"{'open-filters': rightFilterOpen, 'open-preview': rightPreviewOpen}\">\n            <!-- Eitor content -->\n            <div\n            class=\"side-panel side-panel--shadow-right\" \n            ng-if=\"!itemType || itemType === 'planning'\"\n            ng-include=\"'playgrounds/photo-snippets/edit-photo-metadata.html'\"></div>\n            <!-- END Editor content -->\n        </div>\n    </section>\n    <footer class=\"bottom-bar \">\n        This is the optional footer.\n    </footer>\n</div>\n";

/***/ }),
/* 282 */
/***/ (function(module, exports) {

module.exports = "<header class=\"sd-top-menu\">\n    <a class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n    <p class=\"sd-top-menu__header\">Cards</p>\n</header>\n<main class=\"sd-page\">\n    <section class=\"sd-page__main-content\" ng-class=\"{'dark-ui': darkUI}\">\n        <div class=\"subnav\" ng-class=\"{'subnav--dark-ui': darkUI}\">\n            <h3 class=\"subnav__page-title\">Tag inputs</h3>\n            <button class=\"navbtn\" ng-click=\"darkUI = !darkUI\">\n                <i class=\"icon-adjust\"></i>\n            </button>\n        </div>\n        <div class=\"sd-page__content\">\n            <div class=\"grid grid--boxed\" style=\"max-width: 500px; margin: 0 auto\">\n                <div class=\"grid__item\">\n                    <h3 class=\"docs-page__h3\">Preview</h3>\n                    <br>\n                    <sd-tag-input ng-model=\"tags\" \n                                  data-max-items=\"1\" \n                                  data-label=\"Max number of items limited to 1\" \n                                  data-items=\"items\" \n                                  data-field=\"name\"\n                                  data-min-length=\"1\" \n                                  data-freetext=\"false\">\n                    </sd-tag-input>\n                    <div style=\"margin: -26px 0 30px; opacity: 0.7;\">Result: {{tags}}</div>\n\n                    <sd-tag-input ng-model=\"cars\" \n                                  data-label=\"Cars\"\n                                  data-items=\"freeItems\"\n                                  data-freetext=\"true\"\n                                  placeholder=\"Pick your favourite cars\">\n                    </sd-tag-input>\n                    <div style=\"margin: -26px 0 30px; opacity: 0.7;\">Result: {{cars}}</div>\n\n                    <sd-tag-input ng-model=\"freetext\"\n                                  data-label=\"Free text\"\n                                  data-items=\"freeItems\"\n                                  data-freetext=\"true\">\n                    </sd-tag-input>\n                    <div style=\"margin: -26px 0 30px; opacity: 0.7;\">Result: {{freetext}}</div>\n                    \n                    <sd-tag-input ng-model=\"freetext\"\n                                  data-label=\"Boxed type\"\n                                  data-items=\"freeItems\"\n                                  data-freetext=\"true\"\n                                  data-boxed=\"true\">\n                    </sd-tag-input>\n                    <div style=\"margin: -26px 0 30px; opacity: 0.7;\">Result: {{freetext}}</div>\n                    \n                </div>\n            </div>\n        </div>\n    </section>\n</main>\n";

/***/ }),
/* 283 */
/***/ (function(module, exports) {

module.exports = "<div class=\"sd-page-grid--test docs-page__full-width-helper\">\n    <header class=\"sd-top-menu\">\n        <a href=\"\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n        <p class=\"sd-top-menu__header\">Toasts</p>\n    </header>\n    <section class=\"sd-content sd-content-wrapper\">\n            <div class=\"sd-content-wrapper__main-content-area sd-main-content-grid\">\n                <div class=\"sd-main-content-grid__header\">\n                    <div class=\"subnav\" ng-class=\"{'subnav--dark-ui': darkUI}\">\n                        <h3 class=\"subnav__page-title\">Toasts // Work in progress - HTML/CSS only</h3>\n                        <button class=\"navbtn\" ng-click=\"darkUI = !darkUI\">\n                            <i class=\"icon-adjust\"></i>\n                        </button>\n                    </div>\n                </div>\n                <div class=\"sd-main-content-grid__content sd-padding--2\">\n\n                </div>\n\n            </div>\n    </section>\n    <footer class=\"bottom-bar\">\n        This is the optional footer.\n    </footer>\n</div>\n\n<div class=\"sd-toast__container sd-toast__container--top\">\n    <div class=\"sd-toast\">\n        <div class=\"sd-toast__message\">I'm a tasty default Toast message!</div>\n        <button type=\"button\" class=\"icn-btn sd-toast__actions\">\n            <i class=\"icon-close-small\"></i>\n        </button>\n    </div>\n    <div class=\"sd-toast sd-toast--success\">\n        <div class=\"sd-toast__icon\">\n            <i class=\"icon-ok\"></i>\n        </div>\n        <div class=\"sd-toast__message\">I'm a very successful Toast message!</div>\n        <button type=\"button\" class=\"icn-btn sd-toast__actions\">\n            <i class=\"icon-close-small\"></i>\n        </button>\n    </div>\n</div>\n\n<div class=\"sd-toast__container sd-toast__container--top-right\">\n    <div class=\"sd-toast sd-toast--warning\">\n        <div class=\"sd-toast__icon\">\n            <i class=\"icon-warning-sign\"></i>\n        </div>\n        <div class=\"sd-toast__message\">\n            <h4 class=\"sd-toast__heading\">I have Toaster heading!</h4>\n            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Nulla vitae elit libero, a pharetra augue.\n                Nullam id dolor id nibh ultricies vehicula ut id elit. Donec id elit non mi porta gravida at eget metus.</p>\n            <p>Nullam quis risus eget urna mollis ornare vel eu leo. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.</p>\n        </div>\n        <button type=\"button\" class=\"icn-btn sd-toast__actions\">\n            <i class=\"icon-close-small\"></i>\n        </button>\n    </div>\n</div>\n\n<div class=\"sd-toast__container sd-toast__container--bottom\">\n    <div class=\"sd-toast sd-toast--primary\">\n        <div class=\"sd-toast__icon\">\n            <i class=\"icon-info-sign\"></i>\n        </div>\n        <div class=\"sd-toast__message\">\n            <h4 class=\"sd-toast__heading\">I have Toaster heading!</h4>\n            <p>Nulla vitae elit libero, a pharetra augue. Nullam id dolor id nibh ultricies vehicula ut id elit. Donec id elit non mi porta gravida at eget metus.</p>\n        </div>\n        <button type=\"button\" class=\"icn-btn sd-toast__actions\">\n            <i class=\"icon-close-small\"></i>\n        </button>\n    </div>\n    <div class=\"sd-toast sd-toast--alert\">\n        <div class=\"sd-toast__icon\">\n            <i class=\"icon-exclamation-sign\"></i>\n        </div>\n        <div class=\"sd-toast__message\">Danger! Condimentum ridiculus ultricies ornare mollis.</div>\n        <button type=\"button\" class=\"icn-btn sd-toast__actions\">\n            <i class=\"icon-close-small\"></i>\n        </button>\n    </div>\n</div>\n\n<div class=\"sd-toast__container sd-toast__container--bottom-right\">\n    <div class=\"sd-toast sd-toast--fixed-l\">\n        <div class=\"sd-toast__icon\"></div>\n        <figure class=\"sd-toast__avatar avatar\">sd</figure>\n        <div class=\"sd-toast__message\">\n            <div class=\"sd-toast__message-header\">\n                <h4 class=\"sd-toast__heading\">Martin Mustermann</h4>\n                <time title=\"March 22, 2017 11:08 AM\">16:50, 16.03.2019</time>\n            </div>\n            <p>Nulla vitae elit libero, a pharetra augue. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n        </div>\n        <button type=\"button\" class=\"icn-btn sd-toast__actions\">\n            <i class=\"icon-close-small\"></i>\n        </button>\n    </div>\n</div>\n\n<div class=\"sd-toast__container sd-toast__container--bottom-left\">\n    <div class=\"sd-toast\">\n        <div class=\"sd-toast__icon\"></div>\n        <div class=\"sd-toast__message\">\n            Curabitur blandit tempus porttitor.\n        </div>\n        <button type=\"button\" class=\"icn-btn sd-toast__actions\">\n            <i class=\"icon-close-small\"></i>\n        </button>\n    </div>\n</div>";

/***/ }),
/* 284 */
/***/ (function(module, exports) {

module.exports = "<div class=\"sd-page-grid--basic\" doc-modal>\n    <header class=\"sd-top-menu\">\n        <a href=\"\" class=\"sd-top-menu__collapse-nav\"><i class=\"icon-collapse icon--white\"></i></a>\n        <p class=\"sd-top-menu__header\">Video editor test</p>\n    </header>\n\n    <section class=\"sd-content sd-page-content--slide-in\" ng-class=\"{\n            'sd-page-content--slide-in--open' : editorOpen}\">\n\n        <div class=\"sd-sidebar-menu sd-page-content__left-tabs\">\n            <ul class=\"authoring-active\">\n                <li sd-tooltip=\"Dashboard\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--dashboard\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Monitoring\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--view\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Highlights\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--marked-star\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Spiked\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--spike\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li class=\"sd-sidebar-menu__spacer\">\n                </li>\n                <li sd-tooltip=\"Personal\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--personal\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Search\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--global-search\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n                <li sd-tooltip=\"Media archive\" flow=\"right\">\n                    <a href=\"\" class=\"sd-sidebar-menu__btn sd-sidebar-menu__btn--active\" ng-click=\"menuItemActive1 = !menuItemActive1\" ng-class=\"{'sd-sidebar-menu__btn--closed': menuItemActive1}\">\n                        <i class=\"sd-sidebar-menu__main-icon big-icon--picture\"></i>\n                        <i class=\"sd-sidebar-menu__helper-icon big-icon--chevron-left\"></i>\n                    </a>\n                </li>\n            </ul>\n        </div>\n        <div id=\"leftContent\" class=\"sd-page-content__content-block sd-page-content__content-block--main\" ng-class=\"{'open-filters': leftFilterOpen, 'open-preview': leftPreviewOpen, 'dark-ui': darkUI}\">\n            <!-- left content -->\n            <div class=\"subnav\" ng-class=\"{'subnav--dark-ui': darkUI}\">\n                <div class=\"subnav__sliding-toolbar\" ng-show=\"select1 || select2 || select3 || select4 || select5 || select6 || select7 || select8\">\n                    <div class=\"sliding-toolbar__inner\">\n                        <a class=\"btn\" ng-click=\"select1 = false; select2 = false; select3 = false; select4 = false; select5 = false; select6 = false; select7 = false; select8 = false\">Cancel</a>\n                        <span class=\"sliding-toolbar__info-text\">1 item selected</span>\n                    </div>\n                    <a class=\"btn btn--primary\" ng-click=\"openModal('videoModal'); multiEdit = true; select1 = false; select2 = false; select3 = false; select4 = false; select5 = false; select6 = false; select7 = false; select8 = false; select11 = true; select12 = true; select13 = true; select14 = true\">Edit metadata</a>\n                    <a class=\"btn btn--alert\"><i class=\"icon-trash\"></i>Delete</a>\n                </div>\n                \n                <div class=\"dropdown\" dropdown>\n                    <button class=\"dropdown__toggle navbtn navbtn--text-only dropdown-toggle\" dropdown-toggle>Monitoring<span class=\"dropdown__caret\"></span></button>\n                    <ul class=\"dropdown__menu scrollable\">\n                        <li><div class=\"dropdown__menu-label ng-binding\">Monitoring</div></li>\n                        <li><button>Working stage</button></li>\n                        <li><button>Incoming stage</button></li>\n                    </ul>\n                </div>\n                <div class=\"subnav__spacer subnav__spacer--no-margin\"></div>\n                <div class=\"sd-searchbar\" ng-class=\"{'sd-searchbar--focused': focused}\" >\n                    <label for=\"search-input\" class=\"sd-searchbar__icon\"></label>\n                    <input id=\"search-input\"\n                           class=\"sd-searchbar__input\"\n                           type=\"text\"\n                           placeholder=\"Search media\"\n                           ng-keyup=\"searchOnEnter($event)\"\n                           ng-model=\"query\"\n                           tabindex=\"1\"\n                           ng-focus=\"focused = true\">\n                    <button class=\"sd-searchbar__cancel\" ng-if=\"query\">\n                        <i class=\"icon-remove-sign\"></i>\n                    </button>\n                    <button id=\"sd-searchbar__search-btn\" class=\"sd-searchbar__search-btn\" ng-if=\"focused\" tabindex=\"2\">\n                        <i class=\"big-icon--chevron-right\"></i>\n                    </button>\n                </div>\n                <div class=\"dropdown dropdown--align-right\" dropdown>\n                    <button class=\"dropdown__toggle navbtn\" dropdown__toggle>\n                        <i class=\"icon-dots-vertical\"></i>\n                    </button>\n                    <ul class=\"dropdown__menu\">\n                        <li>\n                            <div class=\"dropdown__menu-label\">Actions</div>\n                        </li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li><button>Action 1</button></li>\n                        <li><button>Action 2</button></li>\n                        <li><button>Action 3</button></li>\n                        <li><button>Action 4</button></li>\n                        \n                    </ul>\n                </div>\n                <div class=\"dropdown dropdown--align-right\" dropdown>\n                    <button class=\"dropdown__toggle navbtn sd-create-btn\" dropdown__toggle>\n                        <i class=\"icon-plus-large\"></i>\n                        <span class=\"circle\"></span>\n                    </button>\n                    <ul class=\"dropdown__menu\">\n                        <li>\n                            <div class=\"dropdown__menu-label\">Upload</div>\n                        </li>\n                        <li class=\"dropdown__menu-divider\"></li>\n                        <li>\n                            <button ng-click=\"openModal('uploadModal')\"><i class=\"icon-plus-sign icon--blue\"></i>Upload media</button>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"subnav\" ng-class=\"{'subnav--dark-ui': darkUI}\">\n                <button class=\"navbtn navbtn--left navbtn--darker\" ng-click=\"leftFilterOpen = !leftFilterOpen\" ng-class=\"{'navbtn--active': leftFilterOpen}\">\n                    <i class=\"icon-filter-large\"></i>\n                </button>\n                <div class=\"subnav__stretch-bar\" ng-init=\"planningType = 'events-planning'\">\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"all\" label-position=\"inside\">all</sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"text\" label-position=\"inside\"><i class=\"icon-text\"></i></sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"photo\" label-position=\"inside\"><i class=\"icon-photo\"></i></sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"graphic\" label-position=\"inside\"><i class=\"icon-graphic\"></i></sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"composite\" label-position=\"inside\"><i class=\"icon-composite\"></i></sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"video\" label-position=\"inside\"><i class=\"icon-video\"></i></sd-check>\n                    <sd-check ng-model=\"planningType\" type=\"radio\" ng-value=\"audio\" label-position=\"inside\"><i class=\"icon-audio\"></i></sd-check>\n                </div>\n                <div class=\"subnav__spacer subnav__spacer--no-margin\"></div>\n                <div class=\"subnav__content-bar\">\n                    <span>Total:</span> <span class=\"badge\" style=\"margin: 0 10px 0 6px;\">6432</span>\n                    <div class=\"dropdown dropdown--align-right\" dropdown>\n                        <button class=\"dropdown__toggle\" dropdown__toggle>\n                            Updated<span class=\"dropdown__caret\"></span>\n                        </button>\n                        <ul class=\"dropdown__menu\">\n                            <li><button>Updated</button></li>\n                            <li><button>Created</button></li>\n                            <li><button>Urgency</button></li>\n                            <li><button>Category</button></li>\n                            <li><button>Slugline</button></li>\n                            <li><button>Priority</button></li>\n                            <li><button>Genre</button></li>\n                        </ul>\n                    </div>\n                    <a class=\"icn-btn\" sd-tooltip=\"Descending\" flow=\"bottom\" ng-click=\"sortDesc = !sortDesc\" ng-hide=\"!sortDesc\"><i class=\"icon-descending\"></i></a>\n                    <a class=\"icn-btn\" sd-tooltip=\"Ascending\" flow=\"bottom\" ng-click=\"sortDesc = !sortDesc\" ng-show=\"!sortDesc\"><i class=\"icon-ascending\"></i></a>\n\n                </div>\n                <button class=\"navbtn\" ng-click=\"darkUI = !darkUI\">\n                    <i class=\"icon-adjust\"></i>\n                </button>\n                <button class=\"navbtn\">\n                    <i class=\"icon-th-list\"></i>\n                </button>\n            </div>\n            <div class=\"sd-column-box--3\">\n                <div class=\"sd-filters-panel\">\n                    <div class=\"side-panel side-panel--transparent side-panel--shadow-left\">\n                        <div class=\"side-panel__header side-panel__header--border-b\">\n                            <a class=\"icn-btn side-panel__close\" sd-tooltip=\"Close filters\" flow=\"left\" ng-click=\"leftFilterOpen = !leftFilterOpen\"><i class=\"icon-close-small\"></i></a>\n                            <h3 class=\"side-panel__heading\">Advanced filters</h3>  \n                        </div>\n                        <div class=\"side-panel__content\">\n                            <div class=\"side-panel__content-block\">\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <label class=\"sd-line-input__label\">Title</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--is-select sd-line-input--no-margin\">\n                                        <label class=\"sd-line-input__label\">Source</label>\n                                        <select class=\"sd-line-input__select\">\n                                            <option value=\"\">Select ingest source...</option>\n                                            <option value=\"\">Associated Press</option>\n                                            <option value=\"\">Reuters</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <label class=\"sd-line-input__label\">Location</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                                        <span class=\"sd-line-input__plus-btn\"></span>\n                                        <label class=\"sd-line-input__label\">Category</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin sd-line-input--with-button\">\n                                        <span class=\"sd-line-input__plus-btn\"></span>\n                                        <label class=\"sd-line-input__label\">Subject</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--is-select \">\n                                        <label class=\"sd-line-input__label\">Usage right</label>\n                                        <select class=\"sd-line-input__select\">\n                                            <option value=\"\">--- Not selected ---</option>\n                                            <option value=\"single\">Single usage</option>\n                                            <option value=\"time\">Time restricted</option>\n                                            <option value=\"bananas\">Indefinite usage</option>\n                                            <option value=\"indefinite\">Pears</option>\n                                        </select>\n                                        <span class=\"sd-line-input__hint\">Dolor in hendrerit.</span>\n                                    </div>\n                                </div>\n                                <div class=\"form__row form__row--flex\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                        <label class=\"sd-line-input__label\">From</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row form__row--flex\">\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-calendar\"></i></a>\n                                        <label class=\"sd-line-input__label\">To</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                    <div class=\"sd-line-input sd-line-input--no-margin\">\n                                        <a class=\"icn-btn sd-line-input__icon-right\"><i class=\"icon-time\"></i></a>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <sd-check ng-model=\"abc2\">Check me!</sd-check>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer side-panel__footer--button-box\">\n                            <div class=\"flex-grid flex-grid--boxed-small flex-grid--wrap-items flex-grid--small-2\">\n                                <a class=\"btn btn--hollow\">Clear</a>\n                                <a class=\"btn btn--primary\">Submit</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"sd-column-box__main-column\">\n                    <div class=\"sd-list-header\">\n                        <span class=\"sd-list-header__name\"><a href=\"\">National desk</a> / <a href=\"\">Working stage</a></span>\n                    </div>\n                    <!-- List item view -->\n                \n                    <div class=\"sd-list-item-group sd-list-item-group--space-between-items\" ng-class=\"{'sd-list-item-group--dark-ui' : darkUI}\">\n                        <!-- list item  1 -->\n                        <div class=\"sd-list-item sd-shadow--z1 locked\" ng-class=\"{'sd-list-item--selected' : select1, 'sd-list-item--activated' : selectThis1}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select1}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select1\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-video\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--success\">1</span>\n                                    <span class=\"badge badge--warning badge--square \">3</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio. <button class=\"btn btn--sd-green btn--hollow btn--small sd-margin-l--1\" ng-class=\"{'btn--ui-dark': darkUI}\" ng-click=\"openModal('videoModal')\">video editor test</button></span>\n                                    <time title=\"March 22, 2017 11:08 AM\">Thursday, 13:29</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n\n                        <!-- list item  2 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select2}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select2}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select2\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-video\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--primary\">2</span>\n                                    <span class=\"badge badge--alert badge--square\">4</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>In ac dui quis mi consectetuer lacinia. Aenean tellus metus, bibendum sed, posuere ac, mattis non, nunc.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">Thursday, 13:06</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n\n                        <!-- list item  3 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select4}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select4}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select4\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-video\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--primary\">2</span>\n                                    <span class=\"badge badge--warning badge--square\">3</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero.</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">Thursday, 12:56</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n\n                        <!-- list item  4 -->\n                        <div class=\"sd-list-item sd-shadow--z1\" ng-class=\"{'sd-list-item--selected' : select5}\">\n                            <div class=\"sd-list-item__border\"></div>\n                            <div class=\"sd-list-item__column sd-list-item__column--has-check\" ng-class=\"{'sd-list-item__column--checked' : select5}\">\n                                <div class=\"sd-list-item__checkbox-container\">\n                                    <sd-check ng-model=\"select5\"></sd-check>\n                                </div>\n                                <span class=\"icn-mix sd-list-item__item-type\">\n                                    <i class=\"icon-video\"></i>\n                                </span>\n                            </div>\n                            <div class=\"sd-list-item__column\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"badge badge--light\">&nbsp;</span>\n                                    <span class=\"badge badge--square\">5</span>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__column sd-list-item__column--grow sd-list-item__column--no-border\">\n                                <div class=\"sd-list-item__row\">\n                                    <span class=\"sd-overflow-ellipsis sd-list-item--element-grow\"><span class=\"sd-list-item__slugline\">This is a slugline</span>Pellentesque auctor neque nec urna. Vestibulum turpis sem, aliquet eget lobortis...</span>\n                                    <time title=\"March 22, 2017 11:08 AM\">Thursday, 12:37</time>\n                                </div>\n                            </div>\n                            <div class=\"sd-list-item__action-menu\">\n                                <button class=\"icn-btn\">\n                                    <i class=\"icon-dots-vertical\"></i>\n                                </button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <div class=\"sd-preview-panel\" ng-class=\"{'sd-preview-panel--dark-ui' : darkUI}\">\n                    <div class=\"side-panel side-panel--shadow-right\" ng-class=\"{'side-panel--dark-ui' : darkUI}\">\n                        <div class=\"side-panel__header\">\n                            <div class=\"side-panel__tools\">\n                                <a class=\"icn-btn\" sd-tooltip=\"Edit details\" flow=\"top\" ng-click=\"editorOpen = true; leftPreviewOpen = false\"><i class=\"icon-pencil\"></i></a>\n                                <a class=\"icn-btn\" sd-tooltip=\"Close details\" flow=\"top\" ng-click=\"leftPreviewOpen = !leftPreviewOpen; selectThis1 = !selectThis1\"><i class=\"icon-close-small\"></i></a>\n                            </div>\n                            <ul class=\"nav-tabs\" ng-class=\"{'nav-tabs--ui-dark' : darkUI}\">\n                                <li ng-class=\"{'nav-tabs__tab--active': !tab || tab === 'event-details'}\" class=\"nav-tabs__tab\">\n                                    <button ng-click=\"tab = 'event-details'\" class=\"nav-tabs__link\"><span translate=\"\">Content</span></button>\n                                </li>\n                                <li ng-class=\"{'nav-tabs__tab--active': tab === 'event-history'}\" class=\"nav-tabs__tab\">\n                                    <button ng-click=\"tab = 'event-history'\" class=\"nav-tabs__link\"><span translate=\"\">History</span></button>\n                                </li>\n                            </ul> \n                        </div>\n                        <div class=\"side-panel__content\" ng-if=\"!tab || tab === 'event-details'\">\n                            <div class=\"side-panel__content-block side-panel__content-block--pad-small side-panel__content-block--flex\">\n                                <div class=\"side-panel__content-block-inner side-panel__content-block-inner--grow\">\n                                    <p class=\"sd-text__date-and-author\"><time>Created 23.08.2017 by </time> <span class=\"sd-text__author\">Mika Karapet</span></p> \n                                    <p class=\"sd-text__date-and-author\"><time>Updated 3 hours ago by</time> <span class=\"sd-text__author\">John Doe</span></p>\n                                </div>\n                                <div class=\"side-panel__content-block-inner side-panel__content-block-inner--right\">\n                                    <a class=\"icn-btn\"><i class=\"icon-dots-vertical\"></i></a>\n                                </div>\n                            </div>\n                            <div class=\"side-panel__content-block side-panel__content-block--image\">\n                                <a class=\"icn-btn side-panel__image-actions\" ng-click=\"openModal('videoModal')\">\n                                    <i class=\"icon-fullscreen\"></i>\n                                </a>\n                                <img src=\"/d_trump.jpg\" alt=\"test\">\n                            </div>\n                            <div class=\"side-panel__content-block\">\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Slugline</label>\n                                    <p class=\"sd-text__slugline\">This is a slugline</p>\n                                </div>\n                                <div class=\"form__row\">\n                                    <label class=\"form-label form-label--light\">Description</label>\n                                    <p>Fusce risus nisl, viverra et, tempor et, pretium in, sapien. Praesent nonummy mi in odio.</p>\n                                </div>\n\n                                <div sd-toggle-box data-title=\"Details\" data-style=\"circle\">\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Usage right</label>\n                                        <p>Single usage</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Category</label>\n                                        <p>Some category</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Subject</label>\n                                        <p>Arts, culture and entertainment, Music</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Long Description</label>\n                                        <p>Nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</p>\n                                    </div>\n                                    <div class=\"form__row\">\n                                        <label class=\"form-label form-label--light\">Internal Note</label>\n                                        <p>Lorem ipsum dolor sit amet, consetetur sadipscing.</p>\n                                    </div>\n                                </div>\n                                <h3 class=\"side-panel__heading side-panel__heading--big\" ng-hide=\"multiEdit\">Related items</h3>\n                                <div class=\"sd-grid-list sd-grid-list--small sd-grid-list--no-rl-margin dark-ui\" ng-hide=\"multiEdit\">\n                                    <!-- related item 1 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/d_trump_2.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 2 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/bill.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 3 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/hillary.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                    <!-- related item 4 -->\n                                    <div class=\"sd-grid-item sd-grid-item--small sd-grid-item--with-click\">\n                                        <div class=\"sd-grid-item__thumb\">\n                                            <img src=\"/bush_1.jpg\" alt=\"test\">\n                                        </div>\n                                        <div class=\"sd-grid-item__content\">\n                                            <time title=\"20.11.2017\">20.11.2017</time>\n                                            <span class=\"sd-grid-item__slugline\">This is a slugline</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__content\" ng-if=\"tab === 'event-history'\">\n                            <div class=\"side-panel__content-block\">\n                                <ul class=\"simple-list simple-list--dotted simple-list--no-padding\">\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Created by</strong> Mika Karapet</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:10</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Coverage created by</strong> Vince Ryan</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:13</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Updated by</strong> Karel Petrak</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:13</time>\n                                    </li>\n                                    <li class=\"simple-list__item\">\n                                        <p><strong>Coverage updated by</strong> John Doe</p>\n                                        <time class=\"small\">Tuesday, 12. September 13:21</time>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"side-panel__footer\">\n\n                        </div>\n                    </div>      \n                </div>\n            </div>\n            <!-- END left content -->\n        </div>\n\n        <!-- SPLIT CONTENT -->\n        <div id=\"editPane\" \n             class=\"sd-edit-panel sd-page-content__content-block sd-page-content__content-block--right sd-page-content__content-block--30-slide\" ng-class=\"{'open-filters': rightFilterOpen, 'open-preview': rightPreviewOpen}\">\n            <!-- Eitor content -->\n\n            <div class=\"side-panel side-panel--shadow-right\" ng-if=\"!itemType || itemType === 'planning'\" ng-include=\"'playgrounds/photo-snippets/edit-photo-metadata.html'\"></div>\n            <!-- END Editor content -->\n        </div>\n    </section>\n    <footer class=\"bottom-bar \">\n        This is the optional footer.\n    </footer>\n\n        <!-- //////////////////////////////////////////////////////////////////////// Video Edit modal //////////////////////////////////////////////////////////////////////// -->\n    <div sd-modal data-model=\"videoModal\" class=\"modal--fullscreen modal--dark-ui\" ng-init=\"showMetadata = true\">\n        <div class=\"modal__header modal__header--flex\">\n            <div class=\"modal__sliding-toolbar\" ng-show=\"!contentChanged\">\n                <div class=\"sliding-toolbar__inner\"></div>\n                <a class=\"btn\" ng-click=\"contentChanged = true\">Cancel</a>\n                <a class=\"btn btn--primary\" ng-click=\"contentChanged = true\">Save</a>\n            </div>\n            <h3 class=\"modal__heading modal__heading--no-grow\" ng-if=\"nav === 'viewVideo'\" translate>Video details</h3>\n            <h3 class=\"modal__heading modal__heading--no-grow\" ng-if=\"nav === 'editVideo'\" translate>Edit video</h3>\n            <div class=\"modal__header-buttons  modal__header-buttons--center modal__header-element-grow button-nav\" ng-init=\"nav = 'viewVideo'\">\n                <button class=\"button-nav__btn\" ng-click=\"nav = 'viewVideo'; showMetadata = true\" ng-class=\"{'button-nav__btn--active' : nav === 'viewVideo'}\">Details / Metadata</button>\n                <button class=\"button-nav__btn\" ng-click=\"nav = 'editVideo'; showMetadata = false\" ng-class=\"{'button-nav__btn--active': nav === 'editVideo'}\">Edit video</button>\n            </div>\n            <div class=\"modal__header-buttons modal__header-buttons--right\">\n                <button class=\"btn btn--primary btn--ui-dark btn--hollow\" ng-click=\"closeModal('videoModal')\">Done</button>\n            </div>\n        </div>\n        <div class=\"modal__body modal__body--no-padding\">\n            <div class=\"sd-column-box--2\">\n                <div class=\"sd-column-box__main-column sd-column-box__main-column--photo-preview\">\n                    <a class=\"sd-photo-preview__slide-in-button\" ng-show=\"!showMetadata && nav === 'viewVideo'\" ng-click=\"showMetadata = !showMetadata\" data-sd-tooltip=\"Open metadata\" data-flow=\"left\">\n                        <i class=\"icon-backward-thin\"></i>\n                    </a>\n\n                    <div class=\"sd-photo-preview\" ng-class=\"{'sd-photo-preview--view-video' : nav === 'viewVideo'}\" ng-show=\"nav === 'viewVideo'\">\n                        <div class=\"sd-photo-preview__video\" >\n                            <div class=\"sd-photo-preview__video-inner\">\n                                <div class=\"sd-photo-preview__video-container\">\n                                    <video controls=\"\" sd-sources=\"\" data-renditions=\"item.renditions\" class=\"ng-isolate-scope\"><source src=\"/ferocious_beast.webm\" type=\"video/webm\"></video>\n                                </div>\n                                <div class=\"sd-photo-preview__video-tools sd-photo-preview__video-tools--blank\">\n                                    <span class=\"sd-photo-preview__label mlr-auto\">DJI_0270.mp4</span>\n                                </div>  \n                            </div>               \n                        </div>\n                    </div>\n\n                    <div class=\"sd-photo-preview\" ng-class=\"{'sd-photo-preview--edit-video' : nav === 'editVideo'}\" ng-show=\"nav === 'editVideo'\">\n                        <div class=\"sd-photo-preview__video\">\n                            <div class=\"sd-photo-preview__video-inner\">\n                                <div class=\"sd-photo-preview__video-container\">\n                                    <video controls=\"\" sd-sources=\"\" data-renditions=\"item.renditions\" class=\"ng-isolate-scope\"><source src=\"/ferocious_beast.webm\" type=\"video/webm\"></video>\n                                </div>                 \n                                <div class=\"sd-photo-preview__video-tools\">\n                                    <button class=\"btn btn--ui-dark btn--hollow btn--icon-only btn--large\">\n                                        <i class=\"icon-chevron-right-thin\"></i>\n                                    </button>\n                                    <button class=\"btn btn--ui-dark btn--hollow btn--icon-only btn--large\">\n                                        <i class=\"icon-crop\"></i>\n                                    </button>\n                                    <button class=\"btn btn--ui-dark btn--hollow btn--icon-only btn--large\">\n                                        <i class=\"icon-rotate-left\"></i>\n                                    </button>\n                                    <span class=\"sd-photo-preview__label mlr-auto\">DJI_0270.mp4</span>\n                                    <div>\n                                        <span class=\"sd-text__strong-s\">Quality:</span>\n                                        <div class=\"dropdown dropdown--align-right\" dropdown>\n                                            <button class=\"dropdown__toggle dark-ui\" dropdown__toggle>\n                                                Same<span class=\"dropdown__caret dropdown__caret--white\"></span>\n                                            </button>\n                                            <ul class=\"dropdown__menu\">\n                                                <li><button>Same</button></li>\n                                                <li><button>High</button></li>\n                                                <li><button>Low</button></li>\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                        <!-- VIDEO Frames timeline  -->\n                        <div class=\"sd-photo-preview__thumb-strip sd-photo-preview__thumb-strip--video\">\n                            <div class=\"sd-photo-preview__thumbnail-edit\">\n                                <div class=\"sd-photo-preview__thumbnail-edit-label\">Video thumbnail</div>\n                                <div class=\"image-overlay\">\n                                    <div class=\"image-overlay__button-block\">\n                                        <a class=\"image-overlay__button\" sd-tooltip=\"Use current frame\">\n                                            <i class=\"icon-photo\"></i>\n                                        </a>\n                                        <a class=\"image-overlay__button\" sd-tooltip=\"Upload image\">\n                                            <i class=\"icon-upload\"></i>\n                                        </a>\n                                        <a class=\"image-overlay__button\" sd-tooltip=\"Edit thumbnail\">\n                                            <i class=\"icon-pencil\"></i>\n                                        </a>\n                                    </div>\n                                </div>\n                                <img src=\"/d_trump.jpg\" alt=\"Trt\">\n                            </div>\n                            <div class=\"sd-photo-preview__video-frames\">\n\n                            </div>\n                        </div>\n                        <!-- END VIDEO Frames timeline  -->\n                    </div>\n\n                </div>\n                <div class=\"sd-column-box__slide-in-column sd-column-box__slide-in-column--large sd-column-box__slide-in-column--dark-ui\" ng-class=\"{'sd-column-box__slide-in-column--closed' : !showMetadata}\">\n                    <div class=\"sd-column-box__slide-in-column-inner sd-slide-in-panel\">\n\n                        <div class=\"sd-slide-in-panel__header\">\n                            <h3 class=\"sd-slide-in-panel__heading\">Metadata</h3>\n                            <a class=\"icn-btn sd-slide-in-panel__close\" sd-tooltip=\"Close details\" flow=\"top\" ng-click=\"showMetadata = !showMetadata\"><i class=\"icon-close-small\"></i></a>\n                        </div>\n                        <div class=\"sd-slide-in-panel__content\">\n                            <div class=\"sd-slide-in-panel__content-block sd-slide-in-panel__content-block--first\">\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed\">\n                                        <label class=\"sd-line-input__label\">Title</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\" value=\"Image title\" >\n                                        <div class=\"sd-line-input__hint\">Hendrerit in vulputate velit esse molestie consequat.</div>\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--dark-ui sd-line-input--boxed\">\n                                        <label class=\"sd-line-input__label\">Description</label>\n                                        <textarea class=\"sd-line-input__input\"></textarea>\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--with-button sd-line-input--dark-ui sd-line-input--boxed\">\n                                        <span class=\"sd-line-input__plus-btn\"></span>\n                                        <label class=\"sd-line-input__label\">Category</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--with-button sd-line-input--dark-ui sd-line-input--boxed\">\n                                        <span class=\"sd-line-input__plus-btn\"></span>\n                                        <label class=\"sd-line-input__label\">Subject</label>\n                                        <input class=\"sd-line-input__input\" type=\"text\">\n                                    </div>\n                                </div>\n                                <div class=\"form__row\">\n                                    <div class=\"sd-line-input sd-line-input--is-select sd-line-input--dark-ui sd-line-input--boxed\">\n                                        <label class=\"sd-line-input__label\">Usage right</label>\n                                        <select class=\"sd-line-input__select\">\n                                            <option value=\"\">--- Not selected ---</option>\n                                            <option value=\"single\">Single usage</option>\n                                            <option value=\"time\">Time restricted</option>\n                                            <option value=\"bananas\">Indefinite usage</option>\n                                            <option value=\"indefinite\">Pears</option>\n                                        </select>\n                                        <span class=\"sd-line-input__hint\">Dolor in hendrerit.</span>\n                                    </div>\n                                </div>\n                                <div class=\"form__row\" ng-init=\"contentChanged = true\">\n                                    <span ng-model=\"contentChanged\" sd-switch></span><label>For publication</label>\n                                </div>\n                            </div>\n                        </div>\n                    </div> \n                </div>\n\n            </div>\n        </div>\n    </div>\n    <!-- //////////////////////////////////////////////////////////////////////// END Video Edit modal //////////////////////////////////////////////////////////////////////// -->\n\n</div>\n";

/***/ })
/******/ ]);
});